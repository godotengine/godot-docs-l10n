# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:4
msgid "Android in-app purchases"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:6
msgid "Godot offers a first-party ``GodotGooglePlayBilling`` Android plugin since Godot 3.2.2. The new plugin uses the `Google Play Billing library <https://developer.android.com/google/play/billing>`__ instead of the now deprecated AIDL IAP implementation."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:10
msgid "If you learn better by looking at an example, you can find the demo project `here <https://github.com/godotengine/godot-demo-projects/tree/master/mobile/android_iap>`__."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:15
msgid "Migrating from Godot 3.2.1 and lower (GodotPaymentsV3)"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:17
msgid "The new ``GodotGooglePlayBilling`` API is not compatible with its predecessor ``GodotPaymentsV3``."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:20
msgid "Changes"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:22
msgid "You need to enable the Custom Build option in your Android export settings and install the ``GodotGooglePlayBilling`` plugin manually (see below for details)"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:24
msgid "All purchases have to be acknowledged by your app. This is a `requirement from Google <https://developer.android.com/google/play/billing/integrate#process>`__. Purchases that are not acknowledged by your app will be refunded."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:27
msgid "Support for subscriptions"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:28
msgid "Signals (no polling or callback objects)"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:32
msgid "Usage"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:35
#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:44
msgid "Getting started"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:37
msgid "If not already done, make sure you have enabled and successfully set up :ref:`Android Custom Builds <doc_android_custom_build>`. Grab the``GodotGooglePlayBilling`` plugin binary and config from the `releases page <https://github.com/godotengine/godot-google-play-billing/releases>`__ and put both into `res://android/plugins`. The plugin should now show up in the Android export settings, where you can enable it."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:46
msgid "To use the ``GodotGooglePlayBilling`` API you first have to get the ``GodotGooglePlayBilling`` singleton and start the connection:"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:75
msgid "All API methods only work if the API is connected. You can use ``payment.isReady()`` to check the connection status."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:79
msgid "Querying available items"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:81
msgid "As soon as the API is connected, you can query SKUs using ``querySkuDetails``."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:83
#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:127
msgid "Full example:"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:96
msgid "Purchase an item"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:98
msgid "To initiate the purchase flow for an item, call ``purchase``. You **must** query the SKU details for an item before you can initiate the purchase flow for it."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:106
msgid "Then, wait for the ``_on_purchases_updated`` callback and handle the purchase result:"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:121
msgid "Check if the user purchased an item"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:123
msgid "To get all purchases, call ``queryPurchases``. Unlike most of the other functions, ``queryPurchases`` is a synchronous operation and returns a :ref:`Dictionary <class_Dictionary>` with a status code and either an array of purchases or an error message. Only active subscriptions and non-consumed one-time purchases are returned."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:142
msgid "Consumables"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:144
msgid "If your in-app item is not a one-time purchase but a consumable item (e.g. coins) which can be purchased multiple times, you can consume an item by calling ``consumePurchase`` with a purchase token. Call ``queryPurchases`` to get the purchase token. Calling ``consumePurchase`` automatically acknowledges a purchase. Consuming a product allows the user to purchase it again, and removes it from appearing in subsequent ``queryPurchases`` calls."
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:161
msgid "Subscriptions"
msgstr ""

#: ../../docs/tutorials/platform/android/android_in_app_purchases.rst:163
msgid "Subscriptions don't work much different from regular in-app items. Just use ``\"subs\"`` as second argument to ``querySkuDetails`` to get subscription details. Check ``is_auto_renewing`` in the results of ``queryPurchases()`` to see if a user has cancelled an auto-renewing subscription"
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
