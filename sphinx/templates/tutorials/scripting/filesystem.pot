# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/scripting/filesystem.rst:4
msgid "File system"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:9
msgid "A file system manages how assets are stored and how they are accessed. A well-designed file system also allows multiple developers to edit the same source files and assets while collaborating. Godot stores all assets as files in its file system."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:15
msgid "Implementation"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:17
msgid "The file system stores resources on disk. Anything, from a script, to a scene or a PNG image is a resource to the engine. If a resource contains properties that reference other resources on disk, the paths to those resources are also included. If a resource has sub-resources that are built-in, the resource is saved in a single file together with all the bundled sub-resources. For example, a font resource is often bundled together with the font textures."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:24
msgid "The Godot file system avoids using metadata files. Existing asset managers and VCSs are better than anything we can implement, so Godot tries its best to play along with SVN, Git, Mercurial, Perforce, etc."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:28
msgid "Example of file system contents:"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:39
msgid "project.godot"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:41
msgid "The ``project.godot`` file is the project description file, and it is always found at the root of the project. In fact, its location defines where the root is. This is the first file that Godot looks for when opening a project."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:45
msgid "This file contains the project configuration in plain text, using the win.ini format. Even an empty ``project.godot`` can function as a basic definition of a blank project."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:50
msgid "Path delimiter"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:52
msgid "Godot only supports ``/`` as a path delimiter. This is done for portability reasons. All operating systems support this, even Windows, so a path such as ``C:\\project\\project.godot`` needs to be typed as ``C:/project/project.godot``."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:58
msgid "Resource path"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:60
msgid "When accessing resources, using the host OS file system layout can be cumbersome and non-portable. To solve this problem, the special path ``res://`` was created."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:64
msgid "The path ``res://`` will always point at the project root (where ``project.godot`` is located, so ``res://project.godot`` is always valid)."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:68
msgid "This file system is read-write only when running the project locally from the editor. When exported or when running on different devices (such as phones or consoles, or running from DVD), the file system will become read-only and writing will no longer be permitted."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:74
msgid "User path"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:76
msgid "Writing to disk is still needed for tasks such as saving game state or downloading content packs. To this end, the engine ensures that there is a special path ``user://`` that is always writable. This path resolves differently depending on the OS the project is running on. Local path resolution is further explained in :ref:`doc_data_paths`."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:83
msgid "Host file system"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:85
msgid "Alternatively host file system paths can also be used, but this is not recommended for a released product as these paths are not guaranteed to work on all platforms. However, using host file system paths can be useful when writing development tools in Godot."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:91
msgid "Drawbacks"
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:93
msgid "There are some drawbacks to this simple file system design. The first issue is that moving assets around (renaming them or moving them from one path to another inside the project) will break existing references to these assets. These references will have to be re-defined to point at the new asset location."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:98
msgid "To avoid this, do all your move, delete and rename operations from within Godot, on the FileSystem dock. Never move assets from outside Godot, or dependencies will have to be fixed manually (Godot detects this and helps you fix them anyway, but why go the hard route?)."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:103
msgid "The second is that, under Windows and macOS, file and path names are case insensitive. If a developer working in a case insensitive host file system saves an asset as ``myfile.PNG``, but then references it as ``myfile.png``, it will work fine on their platform, but not on other platforms, such as Linux, Android, etc. This may also apply to exported binaries, which use a compressed package to store all files."
msgstr ""

#: ../../docs/tutorials/scripting/filesystem.rst:109
msgid "It is recommended that your team clearly define a naming convention for files when working with Godot. One simple fool-proof convention is to only allow lowercase file and path names."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
