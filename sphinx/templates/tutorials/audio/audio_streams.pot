# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/audio/audio_streams.rst:4
msgid "Audio streams"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:9
msgid "As you might have already read in :ref:`doc_audio_buses`, sound is sent to each bus via an AudioStreamPlayer node. There are different kinds of AudioStreamPlayers. Each one loads an AudioStream and plays it back."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:14
msgid "AudioStream"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:16
msgid "An audio stream is an abstract object that emits sound. The sound can come from many places, but is most commonly loaded from the filesystem. Audio files can be loaded as AudioStreams and placed inside an AudioStreamPlayer. You can find information on supported formats and differences in :ref:`doc_importing_audio_samples`."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:21
msgid "There are other types of AudioStreams, such as AudioStreamRandomPitch. This one makes a random adjustment to the sound's pitch every time it's played back. This can be helpful for adding variation to sounds that are played back often."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:27
msgid "AudioStreamPlayer"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:31
msgid "This is the standard, non-positional stream player. It can play to any bus. In 5.1 sound setups, it can send audio to stereo mix or front speakers."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:35
msgid "AudioStreamPlayer2D"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:39
msgid "This is a variant of AudioStreamPlayer, but emits sound in a 2D positional environment. When close to the left of the screen, the panning will go left. When close to the right side, it will go right."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:45
msgid "Area2Ds can be used to divert sound from any AudioStreamPlayer2Ds they contain to specific buses. This makes it possible to create buses with different reverb or sound qualities to handle action happening in a particular parts of your game world."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:53
msgid "AudioStreamPlayer3D"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:57
msgid "This is a variant of AudioStreamPlayer, but emits sound in a 3D positional environment. Depending on the location of the player relative to the screen, it can position sound in stereo, 5.1 or 7.1 depending on the chosen audio setup."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:61
msgid "Similar to AudioStreamPlayer2D, an Area can divert the sound to an audio bus."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:65
msgid "Unlike for 2D, the 3D version of AudioStreamPlayer has a few more advanced options:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:70
msgid "Reverb buses"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:72
msgid "Godot allows for 3D audio streams that enter a specific Area node to send dry and wet audio to separate buses. This is useful when you have several reverb configurations for different types of rooms. This is done by enabling this type of reverb in the **Reverb Bus** section of the Area's properties:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:79
msgid "At the same time, a special bus layout is created where each area receives the reverb info from each area. A Reverb effect needs to be created and configured in each reverb bus to complete the setup for the desired effect:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:85
msgid "The Area's **Reverb Bus** section also has a parameter named **Uniformity**. Some types of rooms bounce sounds more than others (like a warehouse), so reverberation can be heard almost uniformly across the room even though the source may be far away. Playing around with this parameter can simulate that effect."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:92
msgid "Doppler"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:94
msgid "When the relative velocity between an emitter and listener changes, this is perceived as an increase or decrease in the pitch of the emitted sound. Godot can track velocity changes in the AudioStreamPlayer3D and Camera nodes. Both nodes have this property, which must be enabled manually:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:101
msgid "Enable it by setting it depending on how objects will be moved: use **Idle** for objects moved using ``_process``, or **Physics** for objects moved using ``_physics_process``. The tracking will happen automatically."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
