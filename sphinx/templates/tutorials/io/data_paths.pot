# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/io/data_paths.rst:4
msgid "File paths in Godot projects"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:6
msgid "This page explains how file paths work inside Godot projects. You will learn how to access paths in your projects using the ``res://`` and ``user://`` notations, and where Godot stores project and editor files on your and your users' systems."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:11
msgid "Path separators"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:13
msgid "To make supporting multiple platforms easier, Godot uses **UNIX-style path separators** (forward slash ``/``). These work on all platforms, **including Windows**."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:17
msgid "Instead of writing paths like ``C:\\Projects\\Game``, in Godot, you should write ``C:/Projects/Game``."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:20
msgid "Windows-style path separators (backward slash ``\\``) are also supported in some path-related methods, but they need to be doubled (``\\\\``), as ``\\`` is normally used as an escape for characters with a special meaning."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:24
msgid "This makes it possible to work with paths returned by other Windows applications. We still recommend using only forward slashes in your own code to guarantee that everything will work as intended."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:29
msgid "Accessing files in the project folder (``res://``)"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:31
msgid "Godot considers that a project exists in any folder that contains a ``project.godot`` text file, even if the file is empty. The folder that contains this file is your project's root folder."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:35
msgid "You can access any file relative to it by writing paths starting with ``res://``, which stands for resources. For example, you can access an image file ``character.png`` located in the project's root folder in code with the following path: ``res://character.png``."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:41
msgid "Accessing persistent user data (``user://``)"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:43
msgid "To store persistent data files, like the player's save or settings, you want to use ``user://`` instead of ``res://`` as your path's prefix. This is because when the game is running, the project's file system will likely be read-only."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:47
msgid "The ``user://`` prefix points to a different directory on the user's device. Unlike ``res://``, the directory pointed at by ``user://`` is created automatically and *guaranteed* to be writable to, even in an exported project."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:51
msgid "The location of the ``user://`` folder depends on what is configured in the Project Settings:"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:54
msgid "By default, the ``user://`` folder is created within Godot's :ref:`editor data path <doc_data_paths_editor_data_paths>` in the ``app_userdata/[project_name]`` folder. This is the default so that prototypes and test projects stay self-contained within Godot's data folder."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:58
msgid "If :ref:`application/config/use_custom_user_dir <class_ProjectSettings_property_application/config/use_custom_user_dir>` is enabled in the Project Settings, the ``user://`` folder is created **next to** Godot's editor data path, i.e. in the standard location for applications data."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:63
msgid "By default, the folder name will be inferred from the project name, but it can be further customized with :ref:`application/config/custom_user_dir_name <class_ProjectSettings_property_application/config/custom_user_dir_name>`. This path can contain path separators, so you can use it e.g. to group projects of a given studio with a ``Studio Name/Game Name`` structure."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:69
msgid "On desktop platforms, the actual directory paths for ``user://`` are:"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:72
#: ../../docs/tutorials/io/data_paths.rst:121
msgid "Type"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:72
#: ../../docs/tutorials/io/data_paths.rst:121
msgid "Location"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:74
msgid "Default"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Windows: ``%APPDATA%\\Godot\\app_userdata\\[project_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "macOS: ``~/Library/Application Support/Godot/app_userdata/[project_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Linux: ``~/.local/share/godot/app_userdata/[project_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:78
msgid "Custom dir"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Windows: ``%APPDATA%\\[project_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "macOS: ``~/Library/Application Support/[project_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Linux: ``~/.local/share/[project_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:82
msgid "Custom dir and name"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Windows: ``%APPDATA%\\[custom_user_dir_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "macOS: ``~/Library/Application Support/[custom_user_dir_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Linux: ``~/.local/share/[custom_user_dir_name]``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:87
msgid "``[project_name]`` is based on the application name defined in the Project Settings, but you can override it on a per-platform basis using :ref:`feature tags <doc_feature_tags>`."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:90
msgid "On mobile platforms, this path is unique to the project and is not accessible by other applications for security reasons."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:93
msgid "On HTML5 exports, ``user://`` will refer to a virtual filesystem stored on the device via IndexedDB. (Interaction with the main filesystem can still be performed through the :ref:`JavaScript <class_JavaScript>` singleton.)"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:98
msgid "Converting paths to absolute paths or \"local\" paths"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:100
msgid "You can use :ref:`ProjectSettings.globalize_path() <class_ProjectSettings_method_globalize_path>` to convert a \"local\" path like ``res://path/to/file.txt`` to an absolute OS path. For example, :ref:`ProjectSettings.globalize_path() <class_ProjectSettings_method_globalize_path>` can be used to open \"local\" paths in the OS file manager using :ref:`OS.shell_open() <class_OS_method_shell_open>` since it only accepts native OS paths."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:107
msgid "To convert an absolute OS path to a \"local\" path starting with ``res://`` or ``user://``, use :ref:`ProjectSettings.localize_path() <class_ProjectSettings_method_localize_path>`. This only works for absolute paths that point to files or folders in your project's root or ``user://`` folders."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:115
msgid "Editor data paths"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:117
msgid "The editor uses different paths for editor data, editor settings, and cache, depending on the platform. By default, these paths are:"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:123
msgid "Editor data"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Windows: ``%APPDATA%\\Godot\\``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
#: ../../docs/tutorials/io/data_paths.rst:0
msgid "macOS: ``~/Library/Application Support/Godot/``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Linux: ``~/.local/share/godot/``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:127
msgid "Editor settings"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Linux: ``~/.config/godot/``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:131
msgid "Cache"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Windows: ``%TEMP%\\Godot\\``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "macOS: ``~/Library/Caches/Godot/``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:0
msgid "Linux: ``~/.cache/godot/``"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:136
msgid "**Editor data** contains export templates and project-specific data."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:137
msgid "**Editor settings** contains the main editor settings configuration file as well as various other user-specific customizations (editor layouts, feature profiles, script templates, etc.)."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:140
msgid "**Cache** contains data generated by the editor, or stored temporarily. It can safely be removed when Godot is closed."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:143
msgid "Godot complies with the `XDG Base Directory Specification <https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html>`__ on all platforms. You can override environment variables following the specification to change the editor and project data paths."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:148
msgid "If you use `Godot packaged as a Flatpak <https://flathub.org/apps/details/org.godotengine.Godot>`__, the editor data paths will be located in subfolders in ``~/.var/app/org.godotengine.Godot/``."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:156
msgid "Self-contained mode"
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:158
msgid "If you create a file called ``._sc_`` or ``_sc_`` in the same directory as the editor binary (or in `MacOS/Contents/` for a macOS editor .app bundle), Godot will enable *self-contained mode*. This mode makes Godot write all editor data, settings, and cache to a directory named ``editor_data/`` in the same directory as the editor binary. You can use it to create a portable installation of the editor."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:165
msgid "The `Steam release of Godot <https://store.steampowered.com/app/404790/>`__ uses self-contained mode by default."
msgstr ""

#: ../../docs/tutorials/io/data_paths.rst:170
msgid "Self-contained mode is not supported in exported projects yet. To read and write files relative to the executable path, use :ref:`OS.get_executable_path() <class_OS_method_get_executable_path>`. Note that writing files in the executable path only works if the executable is placed in a writable location (i.e. **not** Program Files or another directory that is read-only for regular users)."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
