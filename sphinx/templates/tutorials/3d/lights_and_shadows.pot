# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/lights_and_shadows.rst:4
msgid "3D lights and shadows"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:9
msgid "Light sources emit light that mixes with the materials and produces a visible result. Light can come from several types of sources in a scene:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:12
msgid "From the Material itself in the form of the emission color (though it does not affect nearby objects unless baked)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:14
msgid "Light Nodes: Directional, Omni and Spot."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:15
msgid "Ambient Light in the :ref:`Environment <class_Environment>`."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:17
msgid "Baked Light (read :ref:`doc_baked_lightmaps`)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:19
msgid "The emission color is a material property. You can read more about it in the :ref:`doc_spatial_material` tutorial."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:23
msgid "Light nodes"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:25
msgid "There are three types of light nodes: `Directional light`_, `Omni light`_ and `Spot light`_. Let's take a look at the common parameters for lights:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:31
msgid "Each one has a specific function:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:33
msgid "**Color**: Base color for emitted light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:34
msgid "**Energy**: Energy multiplier. This is useful for saturating lights or working with :ref:`doc_high_dynamic_range`."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:35
msgid "**Indirect Energy**: Secondary multiplier used with indirect light (light bounces). This works in baked light or GIProbe."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:36
msgid "**Negative**: Light becomes subtractive instead of additive. It's sometimes useful to manually compensate some dark corners."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:37
msgid "**Specular**: Affects the intensity of the specular blob in objects affected by this light. At zero, this light becomes a pure diffuse light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:38
msgid "**Bake Mode**: Sets the bake mode for the light. For more information see :ref:`doc_baked_lightmaps`"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:39
msgid "**Cull Mask**: Objects that are in the selected layers below will be affected by this light. Note that objects disabled via this cull mask will still cast shadows. If you don't want disabled objects to cast shadows, adjust the ``cast_shadow`` property on the GeometryInstance to the desired value."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:45
msgid "Shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:47
msgid "Lights can optionally cast shadows. This gives them greater realism (light does not reach occluded areas), but it can incur a bigger performance cost. There is a list of generic shadow parameters, each also has a specific function:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:51
msgid "**Enabled**: Check to enable shadow mapping in this light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:52
msgid "**Color**: Areas occluded are multiplied by this color. It is black by default, but it can be changed to tint shadows."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:53
msgid "**Bias**: When this parameter is too small, self shadowing occurs. When too large, shadows separate from the casters. Tweak to what works best for you."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:54
msgid "**Contact**: Performs a short screen-space raycast to reduce the gap generated by the bias. Contact shadows are only available when using the GLES3 backend."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:55
msgid "**Reverse Cull Face**: Some scenes work better when shadow mapping is rendered with face-culling inverted."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:57
msgid "Below is an image of what tweaking bias looks like. Default values work for most cases, but in general it depends on the size and complexity of geometry."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:62
msgid "Finally, if gaps can't be solved, the **Contact** option can help (at a performance cost):"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:66
msgid "Any sort of bias issues can always be fixed by increasing the shadow map resolution, although that may lead to decreased performance."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:71
msgid "If shadow biasing is a problem in your scene, the following settings are a good starting point:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:73
msgid "Enable **Reverse Cull Face**. This reduces shadow peter-panning significantly and prevents lights from exhibiting shadow acne at grazing angles. The main downside is that it may cause lighting to leak in some corners. The other downside is that materials that have their cull mode set to **Disabled** or MeshInstances with Cast Shadow set to **Double-Sided** may exhibit shadow acne."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:79
msgid "Set **Bias** to ``-0.01``. The bias should be a negative value when **Reverse Cull Face** is enabled, but it should be a positive value when it's disabled."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:81
msgid "For DirectionalLight, set the directional shadow **Normal Bias** to ``0.0`` and **Bias Split Scale** to ``0.0``. Depending on your scene, you may also want to further decrease **Bias** to a value between ``-0.05`` and ``-0.1``."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:85
msgid "Following the above tips should make it possible to avoid gaps in shadows without resorting to contact shadows (which have many issues of their own). If shadow acne is still visible after performing the above tweaks, try subdividing your meshes further in your 3D modeling software."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:91
msgid "Directional light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:93
msgid "This is the most common type of light and represents a light source very far away (such as the sun). It is also the cheapest light to compute and should be used whenever possible (although it's not the cheapest shadow-map to compute, but more on that later)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:97
msgid "Directional light models an infinite number of parallel light rays covering the whole scene. The directional light node is represented by a big arrow which indicates the direction of the light rays. However, the position of the node does not affect the lighting at all and can be anywhere."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:104
msgid "Every face whose front-side is hit by the light rays is lit, while the others stay dark. Most light types have specific parameters, but directional lights are pretty simple in nature, so they don't."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:108
msgid "Directional shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:110
msgid "To compute shadow maps, the scene is rendered (only depth) from an orthogonal point of view that covers the whole scene (or up to the max distance). There is, however, a problem with this approach because objects closer to the camera receive blocky shadows."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:116
msgid "To fix this, a technique named \"Parallel Split Shadow Maps\" (or PSSM) is used. This splits the view frustum in 2 or 4 areas. Each area gets its own shadow map. This allows small areas close to the viewer to have the same shadow resolution as a huge, far-away area."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:121
msgid "With this, shadows become more detailed:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:125
msgid "To control PSSM, a number of parameters are exposed:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:129
msgid "Each split distance is controlled relative to the camera far (or shadow **Max Distance** if greater than zero), so *0.0* is the eye position and *1.0* is where the shadow ends at a distance. Splits are in-between. Default values generally work well, but tweaking the first split a bit is common to give more detail to close objects (like a character in a third person game)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:135
msgid "Always make sure to set a shadow *Max Distance* according to what the scene needs. A lower maximum distance will result in better-looking shadows."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:138
msgid "Sometimes, the transition between a split and the next can look bad. To fix this, the **\"Blend Splits\"** option can be turned on, which sacrifices detail in exchange for smoother transitions:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:144
msgid "The **\"Normal Bias\"** parameter can be used to fix special cases of self shadowing when objects are perpendicular to the light. The only downside is that it makes the shadow a bit thinner."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:150
msgid "The **\"Bias Split Scale\"** parameter can control extra bias for the splits that are far away. If self shadowing occurs only on the splits far away, this value can fix them."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:153
msgid "Finally, the **\"Depth Range\"** has two settings:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:155
msgid "**Stable**: Keeps the shadow stable while the camera moves, and the blocks that appear in the outline when close to the shadow edges remain in-place. This is the default and generally desired, but it reduces the effective shadow resolution."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:156
msgid "**Optimized**: Tries to achieve the maximum resolution available at any given time. This may result in a \"moving saw\" effect on shadow edges, but at the same time the shadow looks more detailed (so this effect may be subtle enough to be forgiven)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:158
msgid "Just experiment which setting works better for your scene."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:160
msgid "Shadowmap size for directional lights can be changed in Project Settings -> Rendering -> Quality:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:164
msgid "Increasing it can solve bias problems, but decrease performance. Shadow mapping is an art of tweaking."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:167
msgid "Omni light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:169
msgid "Omni light is a point source that emits light spherically in all directions up to a given radius."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:174
msgid "In real life, light attenuation is an inverse function, which means omni lights don't have a radius. This is a problem because it means computing several omni lights would become demanding."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:177
msgid "To solve this, a *Range* is introduced together with an attenuation function."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:181
msgid "These two parameters allow tweaking how this works visually in order to find aesthetically pleasing results."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:187
msgid "Omni shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:189
msgid "Omni light shadow mapping is relatively straightforward. The main issue that needs to be considered is the algorithm used to render it."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:192
msgid "Omni Shadows can be rendered as either **\"Dual Paraboloid\" or \"Cube Mapped\"**. The former renders quickly, but can cause deformations, while the later is more correct, but costlier."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:198
msgid "If the objects being rendered are mostly irregular, Dual Paraboloid is usually enough. In any case, as these shadows are cached in a shadow atlas (more on that at the end), it may not make a difference in performance for most scenes."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:203
msgid "Spot light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:205
msgid "Spot lights are similar to omni lights, except they emit light only into a cone (or \"cutoff\"). They are useful to simulate flashlights, car lights, reflectors, spots, etc. This type of light is also attenuated towards the opposite direction it points to."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:212
msgid "Spot lights share the same **Range** and **Attenuation** as **OmniLight**, and add two extra parameters:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:214
msgid "**Angle**: The aperture angle of the light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:215
msgid "**Angle Attenuation**: The cone attenuation, which helps soften the cone borders."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:218
msgid "Spot shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:220
msgid "Spots don't need any parameters for shadow mapping. Keep in mind that, at more than 89 degrees of aperture, shadows stop functioning for spots, and you should consider using an Omni light instead."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:224
msgid "Shadow atlas"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:226
msgid "Unlike Directional lights, which have their own shadow texture, Omni and Spot lights are assigned to slots of a shadow atlas. This atlas can be configured in Project Settings -> Rendering -> Quality -> Shadow Atlas."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:231
msgid "The resolution applies to the whole Shadow Atlas. This atlas is divided into four quadrants:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:235
msgid "Each quadrant can be subdivided to allocate any number of shadow maps; the following is the default subdivision:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:239
msgid "The allocation logic is simple. The biggest shadow map size (when no subdivision is used) represents a light the size of the screen (or bigger). Subdivisions (smaller maps) represent shadows for lights that are further away from view and proportionally smaller."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:244
msgid "Every frame, the following procedure is performed for all lights:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:246
msgid "Check if the light is on a slot of the right size. If not, re-render it and move it to a larger/smaller slot."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:247
msgid "Check if any object affecting the shadow map has changed. If it did, re-render the light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:248
msgid "If neither of the above has happened, nothing is done, and the shadow is left untouched."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:250
msgid "If the slots in a quadrant are full, lights are pushed back to smaller slots, depending on size and distance."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:252
msgid "This allocation strategy works for most games, but you may want to use a separate one in some cases (for example, a top-down game where all lights are around the same size and quadrants may all have the same subdivision)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:256
msgid "Shadow filter quality"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:258
msgid "The filter quality of shadows can be tweaked. This can be found in Project Settings -> Rendering -> Quality -> Shadows. Godot supports no filter, PCF5 and PCF13."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:264
msgid "It affects the blockyness of the shadow outline:"
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
