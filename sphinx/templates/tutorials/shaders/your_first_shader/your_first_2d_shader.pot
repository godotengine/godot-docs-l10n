# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:4
msgid "Your first 2D shader"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:9
msgid "Shaders are special programs that execute on the GPU and are used for rendering graphics. All modern rendering is done with shaders. For a more detailed description of what shaders are please see :ref:`What are shaders <doc_introduction_to_shaders>`."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:14
msgid "This tutorial will focus on the practical aspects of writing shader programs by walking you through the process of writing a shader with both vertex and fragment functions. This tutorial targets absolute beginners to shaders."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:18
msgid "If you have experience writing shaders and are just looking for an overview of how shaders work in Godot, see the :ref:`Shading Reference <toc-shading-reference>`."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:23
msgid "Setup"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:27
msgid ":ref:`CanvasItem <doc_canvas_item_shader>` shaders are used to draw all 2D"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:26
msgid "objects in Godot, while :ref:`Spatial <doc_spatial_shader>` shaders are used to draw all 3D objects."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:29
msgid "In order to use a shader it must be attached inside a :ref:`Material <class_material>` which must be attached to an object. Materials are a type of :ref:`Resource <doc_resources>`. To draw multiple objects with the same material, the material must be attached to each object."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:34
msgid "All objects derived from a :ref:`CanvasItem <class_canvasitem>` have a material property. This includes all :ref:`GUI elements <class_Control>`, :ref:`Sprites <class_sprite>`, :ref:`TileMaps <class_tilemap>`, :ref:`MeshInstance2Ds <class_meshinstance2d>` etc. They also have an option to inherit their parent's material. This can be useful if you have a large number of nodes that you want to use the same material."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:41
msgid "To begin, create a Sprite node. You can use any CanvasItem, but for this tutorial we will use a Sprite."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:44
msgid "In the Inspector, click beside \"Texture\" where it says \"[empty]\" and select \"Load\", then select \"Icon.png\". For new projects, this is the Godot icon. You should now see the icon in the viewport."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:48
msgid "Next, look down in the Inspector, under the CanvasItem section, click beside \"Material\" and select \"New ShaderMaterial\". This creates a new Material resource. Click on the sphere that appears. Godot currently doesn't know whether you are writing a CanvasItem Shader or a Spatial Shader and it previews the output of spatial shaders. So what you are seeing is the output of the default Spatial Shader."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:55
msgid "Click beside \"Shader\" and select \"New Shader\". Finally, click on the new shader resource and the shader editor will open. You are now ready to begin writing your first shader."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:60
msgid "Your first CanvasItem shader"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:62
msgid "In Godot, all shaders start with a line specifying what type of shader they are. It uses the following format:"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:69
msgid "Because we are writing a CanvasItem shader, we specify ``canvas_item`` in the first line. All our code will go beneath this declaration."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:72
msgid "This line tells the engine which built-in variables and functionality to supply you with."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:75
msgid "In Godot you can override three functions to control how the shader operates; ``vertex``, ``fragment``, and ``light``. This tutorial will walk you through writing a shader with both vertex and fragment functions. Light functions are significantly more complex than vertex and fragment functions and so will not be covered here."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:82
msgid "Your first fragment function"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:84
msgid "The fragment function runs for every pixel in a Sprite and determines what color that pixel should be."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:87
msgid "They are restricted to the pixels covered by the Sprite, that means you cannot use one to, for example, create an outline around a Sprite."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:90
msgid "The most basic fragment function does nothing except assign a single color to every pixel."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:93
msgid "We do so by writing a ``vec4`` to the built-in variable ``COLOR``. ``vec4`` is shorthand for constructing a vector with 4 numbers. For more information about vectors see the :ref:`Vector math tutorial <doc_vector_math>` ``COLOR`` is both an input variable to the fragment function and the final output from it."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:106
msgid "Congratulations! You're done. You have successfully written your first shader in Godot."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:109
msgid "Now let's make things more complex."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:111
msgid "There are many inputs to the fragment function that you can use for calculating ``COLOR``. ``UV`` is one of them. UV coordinates are specified in your Sprite (without you knowing it!) and they tell the shader where to read from textures for each part of the mesh."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:116
msgid "In the fragment function you can only read from ``UV``, but you can use it in other functions or to assign values to ``COLOR`` directly."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:119
msgid "``UV`` varies between 0-1 from left-right and from top-bottom."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:132
msgid "Using ``TEXTURE`` built-in"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:134
msgid "When you want to adjust a color in a Sprite you cannot just adjust the color from the texture manually like in the code below."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:144
msgid "The default fragment function reads from a texture and displays it. When you overwrite the default fragment function, you lose that functionality, so you have to implement it yourself. You read from textures using the ``texture`` function. Certain nodes, like Sprites, have a dedicated texture variable that can be accessed in the shader using ``TEXTURE``. Use it together with ``UV`` and ``texture`` to draw the Sprite."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:161
msgid "Uniform input"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:163
msgid "Uniform input is used to pass data into a shader that will be the same across the entire shader."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:166
msgid "You can use uniforms by defining them at the top of your shader like so:"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:172
msgid "For more information about usage see the :ref:`Shading Language doc <doc_shading_language>`."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:175
msgid "Add a uniform to change the amount of blue in our Sprite."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:186
msgid "Now you can change the amount of blue in the Sprite from the editor. Look back at the Inspector under where you created your shader. You should see a section called \"Shader Param\". Unfold that section and you will see the uniform you just declared. If you change the value in the editor, it will overwrite the default value you provided in the shader."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:193
msgid "Interacting with shaders from code"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:195
msgid "You can change uniforms from code using the function ``set_shader_param()`` which is called on the node's material resource. With a Sprite node, the following code can be used to set the ``blue`` uniform."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:204
msgid "Note that the name of the uniform is a string. The string must match exactly with how it is written in the shader, including spelling and case."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:208
msgid "Your first vertex function"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:210
msgid "Now that we have a fragment function, let's write a vertex function."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:212
msgid "Use the vertex function to calculate where on the screen each vertex should end up."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:215
msgid "The most important variable in the vertex function is ``VERTEX``. Initially, it specifies the vertex coordinates in your model, but you also write to it to determine where to actually draw those vertices. ``VERTEX`` is a ``vec2`` that is initially presented in local-space (i.e. not relative to the camera, viewport, or parent nodes)."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:221
msgid "You can offset the vertices by directly adding to ``VERTEX``."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:229
msgid "Combined with the ``TIME`` built-in variable, this can be used for simple animation."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:240
msgid "Conclusion"
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:242
msgid "At their core, shaders do what you have seen so far, they compute ``VERTEX`` and ``COLOR``. It is up to you to dream up more complex mathematical strategies for assigning values to those variables."
msgstr ""

#: ../../docs/tutorials/shaders/your_first_shader/your_first_2d_shader.rst:246
msgid "For inspiration, take a look at some of the more advanced shader tutorials, and look at other sites like `Shadertoy <https://www.shadertoy.com/results?query=&sort=popular&from=10&num=4>`_ and `The Book of Shaders <https://thebookofshaders.com>`_."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
