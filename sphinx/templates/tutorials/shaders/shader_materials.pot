# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shaders/shader_materials.rst:4
msgid "Shader materials"
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:9
msgid "For the most common cases, Godot provides ready to use materials for most types of shaders, such as :ref:`SpatialMaterial <class_SpatialMaterial>`, :ref:`CanvasItemMaterial <class_CanvasItemMaterial>` and :ref:`ParticlesMaterial <class_ParticlesMaterial>`. They are flexible implementations that cover most use cases."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:14
msgid "Shader materials allow writing a custom shader directly, for maximum flexibility. Examples of this are:"
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:17
msgid "Create procedural textures."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:18
msgid "Create complex texture blending effects."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:19
msgid "Create animated materials, or materials that change over time."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:20
msgid "Create refractive effects or other advanced effects."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:21
msgid "Create special lighting shaders for more exotic materials."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:22
msgid "Animate vertices, like tree leaves or grass."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:23
msgid "Create custom particle code."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:24
msgid "And much more!"
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:26
msgid "Godot provides built in functionality to make frequent operations easier. Additionally, Godot's shader editor will detect errors as you type, so you can see your edited shaders in real-time. It is also possible to edit shaders using a visual, node-based graph editor."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:32
msgid "Creating a ShaderMaterial"
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:34
msgid "Create a new ShaderMaterial in some object of your choice. Go to the \"Material\" property and create a ShaderMaterial."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:39
msgid "Next, click on the shader material to see its properties. From here you can create a shader or visual shader. Regular shaders use code to set their properties while a visual shader uses a node based workflow."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:43
msgid "If you need to you can convert a visual shader to a text shader. However you can't convert a text shader to a visual shader."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:46
msgid "Choose one of them and you can start editing your shader."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:50
msgid "If you create a regular shader click on it and the shader editor will open."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:54
msgid "If you create a visual shader the visual shader editor will open automatically."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:58
msgid "In the visual shader editor you can click a button and see what your visual shader looks like as shader code. This can be useful if you're trying to replicate a text shader as nodes, or it can be used as a preview for converting your visual shader to a text shader."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:67
msgid "To learn more about visual shaders, read :ref:`doc_visual_shaders`."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:70
msgid "Converting to ShaderMaterial"
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:72
msgid "It is possible to convert from SpatialMaterial, CanvasItemMaterial and ParticlesMaterial to ShaderMaterial. To do so, go to the material properties and select the convert option."
msgstr ""

#: ../../docs/tutorials/shaders/shader_materials.rst:80
msgid "Using the convert option will turn the SpatialMaterial into a ShaderMaterial with a text shader, not a visual shader."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
