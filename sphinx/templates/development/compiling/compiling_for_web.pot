# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_web.rst:4
msgid "Compiling for the Web"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:8
msgid "This page describes how to compile HTML5 editor and export template binaries from source. If you're looking to export your project to HTML5 instead, read :ref:`doc_exporting_for_web`."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:14
msgid "Requirements"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:16
msgid "To compile export templates for the Web, the following is required:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:18
msgid "`Emscripten 1.39.9+ <https://emscripten.org>`__."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:19
msgid "`Python 3.5+ <https://www.python.org/>`__."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:20
msgid "`SCons 3.0+ <https://www.scons.org>`__ build system."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:22
msgid "To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:25
msgid "For a general overview of SCons usage for Godot, see :ref:`doc_introduction_to_the_buildsystem`."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:29
msgid "Building export templates"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:31
msgid "Before starting, confirm that ``emcc`` is available in your PATH. This is usually configured by the Emscripten SDK, e.g. when invoking ``emsdk activate`` and ``source ./emsdk_env.sh``/``emsdk_env.bat``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:35
msgid "Open a terminal and navigate to the root directory of the engine source code. Then instruct SCons to build the JavaScript platform. Specify ``target`` as either ``release`` for a release build or ``release_debug`` for a debug build::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:42
msgid "By default, the :ref:`JavaScript singleton <doc_javascript_eval>` will be built into the engine. Official export templates also have the JavaScript singleton enabled. Since ``eval()`` calls can be a security concern, the ``javascript_eval`` option can be used to build without the singleton::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:50
msgid "The engine will now be compiled to WebAssembly by Emscripten. Once finished, the resulting file will be placed in the ``bin`` subdirectory. Its name is ``godot.javascript.opt.zip`` for release or ``godot.javascript.opt.debug.zip`` for debug."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:55
msgid "Finally, rename the zip archive to ``webassembly_release.zip`` for the release template::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:60
msgid "And ``webassembly_debug.zip`` for the debug template::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:65
msgid "Threads and GDNative"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:67
msgid "The default export templates do not include threads and GDNative support for performance and compatibility reasons. See the :ref:`export page <doc_javascript_export_options>` for more info."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:71
msgid "You can build the export templates using the option ``threads_enabled=yes`` or ``gdnative_enabled=yes`` to enable threads or GDNative support::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:80
msgid "Once finished, the resulting file will be placed in the ``bin`` subdirectory. Its name will have either the ``.threads`` or ``.gdnative`` suffix."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:83
msgid "Finally, rename the zip archives to ``webassembly_release_threads.zip`` and ``webassembly_release_gdnative.zip`` for the release template::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:89
msgid "And ``webassembly_debug_threads.zip`` and ``webassembly_debug_gdnative.zip`` for the debug template::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:96
msgid "Building the Editor"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:98
msgid "It is also possible to build a version of the Godot editor that can run in the browser. The editor version requires threads support and is not recommended over the native build. You can build the editor with::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:104
msgid "Once finished, the resulting file will be placed in the ``bin`` subdirectory. Its name will be ``godot.javascript.opt.tools.threads.zip``. You can upload the zip content to your web server and visit it with your browser to use the editor."
msgstr ""

#: ../../docs/development/compiling/compiling_for_web.rst:108
msgid "Refer to the :ref:`export page <doc_javascript_export_options>` for the web server requirements."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
