# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Sync the gameplay with audio and music"
msgstr "Синхронізація гри зі звуком та музикою"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"In any application or game, sound and music playback will have a slight "
"delay. For games, this delay is often so small that it is negligible. Sound "
"effects will come out a few milliseconds after any play() function is "
"called. For music this does not matter as in most games it does not interact "
"with the gameplay."
msgstr ""
"У будь-якому додатку, або грі, відтворення звуку і музики матиме невелику "
"затримку. Для ігор ця затримка часто настільки мала, що немає значення. "
"Звукові ефекти з'являться через кілька мілісекунд після виклику будь-якої "
"функції ``play()``. Для музики це не має значення, оскільки в більшості ігор "
"вона не взаємодіє з ігровим процесом."

msgid ""
"Still, for some games (mainly, rhythm games), it may be required to "
"synchronize player actions with something happening in a song (usually in "
"sync with the BPM). For this, having more precise timing information for an "
"exact playback position is useful."
msgstr ""
"Тим не менш, для деяких ігор (в основному, ритм-ігор) може знадобитися "
"синхронізація дій гравця з чимось, що відбувається в пісні (зазвичай "
"синхронізовано з BPM). Для цього корисно мати точнішу інформацію про час "
"позиції відтворення."

msgid ""
"Achieving very low playback timing precision is difficult. This is because "
"many factors are at play during audio playback:"
msgstr ""
"Досягти дуже малої різниці часу важко. Це пов'язано з тим, що під час "
"відтворення звуку відтворюється ще багато факторів:"

msgid ""
"Audio is mixed in chunks (not continuously), depending on the size of audio "
"buffers used (check latency in project settings)."
msgstr ""
"Звук змішується в шматки (не безперервно), в залежності від розміру "
"використовуваних аудіо буферів (перевірте затримки в параметрах проекту)."

msgid "Mixed chunks of audio are not played immediately."
msgstr "Змішані фрагменти звуку відтворюються не відразу."

msgid "Graphics APIs display two or three frames late."
msgstr "Графічні API відображаються із запізненням на два-три кадри."

msgid "When playing on TVs, some delay may be added due to image processing."
msgstr ""
"При відтворенні на телевізорах може бути додана деяка затримка через обробку "
"зображень."

msgid ""
"The most common way to reduce latency is to shrink the audio buffers (again, "
"by editing the latency setting in the project settings). The problem is that "
"when latency is too small, sound mixing will require considerably more CPU. "
"This increases the risk of skipping (a crack in sound because a mix callback "
"was lost)."
msgstr ""
"Найпоширенішим способом зменшення затримки є зменшення звукових буферів "
"(знову ж таки, шляхом редагування параметра затримки в налаштуваннях "
"проекту). Проблема в тому, що коли затримка занадто мала, змішування звуку "
"зажадає значно потужнішого процесора. Це збільшує ризик пропуску (тріщини в "
"звучанні, тому що зворотний виклик міксу був втрачений)."

msgid ""
"This is a common tradeoff, so Godot ships with sensible defaults that should "
"not need to be altered."
msgstr ""
"Це загальний компроміс, тому Godot поставляється з розумними дефолтами, які "
"не треба міняти."

msgid ""
"The problem, in the end, is not this slight delay but synchronizing graphics "
"and audio for games that require it. Beginning with Godot 3.2, some helpers "
"were added to obtain more precise playback timing."
msgstr ""
"Проблема, врешті-решт, не в цій невеликій затримці, а в синхронізації "
"графіки та звуку в іграх, які цього вимагають. Починаючи з Godot 3.2, були "
"додані деякі помічники, для отримування точнішого часу відтворення."

msgid "Using the system clock to sync"
msgstr "Використання системного годинника для синхронізації"

msgid ""
"As mentioned before, If you call :ref:`AudioStreamPlayer."
"play()<class_AudioStreamPlayer_method_play>`, sound will not begin "
"immediately, but when the audio thread processes the next chunk."
msgstr ""
"Як згадувалося раніше, Якщо ви викликаєте :ref:`AudioStreamPlayer."
"play()<class_AudioStreamPlayer_method_play>`, звук почнеться не відразу, а "
"коли звуковий потік обробить наступний фрагмент."

msgid ""
"This delay can't be avoided but it can be estimated by calling :ref:"
"`AudioServer."
"get_time_to_next_mix()<class_AudioServer_method_get_time_to_next_mix>`."
msgstr ""
"Цієї затримки не уникнути, але її можна вирахувати викликавши :ref:"
"`AudioServer."
"get_time_to_next_mix()<class_AudioServer_method_get_time_to_next_mix>`."

msgid ""
"The output latency (what happens after the mix) can also be estimated by "
"calling :ref:`AudioServer."
"get_output_latency()<class_AudioServer_method_get_output_latency>`."
msgstr ""
"Затримку виводу (що відбувається після змішування) також можна вирахувати "
"викликавши :ref:`AudioServer."
"get_output_latency()<class_AudioServer_method_get_output_latency>`."

msgid ""
"Add these two and it's possible to guess almost exactly when sound or music "
"will begin playing in the speakers during *_process()*:"
msgstr ""
"Додайте ці дві функції, і зможете майже точно вгадати, коли звук, або "
"музика, почнуть відтворюватися в динаміках під час виконання ``_process()``:"

msgid ""
"In the long run, though, as the sound hardware clock is never exactly in "
"sync with the system clock, the timing information will slowly drift away."
msgstr ""
"У довгостроковій перспективі, однак, оскільки звуковий апаратний годинник "
"ніколи точно не синхронізується з системним годинником, інформація про "
"хронометраж повільно відхиляється."

msgid ""
"For a rhythm game where a song begins and ends after a few minutes, this "
"approach is fine (and it's the recommended approach). For a game where "
"playback can last a much longer time, the game will eventually go out of "
"sync and a different approach is needed."
msgstr ""
"Для ритм-гри, де пісня починається і закінчується через кілька хвилин, цей "
"підхід прекрасний (і це рекомендований підхід). Для гри, де відтворення може "
"тривати набагато довше, гра в кінцевому підсумку вийде з синхронізації, тому "
"потрібен інший підхід."

msgid "Using the sound hardware clock to sync"
msgstr "Використання звукового апаратного годинника для синхронізації"

msgid ""
"Using :ref:`AudioStreamPlayer."
"get_playback_position()<class_AudioStreamPlayer_method_get_playback_position>` "
"to obtain the current position for the song sounds ideal, but it's not that "
"useful as-is. This value will increment in chunks (every time the audio "
"callback mixed a block of sound), so many calls can return the same value. "
"Added to this, the value will be out of sync with the speakers too because "
"of the previously mentioned reasons."
msgstr ""
"Використання :ref:`AudioStreamPlayer."
"get_playback_position()<class_AudioStreamPlayer_method_get_playback_position>` "
"для отримання поточної позиції відтворення пісні здається ідеальним, але це "
"не зовсім так. Це значення буде збільшуватися в фрагментах (кожен раз, при "
"обробці нового блоку звуку), тому багато викликів можуть повертати одне і те "
"ж значення. Окрім цього, значення також буде не синхронізоване з динаміками "
"через раніше згадані причини."

msgid ""
"To compensate for the \"chunked\" output, there is a function that can "
"help: :ref:`AudioServer."
"get_time_since_last_mix()<class_AudioServer_method_get_time_since_last_mix>`."
msgstr ""
"Компенсувати \"фрагментований\" вивід може допомогти функція: :ref:"
"`AudioServer."
"get_time_since_last_mix()<class_AudioServer_method_get_time_since_last_mix>`."

msgid ""
"Adding the return value from this function to *get_playback_position()* "
"increases precision:"
msgstr ""
"Додавання повернутого значення з цієї функції до ``get_playback_position()`` "
"збільшує точність:"

msgid ""
"To increase precision, subtract the latency information (how much it takes "
"for the audio to be heard after it was mixed):"
msgstr ""
"Щоб збільшити точність, відніміть інформацію про затримку (скільки потрібно "
"для того, щоб звук був почутий після його змішування):"

msgid ""
"The result may be a bit jittery due how multiple threads work. Just check "
"that the value is not less than in the previous frame (discard it if so). "
"This is also a less precise approach than the one before, but it will work "
"for songs of any length, or synchronizing anything (sound effects, as an "
"example) to music."
msgstr ""
"Результат може бути трохи тремтячим через те, як працюють кілька потоків. "
"Просто переконайтеся, що значення не менше, ніж у попередньому кадрі "
"(відкиньте його, якщо так). Це також менш точний підхід, ніж раніше, але він "
"буде працювати для пісень будь-якої довжини, або синхронізації чого-небудь "
"(звукові ефекти, як приклад) з музикою."

msgid "Here is the same code as before using this approach:"
msgstr "Ось той же код, що і до використання такого підходу:"

msgid "Translation status"
msgstr "Стан перекладу"
