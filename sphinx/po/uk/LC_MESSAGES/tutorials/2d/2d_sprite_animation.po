# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D Sprite animation"
msgstr "Анімація 2D спрайтів"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"In this tutorial, you'll learn how to create 2D animated characters with the "
"AnimatedSprite class and the AnimationPlayer. Typically, when you create or "
"download an animated character, it will come in one of two ways: as "
"individual images or as a single sprite sheet containing all the animation's "
"frames. Both can be animated in Godot with the AnimatedSprite class."
msgstr ""
"У цьому уроці ви дізнаєтеся, як створювати анімованих 2D персонажів за "
"допомогою класів ``AnimatedSprite`` та ``AnimationPlayer``. Як правило, коли "
"ви створюєте, або завантажуєте, анімованого персонажа, він надходить одним з "
"двох способів: як окремі зображення, або як єдиний спрайт-лист, що містить "
"всі кадри анімації. Обидва можуть бути анімовані в Godot з допомогою класу "
"``AnimatedSprite``."

msgid ""
"First, we'll use :ref:`AnimatedSprite <class_AnimatedSprite>` to animate a "
"collection of individual images. Then we will animate a sprite sheet using "
"this class. Finally, we will learn another way to animate a sprite sheet "
"with :ref:`AnimationPlayer <class_AnimationPlayer>` and the *Animation* "
"property of :ref:`Sprite <class_Sprite>`."
msgstr ""
"Спершу ми будемо використовувати :ref:`AnimatedSprite "
"<class_AnimatedSprite>`, щоб анімувати колекцію окремих зображень. Потім ми "
"анімуємо спрайтовий лист за допомогою цього класу. Нарешті, ми дізнаємося ще "
"один спосіб анімації спрайтового листа за допомогою :ref:`AnimationPlayer "
"<class_AnimationPlayer>` та властивості *Animation* зі :ref:`Sprite "
"<class_Sprite>`."

msgid ""
"Art for the following examples by https://opengameart.org/users/ansimuz and "
"by https://opengameart.org/users/tgfcoder"
msgstr ""
"Зображення для наступних зразків https://opengameart.org/users/ansimuz і "
"https://opengameart.org/users/tgfcoder"

msgid "Individual images with AnimatedSprite"
msgstr "Окремі зображення з AnimatedSprite"

msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"У цьому випадку у вас є колекція зображень, кожен з яких містить один з "
"анімаційних кадрів вашого персонажа. Для цього прикладу ми будемо "
"використовувати наступну анімацію:"

msgid ""
"You can download the images here: :download:`run_animation.zip <files/"
"run_animation.zip>`"
msgstr ""
"Завантажити зображення можна тут: :download:`run_animation.zip <files/"
"run_animation.zip>`"

msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr ""
"Розпакуйте зображення та розташуйте їх у папці проекту. Налаштуйте дерево "
"сцен за допомогою таких вузлів:"

msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` or :ref:"
"`RigidBody2D <class_RigidBody2D>`. The animation will still be made in the "
"same way. Once the animation is completed, you can assign a shape to the "
"CollisionShape2D. See :ref:`Physics Introduction <doc_physics_introduction>` "
"for more information."
msgstr ""
"Кореневим вузлом також може бути :ref:`Area2D <class_Area2D>`, або :ref:"
"`RigidBody2D <class_RigidBody2D>`. Анімація все одно буде зроблена таким же "
"чином. Після завершення анімації можна призначити форму зіткнення "
"CollisionShape2D. Докладніше про це можна дізнатися зі :ref:`Вступу до "
"фізики <doc_physics_introduction>`."

msgid ""
"Now select the ``AnimatedSprite`` and in its *SpriteFrames* property, select "
"\"New SpriteFrames\"."
msgstr ""
"Тепер виберіть ``AnimatedSprite`` і в його властивості *SpriteFrames* "
"виберіть \"New SpriteFrames\"."

msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"Натисніть на новий ресурс SpriteFrames, і ви побачите, що в нижній частині "
"вікна редактора з'явиться нова панель:"

msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"На панелі Файлова система з лівого боку перетягніть 8 окремих зображень у "
"центральну частину панелі \"Кадри Спрайта\". З лівого боку змініть назву "
"анімації з \"default\" на \"run\"."

msgid ""
"Back in the Inspector, check the box for the *Playing* property. You should "
"now see the animation playing in the viewport. However, it is a bit slow. To "
"fix this, change the *Speed (FPS)* setting in the SpriteFrames panel to 10."
msgstr ""
"Повернувшись до Інспектора, установіть галочку для властивості *Playing*. "
"Тепер ви повинні побачити анімацію, що відтворюється в вікні перегляду. "
"Однак вона трохи повільна. Щоб виправити це, змініть параметр *Швидкість:* "
"на панелі Кадри спрайту на 10."

msgid ""
"You can add additional animations by clicking the \"New Animation\" button "
"and adding additional images."
msgstr ""
"Ви можете додати додаткові анімації, натиснувши кнопку \"Нова анімація\" та "
"додавши додаткові зображення."

msgid "Controlling the animation"
msgstr "Керування анімацією"

msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"Після завершення анімації ви можете керувати анімацією за допомогою коду "
"користуючись методами ``play()`` та ``stop()``. Ось короткий приклад для "
"відтворення анімації під час утримання клавіші зі стрілкою вправо та зупинки "
"її, коли клавіша буде випущена."

msgid "Sprite sheet with AnimatedSprite"
msgstr "Аркуш спрайтів з AnimatedSprite"

msgid ""
"You can also easily animate from a sprite sheet with the class "
"``AnimatedSprite``. We will use this public domain sprite sheet:"
msgstr ""
"Ви також можете легко анімувати з спрайтового аркуша з класом "
"``AnimatedSprite``. Ми будемо використовувати цей благодійний спрайт:"

msgid ""
"Right-click the image and choose \"Save Image As\" to download it, and then "
"copy the image into your project folder."
msgstr ""
"Клацніть зображення правою кнопкою миші та виберіть \"Зберегти зображення "
"як\", щоб завантажити його, а потім скопіюйте зображення в папку проекту."

msgid ""
"Set up your scene tree the same way you did previously when using individual "
"images. Select the ``AnimatedSprite`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"Налаштуйте своє дерево сцен так само, як і раніше при використанні окремих "
"зображень. Виберіть ``AnimatedSprite`` і в його властивості *SpriteFrames* "
"виберіть \"New SpriteFrames\"."

msgid ""
"Click on the new SpriteFrames resource. This time, when the bottom panel "
"appears, select \"Add frames from a Sprite Sheet\"."
msgstr ""
"Натисніть на новий ресурс SpriteFrames. Цього разу, коли з'явиться нижня "
"панель, виберіть \"Додати кадри з аркуша спрайтів\"."

msgid "You will be prompted to open a file. Select your sprite sheet."
msgstr "Вам буде запропоновано відкрити файл. Виберіть спрайтовий аркуш."

msgid ""
"A new window will open, showing your sprite sheet. The first thing you will "
"need to do is to change the number of vertical and horizontal images in your "
"sprite sheet. In this sprite sheet, we have four images horizontally and two "
"images vertically."
msgstr ""
"Відкриється нове вікно, на якому буде показано ваш спрайтовий лист. Перше, "
"що вам потрібно буде зробити, це змінити кількість вертикальних і "
"горизонтальних зображень у вашому спрайтовому аркуші. На цьому аркуші "
"спрайтів ми маємо чотири зображення горизонтально та два вертикально."

msgid ""
"Next, select the frames from the sprite sheet that you want to include in "
"your animation. We will select the top four, then click \"Add 4 frames\" to "
"create the animation."
msgstr ""
"Далі виділіть кадри з спрайтового аркуша, які потрібно включити в анімацію. "
"Ми виберемо четвірку кращих, а потім натиснемо \"Додати 4 кадри\", щоб "
"створити анімацію."

msgid ""
"You will now see your animation under the list of animations in the bottom "
"panel. Double click on default to change the name of the animation to jump."
msgstr ""
"Тепер ви побачите свою анімацію під списком анімацій на нижній панелі. Двічі "
"клацніть *default*, щоб змінити назву анімації на *jump*."

msgid ""
"Finally, check Playing on the AnimatedSprite in the inspector to see your "
"frog jump!"
msgstr ""
"Нарешті, запустіть *Playing* AnimatedSprite в Інспекторі, щоб побачити "
"стрибок жаби!"

msgid "Sprite sheet with AnimationPlayer"
msgstr "Спрайтовий аркуш з AnimationPlayer"

msgid ""
"Another way that you can animate when using a sprite sheet is to use a "
"standard :ref:`Sprite <class_Sprite>` node to display the texture, and then "
"animating the change from texture to texture with :ref:`AnimationPlayer "
"<class_AnimationPlayer>`."
msgstr ""
"Ще один спосіб анімування з допомогою спрайтового аркуша - це "
"використовувати стандартний вузол :ref:`Sprite <class_Sprite>` для "
"відображення текстури, а потім анімувати зміни від текстури до текстури за "
"допомогою :ref:`AnimationPlayer <class_AnimationPlayer>`."

msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr "Розглянемо цей спрайтовий аркуш, який містить 6 кадрів анімації:"

msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr ""
"Клацніть зображення правою кнопкою мишки та виберіть \"Зберегти зображення "
"як\", щоб завантажити, а потім скопіюйте зображення в папку проекту."

msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr ""
"Наша мета полягає в тому, щоб відображати ці зображення один за одним в "
"циклі. Почніть з налаштування вашого дерева сцени:"

msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""
"Перетягніть спрайтовий аркуш у властивість спрайта Sprite *Texture*, і ви "
"побачите весь аркуш на екрані. Щоб розділити його на окремі кадри, "
"розгорніть розділ *Animation* в Інспекторі та встановіть в *Hframes* "
"значення ``6``. *Hframes* і *Vframes* - це кількість горизонтальних і "
"вертикальних кадрів у вашому спрайтовому аркуші."

msgid ""
"Now try changing the value of the *Frame* property. You'll see that it "
"ranges from ``0`` to ``5`` and the image displayed by the Sprite changes "
"accordingly. This is the property we'll be animating."
msgstr ""
"Тепер спробуйте змінити значення властивості *Frame*. Ви побачите, що коли "
"воно коливається від ``0`` до ``5`` то зображення, що відображає Sprite, "
"відповідно змінюється. Це та власність, яка буде задавати анімацію."

msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""
"Виберіть ``AnimationPlayer`` і натисніть кнопку \"Animation\", а потім "
"\"New\". Назвіть нову анімацію \"walk\". Встановіть довжину анімації ``0.6`` "
"та натисніть значок зациклення, щоб наша анімація повторювалася."

msgid ""
"Now select the ``Sprite`` node and click the key icon to add a new track."
msgstr ""
"Тепер виберіть вузол ``Sprite`` і натисніть значок ключа, щоб додати нову "
"доріжку."

msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""
"Продовжуйте додавати кадри в кожній точці часової шкали (``0.1`` секунди за "
"замовчуванням), поки у вас не будуть всі кадри від 0 до 5. Ви побачите "
"кадри, які насправді з'являються в анімаційній доріжці:"

msgid "Press \"Play\" on the animation to see how it looks."
msgstr "Натисніть \"Відтворити\" на анімації, щоб побачити, як вона виглядає."

msgid "Controlling an AnimationPlayer animation"
msgstr "Керування анімацією AnimationPlayer"

msgid ""
"Like with AnimatedSprite, you can control the animation via code using the "
"``play()`` and ``stop()`` methods. Again, here is an example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"Як і у випадку з AnimatedSprite, ви можете керувати анімацією за допомогою "
"коду використовуючи методи ``play()`` та ``stop()``. Знову ж таки, ось "
"приклад для відтворення анімації під час утримання клавіші зі стрілкою "
"вправо, і зупинки її, коли клавіша буде відпущена."

msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""
"Якщо оновлювати одночасно анімації і окрему властивість (наприклад, "
"платформер може оновити властивості спрайта ``h_flip``/``v_flip``, коли "
"персонаж повертається під час запуску анімації \"повороту\"), важливо мати "
"на увазі, що ``play()`` не застосовується миттєво. Застосування відбувається "
"під час наступної обробки :ref:`AnimationPlayer <class_AnimationPlayer>`. І "
"може, в кінцевому підсумку, опинитися на наступному кадрі, викликаючи "
"\"збій\" кадра, де була застосована зміна властивості, але анімація не "
"відбулася. Якщо це виявиться проблемою, після виклику ``play()`` можна "
"відразу викликати ``advance(0)``, щоб оновити анімацію."

msgid "Summary"
msgstr "Підсумок"

msgid ""
"These examples illustrate the two classes you can use in Godot for 2D "
"animation. ``AnimationPlayer`` is a bit more complex than "
"``AnimatedSprite``, but it provides additional functionality, since you can "
"also animate other properties like position or scale. The class "
"``AnimationPlayer`` can also be used with an ``AnimatedSprite``. Experiment "
"to see what works best for your needs."
msgstr ""
"Ці приклади ілюструють два класи, які ви можете використовувати в Godot для "
"2D-анімації. ``AnimationPlayer`` є трохи складнішим, ніж ``AnimatedSprite``, "
"але він забезпечує додаткову функціональність, оскільки ви також можете "
"анімувати інші властивості, такі як положення або масштаб. Клас "
"``AnimationPlayer`` також можна використовувати з ``AnimatedSprite``. "
"Поекспериментуйте, щоб побачити, що найкраще підходить для ваших потреб."

msgid "Translation status"
msgstr "Стан перекладу"
