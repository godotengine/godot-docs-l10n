# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D movement overview"
msgstr "Огляд руху в 2D просторі"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"Every beginner has been there: \"How do I move my character?\" Depending on "
"the style of game you're making, you may have special requirements, but in "
"general the movement in most 2D games is based on a small number of designs."
msgstr ""
"Кожен початківець стикався з питанням: \"Як я буду переміщувати свого "
"персонажа?\" Залежно від стилю гри, яку ви робите, ви можете мати особливі "
"вимоги, але загалом рух у більшості 2D-ігор базується на невеликій кількості "
"конструкцій."

msgid ""
"We'll use :ref:`KinematicBody2D <class_KinematicBody2D>` for these examples, "
"but the principles will apply to other node types (Area2D, RigidBody2D) as "
"well."
msgstr ""
"Для цих прикладів ми використовуватимемо :ref:`KinematicBody2D "
"<class_KinematicBody2D>`, але принципи будуть застосовуватися і до інших "
"типів вузлів (Area2D, RigidBody2D)."

msgid "Setup"
msgstr "Налаштування"

msgid ""
"Each example below uses the same scene setup. Start with a "
"``KinematicBody2D`` with two children: ``Sprite`` and ``CollisionShape2D``. "
"You can use the Godot icon (\"icon.png\") for the Sprite's texture or use "
"any other 2D image you have."
msgstr ""
"У кожному прикладі нижче використовується однакова настройка сцени. Почніть "
"з ``KinematicBody2D`` з двома нащадками: ``Sprite`` і ``CollisionShape2D``. "
"Ви можете використовувати піктограму Godot (\"icon.png\") для текстури "
"спрайта, або будь-яке інше 2D зображення, яке у вас є."

msgid ""
"Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add "
"the following input actions (see :ref:`InputEvent <doc_inputevent>` for "
"details):"
msgstr ""
"Відкрийте **Проєкт -> Параметри проєкта** та виберіть вкладку **Карта "
"введення**. Додайте такі дії (щоб дізнатися більше дивіться :ref:`Події "
"Вводу <doc_inputevent>`):"

msgid "8-way movement"
msgstr "8-бічний рух"

msgid ""
"In this scenario, you want the user to press the four directional keys (up/"
"left/down/right or W/A/S/D) and move in the selected direction. The name \"8-"
"way movement\" comes from the fact that the player can move diagonally by "
"pressing two keys at the same time."
msgstr ""
"У цьому випадку ви хочете, щоб користувач користувався чотирма клавішами "
"(стрілками вгору/вліво/вниз/вправо, або W/A/S/D) для переміщення у вибраному "
"напрямку. Назва «8-бічний рух» походить від того, що гравець може рухатися "
"по діагоналі, натискаючи дві клавіші одночасно."

msgid "Add a script to the kinematic body and add the following code:"
msgstr "Додайте скрипт до кінематичного тіла з таким кодом:"

msgid ""
"In the ``get_input()`` function, we check for the four key events and sum "
"them up to get the velocity vector. This has the benefit of making two "
"opposite keys cancel each other out, but will also result in diagonal "
"movement being faster due to the two directions being added together."
msgstr ""
"У функції ``get_input()`` ми перевіряємо чотири клавішні події та "
"підсумовуємо їх, щоб отримати вектор швидкості. Це добре тому, що дві "
"протилежні клавіші відміняють одна одну, але також призведе до швидшого руху "
"діагоналі через додавання двох напрямків."

msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, and multiply by the desired speed."
msgstr ""
"Ми можемо запобігти цьому *нормалізувавши* швидкість, тобто встановивши "
"*довжину вектора* на ``1``, і помноживши на потрібну швидкість."

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""
"Якщо ви ніколи раніше не використовували векторну математику або вам "
"потрібно освіжити знання, ви можете переглянути пояснення використання "
"вектора у Godot на :ref:`doc_vector_math`."

msgid ""
"If the code above does nothing when you press the keys, double-check that "
"you've set up input actions correctly as described in the :ref:"
"`doc_2d_movement_setup` part of this tutorial."
msgstr ""
"Якщо вищенаведений код нічого не робить під час натискання клавіш, "
"перевірте, чи правильно ви налаштували дії введення, як описано в частині :"
"ref:`doc_2d_movement_setup` цього урока."

msgid "Rotation + movement"
msgstr "Обертання + рух"

msgid ""
"This type of movement is sometimes called \"Asteroids-style\" because it "
"resembles how that classic arcade game worked. Pressing left/right rotates "
"the character, while up/down moves it forward or backward in whatever "
"direction it's facing."
msgstr ""
"Цей тип руху іноді називають \"Астероїдним стилем\", оскільки він нагадує "
"роботу цієї класичної аркадної гри. Натискання вліво/вправо обертає "
"персонажа, тоді як вгору/вниз рухає його вперед, або назад, у будь-якому "
"напрямку, до якого він спрямований."

msgid ""
"Here we've added two new variables to track our rotation direction and "
"speed. Again, pressing both keys at once will cancel out and result in no "
"rotation. The rotation is applied directly to the body's ``rotation`` "
"property."
msgstr ""
"Тут ми додали дві нові змінні для відстеження нашого напрямку обертання та "
"швидкості. Знову ж таки, натискання обох клавіш одночасно призведе до "
"скасування та не призведе до обертання. Обертання застосовується "
"безпосередньо до властивості тіла ``rotation``."

msgid ""
"To set the velocity, we use the ``Vector2.rotated()`` method, so that it "
"points in the same direction as the body. ``rotated()`` is a useful vector "
"function that you can use in many circumstances where you would otherwise "
"need to apply trigonometric functions."
msgstr ""
"Для встановлення швидкості ми використовуємо метод ``Vector2.rotated()`` "
"так, щоб він вказував у тому ж напрямку, що і тіло. ``rotated()`` є корисною "
"векторною функцією, яку ви можете використовувати в багатьох випадках, в "
"яких за інших умов довелося б застосувати тригонометричні функції."

msgid "Rotation + movement (mouse)"
msgstr "Обертання + рух (мишкою)"

msgid ""
"This style of movement is a variation of the previous one. This time, the "
"direction is set by the mouse position instead of the keyboard. The "
"character will always \"look at\" the mouse pointer. The forward/back inputs "
"remain the same, however."
msgstr ""
"Цей стиль руху є різновидом попереднього. Цього разу напрямок задається "
"положенням мишки, замість клавіатури. Персонаж завжди буде \"дивитись\" на "
"курсор мишки. Однак вхідні дані вперед/назад залишаються незмінними."

msgid ""
"Here we're using the :ref:`Node2D <class_Node2D>` ``look_at()`` method to "
"point the player towards a given position. Without this function, you could "
"get the same effect by setting the angle like this:"
msgstr ""
"Тут ми використовуємо метод :ref:`Node2D <class_Node2D>` ``look_at()``, щоб "
"спрямувати гравця на певну позицію. Без цієї функції ви можете отримати той "
"самий ефект, встановивши кут так:"

msgid "Click-and-move"
msgstr "Клацай і рухайся"

msgid ""
"This last example uses only the mouse to control the character. Clicking on "
"the screen will cause the player to move to the target location."
msgstr ""
"Цей останній приклад використовує лише мишку для управління персонажем. "
"Натискання на екрані призведе до переміщення гравця до цільового місця."

msgid ""
"Note the ``distance_to()`` check we make prior to movement. Without this "
"test, the body would \"jitter\" upon reaching the target position, as it "
"moves slightly past the position and tries to move back, only to move too "
"far and repeat."
msgstr ""
"Зверніть увагу на перевірку ``distance_to()``, яку ми робимо перед "
"переміщенням. Без цього тесту тіло буде \"тремтіти\", досягнувши цільового "
"положення, коли воно просунеться трохи задалеко, спробує повернутися назад, "
"знову проскочивши цільове положення, і так без кінця."

msgid ""
"Uncommenting the ``look_at()`` line will also turn the body to point in its "
"direction of motion if you prefer."
msgstr ""
"Знявши коментар з рядка ``look_at()``, ви також повернете тіло в напрямку "
"руху, якщо вам так більше подобається."

msgid ""
"This technique can also be used as the basis of a \"following\" character. "
"The ``target`` position can be that of any object you want to move to."
msgstr ""
"Цей прийом також може бути використаний як основа \"відстежуючого\" "
"персонажа. Позицією ``target`` *(ціль)* може бути будь-який об'єкт, до якого "
"ви хочете перейти."

msgid "Summary"
msgstr "Підсумок"

msgid ""
"You may find these code samples useful as starting points for your own "
"projects. Feel free to use them and experiment with them to see what you can "
"make."
msgstr ""
"Ці зразки коду можуть стати корисними в якості основи для ваших власних "
"проєктів. Сміливо використовуйте їх і експериментуйте з ними, щоб побачити, "
"що ви можете зробити."

msgid ""
"You can download this sample project here: :download:`2D_movement_demo.zip "
"<files/2D_movement_demo.zip>`"
msgstr ""
"Цей зразок проєкту ви можете завантажити тут: :download:`2D_movement_demo."
"zip <files/2D_movement_demo.zip>`"

msgid "Translation status"
msgstr "Стан перекладу"
