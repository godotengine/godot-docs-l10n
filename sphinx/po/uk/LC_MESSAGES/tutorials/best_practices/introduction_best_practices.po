# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"This series is a collection of best practices to help you work efficiently "
"with Godot."
msgstr ""
"Ця серія - це колекція кращих практик, які допоможуть вам ефективно "
"працювати з Godot."

msgid ""
"Godot allows for a great amount of flexibility in how you structure a "
"project's codebase and break it down into scenes. Each approach has its pros "
"and cons, and they can be hard to weigh until you've worked with the engine "
"for long enough."
msgstr ""
"Godot забезпечує велику гнучкість у структуруванні кодової бази проєкта та "
"розбитті його на сцени. У кожного підходу є свої плюси і мінуси, і їх важко "
"зважити, без тривалої роботи з движком."

msgid ""
"There are always many ways to structure your code and solve specific "
"programming problems. It would be impossible to cover them all here."
msgstr ""
"Завжди існує багато способів структурування коду та вирішення конкретних "
"програмних завдань. Тут їх було б неможливо висвітлити всі."

msgid ""
"That is why each article starts from a real-world problem. We will break "
"down each problem in fundamental questions, suggest solutions, analyze the "
"pros and cons of each option, and highlight the best course of action for "
"the problem at hand."
msgstr ""
"Ось чому кожна стаття починається з реальної проблеми. Ми розіб'ємо кожне "
"завдання на базові питання, запропонуємо рішення, проаналізуємо плюси та "
"мінуси кожного варіанту та виділимо найкращий спосіб дій."

msgid ""
"You should start by reading :ref:`doc_what_are_godot_classes`. It explains "
"how Godot's nodes and scenes relate to classes and objects in other Object-"
"Oriented programming languages. It will help you make sense of the rest of "
"the series."
msgstr ""
"Вам слід спочатку прочитати :ref:`doc_what_are_godot_classes`. Там пояснено, "
"як вузли та сцени Godot відносяться до класів та об'єктів в іншій об'єктно-"
"орієнтованій мові програмування. Це допоможе вам осмислити нові практики."

msgid ""
"The best practices in Godot rely on Object-Oriented design principles. We "
"use tools like the `single responsibility <https://en.wikipedia.org/wiki/"
"Single_responsibility_principle>`_ principle and `encapsulation <https://en."
"wikipedia.org/wiki/Encapsulation_(computer_programming)>`_."
msgstr ""
"Найкращі практики Godot засновані на об'єктно-орієнтованих принципах "
"проєктування. Ми використовуємо такі інструменти, як `принцип окремої "
"відповідальності<https://en.wikipedia.org/wiki/"
"Single_responsibility_principle>`_ та `інкапсуляція<https://en.wikipedia.org/"
"wiki/Encapsulation_(computer_programming)>`_."

msgid "Translation status"
msgstr "Стан перекладу"
