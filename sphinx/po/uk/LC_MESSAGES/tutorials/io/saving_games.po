# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Saving games"
msgstr "Збереження ігор"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"Save games can be complicated. For example, it may be desirable to store "
"information from multiple objects across multiple levels. Advanced save game "
"systems should allow for additional information about an arbitrary number of "
"objects. This will allow the save function to scale as the game grows more "
"complex."
msgstr ""
"Збереження гри може бути складним. Наприклад, може бути бажано зберігати "
"інформацію з декількох об'єктів на декількох рівнях. Розширені системи "
"збереження ігор повинні містити додаткову інформацію про довільну кількість "
"об'єктів. Це дозволить функції збереження масштабуватися, оскільки гра стає "
"все складнішою."

msgid ""
"If you're looking to save user configuration, you can use the :ref:"
"`class_ConfigFile` class for this purpose."
msgstr ""
"Якщо ви хочете зберегти конфігурацію користувача, ви можете використовувати "
"клас :ref:`class_ConfigFile` для цієї мети."

msgid "Identify persistent objects"
msgstr "Визначення постійних об'єктів"

msgid ""
"Firstly, we should identify what objects we want to keep between game "
"sessions and what information we want to keep from those objects. For this "
"tutorial, we will use groups to mark and handle objects to be saved, but "
"other methods are certainly possible."
msgstr ""
"Спершу, ми повинні визначити, які об'єкти ми хочемо зберігати між ігровими "
"сесіями та яку інформацію від цих об'єктів ми хочемо зберегти. Для цього "
"підручника ми будемо використовувати групи для позначення та обробки "
"об'єктів, які потрібно зберегти, але, безумовно, можливі інші методи."

msgid ""
"We will start by adding objects we wish to save to the \"Persist\" group. We "
"can do this through either the GUI or script. Let's add the relevant nodes "
"using the GUI:"
msgstr ""
"Почнемо з додавання об'єктів, які ми хочемо зберегти, до групи \"Persist\". "
"Ми можемо зробити це за допомогою графічного інтерфейсу, або скрипту. Додамо "
"відповідні вузли за допомогою графічного інтерфейсу:"

msgid ""
"Once this is done, when we need to save the game, we can get all objects to "
"save them and then tell them all to save with this script:"
msgstr ""
"Як тільки це буде зроблено, при потребі зберегти гру, ми зможемо отримати "
"всі об'єкти, які необхідно зберегти, і зберегти їх за допомогою цього "
"скрипту:"

msgid "Serializing"
msgstr "Серіалізація"

msgid ""
"The next step is to serialize the data. This makes it much easier to read "
"from and store to disk. In this case, we're assuming each member of group "
"Persist is an instanced node and thus has a path. GDScript has helper "
"functions for this, such as :ref:`to_json() "
"<class_@GDScript_method_to_json>` and :ref:`parse_json() "
"<class_@GDScript_method_parse_json>`, so we will use a dictionary. Our node "
"needs to contain a save function that returns this data. The save function "
"will look like this:"
msgstr ""
"Наступним кроком є серіалізація даних. Це значно полегшує читання та "
"зберігання на диску. У цьому випадку ми припускаємо, що кожен член групи "
"Persist є вузлом екземпляра і, таким чином, має шлях. GDScript має допоміжні "
"функції для цього, такі як :ref:`to_json() <class_@GDScript_method_to_json>` "
"і :ref:`parse_json() <class_@GDScript_method_parse_json>`, тому ми будемо "
"використовувати словник. Наш вузол повинен містити функцію збереження, яка "
"повертає ці дані. Функція збереження буде виглядати так:"

msgid ""
"This gives us a dictionary with the style ``{ \"variable_name\":"
"value_of_variable }``, which will be useful when loading."
msgstr ""
"Це дає нам словник в стилі ``{ \"назва_змінної\":значення_змінної }``, який "
"буде корисний при завантаженні."

msgid "Saving and reading data"
msgstr "Збереження та читання даних"

msgid ""
"As covered in the :ref:`doc_filesystem` tutorial, we'll need to open a file "
"so we can write to it or read from it. Now that we have a way to call our "
"groups and get their relevant data, let's use :ref:`to_json() "
"<class_@GDScript_method_to_json>` to convert it into an easily stored string "
"and store them in a file. Doing it this way ensures that each line is its "
"own object, so we have an easy way to pull the data out of the file as well."
msgstr ""
"Як описано в підручнику :ref:`doc_filesystem`, нам потрібно буде відкрити "
"файл, щоб ми могли записати в нього, або прочитати з нього. Тепер, коли у "
"нас є спосіб викликати наші групи і отримати їх відповідні дані, давайте "
"використовувати :ref:`to_json() <class_@GDScript_method_to_json>` для "
"перетворення їх у рядок, який легко зберегти і зберігання їх у файлі. При "
"такому підході, кожен рядок є своїм власним об'єктом, тому у нас є простий "
"спосіб витягнути дані з файлу."

msgid ""
"Game saved! Loading is fairly simple as well. For that, we'll read each "
"line, use parse_json() to read it back to a dict, and then iterate over the "
"dict to read our values. But we'll need to first create the object and we "
"can use the filename and parent values to achieve that. Here is our load "
"function:"
msgstr ""
"Гра збережена! Завантаження також досить просте. Для цього ми прочитаємо "
"кожен рядок, за допомогою ``parse_json()``, щоб прочитати словник, а потім "
"проведемо ітерацію словника, щоб прочитати наші змінні. Але спочатку нам "
"потрібно буде створити об'єкт, і для досягнення цього ми зможемо "
"використовувати ім'я файлу та батьківські значення. Ось наша функція "
"завантаження:"

msgid ""
"Now we can save and load an arbitrary number of objects laid out almost "
"anywhere across the scene tree! Each object can store different data "
"depending on what it needs to save."
msgstr ""
"Тепер ми можемо зберегти і завантажити довільну кількість об'єктів практично "
"в будь-якому місці по всьому дереву сцени! Кожен об'єкт може зберігати різні "
"дані в залежності від того, що йому потрібно зберегти."

msgid "Some notes"
msgstr "Деякі примітки"

msgid ""
"We have glossed over setting up the game state for loading. It's ultimately "
"up to the project creator where much of this logic goes. This is often "
"complicated and will need to be heavily customized based on the needs of the "
"individual project."
msgstr ""
"Ми приховали налаштування стану гри для завантаження. Зрештою, це залежить "
"від творця проекту, де піде більша частина цієї логіки. Це часто "
"ускладнюється і потрібно буде багато попрацювати, виходячи з потреб окремого "
"проекту."

msgid ""
"Additionally, our implementation assumes no Persist objects are children of "
"other Persist objects. Otherwise, invalid paths would be created. To "
"accommodate nested Persist objects, consider saving objects in stages. Load "
"parent objects first so they are available for the :ref:`add_child() "
"<class_node_method_add_child>` call when child objects are loaded. You will "
"also need a way to link children to parents as the :ref:`NodePath "
"<class_nodepath>` will likely be invalid."
msgstr ""
"Крім того, наша реалізація передбачає, що жодні об'єкти Persist не є "
"дочірніми елементами інших об'єктів Persist. В іншому випадку будуть "
"створені неприпустимі шляхи. Щоб розмістити вкладені об'єкти Persist, "
"спробуйте зберегти об'єкти поетапно. Спочатку завантажте батьківські "
"об'єкти, щоб вони були доступні для виклику :ref:`add_child() "
"<class_node_method_add_child>` під час завантаження дочірніх об'єктів. Вам "
"також знадобиться спосіб зв'язати дітей з батьками, оскільки :ref:`NodePath "
"<class_nodepath>` *(Шлях вузла)*, ймовірно, буде недійсним."

msgid "Translation status"
msgstr "Стан перекладу"
