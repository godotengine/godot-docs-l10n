# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript exports"
msgstr "Експорт GDScript"

msgid "Introduction to exports"
msgstr "Вступ до експорту"

msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``export`` keyword::"
msgstr ""
"У Godot члени класу можуть експортуватися. Це означає, що їх значення "
"зберігається разом із ресурсом (наприклад, :ref:`сценою "
"<class_PackedScene>`), до якого вони приєднані. Вони також будуть доступні "
"для редагування в редакторі властивостей. Експорт здійснюється за допомогою "
"ключового слова ``export``::"

msgid ""
"An exported variable must be initialized to a constant expression or have an "
"export hint in the form of an argument to the ``export`` keyword (see the "
"*Examples* section below)."
msgstr ""
"Експортована змінна повинна бути ініціалізована до постійного виразу, або "
"мати підказку щодо експорту, у вигляді аргументу до ключового слова "
"``export`` (дивіться розділ *Приклади* нижче)."

msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"Однією з основних переваг експорту змінних є те, що їх можна побачити та "
"редагувати у редакторі. Таким чином, художники та розробники ігор можуть "
"змінювати значення, які згодом впливають на роботу програми. Для цього "
"передбачений спеціальний синтаксис експорту."

#, fuzzy
msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language."
msgstr ""
"Експорт властивостей також можна виконати іншими мовами, такими як C#. "
"Синтаксис змінюється залежно від мови."

msgid "Examples"
msgstr "Приклади"

msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"Слід зазначити, що навіть якщо скрипт не запущений в редакторі, експортовані "
"властивості можна редагувати. Це може бути використано спільно зі :ref:"
"`скриптом в режимі \"інструмент\" <doc_gdscript_tool_mode>`."

msgid "Exporting bit flags"
msgstr "Експорт бітових прапорців"

msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the export hint ``int, FLAGS, ...``, they "
"can be set from the editor::"
msgstr ""
"Цілі числа, що використовуються як бітові позначки, можуть зберігати "
"декілька ``true``/``false`` (булевих) значень в одній властивості. За "
"допомогою підказки щодо експорту ``int, FLAGS, ...``, їх можна встановити з "
"редактора:"

msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"Ви повинні надати опис рядка для кожної позначки. У цьому прикладі ``Fire`` "
"має значення 1, ``Water`` - 2, ``Earth`` - 4 і ``Wind`` відповідає значенню "
"8. Зазвичай константи слід визначати відповідно (наприклад ``const "
"ELEMENT_WIND = 8`` тощо)."

msgid ""
"Export hints are also provided for the physics and render layers defined in "
"the project settings::"
msgstr ""
"Також передбачені підказки щодо експорту для фізики та шарів візуалізації, "
"визначених у параметрах проєкту:"

msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr ""
"Використання бітових значень вимагає певного розуміння побітових операцій. "
"Якщо ви сумніваєтесь, використовуйте замість них логічні змінні."

msgid "Exporting arrays"
msgstr "Експорт масивів"

msgid ""
"Exported arrays can have initializers, but they must be constant expressions."
msgstr ""
"Експортовані масиви можуть мати ініціалізатори, але вони повинні бути "
"постійними виразами."

msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""
"Якщо експортований масив задає тип, який успадковується від Ресурса, "
"значення масиву можна встановити в інспекторі, перетягуючи одночасно кілька "
"файлів із панелі Файлова система."

msgid "Setting exported variables from a tool script"
msgstr "Встановлення експортованих змінних зі скрипту інструмента"

msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` after setting the "
"exported variable's value."
msgstr ""
"При зміні значення експортованої змінної зі скрипту в :ref:"
"`doc_gdscript_tool_mode`, значення в інспекторі не оновлюється автоматично. "
"Щоб оновити його, викликайте :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` після встановлення "
"значення експортованої змінної."

msgid "Advanced exports"
msgstr "Розширений експорт"

msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"Не кожен вид експорту можна забезпечити на рівні самої мови, щоб уникнути "
"зайвої складності проєктування. Далі описуються деякі більш-менш загальні "
"функції експорту, які можна реалізувати за допомогою API низького рівня."

msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, and :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` methods as described in :ref:"
"`doc_accessing_data_or_logic_from_object`."
msgstr ""
"Перш ніж читати далі, ви повинні ознайомитися з тим, як обробляються "
"властивості та як їх можна налаштувати за допомогою методів :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, та :ref:`_get_property_list() "
"<class_Object_method__get_property_list>`, як описано в :ref:"
"`doc_accessing_data_or_logic_from_object`."

msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"Для прив'язки властивостей, що використовуються в вищезгаданих методах в C+"
"+, дивіться :ref:`doc_binding_properties_using_set_get_property_list`."

msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr ""
"Скрипт повинен працювати в режимі ``tool``, щоб вищезазначені методи могли "
"працювати з редактора."

msgid "Properties"
msgstr "Властивості"

msgid ""
"To understand how to better use the sections below, you should understand "
"how to make properties with advanced exports."
msgstr ""

msgid ""
"The ``_get_property_list()`` function gets called by the inspector. You can "
"override it for more advanced exports. You must return an ``Array`` with the "
"contents of the properties for the function to work."
msgstr ""

#, fuzzy
msgid "``name`` is the name of the property"
msgstr "``name`` - це назва властивості"

msgid "``type`` is the type of the property from ``Variant.Type``."
msgstr ""

msgid ""
"The ``float`` type is called a real (``TYPE_REAL``) in the ``Variant.Type`` "
"enum."
msgstr ""

#, fuzzy
msgid "Attaching variables to properties"
msgstr "Мати доступ до локальних змінних, чи властивостей:"

msgid ""
"To attach variables to properties (allowing the value of the property to be "
"used in scripts), you need to create a variable with the exact same name as "
"the property or else you may need to override the :ref:`_set() "
"<class_Object_method__get_property_list>` and :ref:`_get() "
"<class_Object_method__get_property_list>` methods. Attaching a variable to "
"to a property also gives you the ability to give it a default state. ::"
msgstr ""

#, fuzzy
msgid "Adding default values for properties"
msgstr "Мати доступ до локальних змінних, чи властивостей:"

msgid ""
"To define default values for advanced exports, you need to override the "
"``property_can_revert()`` and ``property_get_revert()`` methods."
msgstr ""

msgid ""
"The ``property_can_revert()`` method takes the name of a property and must "
"return ``true`` if the property can be reverted. This will enable the Revert "
"button next to the property in the inspector."
msgstr ""

msgid ""
"The ``property_get_revert()`` method takes the name of a property and must "
"return the default value for that property."
msgstr ""

msgid "Adding script categories"
msgstr "Додавання скрипту категорій"

#, fuzzy
msgid ""
"For better visual distinguishing of properties, a special script category "
"can be embedded into the inspector to act as a separator. ``Script "
"Variables`` is one example of a built-in category. ::"
msgstr ""
"Для кращого візуального розрізнення властивостей в інспектор може бути "
"вбудована спеціальна категорія скрипту, щоб діяти як розділювач. ``Script "
"Variables`` є одним із прикладів вбудованої категорії."

msgid "``name`` is the name of a category to be added to the inspector;"
msgstr "``name`` це назва категорії, яка буде додана до інспектора;"

msgid ""
"Every following property added after the category definition will be a part "
"of the category."
msgstr ""

msgid ""
"``PROPERTY_USAGE_CATEGORY`` indicates that the property should be treated as "
"a script category specifically, so the type ``TYPE_NIL`` can be ignored as "
"it won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_CATEGORY`` вказує на те, що властивість слід розглядати як "
"категорію скрипта, тому тип ``TYPE_NIL`` можна ігнорувати, оскільки він "
"фактично не використовуватиметься для логіки скрипта, але його все одно "
"потрібно визначити."

msgid "Grouping properties"
msgstr "Групування властивостей"

#, fuzzy
msgid "A list of properties with similar names can be grouped. ::"
msgstr "Список властивостей з подібними назвами можна згрупувати."

msgid ""
"``name`` is the name of a group which is going to be displayed as "
"collapsible list of properties;"
msgstr ""
"``name`` це назва групи, яка буде відображатися як розбірний список "
"властивостей;"

#, fuzzy
msgid ""
"Every following property added after the group property with the prefix "
"(which determined by ``hint_string``) will be shortened. For instance, "
"``rotate_speed`` is going to be shortened to ``speed`` in this case. "
"However, ``movement_speed`` won't be a part of the group and will not be "
"shortened."
msgstr ""
"кожна наступна властивість додана після властивості групи, буде згорнуто та "
"скорочено відповідно до префікса, визначеного за допомогою ключа "
"``hint_string``. Наприклад, у цьому випадку ``rotate_speed`` буде скорочено "
"до ``speed``."

msgid ""
"``PROPERTY_USAGE_GROUP`` indicates that the property should be treated as a "
"script group specifically, so the type ``TYPE_NIL`` can be ignored as it "
"won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_GROUP`` вказує на те, що властивість слід розглядати як "
"групу скриптів, тому тип ``TYPE_NIL`` можна ігнорувати, оскільки він "
"фактично не використовуватиметься для логіки скрипта, але його все одно "
"потрібно визначити."

msgid "Translation status"
msgstr "Стан перекладу"
