# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Getting started with Visual Scripting"
msgstr "Початок роботи з Visual Scripting"

msgid ""
"As with everything in Godot, we prioritize a good experience over copying or "
"integrating third party solutions which might not fit nicely in the current "
"workflow. This led us to write our own version of how we believe this "
"feature would work best with the engine."
msgstr ""
"Як і у всьому, що є в Godot, ми надаємо пріоритет хорошому досвіду, а не "
"копіюванню, або інтеграції, сторонніх рішень, які можуть не вписуватися в "
"поточний робочий процес. Це змусило нас написати власну версію функції "
"оптимізованої для якнайкращої роботи з движком."

msgid ""
"In Godot, a Visual Script fits smoothly together with regular scripts in the "
"Editor tab"
msgstr ""
"Visual Script у Godot легко поєднується разом із звичайними скриптами на "
"вкладці Редактора"

msgid ""
"In fact, Visual Scripting integrates so well to Godot that it's hard to "
"believe it was added only in version 3.0. This is because, when editing, the "
"rest of Godot panels and docks act like a palette from where you can drag "
"and drop all sorts of information to the script canvas:"
msgstr ""
"Насправді Visual Scripting так добре інтегрований в Godot, що важко "
"повірити, що він був доданий лише у версії 3.0. Це тому, що під час "
"редагування, решта панелей і вкладок Godot, діють як палітра, з якої можна "
"перетягувати всі види інформації на полотно скрипту:"

msgid "Creating a script"
msgstr "Створення скрипту"

msgid ""
"Creating scripts works the same as with other scripting languages: Select "
"any node in the scene and push the \"New Script\" button at the top right "
"corner of the Scene Tree dock:"
msgstr ""
"Створення скриптів відбувається так само, як і з іншими мовами скриптів: "
"Виберіть будь-який вузол на сцені та натисніть кнопку \"Новий скрипт\" у "
"верхньому правому куті панелі Сцена:"

msgid ""
"Once it opens, the script type \"Visual Script\" must be selected from the "
"drop down list. The script extension must be \".vs\" (for Visual Script!)."
msgstr ""
"Як тільки відкриється меню створення скрипту виберіть тип скрипту \"Visual "
"Script\". Розширення скрипту має бути \".vs\" (від Visual Script!)."

msgid ""
"Finally, the Script Editor will open, allowing you to start editing the "
"visual script:"
msgstr ""
"Нарешті, відкриється редактор скриптів, який дозволить почати редагування "
"візуального скрипту:"

msgid "Adding a function"
msgstr "Додавання функції"

msgid ""
"Unlike other visual scripting implementations, Visual Scripting in Godot is "
"heavily based on functions. This happens because it uses the same interface "
"to communicate with the engine as other scripting engines. In Godot, the "
"scripting interface is universal and all implementations conform to it."
msgstr ""
"На відміну від інших візуальних скриптів, Visual Scripting в Godot в "
"основному базується на функціях. Це відбувається тому, що він використовує "
"той самий інтерфейс для зв'язку з движком, що й інші движки скриптів. У "
"Godot інтерфейс скриптів універсальний і всі реалізації пристосовані до "
"нього."

msgid "A function is an individual canvas with nodes connected."
msgstr "Функція - це індивідуальне полотно з підключеними вузлами."

msgid ""
"A single script can contain many functions, each of which will have a canvas "
"of its own, allowing for more organization."
msgstr ""
"Один скрипт може містити безліч функцій, кожна з яких матиме власне полотно, "
"що забезпечує більшу організацію."

msgid "There are three main ways to add functions in a script:"
msgstr "Існує три основні способи додавання функцій у скрипт:"

msgid "Overriding a virtual function"
msgstr "Перевизначення наявної вбудованої функції"

msgid ""
"Most types of nodes and other types of objects in Godot contain virtual "
"functions. These are functions that will be called (run your code) when "
"something happens and can be looked up in the reference. Virtual functions "
"are listed when pressing the \"Override\" icon in the member panel:"
msgstr ""
"Більшість типів вузлів, та інших типів об'єктів, у Godot містять віртуальні "
"функції. Це функції, які будуть викликані (роботою вашого коду), коли щось "
"станеться, і їх можна знайти в характеристиках. Ці функції перераховуються "
"при натисканні піктограми «Перевизначити» на панелі елементів:"

msgid ""
"In the following example, a function will be executed when the node is "
"loaded and added to the running scene. For this, the _ready() virtual method "
"will be overridden:"
msgstr ""
"У наступному прикладі функція буде виконуватися, коли вузол завантажується "
"та додається до запущеної сцени. Для цього буде замінено віртуальний метод "
"_ready():"

msgid "Finally, a canvas appears for this function, showing the override:"
msgstr ""
"Нарешті, з’являється полотно для цієї функції із зазначенням назви "
"перевизначеної функції:"

msgid ""
"As some functions expect you to return a value, they will also add a return "
"node where such value is supposed to be provided:"
msgstr ""
"Деякі функції очікують, що ви повернете якесь значення, такі функції при "
"створення додадуть вузол повернення:"

msgid "Connecting a signal to a function"
msgstr "Підключення сигналу до функції"

msgid ""
"Nodes in a tree emit signals when something happens. Godot uses signals for "
"all sorts of things. A typical example would be a button that emits a "
"\"pressed\" signal when actually pressed."
msgstr ""
"Вузли з дерева випромінюють сигнали, коли щось відбувається. Godot "
"використовує сигнали для найрізноманітніших речей. Типовим прикладом може "
"бути кнопка, яка видає сигнал \"натиснуто\" при фактичному натисканні."

msgid ""
"For this, a node must be selected and the Node tab opened. This will allow "
"inspecting the signals. Once they are displayed, connect the \"pressed\" "
"signal:"
msgstr ""
"Для цього потрібно вибрати вузол і відкрити вкладку Вузол. Це дозволить "
"перевірити сигнали. Після їх відображення підключіть сигнал "
"\"натиснуто\" (\"pressed\"):"

msgid ""
"This will open the connection dialog. In this dialog, you must select the "
"node where the signal will be connected to, and the function that will "
"receive the signal:"
msgstr ""
"Це відкриє діалогове вікно підключення. У цьому діалоговому вікні потрібно "
"вибрати вузол, до якого буде підключений сигнал, і функцію, яка прийме "
"сигнал:"

msgid ""
"If this is done right, a new function will be created in our script and a "
"signal will automatically be connected to it:"
msgstr ""
"Якщо це зробити правильно, в нашому скрипті буде створена нова функція, і "
"сигнал автоматично буде підключений до неї:"

msgid "Creating a function manually"
msgstr "Створення функції вручну"

msgid ""
"The last way to create functions is to do it manually. In general, this is "
"not as common unless you really need it. Custom functions work when another "
"(or the same) script calls them manually. The main use cases for this are "
"breaking a larger function up into several manageable chunks and reusing "
"your visual code."
msgstr ""
"Останній спосіб створення функцій - це зробити її вручну. Це не самий "
"поширений спосіб, його використовують тільки при нагальній потребі. Власні "
"функції працюють, коли інший (або той самий) скрипт викликає їх вручну. В "
"основному їх використовують для розбиття більшої функції на кілька керованих "
"фрагментів та повторного використання вашого візуального коду."

msgid ""
"To create a function manually, push the big \"Plus\" button, and a new "
"function will be added with a default name:"
msgstr ""
"Щоб створити функцію вручну, натисніть велику кнопку \"Плюс\", і нова "
"функція буде додана з назвою за замовчуванням:"

msgid ""
"This will add a new function, which can be renamed by simply double clicking "
"its name:"
msgstr "ЇЇ можна перейменувати, просто двічі клацнувши на ім'я:"

msgid ""
"To edit the \"arguments\" this function can get (the values you pass to it "
"when you call this function), simply click the Function node and check the "
"inspector:"
msgstr ""
"Щоб відредагувати \"аргументи\", які може отримати ця функція (значення, які "
"ви їй передаєте, коли викликаєте), просто натисніть на вузол функцій і "
"перевірте інспектора:"

msgid "More on that will be explained later in this document."
msgstr "Більше про це далі в цьому документі."

msgid "Translation status"
msgstr "Стан перекладу"
