# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Evaluating expressions"
msgstr "Оцінка позначеного"

msgid ""
"Godot provides an :ref:`class_Expression` class you can use to evaluate "
"expressions."
msgstr ""

#, fuzzy
msgid "An expression can be:"
msgstr "Вузли виразів можуть:"

msgid "A mathematical expression such as ``(2 + 4) * 16/4.0``."
msgstr ""

msgid "A built-in method call like ``deg2rad(90)``."
msgstr ""

msgid ""
"A method call on an user-provided script like ``update_health()``, if "
"``base_instance`` is set to a value other than ``null`` when calling :ref:"
"`Expression.execute() <class_Expression_method_execute>`."
msgstr ""

msgid ""
"The Expression class is independent from GDScript. It's available even if "
"you compile Godot with the GDScript module disabled."
msgstr ""

#, fuzzy
msgid "Basic usage"
msgstr "Основа"

msgid "To evaluate a mathematical expression, use::"
msgstr ""

msgid "The following operators are available:"
msgstr ""

msgid "Operator"
msgstr "Оператор"

msgid "Notes"
msgstr "Нотатки"

#, fuzzy
msgid "Addition ``+``"
msgstr "Додаткові примітки"

msgid ""
"Can also be used to concatenate strings and arrays: - ``\"hello\" + \" "
"world\"`` = ``hello world`` - ``[1, 2] + [3, 4]`` = ``[1, 2, 3, 4]``"
msgstr ""

#, fuzzy
msgid "Subtraction (``-``)"
msgstr "Віднімання"

#, fuzzy
msgid "Multiplication (``*``)"
msgstr "мультиплікативні"

#, fuzzy
msgid "Division (``/``)"
msgstr "Truevision Targa (``.tga``)"

msgid ""
"Performs and integer division if both operands are integers. If at least one "
"of them is a floating-point number, returns a floating-point value."
msgstr ""

msgid "Modulo (``%``)"
msgstr ""

msgid "Returns the remainder of an integer division."
msgstr ""

msgid ""
"Spaces around operators are optional. Also, keep in mind the usual `order of "
"operations <https://en.wikipedia.org/wiki/Order_of_operations>`__ applies. "
"Use parentheses to override the order of operations if needed."
msgstr ""

msgid ""
"All the Variant types supported in Godot can be used: integers, floating-"
"point numbers, strings, arrays, dictionaries, colors, vectors, …"
msgstr ""

msgid "Arrays and dictionaries can be indexed like in GDScript::"
msgstr ""

msgid "Passing variables to an expression"
msgstr ""

msgid ""
"You can pass variables to an expression. These variables will then become "
"available in the expression's \"context\" and will be substituted when used "
"in the expression::"
msgstr ""

msgid ""
"Both the variable names and variable values **must** be specified as an "
"array, even if you only define one variable. Also, variable names are **case-"
"sensitive**."
msgstr ""

#, fuzzy
msgid "Setting a base instance for the expression"
msgstr "Створення сервера Godot"

msgid ""
"By default, an expression has a base instance of ``null``. This means the "
"expression has no base instance associated to it."
msgstr ""

msgid ""
"When calling :ref:`Expression.execute() <class_Expression_method_execute>`, "
"you can set the value of the ``base_instance`` parameter to a specific "
"object instance such as ``self``, another script instance or even a "
"singleton::"
msgstr ""

msgid "Associating a base instance allows doing the following:"
msgstr ""

msgid "Reference the instance's constants (``const``) in the expression."
msgstr ""

msgid "Reference the instance's member variables (``var``) in the expression."
msgstr ""

msgid ""
"Call methods defined in the instance and use their return values in the "
"expression."
msgstr ""

msgid ""
"Setting a base instance to a value other than ``null`` allows referencing "
"constants, member variables, and calling all methods defined in the script "
"attached to the instance. Allowing users to enter expressions may allow "
"cheating in your game, or may even introduce security vulnerabilities if you "
"allow arbitrary clients to run expressions on other players' devices."
msgstr ""

#, fuzzy
msgid "Example script"
msgstr "Зразок GDScript"

msgid "The script below demonstrates what the Expression class is capable of::"
msgstr ""

#, fuzzy
msgid "The output from the script will be::"
msgstr "Роль скрипту"

#, fuzzy
msgid "Built-in functions"
msgstr "Вбудовані функції"

msgid ""
"Most methods available in the :ref:`class_@GDScript` scope are available in "
"the Expression class, even if no base instance is bound to the expression. "
"The same parameters and return types are available."
msgstr ""

msgid ""
"However, unlike GDScript, parameters are **always required** even if they're "
"specified as being optional in the class reference. In contrast, this "
"restriction on arguments doesn't apply to user-made functions when you bind "
"a base instance to the expression."
msgstr ""

msgid "Translation status"
msgstr "Стан перекладу"
