# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Making HTTP requests"
msgstr "Виконання HTTP-запитів"

msgid ""
"The :ref:`HTTPRequest <class_HTTPRequest>` node is the easiest way to make "
"HTTP requests in Godot. It is backed by the more low-level :ref:`HTTPClient "
"<class_HTTPClient>`, for which a tutorial is available :ref:`here "
"<doc_http_client_class>`."
msgstr ""
"Робити HTTP-запити в Godot найпростіше за допомогою вузла :ref:`HTTPRequest "
"<class_HTTPRequest>`. Він підтримується класом більш низького рівня :ref:"
"`HTTPClient <class_HTTPClient>`, про який є стаття :ref:`тут "
"<doc_http_client_class>`."

msgid ""
"For the sake of this example, we will create a simple UI with a button, that "
"when pressed will start the HTTP request to the specified URL."
msgstr ""
"Для цього прикладу ми створимо простий інтерфейс користувача з кнопкою, яка "
"при натисканні запускає HTTP-запит до вказаної URL-адреси."

msgid ""
"When exporting to Android, make sure to enable the ``INTERNET`` permission "
"in the Android export preset before exporting the project or using one-click "
"deploy. Otherwise, network communication of any kind will be blocked by "
"Android."
msgstr ""
"Під час експорту в Android обов’язково ввімкніть дозвіл ``INTERNET`` у "
"попередньо налаштованих експортах Android, перш ніж експортувати проект, або "
"використовувати розгортання одним клацанням мишки. Інакше Android заблокує "
"будь-який мережевий зв’язок."

msgid "Preparing scene"
msgstr "Підготовка сцени"

msgid ""
"Create a new empty scene, add a CanvasLayer as the root node and add a "
"script to it. Then add two child nodes to it: a Button and an HTTPRequest "
"node. You will need to connect the following signals to the CanvasLayer "
"script:"
msgstr ""
"Створіть нову порожню сцену, додайте вузол CanvasLayer в якості кореневого і "
"додайте до нього скрипт. Потім додайте до нього два дочірніх вузли: Button і "
"HTTPRequest. Вам потрібно буде підключити такі сигнали до скрипта "
"CanvasLayer:"

msgid "Button.pressed: When the button is pressed, we will start the request."
msgstr "Button.pressed: При натисканні кнопки, ми почнемо запит."

msgid ""
"HTTPRequest.request_completed: When the request is completed, we will get "
"the requested data as an argument."
msgstr ""
"HTTPRequest.request_completed: Коли запит буде виконано, ми отримаємо "
"запитувані дані в якості аргумента."

msgid "Scripting"
msgstr "Скриптинґ"

msgid ""
"Below is all the code we need to make it work. The URL points to an online "
"API mocker; it returns a pre-defined JSON string, which we will then parse "
"to get access to the data."
msgstr ""
"Нижче наведено весь код, який нам потрібен, щоб він працював. URL-адреса "
"вказує на онлайн-мокер API; він повертає попередньо визначений рядок JSON, "
"який ми потім розберемо, щоб отримати доступ до даних."

msgid ""
"With this, you should see ``(hello:world)`` printed on the console; hello "
"being a key, and world being a value, both of them strings."
msgstr ""
"При цьому ви повинні побачити в консолі напис ``(hello:world)``; hello, як "
"ключ, а world, як значення, і обоє в форматі тексту."

msgid ""
"For more information on parsing JSON, see the class references for :ref:"
"`JSON <class_JSON>` and :ref:`JSONParseResult <class_JSONParseResult>`."
msgstr ""
"Щоб отримати додаткові відомості про розбір JSON, перегляньте посилання на "
"класи для :ref:`JSON <class_JSON>` та :ref:`JSONParseResult "
"<class_JSONParseResult>`."

msgid ""
"Note that you may want to check whether the ``result`` equals "
"``RESULT_SUCCESS`` and whether a JSON parsing error occurred, see the JSON "
"class reference and :ref:`HTTPRequest <class_HTTPRequest>` for more."
msgstr ""
"Зауважте, що ви можете перевірити, чи ``result`` дорівнює "
"``RESULT_SUCCESS``, і чи не сталася помилка аналізу JSON, дивіться посилання "
"на клас JSON і :ref:`HTTPRequest <class_HTTPRequest>`, щоб дізнатися більше."

msgid ""
"Of course, you can also set custom HTTP headers. These are given as a string "
"array, with each string containing a header in the format ``\"header: "
"value\"``. For example, to set a custom user agent (the HTTP ``user-agent`` "
"header) you could use the following:"
msgstr ""
"Звичайно, ви також можете встановити власні заголовки HTTP. Вони подаються у "
"вигляді масиву текстів, причому кожен текст містить заголовок у форматі "
"``\"заголовок: значення\"``. Наприклад, щоб встановити власний агент "
"користувача (заголовок HTTP ``user-agent``), ви можете використовувати "
"наступне:"

msgid ""
"Please note that, for SSL/TLS encryption and thus HTTPS URLs to work, you "
"may need to take some steps as described :ref:`here <doc_ssl_certificates>`."
msgstr ""
"Зауважте, що для роботи шифрування SSL/TLS і URL-адрес HTTPS, вам може "
"знадобитися виконати деякі дії, описані :ref:`тут <doc_ssl_certificates>`."

msgid ""
"Also, when calling APIs using authorization, be aware that someone might "
"analyse and decompile your released application and thus may gain access to "
"any embedded authorization information like tokens, usernames or passwords. "
"That means it is usually not a good idea to embed things such as database "
"access credentials inside your game. Avoid providing information useful to "
"an attacker whenever possible."
msgstr ""
"Крім того, викликаючи API за допомогою авторизації, майте на увазі, що хтось "
"може проаналізувати та декомпілювати вашу випущену програму і таким чином "
"отримати доступ до будь-якої вбудованої інформації авторизації, як-от "
"маркери, імена користувачів, або паролі. Це означає, що зазвичай не варто "
"вбудовувати в гру такі речі, як облікові дані доступу до бази даних. По "
"можливості уникайте надання інформації, корисної для зловмисника."

msgid "Sending data to server"
msgstr "Відправка даних на сервер"

msgid ""
"Until now, we have limited ourselves to requesting data from a server. But "
"what if you need to send data to the server? Here is a common way of doing "
"it:"
msgstr ""
"Досі ми обмежувалися запитом даних із сервера. Але що робити, якщо потрібно "
"відправити дані на сервер? Ось загальний спосіб зробити це:"

msgid ""
"Keep in mind that you have to wait for a request to finish before sending "
"another one. Making multiple request at once requires you to have one node "
"per request. A common strategy is to create and delete HTTPRequest nodes at "
"runtime as necessary."
msgstr ""
"Майте на увазі, що вам потрібно дочекатися завершення запиту, перш ніж "
"надсилати інший. Для одночасного виконання кількох запитів потрібно мати "
"один вузол на запит. Поширеною стратегією є створення та видалення вузлів "
"HTTPRequest під час виконання, якщо це необхідно."

msgid "Translation status"
msgstr "Стан перекладу"
