# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Procedural geometry"
msgstr "Процедурна геометрія"

msgid ""
"There are many ways to procedurally generate geometry in Godot. In this "
"tutorial series we will explore a few of them. Each technique has its own "
"benefits and drawbacks, so it is best to understand each one and how it can "
"be useful in a given situation."
msgstr ""
"Є багато способів процедурно генерувати геометрію в Godot. У цій серії "
"уроків ми розглянемо деякі з них. Кожна методика має свої переваги і "
"недоліки, тому краще зрозуміти кожну і мати уявлення, як вона може бути "
"корисна в тій, чи іншій, ситуації."

msgid "What is geometry?"
msgstr "Що таке геометрія?"

msgid ""
"Geometry is a fancy way of saying shape. In computer graphics, geometry is "
"typically represented by an array of positions called \"vertices\". In "
"Godot, geometry is represented by Meshes."
msgstr ""
"Геометрія - це химерний спосіб описати форму. У комп'ютерній графіці "
"геометрія зазвичай представлена масивом позицій, що називаються "
"\"вершинами\". У Godot геометрія представлена Meshes *(Мешами)*."

msgid "What is a Mesh?"
msgstr "Що таке Меш?"

msgid ""
"Many things in Godot have mesh in their name: the :ref:`Mesh <class_Mesh>`, "
"the :ref:`ArrayMesh <class_ArrayMesh>`, the :ref:`MeshInstance "
"<class_MeshInstance>`, the :ref:`MultiMesh <class_MultiMesh>`, and the :ref:"
"`MultiMeshInstance <class_MultiMeshInstance>`. While they are all related, "
"they have slightly different uses."
msgstr ""
"Багато речей в Godot мають слово \"mesh\" в своїй назві: :ref:`Mesh "
"<class_Mesh>`, :ref:`ArrayMesh <class_ArrayMesh>`, :ref:`MeshInstance "
"<class_MeshInstance>`, :ref:`MultiMesh <class_MultiMesh>` і :ref:"
"`MultiMeshInstance <class_MultiMeshInstance>`. Хоча всі вони пов'язані між "
"собою, у них дещо різне використання."

msgid ""
"Meshes and ArrayMeshes are resources that are drawn using a MeshInstance "
"node. Resources like Meshes and ArrayMeshes cannot be added to the scene "
"directly. A MeshInstance represents one instance of a mesh in your scene. "
"You can reuse a single mesh in multiple MeshInstances to draw it in "
"different parts of your scene with different materials or transformations "
"(scale, rotation, position etc.)."
msgstr ""
"Mesh і ArrayMesh - це ресурси, які малюються за допомогою вузла "
"MeshInstance. Ресурси, такі як Mesh і ArrayMesh, не можуть бути додані до "
"безпосередньо сцени. MeshInstance являє собою один зразок меша у вашій "
"сцені. Ви можете повторно використовувати один меш в декількох MeshInstance, "
"щоб намалювати його в різних частинах вашої сцени з різними матеріалами, або "
"перетвореннями (масштаб, обертання, положення і т. д.)."

msgid ""
"If you are going to draw the same object many times, it can be helpful to "
"use a MultiMesh with a MultiMeshInstance. MultiMeshInstances draw meshes "
"thousands of times very cheaply by taking advantage of hardware instancing. "
"The drawback with using a MultiMeshInstance is that each of your mesh's "
"surfaces are limited to one material for all instances. It uses an instance "
"array to store different colors and transformations for each instance, but "
"all the instances of each surface use the same material."
msgstr ""
"Якщо ви збираєтеся малювати один і той же об'єкт багато разів, може бути "
"корисно використовувати MultiMesh з MultiMeshInstance. Вузли "
"MultiMeshInstance малюють меші тисячі разів з легкістю використовуючи для "
"цього апаратне забезпечення. Недоліком використання MultiMeshInstance є те, "
"що ви обмежені одним матеріалом для всіх екземплярів. Він використовує масив "
"екземплярів для зберігання різних кольорів і перетворень для кожного "
"екземпляра, але всі екземпляри використовують один і той же матеріал."

msgid "What a Mesh is"
msgstr "Чим є Меш"

msgid ""
"A Mesh is composed of one or more surfaces. A surface is an array composed "
"of multiple sub-arrays containing vertices, normals, UVs, etc. Normally the "
"process of constructing surfaces and meshes is hidden from the user in the :"
"ref:`VisualServer <class_VisualServer>`, but with ArrayMeshes, the user can "
"construct a Mesh manually by passing in an array containing the surface "
"information."
msgstr ""
"Меш складається з однієї, або декількох, поверхонь. Поверхня - це масив, що "
"складається з декількох під-масивів, що містять вершини, нормалі, UV, тощо. "
"Зазвичай процес побудови поверхонь і мешів прихований від користувача в :ref:"
"`VisualServer <class_VisualServer>`, але за допомогою ArrayMesh користувач "
"може побудувати Меш вручну, створивши масив, що містить інформацію про "
"поверхню."

msgid "Surfaces"
msgstr "Поверхні"

msgid ""
"Each surface has its own material. Alternatively, you can override the "
"material for all surfaces in the Mesh when you use a MeshInstance using the :"
"ref:`material_override <class_GeometryInstance_property_material_override>` "
"property."
msgstr ""
"Кожна поверхня має свій матеріал. Крім того, ви можете перевизначити "
"матеріал для всіх поверхонь Меша коли використовуєте MeshInstance за "
"допомогою властивості :ref:`material_override "
"<class_GeometryInstance_property_material_override>`."

msgid "Surface array"
msgstr "Масив поверхні"

msgid ""
"The surface array is an array of length ``ArrayMesh.ARRAY_MAX``. Each "
"position in the array is filled with a sub-array containing per-vertex "
"information. For example, the array located at ``ArrayMesh.ARRAY_NORMAL`` is "
"a :ref:`PoolVector3Array <class_PoolVector3Array>` of vertex normals. See :"
"ref:`Mesh.ArrayType <enum_Mesh_ArrayType>` for more information."
msgstr ""
"Масив поверхні являє собою масив довжиною ``ArrayMesh.ARRAY_MAX``. Кожна "
"позиція в масиві заповнюється під-масивом, що містить інформацію про "
"вершину. Наприклад, масив, розташований за адресою ``ArrayMesh."
"ARRAY_NORMAL`` це :ref:`PoolVector3Array <class_PoolVector3Array>` нормалей "
"вершини. Дивіться :ref:`Mesh.ArrayType <enum_Mesh_ArrayType>`, щоб отримати "
"більше інформації."

msgid ""
"The surface array can be indexed or non-indexed. Creating a non-indexed "
"array is as easy as not assigning an array at the index ``ArrayMesh."
"ARRAY_INDEX``. A non-indexed array stores unique vertex information for "
"every triangle, meaning that when two triangles share a vertex, the vertex "
"is duplicated in the array. An indexed surface array only stores vertex "
"information for each unique vertex and then also stores an array of indices "
"which maps out how to construct the triangles from the vertex array. In "
"general, using an indexed array is faster, but it means you have to share "
"vertex data between triangles, which is not always desired (e.g. when you "
"want per-face normals)."
msgstr ""
"Масив поверхні може бути проіндексований, або неіндексований. Створити "
"неіндексований масив так само просто, як не призначити масиву індекс "
"``ArrayMesh.ARRAY_INDEX``. Неіндексований масив зберігає унікальну "
"інформацію про вершину для кожного трикутника, а це означає, що коли два "
"трикутники мають вершину, вершина дублюється в масиві. Індексований масив "
"поверхні зберігає лише інформацію про вершину для кожної унікальної вершини, "
"а потім також зберігає масив індексів, які відображають, як побудувати "
"трикутники з масиву вершин. Загалом, використання індексованого масиву є "
"швидшим, але це означає, що ви повинні ділитися даними вершини між "
"трикутниками, що не завжди бажано (наприклад, коли ви хочете лицьові "
"нормалі)."

msgid "Tools"
msgstr "Інструменти"

msgid ""
"Godot provides different ways of accessing and working with geometry. More "
"information on each will be provided in the following tutorials."
msgstr ""
"Godot надає різні способи доступу та роботи з геометрією. Детальніша "
"інформація про кожен буде висвітлена в наступних уроках."

msgid "ArrayMesh"
msgstr "ArrayMesh"

msgid ""
"The ArrayMesh resource extends Mesh to add a few different quality of life "
"functions and, most importantly, the ability to construct a Mesh surface "
"through scripting."
msgstr ""
"Ресурс ArrayMesh розширює Mesh, щоб додати кілька різної якості функцій, і, "
"найголовніше, можливість побудувати поверхню Mesh за допомогою коду."

msgid ""
"For more information about the ArrayMesh, please see the :ref:`ArrayMesh "
"tutorial <doc_arraymesh>`."
msgstr ""
"Для отримання додаткової інформації про ArrayMesh, будь ласка, перегляньте :"
"ref:`урок про ArrayMesh<doc_arraymesh>`."

msgid "MeshDataTool"
msgstr "MeshDataTool (Інструмент Дані Меша)"

msgid ""
"The MeshDataTool is a resource that converts Mesh data into arrays of "
"vertices, faces, and edges that can be modified at runtime."
msgstr ""
"MeshDataTool - це ресурс, який перетворює дані Меша на масиви вершин, граней "
"і ребр, які можна змінити під час виконання."

msgid ""
"For more information about the MeshDataTool, please see the :ref:"
"`MeshDataTool tutorial <doc_meshdatatool>`."
msgstr ""
"Для отримання додаткової інформації про MeshDataTool, будь ласка, "
"перегляньте :ref:`урок про MeshDataTool <doc_meshdatatool>`."

msgid "SurfaceTool"
msgstr "SurfaceTool (Інструмент Поверхні)"

msgid ""
"The SurfaceTool allows the creation of Meshes using an OpenGL 1.x immediate "
"mode style interface."
msgstr ""
"SurfaceTool дозволяє створювати Меші за допомогою інтерфейсу стилю негайного "
"режиму OpenGL 1.x."

msgid ""
"For more information about the SurfaceTool, please see the :ref:`SurfaceTool "
"tutorial <doc_surfacetool>`."
msgstr ""
"Для отримання додаткової інформації про SurfaceTool, будь ласка, "
"перегляньте :ref:`урок про SurfaceTool <doc_surfacetool>`."

msgid "ImmediateGeometry"
msgstr "ImmediateGeometry (Безпосередня Геометрія)"

msgid ""
"ImmediateGeometry is a node that uses an immediate mode style interface "
"(like SurfaceTool) to draw objects. The difference between ImmediateGeometry "
"and the SurfaceTool is that ImmediateGeometry is a node itself that can be "
"added to the scene tree and is drawn directly from the code, while the "
"SurfaceTool generates a Mesh that needs to be added to a MeshInstance to be "
"seen."
msgstr ""
"ImmediateGeometry — це вузол, який використовує інтерфейс стилю негайного "
"режиму (наприклад, SurfaceTool) для малювання об'єктів. Різниця між "
"ImmediateGeometry і SurfaceTool полягає в тому, що ImmediateGeometry - це "
"вузол, який можна додати до дерева сцени і витягти безпосередньо з коду. "
"SurfaceTool генерує меш, який ще треба додати в MeshInstance, щоб побачити."

msgid ""
"ImmediateGeometry is useful for prototyping because of its straightforward "
"API, but it is slow because the geometry is rebuilt every frame. It is most "
"useful for adding simple geometry for visual debugging (e.g. by drawing "
"lines to visualize physics raycasts etc.)."
msgstr ""
"ImmediateGeometry корисний для створення прототипів завдяки простому API, "
"але він повільний, оскільки геометрія перебудовується в кожному кадрі. Він "
"найбільш корисний для швидкого додавання простої геометрії для налагодження "
"візуальності (наприклад, шляхом малювання ліній для візуалізації фізичних "
"променів тощо)."

msgid ""
"For more information about ImmediateGeometry, please see the :ref:"
"`ImmediateGeometry tutorial <doc_immediategeometry>`."
msgstr ""
"Для отримання додаткової інформації про ImmediateGeometry, будь ласка, "
"перегляньте :ref:`урок про ImmediateGeometry<doc_immediategeometry>`."

msgid "Which one should I use?"
msgstr "Який з них я повинен використовувати?"

msgid ""
"Which approach you use depends on what you are trying to do and what kind of "
"procedure you are comfortable with."
msgstr ""
"Який підхід використовувати, залежить від того, що ви намагаєтеся зробити і "
"який варіант вам зручніший."

msgid ""
"Both SurfaceTool and ArrayMesh are excellent for generating static geometry "
"(meshes) that don't change over time."
msgstr ""
"Як SurfaceTool, так і ArrayMesh, відмінно підходять для генерації статичної "
"геометрії (мешів), які не змінюються з часом."

msgid ""
"Using an ArrayMesh is slightly faster than using a SurfaceTool, but the API "
"is a little more challenging. Additionally, SurfaceTool has a few quality of "
"life methods such as ``generate_normals()`` and ``index()``."
msgstr ""
"Використання ArrayMesh трохи швидше, ніж використання SurfaceTool, але API "
"трохи складніше. Крім того, SurfaceTool має кілька методів якості, таких як "
"``generate_normals()`` і ``index()``."

msgid ""
"ImmediateGeometry regenerates the mesh every frame, so it is much slower "
"than ArrayMesh or SurfaceTool. However, if you need the geometry to change "
"every frame anyway, it provides a much easier interface that may even be a "
"little faster than generating an ArrayMesh every frame."
msgstr ""
"ImmediateGeometry регенерує меш кожен кадр, тому набагато повільніший, за "
"ArrayMesh, або SurfaceTool. Однак, якщо вам потрібна геометрія, яка "
"змінюється кожен кадр, цей спосіб забезпечує набагато простіший інтерфейс, "
"який може бути навіть трохи швидшим, ніж генерування ArrayMesh-а кожного "
"кадру."

msgid ""
"The MeshDataTool is not fast, but it gives you access to all kinds of "
"properties of the mesh that you don't get with the others (edges, faces, "
"etc.). It is incredibly useful when you need that sort of data to transform "
"the mesh, but it is not a good idea to use it if that extra information is "
"not needed. The MeshDataTool is best used if you are going to be using an "
"algorithm that requires access to the face or edge array."
msgstr ""
"MeshDataTool не швидкий, але він дає вам доступ до всіх видів властивостей "
"меша, які ви не отримуєте з іншими (ребра, грані тощо). Це неймовірно "
"корисно, коли вам потрібні такі дані для перетворення меша, але не варто "
"використовувати його, якщо ця інформація не потрібна. MeshDataTool найкраще "
"використовувати, якщо ви збираєтеся використовувати алгоритм, який вимагає "
"доступу до масиву граней та ребр."

msgid "Translation status"
msgstr "Стан перекладу"
