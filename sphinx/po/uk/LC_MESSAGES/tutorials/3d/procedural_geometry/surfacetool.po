# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the SurfaceTool"
msgstr "Використання SurfaceTool"

msgid ""
"The :ref:`SurfaceTool <class_surfacetool>` provides a useful interface for "
"constructing geometry. The interface is similar to the :ref:"
"`ImmediateGeometry <class_immediategeometry>` node. You set each per-vertex "
"attribute (e.g. normal, uv, color) and then when you add a vertex it "
"captures the attributes."
msgstr ""
":ref:`SurfaceTool <class_surfacetool>`— це зручний інструмент для побудови "
"геометрії. Принцип роботи з ним схожий до такого в :ref:`ImmediateGeometry "
"<class_immediategeometry>`. Ви задаєте властивості кожної вершини (нормаль, "
"текстурні координати, колір) по черзі і потім додана вершина вибере свої "
"атрибути серед заданих раніше."

msgid ""
"The SurfaceTool also provides some useful helper functions like ``index()`` "
"and ``generate_normals()``."
msgstr ""
"SurfaceTool також має такі корисні функції як ``index()`` (використовувати "
"індекс вершин) і ``generate_normals()`` (автоматично задати нормалі)."

msgid "Attributes are added before each vertex is added:"
msgstr "Атрибути потрібно додавати перед тим як додавати вершину:"

msgid ""
"When finished generating your geometry with the :ref:`SurfaceTool "
"<class_surfacetool>` call ``commit()`` to finish generating the mesh. If an :"
"ref:`ArrayMesh <class_ArrayMesh>` is passed to ``commit()`` then it appends "
"a new surface to the end of the ArrayMesh. While if nothing is passed in, "
"``commit()`` returns an ArrayMesh."
msgstr ""
"Коли закінчите задавати геометрію в :ref:`SurfaceTool <class_surfacetool>`, "
"викличіть функцію ``commit()`` щоб завершити побудову меша. Якщо до функції "
"``commit()`` передати :ref:`ArrayMesh <class_ArrayMesh>` то раніше створена "
"геометрія буде додана до ArrayMesh в кінець списку. Якщо ж до функції нічого "
"не передати, то вона сама поверне ArrayMesh."

msgid "Code creates a triangle with indices"
msgstr "Цей код побудує трикутник з індексами"

msgid ""
"You can optionally add an index array, either by calling ``add_index()`` and "
"adding vertices to the index array or by calling ``index()`` which shrinks "
"the vertex array to remove duplicate vertices."
msgstr ""
"Ви можете додати індекси або викликавши метод ``add_index()`` та вручну "
"додавши вершини до списку індексів, або викликавши ``index()``, який прибере "
"зі списку вершин вершини що повторюються."

msgid ""
"Similarly, if you have an index array, but you want each vertex to be unique "
"(e.g. because you want to use unique normals or colors per face instead of "
"per-vertex), you can call ``deindex()``."
msgstr ""
"Схожим чином, якщо у вас є список індексів вершин, але ви хочете щоб вершини "
"кожного трикутника була окремими (бо ви хочете задавати нормалі та колір "
"трикутникам а не вершинам), то ви можете використати ``deindex()``."

msgid ""
"If you don't add custom normals yourself, you can add them using "
"``generate_normals()``, which should be called after generating geometry and "
"before committing the mesh using ``commit()`` or ``commit_to_arrays()``. "
"Calling ``generate_normals(true)`` will flip the resulting normals. As a "
"side note, ``generate_normals()`` only works if the primitive type is set to "
"``Mesh.PRIMITIVE_TRIANGLES``."
msgstr ""
"Якщо ви не додали нормалей самостійно, то ви можете зробити це з функцією "
"``generate_normals()``, яка повинна викликатись після того як геометрія була "
"створена, але ще не записана до об'єкта функціями ``commit()`` чи "
"``commit_to_arrays()``. Виклик ``generate_normals(true)`` виверне нормалі "
"навиворіт. Між іншим, ``generate_normals()`` працює лише тоді, коли тип "
"геометрії заданий як ``Mesh.PRIMITIVE_TRIANGLES``."

msgid ""
"You may notice that normal mapping or other material properties look broken "
"on the generated mesh. This is because normal mapping **requires** the mesh "
"to feature *tangents*, which are separate from *normals*. You can either add "
"custom tangents manually, or generate them automatically with with "
"``generate_tangents()``. This method requires that each vertex have UVs and "
"normals set already."
msgstr ""
"Ви можете помітити, що відображення нормалей або інші властивості матеріалу "
"на згенерованому меші виглядають з порушеннями. Це пов'язано з тим, що для "
"відображення нормалей меша **потрібні** особливі *дотичні*, які відокремлені "
"від *нормалей*. Ви можете додати власні дотичні вручну, або згенерувати їх "
"автоматично за допомогою ``generate_tangents()``. Цей метод вимагає, щоб "
"кожна вершина мала вже встановлені UV і нормалі."

msgid ""
"By default, when generating normals, they will be calculated on a per-face "
"basis. If you want smooth vertex normals, when adding vertices, call "
"``add_smooth_group()``. ``add_smooth_group()`` needs to be called while "
"building the geometry, e.g. before the call to ``add_vertex()`` (if non-"
"indexed) or ``add_index()`` (if indexed)."
msgstr ""
"Типово, нормалі обчислюються окремо для кожного трикутника окремо. Якщо ж ви "
"хочете щоб ваша поверхня була гладенькою, перед тим як додавати вершини до "
"неї, викличіть ``add_smooth_group()``. Функцію потрібно застосовувати не "
"пізніше виклику ``add_vertex()`` (для не індексованої геометрії) або "
"``add_index()`` (для індексованої)."

msgid "Translation status"
msgstr "Стан перекладу"
