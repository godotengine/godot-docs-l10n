# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D rendering limitations"
msgstr "Обмеження 3D відображення"

msgid ""
"In addition to the limitations below, mobile platforms have even more "
"limitations on 3D rendering compared to desktop platforms. See :ref:"
"`doc_mobile_rendering_limitations` for more information."
msgstr ""
"На додаток до обмежень нижче, мобільні платформи мають ще більше обмежень на "
"3D-рендеринг у порівнянні з настільними платформами. Докладніше про це можна "
"дізнатися з :ref:`doc_mobile_rendering_limitations`."

msgid "Introduction"
msgstr "Вступ"

msgid ""
"Due to their focus on performance, real-time rendering engines have many "
"limitations. Godot's renderer is no exception. To work effectively with "
"those limitations, you need to understand them."
msgstr ""
"Візуалізатор Godot, як і інші графічні рушії, що працюють в реальному часі, "
"має багато обмежень у зв'язку з тим, що він орієнтований на швидкість. Для "
"того, щоб ефективно працювати з цими обмеженнями, необхідно знати про них."

msgid "Texture size limits"
msgstr "Межі розміру текстури"

msgid ""
"On desktops and laptops, textures larger than 8192×8192 may not be supported "
"on older devices. You can check your target GPU's limitations on `GPUinfo."
"org <https://www.gpuinfo.org/>`__."
msgstr ""
"Більш старі ПК та ноутбуки можуть не підтримувати текстури більші ніж "
"8192×8192. Ви можете перевірити свій графічний процесор на `GPUinfo.org "
"<https://www.gpuinfo.org/>`__."

msgid ""
"Mobile GPUs are typically limited to 4096×4096 textures. Also, some mobile "
"GPUs don't support repeating non-power-of-two-sized textures. Therefore, if "
"you want your texture to display correctly on all platforms, you should "
"avoid using textures larger than 4096×4096 and use a power of two size if "
"the texture needs to repeat."
msgstr ""
"Мобільні ГП зазвичай обмежують розмір текстур до 4096×4096. Окрім цього, "
"деякі мобільні ГП не підтримують повторення текстур, розмір яких не є "
"степенем двійки. Тому, якщо ви хочете, щоб ваша текстура правильно "
"відображалась на всіх платформах то вам варто уникати текстур більших ніж "
"4096×4096 чи таких що мають розмір не степені двійки, якщо текстуру потрібно "
"повторювати."

msgid "Color banding"
msgstr "Розшарування кольорів"

msgid ""
"When using the GLES3 or Vulkan renderers, Godot's 3D engine renders "
"internally in HDR. However, the rendering output will be tonemapped to a low "
"dynamic range so it can be displayed on the screen. This can result in "
"visible banding, especially when using untextured materials. This can also "
"be seen in 2D projects when using smooth gradient textures."
msgstr ""
"Коли Godot використовує GLES3 чи Vulkan для відображення, то всередині він "
"використовує HDR. Але, при відображенні на фізичному екрані, отримане "
"зображення буде переведене в нижчий динамічний діяпазон. Через це, кольори "
"можуть розділитись на шари, особливо це помітно при використанні не "
"текстурованих матеріялів. Таке також може трапитись у 2D проєкті, коли в "
"ньому використовуються текстури із гладкими градієнтами."

msgid "There are two main ways to alleviate banding:"
msgstr "Побороти розшарування можна двома способами:"

msgid ""
"Enable **Use Debanding** in the Project Settings. This applies a fullscreen "
"debanding shader as a post-processing effect and is very cheap. Fullscreen "
"debanding is only supported when using the GLES3 or Vulkan renderers. It "
"also requires HDR to be enabled in the Project Settings (which is the "
"default)."
msgstr ""
"Увімкнути **Use Debanding** в налаштуваннях проєкту. Цим ви застосуєте "
"шейдер розвишаровування до усього екрану. Між іншим, цей спосіб майже не "
"навантажує систему. Повноекранне розвишаровування працює лише тоді, коли "
"використовується GLES3 чи Vulkan. А ще воно потребує увімкненого HDR в "
"налаштуваннях проєкту (воно і так увімкнене за замовчуванням)."

msgid ""
"Alternatively, bake some noise into your textures. This is mainly effective "
"in 2D, e.g. for vignetting effects. In 3D, you can also use a `custom "
"debanding shader <https://github.com/fractilegames/godot-gles2-debanding-"
"material>`__ to be applied on your *materials*. This technique works even if "
"your project is rendered in LDR, which means it will work when using the "
"GLES2 renderer."
msgstr ""
"Інакше, додайте шуму до ваших текстур. Найбільше користі це приносить в 2D, "
"як-от для віньєтування. Натомість в 3D ви можете додати до ваших "
"*матеріялів* `саморобний шейдер розвишаровування <https://github.com/"
"fractilegames/godot-gles2-debanding-material>`__. Цей підхід працює навіть "
"якщо ваш проєкт відображається в LDR, а значить він працюватиме і при "
"візуалізаторі GLES2."

msgid ""
"See `Banding in Games: A Noisy Rant <http://loopit.dk/banding_in_games."
"pdf>`__ for more details about banding and ways to combat it."
msgstr ""
"Почитайте `Banding in Games: A Noisy Rant <http://loopit.dk/banding_in_games."
"pdf>`__ щоб дізнатись більше про деталі розшарування а також про те, як з "
"ним боротися."

msgid "Depth buffer precision"
msgstr "Точність буфера глибини"

msgid ""
"To sort objects in 3D space, rendering engines rely on a *depth buffer* "
"(also called *Z-buffer*). This buffer has a finite precision: 24-bit on "
"desktop platforms, sometimes 16-bit on mobile platforms (for performance "
"reasons). If two different objects end up on the same buffer value, then Z-"
"fighting will occur. This will materialize as textures flickering back and "
"forth as the camera moves or rotates."
msgstr ""
"Візуалізатори використовують буфер глибини (який іноді називають *Z-буфер*) "
"щоб відсортувати об'єкти в тривимірному просторі. Цей буфер має обмежену "
"точність: 24 біти на комп'ютерах та 16 біт на мобільних пристроях (це "
"питання продуктивности). Якщо два об'єкти мають однакове значення в буфері, "
"то відбудеться конфлікт між ними. Виглядає це як постійне мерехтіння текстур "
"взад-перед коли камера рухається чи обертається."

msgid ""
"To make the depth buffer more precise over the rendered area, you should "
"*increase* the Camera node's **Near** property. However, be careful: if you "
"set it too high, players will be able to see through nearby geometry. You "
"should also *decrease* the Camera node's **Far** property to the lowest "
"permissible value for your use case, though keep in mind it won't impact "
"precision as much as the **Near** property."
msgstr ""
"Щоби буфер точніше працював з областю, що відображається, варто збільшити "
"параметр вузла камери **Near** (ближня межа). Але будьте обережні: якщо "
"задати надто високе значення, гравець може почати дивитись крізь ближні "
"об'єкти. Також варто зменшити параметр камери **Far** (дальня межа) "
"наскільки це можливо. Проте пам'ятайте, що він не так сильно впливає на "
"точність як „**Near**“."

msgid ""
"If you only need high precision when the player can see far away, you could "
"change it dynamically based on the game conditions. For instance, if the "
"player enters an airplane, the **Near** property can be temporarily "
"increased to avoid Z-fighting in the distance. It can then be decreased once "
"the player leaves the airplane."
msgstr ""
"Якщо вам потрібна висока точність лише коли гравець дивиться в далечінь, то "
"ви можете змінювати її на ходу, залежно від ситуації. Для прикладу, якщо "
"гравець сідає в літак, то параметр **Near** можна збільшити щоб уникнути "
"конфліктів за Z-буфер на відстані. Значення можна зменшити щойно гравець "
"покине літак."

msgid ""
"Depending on the scene and viewing conditions, you may also be able to move "
"the Z-fighting objects further apart without the difference being visible to "
"the player."
msgstr ""
"Залежно від сцени та умов, у вас може бути можливість просто розсунути "
"конфліктні об'єкти один від одного без суттєвого впливу на вигляд сцени."

msgid "Transparency sorting"
msgstr "Перебір по прозорості"

msgid ""
"In Godot, transparent materials are drawn after opaque materials. "
"Transparent objects are sorted back to front before being drawn based on the "
"Spatial's position, not the vertex position in world space. Due to this, "
"overlapping objects may often be sorted out of order. To fix improperly "
"sorted objects, tweak the material's :ref:`Render Priority "
"<class_Material_property_render_priority>` property. This will force "
"specific materials to appear in front or behind of other transparent "
"materials. Even then, this may not always be sufficient."
msgstr ""
"В Godot, прозорі матеріали малюються після непрозорих. Прозорі об'єкти перед "
"вимальовуванням сортуються від заднього до переднього на основі їх позицій у "
"Просторі, а не за розміщенням кожної окремої вершини. Через це, об'єкти, що "
"перетинаються, іноді сортуються не по-порядку. Щоб виправити неправильно "
"впорядковані об'єкти, змініть властивість матеріалу :ref:`Render Priority "
"<class_Material_property_render_priority>`. Це змусить конкретні матеріали "
"з'являтись за, або перед, іншими прозорими матеріалами. Але навіть цього "
"може виявитись недостатньо."

msgid ""
"Some rendering engines feature *order-independent transparency* techniques "
"to alleviate this, but this is costly on the GPU. Godot currently doesn't "
"provide this feature. There are still several ways to avoid this problem:"
msgstr ""
"Деякі візуалізатори мають змогу побороти це використовуючи *порядко-"
"незалежну прозорість*, але вона сильно навантажує відеоприскорювач. На даний "
"момент, Godot не має таких можливостей. Але у вас є декілька шляхів "
"уникнення проблеми:"

msgid ""
"Only make materials transparent if you actually need it. If a material only "
"has a small transparent part, consider splitting it into a separate "
"material. This will allow the opaque part to cast shadows and may also "
"improve performance."
msgstr ""
"Робити матеріяли прозорими лише за необхідності. Якщо лише маленька чатинка "
"об'єкта має бути прозорою, розбийте його матеріял надвоє. Тоді у вас "
"повиситься продуктивність програми а непрозора частина зможе відкидати тінь."

msgid ""
"If your texture mostly has fully opaque and fully transparent areas, you can "
"use alpha testing instead of alpha blending. This transparency mode is "
"faster to render and doesn't suffer from transparency issues. Enable "
"**Parameters > Use Alpha Scissor** in SpatialMaterial, and adjust **Alpha "
"Scissor Threshold** accordingly if needed. Note that MSAA will not anti-"
"alias the texture's edges, but FXAA will."
msgstr ""
"Якщо ваша текстура в основному має повністю непрозорі та повністю прозорі "
"області, ви можете використовувати альфа-тестування замість альфа-"
"змішування. Цей режим прозорості швидше вимальовується і не має проблем з "
"прозорістю. Увімкніть **Parameters > Use Alpha Scissor** *(Параметри > "
"Використовувати Альфа Ножиці)* в SpatialMaterial *(Просторовому Матеріалі)*, "
"і налаштуйте поріг **Alpha Scissor Threshold**, як треба. Зауважте, що MSAA "
"не буде згладжувати краї текстури, але FXAA це зробить."

msgid ""
"If you need to render semi-transparent areas of the texture, alpha scissor "
"isn't suitable. Instead, setting the SpatialMaterial's **Parameters > Depth "
"Draw Mode** property to **Opaque Pre-Pass** can sometimes work (at a "
"performance cost)."
msgstr ""
"Якщо вам потрібно відтворити напівпрозорі ділянки текстури, альфа-ножиці не "
"підходять. Натомість в SpatialMaterial встановіть властивість **Parameters > "
"Depth Draw Mode** на **Opaque Pre-Pass**, це може спрацювати (але "
"позначиться на продуктивності)."

msgid ""
"If you want a material to fade with distance, use the SpatialMaterial "
"distance fade mode **Pixel Dither** or **Object Dither** instead of "
"**PixelAlpha**. This will make the material opaque. This way, it can also "
"cast shadows."
msgstr ""
"Якщо ви хочете, щоб об'єкт розчинявся при віддалені, використайте один з "
"режимів розчинення на відстані матеріялу SpatialMaterial: **Pixel Dither** "
"чи **Object Dither** замість **PixelAlpha**. Тоді об'єкт буде непрозорим і "
"зможе відкидати тінь."

msgid "Multi-sample antialiasing"
msgstr "Багатовибіркове згладжування"

msgid ""
"Multi-sample antialiasing (MSAA) takes multiple *coverage* samples at the "
"edges of polygons when rendering objects. It does not increase the number of "
"*color* samples used to render a scene. Here's what this means in practice:"
msgstr ""
"Багатовибіркове зглажування (MSAA) бере декілька наборів *покривають* "
"пікселів на ребрах полігонів коли об'єкти відображаються. Воно не збільшує "
"кількости *кольорових* пікселів що використані у сцені. Що це значить на "
"практиці:"

msgid ""
"Edges of meshes will be smoothed out nicely (as well as supersampling would)."
msgstr ""
"Ребра геометричних фігур будуть гладенькими (такими ж, якими вони були б при "
"перевибірковому згладжуванні)."

msgid ""
"Transparent materials that use *alpha testing* (1-bit transparency) won't be "
"smoothed out."
msgstr ""
"Прозорі матеріяли, що використовують *alpha testing* (однобітну прозорість) "
"не будуть згладжуватись."

msgid ""
"Specular aliasing (\"sparkles\" that appear on reflective surfaces) won't be "
"reduced."
msgstr "Відблиски на блискучих поверхнях не будуть згладжуватись."

msgid ""
"There are several ways to work around this limitation depending on your "
"performance budget:"
msgstr ""
"Залежно від величини продуктивності, якою ви можете пожертвувати, ви можете "
"обійти вищезгадані обмеження таким чином:"

msgid ""
"To make specular aliasing less noticeable, open the Project Settings and "
"enable **Rendering > Quality > Screen Space Filters > Screen Space Roughness "
"Limiter**. This filter has a moderate cost on performance. It should be "
"enabled only if you actually need it."
msgstr ""
"Щоб зробити зубчатість відблиску менш помітною, відкрийте налаштування "
"проєкту та увімкніть **Rendering > Quality > Screen Space Filters > Screen "
"Space Roughness Limiter**. Цей фільтр має середнє навантаження на систему. "
"Вмикайте його лише коли це справді необхідно."

msgid ""
"Enable FXAA in addition to (or instead of) MSAA. Since FXAA is a screen-"
"space antialiasing method, it will smooth out anything. As a downside, it "
"will also make the scene appear blurrier, especially at resolutions below "
"1440p."
msgstr ""
"Увімкніть FXAA на додачу до (чи замість) MSAA. Так як FXAA — згладжує "
"зображення на екрані, то він може згладити будь-що. Його недолік — вся сцена "
"стане розмитою, особливо при роздільній здатності менше 1440p."

msgid ""
"Render the scene at a higher resolution, then display it in a "
"ViewportTexture that matches the window size. Make sure to enable **Filter** "
"on the ViewportTexture flags. This technique is called *supersampling* and "
"is very slow. Its use is generally only recommended for offline rendering."
msgstr ""
"Відобразіть сцену при вищій роз. здатності, а потім відобразіть її на "
"оглядовій текстурі (ViewportTexture) розміром з екран вікна. Переконайтесь, "
"що у неї увімкнена опція **Filter** . Такий підхід називають *перевибіркою* "
"(supersampling) й він дуже повільний. Зазвичай, він використовується для "
"статичного відображення зображень."

msgid "Translation status"
msgstr "Стан перекладу"
