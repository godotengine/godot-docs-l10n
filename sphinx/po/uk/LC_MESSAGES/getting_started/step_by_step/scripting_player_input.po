# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Listening to player input"
msgstr "Обробка вводу гравця"

msgid ""
"Building upon the previous lesson :ref:`doc_scripting_first_script`, let's "
"look at another important feature of any game: giving control to the player. "
"To add this, we need to modify our ``Sprite.gd`` code."
msgstr ""
"Спираючись на попередній урок :ref:`doc_scripting_first_script`, давайте "
"розглянемо ще одну важливу особливість будь-якої гри: надання контролю "
"гравцеві. Щоб зробити це, нам потрібно змінити наш код ``Sprite.gd``."

msgid "You have two main tools to process the player's input in Godot:"
msgstr ""
"У вас є два основних інструменти для обробки введення команд гравця в Godot:"

msgid ""
"The built-in input callbacks, mainly ``_unhandled_input()``. Like "
"``_process()``, it's a built-in virtual function that Godot calls every time "
"the player presses a key. It's the tool you want to use to react to events "
"that don't happen every frame, like pressing :kbd:`Space` to jump. To learn "
"more about input callbacks, see :ref:`doc_inputevent`."
msgstr ""
"Вбудовані зворотні виклики введення, в основному ``_unhandled_input()``. Як "
"і ``_process()``, це вбудовані віртуальні функції, які Godot викликає "
"щоразу, коли гравець натискає клавішу. Це інструмент, який ви можете "
"використовувати, щоб реагувати на події, які відбуваються не кожен кадр, а "
"наприклад при натисканні :kbd:`Space` для здійснення стрибка. Щоб дізнатися "
"більше про зворотні виклики введення, див. :ref:`doc_inputevent`."

msgid ""
"The ``Input`` singleton. A singleton is a globally accessible object. Godot "
"provides access to several in scripts. It's the right tool to check for "
"input every frame."
msgstr ""
"Синглтон ``Input``. Синглтон є глобально доступний об’єкт. Godot надає "
"доступ до кількох синглтонів у скриптах. Це правильний інструмент для "
"перевірки введення кожного кадру."

msgid ""
"We're going to use the ``Input`` singleton here as we need to know if the "
"player wants to turn or move every frame."
msgstr ""
"Тут ми будемо використовувати синглтон ``Input``, оскільки нам потрібно "
"знати, чи хоче гравець повернути чи перемістити кожен кадр."

msgid ""
"For turning, we should use a new variable: ``direction``. In our "
"``_process()`` function, replace the ``rotation += angular_speed * delta`` "
"line with the code below."
msgstr ""
"Для повороту ми повинні використовувати нову змінну: ``direction``. Оновіть "
"функцію ``_process()``, замініть рядок ``rotation += angular_speed * delta`` "
"на наведений нижче код."

msgid ""
"Our ``direction`` local variable is a multiplier representing the direction "
"in which the player wants to turn. A value of ``0`` means the player isn't "
"pressing the left or the right arrow key. A value of ``1`` means the player "
"wants to turn right, and ``-1`` means they want to turn left."
msgstr ""
"Наша локальна змінна ``direction`` є множником, що представляє напрямок, у "
"якому гравець хоче повернутись. Значення ``0`` означає, що гравець не "
"натискав клавіші зі стрілкою вліво або вправо. Значення ``1`` означає, що "
"гравець хоче повернути праворуч, а ``-1`` означає, що він хоче повернути "
"ліворуч."

msgid ""
"To produce these values, we introduce conditions and the use of ``Input``. A "
"condition starts with the ``if`` keyword in GDScript and ends with a colon. "
"The condition is the expression between the keyword and the end of the line."
msgstr ""
"Щоб отримати ці значення, ми вводимо умови та використовуємо ``Input``. "
"Умова починається з ключового слова ``if`` в GDScript і закінчується "
"двокрапкою. Умова — це вираз між ключовим словом і кінцем рядка."

msgid ""
"To check if a key was pressed this frame, we call ``Input."
"is_action_pressed()``. The method takes a text string representing an input "
"action and returns ``true`` if the action is pressed, ``false`` otherwise."
msgstr ""
"Щоб перевірити, чи була натиснута клавіша в цьому кадрі, ми викликаємо "
"``Input.is_action_pressed()``. Метод приймає текстовий рядок, що представляє "
"елемент введення, і повертає ``true``, якщо елемент натиснуто, або ``false`` "
"в іншому випадку."

msgid ""
"The two actions we use above, \"ui_left\" and \"ui_right\", are predefined "
"in every Godot project. They respectively trigger when the player presses "
"the left and right arrows on the keyboard or left and right on a gamepad's D-"
"pad."
msgstr ""
"Дві дії, які ми використовуємо вище, \"ui_left\" і \"ui_right\", попередньо "
"визначені в кожному проекті Godot. Вони відповідно спрацьовують, коли "
"гравець натискає стрілки ліворуч і праворуч на клавіатурі або ліворуч і "
"праворуч на D-паді геймпада."

msgid ""
"You can see and edit input actions in your project by going to Project -> "
"Project Settings and clicking on the Input Map tab."
msgstr ""
"Ви можете переглядати та редагувати дії введення у своєму проекті, "
"перейшовши в Проект -> Параметри проекту та натиснувши вкладку Карта "
"введення."

msgid ""
"Finally, we use the ``direction`` as a multiplier when we update the node's "
"``rotation``: ``rotation += angular_speed * direction * delta``."
msgstr ""
"Нарешті ми використовуємо ``direction``, як множник коли ми оновлюємо на "
"``rotation`` вузла: ``rotation += angular_speed * direction * delta``."

msgid ""
"If you run the scene with this code, the icon should rotate when you press :"
"kbd:`Left` and :kbd:`Right`."
msgstr ""
"Якщо ви запустите сцену з цим кодом, іконка зможе повертатися коли ви "
"тиснете :kbd:`Left` та :kbd:`Right`."

msgid "Moving when pressing \"up\""
msgstr "Рух при натисканні \"up\""

msgid ""
"To only move when pressing a key, we need to modify the code that calculates "
"the velocity. Replace the line starting with ``var velocity`` with the code "
"below."
msgstr ""
"Щоб рухатися лише при натисканні клавіші, нам потрібно змінити код, який "
"обчислює швидкість. Замініть рядок, що починається з ``var velocity`` на код "
"нижче."

msgid ""
"We initialize the ``velocity`` with a value of ``Vector2.ZERO``, another "
"constant of the built-in ``Vector`` type representing a 2D vector of length "
"0."
msgstr ""
"Ми ініціалізуємо ``velocity`` значенням ``Vector2.ZERO``, іншою константою "
"вбудованого типу ``Vector``, що представляє двовимірний вектор довжини 0."

msgid ""
"If the player presses the \"ui_up\" action, we then update the velocity's "
"value, causing the sprite to move forward."
msgstr ""
"Якщо гравець натискає дію \"ui_up\", ми оновлюємо значення швидкості, "
"змушуючи спрайт рухатися вперед."

msgid "Complete script"
msgstr "Завершений скрипт"

msgid "Here is the complete ``Sprite.gd`` file for reference."
msgstr "Ось повний файл ``Sprite.gd`` для порівняння."

msgid ""
"If you run the scene, you should now be able to rotate with the left and "
"right arrow keys and move forward by pressing :kbd:`Up`."
msgstr ""
"Якщо ви запустите сцену, то тепер зможете обертатися за допомогою клавіш зі "
"стрілками ліворуч і праворуч і рухатися вперед, натискаючи :kbd:`Up`."

msgid "Summary"
msgstr "Підсумок"

msgid ""
"In summary, every script in Godot represents a class and extends one of the "
"engine's built-in classes. The node types your classes inherit from give you "
"access to properties like ``rotation`` and ``position`` in our sprite's "
"case. You also inherit many functions, which we didn't get to use in this "
"example."
msgstr ""
"Підсумовуючи, кожен скрипт у Godot представляє клас і розширює один із "
"вбудованих класів рушія. Типи вузлів, від яких успадковують ваші класи, "
"надають вам доступ до таких властивостей, як ``rotation`` та ``position`` у "
"випадку нашого спрайта. Ви також успадковуєте багато функцій, які нам не "
"вдалося використати в цьому прикладі."

msgid ""
"In GDScript, the variables you put at the top of the file are your class's "
"properties, also called member variables. Besides variables, you can define "
"functions, which, for the most part, will be your classes' methods."
msgstr ""
"У GDScript змінні, які ви розміщуєте у верхній частині файлу, є "
"властивостями вашого класу, які також називаються змінними-членами. Крім "
"змінних, ви можете визначити функції, які, здебільшого, будуть методами "
"ваших класів."

msgid ""
"Godot provides several virtual functions you can define to connect your "
"class with the engine. These include ``_process()``, to apply changes to the "
"node every frame, and ``_unhandled_input()``, to receive input events like "
"key and button presses from the users. There are quite a few more."
msgstr ""
"Godot надає кілька віртуальних функцій, які ви можете визначити, щоб "
"підключити ваш клас до рушія. Вони включають ``_process()``, щоб "
"застосовувати зміни до вузла в кожному кадрі, і ``_unhandled_input()``, щоб "
"отримувати події введення, як-от натискання клавіш і кнопок від "
"користувачів. Є ще чимало інших."

msgid ""
"The ``Input`` singleton allows you to react to the players' input anywhere "
"in your code. In particular, you'll get to use it in the ``_process()`` loop."
msgstr ""
"Синглтон ``Input`` дозволяє вам реагувати на введення гравців у будь-якому "
"місці вашого коду. Зокрема, ви зможете використовувати його в циклі "
"``_process()``."

msgid ""
"In the next lesson :ref:`doc_signals`, we'll build upon the relationship "
"between scripts and nodes by having our nodes trigger code in scripts."
msgstr ""
"У наступному уроці, :ref:`doc_signals`,ми розглянемо зв’язок між скриптами "
"та вузлами, запропонувавши нашим вузлам ініціювати код у скриптах."

msgid "Translation status"
msgstr "Стан перекладу"
