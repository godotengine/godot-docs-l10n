# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The main game scene"
msgstr "Головна сцена гри"

msgid ""
"Now it's time to bring everything we did together into a playable game scene."
msgstr "Тепер настав час об'єднати все, що ми зробили, разом, в ігрову сцену."

msgid ""
"Create a new scene and add a :ref:`Node <class_Node>` named ``Main``. (The "
"reason we are using Node instead of Node2D is because this node will be a "
"container for handling game logic. It does not require 2D functionality "
"itself.)"
msgstr ""
"Створіть нову сцену та додайте :ref:`Node <class_Node>`*(Вузол)* з ім'ям "
"``Main``. (Ми використовуємо Node, а не Node2D, тому що саме цей вузол буде "
"контейнером для обробки логіки гри. Він не вимагає 2D-функціональності.)"

msgid ""
"Click the **Instance** button (represented by a chain link icon) and select "
"your saved ``Player.tscn``."
msgstr ""
"Клацніть кнопку **Створити екземпляр дочірньої сцени** (іконка ланцюжка) і "
"виберіть збережений ``Player.tscn``."

msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"Тепер додайте ``Main`` наступні вузли-нащадки та назвіть їх як показано "
"(значення в секундах):"

msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (названий ``MobTimer``) - щоб контролювати, як "
"часто виникають моби"

msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (названий ``ScoreTimer``) - збільшуватиме рахунок "
"щосекунди"

msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (названий ``StartTimer``) - щоб дати затримку "
"перед запуском"

msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (названий ``StartPosition``) - для "
"визначення стартової позиції гравця"

msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr ""
"Встановіть властивість ``Wait Time`` кожного з вузлів ``Timer`` наступним "
"чином:"

msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"Крім того, встановіть властивість ``One Shot`` *(одна спроба)* в "
"``StartTimer`` на \"включено\" і задайте ``Position`` *(позиція)* в "
"``StartPosition`` на ``(240, 450)``."

msgid "Spawning mobs"
msgstr "Поява мобів"

msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"Головний вузол породжує нових мобів, і ми хочемо, щоб вони з’являлись у "
"випадковому місці на краю екрана. Додайте вузол :ref:`Path2D <class_Path2D>` "
"(Шлях 2D), нащадком ``Main`` і назвіть ``MobPath``. Вибравши ``Path2D``, ви "
"побачите нові кнопки вгорі редактора:"

msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Use Grid Snap\" and \"Use Snap\" are both selected. These options can "
"be found to the left of the \"Lock\" button, appearing as a magnet next to "
"some dots and intersecting lines, respectively."
msgstr ""
"Виберіть середню (\"Додати точку\") та намалюйте шлях, клацнувши, щоб додати "
"точки у вказаних кутах. Щоб точки прикріпилися до сітки (ґратки), "
"переконайтеся, що опції \"Використати до ґратки\" та \"Використати "
"прив'язку\", обидві включені. Ці опції можна знайти зліва від кнопки "
"«Блокування», виглядає як магніт з кількома лініями, що перетинаються."

msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"Малюйте доріжку *за годинниковою стрілкою* , інакше ваші моби будуть "
"виникати спрямовані *назовні*, а не *всередину*!"

msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"Після розміщення четвертої точки на зображенні натисніть кнопку \"Закрити "
"криву\", і ваша крива буде завершена."

msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"Тепер, коли шлях визначений, додайте вузол :ref:`PathFollow2D "
"<class_PathFollow2D>` (слідувати за шляхом 2D) нащадком ``MobPath`` та "
"назвіть його ``MobSpawnLocation``. Цей вузол автоматично обертатиметься та "
"рухатиметься по шляху, тому ми можемо використовувати його для вибору "
"випадкової позиції та напрямку вздовж шляху."

msgid "Your scene should look like this:"
msgstr "Ваше сцена має виглядати так:"

msgid "Main script"
msgstr "Головний скрипт"

msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"Додайте скрипт до вузла ``Main``. У верхній частині скрипту ми "
"використовуємо ``export (PackedScene)``, щоб ми могли вибрати сцену ``Mob``, "
"екземпляр якої ми хочемо створити."

msgid ""
"We also add a call to ``randomize()`` here so that the random number "
"generator generates different random numbers each time the game is run:"
msgstr ""
"Ми також додаємо сюди виклик ``randomize()``, щоб генератор випадкових чисел "
"генерував різні випадкові числа кожного разу під час запуску гри:"

msgid ""
"Click the ``Main`` node and you will see the ``Mob Scene`` property in the "
"Inspector under \"Script Variables\"."
msgstr ""
"Виберіть вузол ``Main`` і побачите в Інспекторі під \"Script Variables\" "
"*(Властивості скрипта)* властивість ``Mob Scene``."

msgid "You can assign this property's value in two ways:"
msgstr "Ви можете змінити значення цієї властивості двома шляхами:"

msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" dock and drop it in the **Mob "
"Scene** property."
msgstr ""
"Перетягнути ``Mob.tscn`` з панелі \"Файлова система\" у властивість ``Mob "
"Scene``."

msgid ""
"Click the down arrow next to \"[empty]\" and choose \"Load\". Select ``Mob."
"tscn``."
msgstr ""
"Клацнути стрілочку вниз поряд з \"[empty]\"(пусто) і вибрати "
"\"Load\" (Завантажити). Виберіть ``Mob.tscn``."

msgid ""
"Next, select the ``Player`` node in the Scene dock, and access the Node dock "
"on the sidebar. Make sure to have the Signals tab selected in the Node dock."
msgstr ""
"Далі виберіть вузол ``Player`` на вкладці Сцена і виберіть вкладку "
"\"Вузол\". Переконайтесь, що на вкладці \"Вузол\" вибрано \"Сигнали\"."

msgid ""
"You should see a list of the signals for the ``Player`` node. Find and "
"double-click the ``hit`` signal in the list (or right-click it and select "
"\"Connect...\"). This will open the signal connection dialog. We want to "
"make a new function named ``game_over``, which will handle what needs to "
"happen when a game ends. Type \"game_over\" in the \"Receiver Method\" box "
"at the bottom of the signal connection dialog and click \"Connect\". Add the "
"following code to the new function, as well as a ``new_game`` function that "
"will set everything up for a new game:"
msgstr ""
"Ви повинні побачити список сигналів для вузла ``Player``. Знайдіть у списку "
"сигнал ``hit`` і двічі клацніть по ньому (або клацніть по ньому правою "
"клавішею мишки і виберіть \"Під'єднати...\"). Це відкриє діалогове вікно "
"підключення сигналу. Ми хочемо створити нову функцію з назвою ``game_over``, "
"яка буде працювати з тим, що має відбуватися, коли гра закінчується. Введіть "
"\"game_over\" у поле \"Метод отримувач\" внизу вікна \"З’єднати сигнал з "
"методом\". Додайте наступний код до нової функції, а також функцію "
"``new_game``, щоб налаштувати все для нової гри:"

msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` , and ``MobTimer``) to the main script. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"Тепер підключіть сигнал ``timeout()`` кожного з вузлів Timer "
"( ``StartTimer``, ``ScoreTimer`` і ``MobTimer``) до головного скрипту. "
"``StartTimer`` запустить інші два таймери. ``ScoreTimer`` буде збільшувати "
"рахунок на 1."

msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position. When "
"we spawn a mob, we'll pick a random value between ``150.0`` and ``250.0`` "
"for how fast each mob will move (it would be boring if they were all moving "
"at the same speed)."
msgstr ""
"У функції ``_on_MobTimer_timeout()`` ми створимо екземпляр моба, підберемо "
"випадкове початкове місце уздовж ``Path2D`` та приведемо моба у рух. Вузол "
"``PathFollow2D`` буде автоматично обертатися по мірі просування по шляху, "
"так що ми будемо використовувати його, щоб вибрати напрямок моба, а також "
"його позицію. Під час появи моба, ми вибираємо випадкове значення між "
"``150.0`` і ``250.0`` визначаючи швидкість руху (було б нудно, якби всі вони "
"рухалися з однаковою швидкістю)."

msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr ""
"Зауважте, що новий екземпляр потрібно додати до сцени за допомогою "
"``add_child()``."

msgid ""
"Why ``PI``? In functions requiring angles, Godot uses *radians*, not "
"degrees. Pi represents a half turn in radians, about ``3.1415`` (there is "
"also ``TAU`` which is equal to ``2 * PI``). If you're more comfortable "
"working with degrees, you'll need to use the ``deg2rad()`` and ``rad2deg()`` "
"functions to convert between the two."
msgstr ""
"Чому ``PI``? У функціях, що вимагають кутів, Godot використовує *радіани* , "
"а не градуси. Пі являє собою половину повороту в радіанах, близько "
"``3.1415`` (є також ``TAU``, що дорівнює ``2 * PI``). Якщо вам зручніше "
"працювати з градусами, вам потрібно буде скористатися функціями "
"``deg2rad()`` та ``rad2deg()`` для перетворення між ними."

msgid "Testing the scene"
msgstr "Тестування сцени"

msgid ""
"Let's test the scene to make sure everything is working. Add this "
"``new_game`` call to ``_ready()``:"
msgstr ""
"Давайте протестуємо сцену, щоб переконати, що все працює. Додайте "
"``new_game`` до ``_ready()``:"

msgid ""
"Let's also assign ``Main`` as our \"Main Scene\" - the one that runs "
"automatically when the game launches. Press the \"Play\" button and select "
"``Main.tscn`` when prompted."
msgstr ""
"Також визначимо ``Main``, як нашу \"Головну Сцену\" - вона буде запускатися "
"автоматично при кожному запуску гри. Натисніть кнопку \"Відтворити\" і "
"виберіть ``Main.tscn`` при появі запиту."

msgid ""
"If you had already set another scene as the \"Main Scene\", you can right "
"click ``Main.tscn`` in the FileSystem dock and select \"Set As Main Scene\"."
msgstr ""
"Якщо ви вже встановили іншу сцену як \"Головну сцену\", ви можете клацнути "
"правою кнопкою мишки по ``Main.tscn`` на панелі Файлова система і вибрати "
"\"Встановити головною сценою\"."

msgid ""
"You should be able to move the player around, see mobs spawning, and see the "
"player disappear when hit by a mob."
msgstr ""
"Ви мали би успішно переміщати повсюди гравця, спостерігати, як народжуються "
"моби, і бачити, як зникає гравець при зіткненні з мобом."

msgid ""
"When you're sure everything is working, remove the call to ``new_game()`` "
"from ``_ready()``."
msgstr ""
"Переконавшись, що все працює видаліть виклик ``new_game()`` з ``_ready()``."

msgid ""
"What's our game lacking? Some user interface. In the next lesson, we'll add "
"a title screen and display the player's score."
msgstr ""
"Чого не вистачає нашій грі? Деякого інтерфейсу. На наступному уроці ми "
"додамо титульний екран і відображення рахунку гравця."

msgid "Translation status"
msgstr "Стан перекладу"
