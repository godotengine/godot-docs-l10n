# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Nodes and terminology"
msgstr "Węzły i terminologia"

msgid ""
"Before continuing, it must be noted that the *Node* terminology needs to be "
"used with care. When referring to *Visual Script Nodes* (or generally "
"*Nodes*) this text will refer to the little boxes you connect with lines, "
"which are part of a graph. When referring to *Scene Nodes*, it is implied "
"that the elements that make up a Scene are being referred, which are part of "
"a tree. Their naming is similar but their function is different. When "
"referring to *Node* here, it will be implied that a *Visual Script Node* is "
"referred to unless indicated otherwise."
msgstr ""
"Przed kontynuowaniem należy pamiętać, że terminologia *Węzła* musi być "
"używana ostrożnie. W przypadku *Visual Script Nodes* (lub ogólnie *Węzłów*) "
"tekst ten będzie odnosił się do małych pól, które łączą się z liniami, które "
"są częścią wykresu. *Węzły sceny* oznaczają, że elementy składające się na "
"scenę, które są częścią drzewa. Ich nazwa jest podobna, ale ich funkcja jest "
"inna. W przypadku odniesienia się tutaj do *Węzła*, co będzie oznaczało "
"*Visual Script Nodes*, o ile nie wskazano inaczej."

#, fuzzy
msgid "Node properties"
msgstr "Właściwości węzła"

msgid ""
"Like in most visual scripting implementations, each node has editable "
"properties. In Godot, though, we try to avoid bloating the nodes with "
"editable controls for the sake of readability."
msgstr ""
"Podobnie jak w większości wizualnych implementacji skryptowych, każdy węzeł "
"posiada edytowalne właściwości. Jednak w Godocie staramy się unikać "
"zbytniego powiększania węzłów w celu zapewnienia czytelności."

msgid ""
"Nodes still display the required information as text, but editing is done "
"via the *Inspector*. To edit them, select any node and edit its properties "
"in the *Inspector*."
msgstr ""
"Węzły nadal wyświetlają wymagane informacje jako tekst, ale ich edycja "
"odbywa się za pomocą *Inspektor*. Aby je edytować, zaznacz dowolny węzeł i "
"edytuj jego właściwości w *Inspektorze*."

#, fuzzy
msgid "Ports and connections"
msgstr "Porty i połączenia"

msgid ""
"Programming in Godot Visual Scripting is done via *Nodes* and *Port "
"Connections* inside each function."
msgstr ""
"Programowanie w Godot Visual Scripting odbywa się poprzez *Węzły* i "
"*Połączenia portów* wewnątrz każdej funkcji."

msgid "Ports"
msgstr "Porty"

msgid ""
"Nodes in Godot Visual Scripting have *Ports*. These are endpoints that "
"appear to the left and right of nodes and which can be used to make "
"*Connections*: There are two types of *Ports*: *Sequence* and *Data*."
msgstr ""
"Węzły w Godot Visual Scripting mają *Porty*. Są to punkty końcowe, które "
"pojawiają się po lewej i prawej stronie węzłów i mogą być użyte do "
"utworzenia *Połączeń*: Istnieją dwa rodzaje *Portów*: *Kolejność* i *Dane*."

msgid ""
"*Sequence Ports* indicate the order in which operations are executed. "
"Typically when a *Node* is done processing, it will go to the next node from "
"one of the ports at the right. If nothing is connected, the function may "
"end, or another output *Sequence Port* might be tried (this depends on the "
"node). Thanks to this, you can follow the logic flow within a function by "
"following the white lines. Not every *Node* has *Sequence Ports*. In fact, "
"most do not."
msgstr ""

msgid ""
"*Data Ports* ports contain typed values. Types can be any regular Godot "
"types, such as a boolean, an integer, a string, a Vector3, an array, any "
"Object or Scene Node, etc. A *Data Port* on the right side of a node is "
"considered an output, while, a port on the left side is an input. Connecting "
"them allows information to flow to the next node."
msgstr ""
"*Porty Danych* zawierają wpisane wartości. Typy mogą być dowolnymi typami "
"Godota, takimi jak boolean, integer, string, Vector3, array, każdy obiekt "
"lub węzeł sceny itp. *Port danych* po prawej stronie węzła jest uważany za "
"wyjście, podczas gdy port po lewej stronie jest wejściem. Podłączenie ich "
"umożliwia przepływ informacji do następnego węzła."

msgid ""
"Not all *Data Port* types are compatible and will allow connections, though. "
"Pay special attention to colors and icons, as each type has a different "
"representation:"
msgstr ""
"Nie wszystkie typy *Data Port* są kompatybilne i umożliwią nawiązanie "
"połączeń. Zwróć szczególną uwagę na kolory i ikony, ponieważ każdy typ ma "
"inną reprezentację:"

msgid "Connections"
msgstr "Połączenia"

msgid ""
"Connecting is a relatively simple process. Drag an *Output Port* towards an "
"*Input Port*."
msgstr ""
"Podłączenie jest stosunkowo prostym procesem. Przeciągnij *Port wyjściowy* w "
"stronę *Port wejściowy*."

msgid ""
"Disconnecting takes a bit more practice. Disconnecting in *Data Ports* "
"happens by dragging the *Input* away, while for *Sequence Ports*, this "
"happens by dragging the *Output* away."
msgstr ""
"Odłączanie wymaga nieco więcej wysiłku. Odłączenie w *Portach Danych* "
"następuje przez przeciągnięcie *Wejścia*, natomiast w *Portach kolejności* "
"przez przeciągnięcie *Wyjścia*."

#, fuzzy
msgid ""
"This may seem strange at first, but it happens because *Data Ports* are 1:N "
"(A single output port can connect to many inputs), while *Sequence Ports* "
"are N:1 (Many sequence outputs can be connected to a single input)."
msgstr ""
"Na początku może to wydawać się dziwne, ale dzieje się tak dlatego, że "
"*Porty Danych* to 1:N (do jednego portu wyjściowego można podłączyć wiele "
"wejść), podczas gdy *Portów Zwracających* to N:1 (do jednego wejścia można "
"podłączyć wiele wyjść)."

msgid ""
"Connecting to empty space (drag to connect but unpress over empty space) is "
"also context sensitive, it will supply a list of most common operations. For "
"sequences, it will be conditional nodes:"
msgstr ""

msgid "While, for data, a contextual set/get/call menu will open:"
msgstr ""

#, fuzzy
msgid "Adding nodes"
msgstr "Dodawanie węzłów"

msgid ""
"Finally! We got to the fun part! But, before explaining in more detail what "
"each type of node does, let's take a short look at how nodes are most "
"commonly added and dealt with."
msgstr ""
"W końcu! Dotarliśmy do części rozrywkowej! Zanim jednak wyjaśnimy "
"szczegółowo, co robi każdy typ węzła, przyjrzyjmy się, w jaki sposób węzły "
"są najczęściej dodawane i obsługiwane."

#, fuzzy
msgid "Accessing scene nodes"
msgstr "Dostęp do węzłów sceny"

msgid ""
"One of the most common tasks is accessing Scene Tree Nodes (again, not to "
"mistake with *Visual Script Nodes*). Dragging from the Scene Tree and "
"dropping into the canvas will ask you to *call a method* (sometimes referred "
"to as *member function*) on this node."
msgstr ""

msgid ""
"While accessing properties is desired in most cases (more on that below), "
"sometimes *calling methods* can be useful too. Methods execute specific "
"actions on objects. In the above case, the mouse pointer can be warped to a "
"position in local coordinates to the control. Another common use case is "
"queueing a node for deletion, which is done with the *queue_free* method."
msgstr ""

msgid ""
"Care must be taken that this only works if the scene being edited contains "
"your *Visual Script* in one of the nodes! Otherwise, a warning will be shown."
msgstr ""

#, fuzzy
msgid "Accessing scene node properties"
msgstr "Dostęp do węzłów sceny"

msgid ""
"This is the most common way to edit *Scene Nodes* in Visual Scripting. "
"Select a *Scene Node* from the *Scene Tree*, go to the Inspector, find *the "
"Name* of the property you want to edit (hint, *not* the value!) and drag it "
"to the canvas:"
msgstr ""

msgid ""
"The result is that this value can be changed from your script by writing to "
"a *Data Port*."
msgstr ""

msgid ""
"If instead reading this value is desired, drag the node again but hold :kbd:"
"`Ctrl` (or :kbd:`Cmd` on macOS). This will create a getter:"
msgstr ""

msgid "In this case, the value can be read from a *Data Port*."
msgstr "W tym przypadku wartość można odczytać z *Portu Danych*."

msgid "Variables"
msgstr "Zmienne"

msgid ""
"Variables are memory containers local to the script which can hold a value. "
"This value can be read from any of the functions of the script or from other "
"scripts via the method described in the previous step."
msgstr ""
"Zmienne to miejsce pamięci dla skryptu, które mogą zawierać wartość. Wartość "
"tę można odczytać z dowolnej funkcji skryptu lub z innych skryptów metodą "
"opisaną w poprzednim kroku."

msgid ""
"To add a Variable, push the \"+\" button on the *Variables* section of the "
"Members panel. Double-click the new variable to rename it:"
msgstr ""
"Aby dodać zmienną, naciśnij przycisk \"+\" w sekcji *Zmienne* panelu "
"Członkowie. Kliknij dwukrotnie na nową zmienną, aby zmienić jej nazwę:"

msgid "Right-clicking the variable allows you to configure its properties:"
msgstr ""
"Kliknięcie zmiennej prawym przyciskiem myszy umożliwi skonfigurowanie jej "
"właściwości:"

#, fuzzy
msgid ""
"As it can be seen above, the type and initial value of the variable can be "
"changed, as well as some property hints. Ticking the \"Export\" option makes "
"the variable visible in the Inspector when selecting the node. This also "
"makes it available to other scripts via the method described in the previous "
"step."
msgstr ""
"Jak widać powyżej, typ i wartość początkowa zmiennej może być zmieniana, jak "
"również niektóre właściwości. Zaznaczenie opcji \"Eksportuj\" powoduje, że "
"zmienna jest widoczna w Inspektorze po wybraniu węzła. Udostępnia to zmienną "
"innym skryptom za pomocą metody opisanej w poprzednim kroku."

msgid ""
"To use the variable in the script, simply drag it to the canvas to create a "
"getter:"
msgstr ""
"Aby użyć zmiennej w skrypcie, po prostu przeciągnij ją w ramkę, aby utworzyć "
"odbiorcę:"

#, fuzzy
msgid "Likewise, hold :kbd:`Ctrl` (or :kbd:`Cmd` on macOS) to drop a setter:"
msgstr ""
"Podobnie, przytrzymaj *Control* (*Command* na komputerze Mac), aby ustawić "
"setter:"

msgid "Signals"
msgstr "Sygnały"

msgid ""
"It is also possible to create your own signals in a script and use them. For "
"this, do the same steps you did for variables in the previous step, except "
"for *Signals*:"
msgstr ""
"Możliwe jest również tworzenie własnych sygnałów w skrypcie i używanie ich. "
"W tym celu wykonaj te same kroki, które wykonałeś dla zmiennych w poprzednim "
"kroku, z wyjątkiem *Sygnałów*:"

#, fuzzy
msgid ""
"A signal can also be edited via the right-click menu to customize its "
"arguments:"
msgstr ""
"Sygnał można również edytować za pomocą menu prawego przycisku myszy, aby "
"dostosować jego argumenty:"

#, fuzzy
msgid ""
"The signal you have created will appear in the Inspector, along with the "
"built-in node signals. This allows you to connect it from another script "
"from another *Scene Node*:"
msgstr ""
"Utworzony sygnał pojawi się w Inspektorze wraz z wbudowanymi sygnałami "
"węzła. Umożliwia to połączenie go z innym skryptem z innego *węzła sceny*:"

msgid "Finally, to emit the signal, simply drag it to the canvas:"
msgstr "Na koniec, aby wyemitować sygnał, przeciągnij go na obszar roboczy:"

msgid ""
"Remember that emitting a signal is a sequenced operation, so it must come "
"from a Sequence port."
msgstr ""

#, fuzzy
msgid "Adding more nodes"
msgstr "Dodawanie więcej węzłów"

msgid ""
"Now that the basics are covered, let's discuss the large amount of utility "
"nodes available for your canvas! Below the member panel, exists the list of "
"all available node types:"
msgstr ""
"Teraz, gdy podstawy są już wyjaśnione, omówmy dużą ilość użytecznych węzłów "
"dla twojego projektu! Poniżej panelu Członkowie znajduje się lista "
"wszystkich dostępnych typów węzłów:"

#, fuzzy
msgid ""
"Pressing :kbd:`Ctrl + F` (or :kbd:`Cmd + F` on macOS) allows you to search "
"the list."
msgstr "Ctrl-F (Command-F on Mac) umożliwia przeszukiwanie listy."

msgid ""
"Any of them can be dragged to the scene. Unlike nodes (e.g. dragging a "
"property from the Inspector sets the context to the node being edited "
"automatically), these are added without any \"contextual\" information, so "
"this has to be done manually."
msgstr ""
"Każdy z nich można przeciągnąć na scenę. W odróżnieniu od węzłów (np. "
"przeciągnięcie właściwości z inspektora ustawia automatycznie kontekst na "
"edytowany węzeł) są one dodawane bez żadnych informacji \"kontekstowych\", "
"więc należy to zrobić ręcznie."

msgid ""
"Remember that you can check the class reference for what each node does, as "
"they are documented there. That mentioned, a brief overview of node types "
"follows:"
msgstr ""
"Pamiętaj, że możesz sprawdzić, co robi każdy z węzłów, ponieważ są one "
"udokumentowane. Poniżej znajduje się krótki przegląd typów węzłów:"

msgid "Constants"
msgstr "Stałe"

msgid ""
"Constant nodes are nodes that provide values that, while not changing over "
"time, can be useful as reference values. Most of the time they are integer "
"or float."
msgstr ""
"Stałe węzły to węzły, posiadające wartości, które nie zmieniają się w czasie "
"i do tego mogą być używane jako odniesienia. Najczęściej są to liczby "
"całkowite lub zmiennoprzecinkowe."

#, fuzzy
msgid ""
"The first one is \"Constant\", which allows you to select any value of any "
"type as constant, from an integer (42) to a String (\"Hello!\"). In general, "
"this node is not used that often because of default input values in *Data "
"Ports*, but it's good to know it exists."
msgstr ""
"Pierwsza z nich to \"stała\", która pozwala wybrać dowolną wartość dowolnego "
"typu jako stałą, od liczby całkowitej (42) do łańcucha znaków (\"Witaj!\"). "
"Ogólnie rzecz biorąc, ten węzeł nie jest często używany ze względu na "
"domyślne wartości wejściowe w *Portach Danych*, ale dobrze jest wiedzieć, że "
"istnieje."

msgid ""
"The second is the GlobalConstant node, which contains a long list of "
"constants for global types in Godot. In there you can find some useful "
"constants to refer to key names, joystick or mouse buttons, etc."
msgstr ""
"Drugim jest węzeł GlobalConstant, który zawiera długą listę stałych dla "
"typów globalnych w Godot. W tym miejscu można znaleźć przydatne stałe, które "
"odnoszą się do nazw klawiszy, dżojstika, przycisków myszy itp."

#, fuzzy
msgid ""
"The third one is MathConstant, which provides typical mathematical "
"constants, such as PI, E, etc."
msgstr ""
"Trzecim jest MathConstant, który zawiera najczęściej używane stałe "
"matematyczne, takie jak PI, E itp."

msgid "Data"
msgstr "Dane"

msgid ""
"Data nodes deal with all sorts of access to information. Any information in "
"Godot is accessed via these nodes, so they are some of the most important "
"ones to use and pretty diverse."
msgstr ""
"Węzły danych zajmują się wszelkiego rodzaju dostępem do informacji. Wszelkie "
"informacje w Godocie są dostępne za pośrednictwem tych węzłów, co czyni je "
"jednymi z najważniejszych dostępnych węzłów oraz są bardzo różnorodne."

msgid ""
"There are many types of nodes of interest here, so a short attempt to "
"describe them will follow:"
msgstr ""

msgid "Action"
msgstr "Akcja"

msgid ""
"Action nodes are vital when dealing with input from a device. You can read "
"more about actions in the (@TODO ACTION TUTE LINK). In the following example "
"below, the control is moved to the right when the \"move_right\" action is "
"pressed."
msgstr ""
"Węzły funkcyjne są niezbędne w przypadku wprowadzania danych z urządzenia. "
"Więcej informacji na temat akcji można znaleźć w (@TODO ACTION TUTE LINK). W "
"poniższym przykładzie obiekt przesuwa się w prawo po uruchomieniu akcji "
"\"move_right\"."

msgid "Engine Singleton"
msgstr ""

msgid ""
"Engine singletons are global interfaces (meaning they can be accessed "
"without a reference; unlike Scene Nodes, they are always available). They "
"have several purposes, but in general, they are useful for low-level access "
"or OS-related access."
msgstr ""

msgid ""
"Remember that dragging a connection to empty space will help you call "
"functions or set/get properties on these:"
msgstr ""
"Pamiętaj, że przeciągnięcie połączenia na puste miejsce pomoże ci wywołać "
"funkcje lub ustawić/zapisać właściwości na nich:"

msgid "Local Variables"
msgstr "Lokalne zmienne"

msgid ""
"These are nodes you can use as temporary storage for your graphs. Make sure "
"they all have the same name and type when using them and they will reference "
"the same piece of memory."
msgstr ""
"Są to węzły, których można używać do tymczasowego zapisu wykresów. Upewnij "
"się, że podczas korzystania z nich wszystkie mają tą samą nazwę i typ oraz "
"że będą odnosić się do tego samego obszaru pamięci."

msgid ""
"As it can be seen above, there are two nodes available: A simple getter, and "
"a sequenced setter (setting requires a sequence port)."
msgstr ""

msgid "Scene Node"
msgstr "Węzeł sceny"

msgid ""
"This is just a reference to a node in the tree, but it's easier to use this "
"node by dragging the actual node from the scene tree to the canvas (this "
"will create it and configure it)."
msgstr ""

msgid "Self"
msgstr "Pojedynczo"

msgid ""
"In some rare occasions, it may be desired to pass this Scene Node as "
"argument. It can be used to call functions and set/get properties, or drag "
"nodes (or event the node itself that has the script) from the Scene Tree to "
"the canvas for this."
msgstr ""

msgid "SceneTree"
msgstr "DrzewoSceny"

msgid ""
"This node is similar to the Singleton node because it references the "
"SceneTree, which contains the active scene. SceneTree, however, only works "
"when the node is sitting in the scene and active, otherwise accessing it "
"will return an error."
msgstr ""

msgid ""
"SceneTree allows for many low-level things, like setting stretch options, "
"calling groups, make timers, or even load another scene. It's a good class "
"to get familiar with."
msgstr ""

msgid "Preload"
msgstr "Ładuj przed"

msgid ""
"This does the same function as preload() in GDScript. It maintains this "
"resource loaded and ready to use. Rather than instancing the node, it's "
"simpler to drag the desired resource from the filesystem dock to the canvas."
msgstr ""
"Pełni to tę samą funkcję co preload() w GDScript. Utrzymuje on ten zasób w "
"stanie załadowanym i gotowym do użycia. Zamiast uruchamiać węzeł, łatwiej "
"jest przeciągnąć żądany zasób z panelu systemu plików na obszar roboczy."

msgid "Resource Path"
msgstr "Ścieżka zasobu"

msgid ""
"This node is a simple helper to get a string with a path to a resource you "
"can pick. It's useful in functions that load things from disk."
msgstr ""

msgid "Comment"
msgstr "Komentarz"

msgid ""
"A Comment node works as a node you can resize to put around other nodes. It "
"will not try to get focus or be brought to top when selecting it. It can "
"also be used to write text on it."
msgstr ""

msgid "Flow Control"
msgstr ""

msgid ""
"Flow control nodes allow the execution to take different branches, usually "
"depending on a given condition."
msgstr ""

msgid "Condition"
msgstr "Warunek"

msgid ""
"This is a simple node that checks a bool port. If ``true``, it will go via "
"the \"true\" sequence port. If ``false``, the second. After going for either "
"of them, it goes via the \"done\" port. Leaving sequence ports disconnected "
"is fine if not all of them are used."
msgstr ""

msgid "Iterator"
msgstr "Iterator"

msgid ""
"Some data types in Godot (ie, arrays, dictionaries) are iterable. This means "
"that a bit of code can run for each element that it has."
msgstr ""

msgid ""
"The Iterator node goes through all elements and, for each of them, it goes "
"via the \"each\" sequence port, making the element available in the \"elem\" "
"data port."
msgstr ""

msgid "When done, it goes via the \"exit\" sequence port."
msgstr ""

msgid "Return"
msgstr "Wróć"

msgid ""
"Some functions can return values. In general for virtual ones, Godot will "
"add the Return node for you. A return node forces the function to end."
msgstr ""

msgid "Sequence"
msgstr "Sekwencja"

msgid ""
"This node is useful mostly for organizing your graph. It calls its sequence "
"ports in order."
msgstr ""

msgid "TypeCast"
msgstr ""

msgid ""
"This is a useful and commonly used node. You can use it to cast arguments or "
"other objects to the type you desire. Afterwards, you can even drag the "
"object output to get full completion."
msgstr ""

msgid ""
"It is also possible to cast to a script, which will allow complete script "
"properties and functions:"
msgstr ""

msgid "Switch"
msgstr "Przełącznik"

msgid ""
"The Switch node is similar to the Condition node, but it matches many values "
"at the same time."
msgstr ""

msgid "While"
msgstr "Chociaż"

msgid ""
"This is a more primitive form of iteration. \"repeat\" sequence output will "
"be called as long as the condition in the \"cond\" data port is met."
msgstr ""

msgid "Functions"
msgstr "Funkcje"

msgid ""
"Functions are simple helpers, most of the time deterministic. They take some "
"arguments as input and return an output. They are almost never sequenced."
msgstr ""

msgid "Built-In"
msgstr "Wbudowany"

msgid ""
"There is a list of built-in helpers. The list is almost identical to the one "
"from :ref:`GDScript<class_@GDScript>`. Most of them are mathematical "
"functions, but others can be useful helpers. Make sure to take a look at the "
"list at some point."
msgstr ""

msgid "By Type"
msgstr ""

msgid ""
"Those are the methods available to basic types. For example, if you want a "
"dot-product, you can search for \"dot\" instead of the Vector3 category. In "
"most cases just search the list of nodes, it should be faster."
msgstr ""

msgid "Call"
msgstr "Wywołanie"

msgid ""
"This is the generic calling node. It is rarely used directly but by dragging "
"to empty space on an already configured node."
msgstr ""

msgid "Constructors"
msgstr "Konstruktor"

msgid ""
"These are all the functions needed to create Godot basic datatypes. For "
"example, If you need to create a Vector3 out of 3 floats, a constructor must "
"be used."
msgstr ""
"Są to wszystkie funkcje, potrzebne do stworzenia podstawowych typów danych "
"Godota. Na przykład, jeśli chcesz utworzyć Vector3 z 3 liczb "
"zmiennoprzecinkowych, musisz użyć konstruktora."

msgid "Destructor"
msgstr "Destruktor"

msgid ""
"This is the opposite to Constructor, it allows to separate any basic type "
"(ie, Vector3) into its sub-elements."
msgstr ""
"Jest to przeciwieństwo Konstruktora, pozwala on na rozdzielenie dowolnego "
"typu podstawowego (tj. Vector3) na jego podelementy."

msgid "Emit Signal"
msgstr "Wyemituj sygnał"

msgid ""
"Emits signals from any object. In general it's not that useful, as dragging "
"a signal to the canvas works better."
msgstr ""
"Emituje sygnały z dowolnego obiektu. Generalnie nie jest on aż tak "
"przydatny, ponieważ przeciąganie sygnału na obszar roboczy działa lepiej."

msgid "Get/Set"
msgstr "Get/Set"

msgid ""
"Generic Getter/Setter node. Dragging properties from the Inspector works "
"better, as they appear properly configured on drop."
msgstr ""

msgid "Wait"
msgstr "Wait"

msgid ""
"The Wait nodes will suspend execution of the function until something "
"happens (many frames can pass until resuming, in fact). Default nodes allow "
"you to wait for a frame to pass, a fixed frame or a given amount of time "
"until execution is resumed."
msgstr ""

msgid "Yield"
msgstr "Yield"

msgid ""
"This node completely suspends the execution of the script, and it will make "
"the function return a value that can be used to resume execution."
msgstr ""

msgid "Yield Signal"
msgstr "Yield Sygnał"

msgid "Same as Yield, but will wait until a given signal is emitted."
msgstr ""
"Taki sam jak Yield, ale będzie czekać, aż dany sygnał zostanie wysłany."

msgid "Index"
msgstr "Indeks"

msgid ""
"Generic indexing operator, not often used but it's good that it exists just "
"in case."
msgstr ""

msgid "Operators"
msgstr "Operatory"

msgid ""
"These are mostly generic operators, such as addition, multiplication, "
"comparison, etc. By default, these mostly accept any datatype (and will "
"throw an error at run-time if the types fed do not match those expected by "
"the operator). It is always recommended to set the right type for operators "
"to catch errors faster and make the graph easier to read."
msgstr ""

msgid "Expression Node"
msgstr ""

msgid ""
"Among the operators, the *Expression* node is the most powerful. If well "
"used, it allows you to enormously simplify visual scripts that are math or "
"logic heavy. Type any expression on it and it will be executed in real-time."
msgstr ""

msgid "Expression nodes can:"
msgstr "Węzły ekspresji mogą:"

msgid ""
"Perform math and logic expressions based on custom inputs (eg: \"a*5+b\", "
"where a and b are custom inputs):"
msgstr ""
"Wykonuj wyrażenia matematyczne i logiczne w oparciu o niestandardowe wejścia "
"(np. \"a*5+b\", gdzie a i b są niestandardowymi wejściami):"

msgid "Access local variables or properties:"
msgstr "Dostęp do lokalnych zmiennych lub właściwości:"

#, fuzzy
msgid ""
"Use most of the existing built-in functions that are available to GDScript, "
"such as ``sin()``, ``cos()``, ``print()``, as well as constructors, such as "
"``Vector3(x, y, z)``, ``Rect2(...)``, etc.:"
msgstr ""
"Wykorzystaj większość istniejących funkcji wbudowanych, które są dostępne "
"dla GDScript, takich jak sin(), cos(), print(), jak również konstruktory, "
"takie jak Vector3(x,y,z), Rect2(...) itp:"

msgid "Call API functions:"
msgstr "Wywołanie funkcji API:"

msgid ""
"Use sequenced mode, which makes more sense in case of respecting the "
"processing order:"
msgstr ""

msgid "Translation status"
msgstr "Status tłumaczenia"
