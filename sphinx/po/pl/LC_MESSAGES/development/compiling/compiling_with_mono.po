# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling with Mono"
msgstr "Kompilowanie z Mono"

msgid "Requirements"
msgstr "Wymagania"

msgid "Mono 6.12.0 or greater"
msgstr ""

msgid "MSBuild"
msgstr "MSBuild"

msgid "NuGet"
msgstr ""

msgid "**On Linux/macOS only:** pkg-config"
msgstr ""

msgid ""
"You may need to import necessary certificates for NuGet to perform HTTPS "
"requests."
msgstr ""

msgid ""
"The recommended method is to use **curl**'s CA (Certificate Authorities) "
"certificate bundle."
msgstr ""

msgid ""
"Run the following commands to download and import it. On Windows, you can "
"run it from the Mono command line prompt (or the regular prompt if you added "
"Mono's ``bin`` directory to your ``PATH`` environment variable)::"
msgstr ""

msgid ""
"Alternatively, you can use the following command, though it's deprecated and "
"may not work correctly::"
msgstr ""

#, fuzzy
msgid "Environment variables"
msgstr "Zmienne środowiskowe"

msgid ""
"By default, SCons will try to find Mono in the Windows Registry on Windows "
"or via ``pkg-config`` on other platforms. You can specify a different "
"installation directory by passing the ``mono_prefix`` command-line option to "
"SCons; e.g. ``scons [...] mono_prefix=%ProgramFiles%/Mono``."
msgstr ""

msgid ""
"This is the directory that contains the subdirectories ``include`` and "
"``lib``."
msgstr ""

#, fuzzy
msgid "Enable the Mono module"
msgstr "Odblokowanie modułu Mono"

msgid ""
"By default, the Mono module is disabled when building. To enable it, add the "
"option ``module_mono_enabled=yes`` to the SCons command line."
msgstr ""

#, fuzzy
msgid "Generate the glue"
msgstr "Tworzenie \"kleju\"(Glue)"

msgid ""
"Glue sources are the wrapper functions that will be called by managed "
"methods. These source files must be generated before building your final "
"binaries. In order to generate them, first, you must build a temporary Godot "
"binary with the options ``tools=yes`` and ``mono_glue=no``::"
msgstr ""

msgid ""
"After the build finishes, you need to run the compiled executable with the "
"parameter ``--generate-mono-glue`` followed by the path to an output "
"directory. This path must be ``modules/mono/glue`` in the Godot directory::"
msgstr ""

msgid ""
"This command will tell Godot to generate the file ``modules/mono/glue/"
"mono_glue.gen.cpp``, the C# solution for the Godot API at ``modules/mono/"
"glue/GodotSharp/GodotSharp/Generated``, and the C# solution for the editor "
"tools at ``modules/mono/glue/GodotSharp/GodotSharpEditor/Generated``. Once "
"these files are generated, you can build Godot for all the desired targets "
"without having to repeat this process."
msgstr ""

msgid ""
"``<godot_binary>`` refers to the tools binary you compiled above with the "
"Mono module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.tools.<bits>."
"mono``, e.g. ``bin/godot.x11.tools.64.mono`` or ``bin/godot.windows.tools.64."
"mono.exe``. Be especially aware of the **.mono** suffix! If you've "
"previously compiled Godot without Mono support, you might have similarly "
"named binaries without this suffix. These binaries can't be used to generate "
"the Mono glue."
msgstr ""

msgid "Notes"
msgstr "Uwagi"

msgid ""
"**Do not build your final binaries with** ``mono_glue=no``. This disables C# "
"scripting. This option must be used only for the temporary binary that will "
"generate the glue. Godot will print a warning at startup if it was built "
"without the glue sources."
msgstr ""

msgid ""
"The glue sources must be regenerated every time the ClassDB-registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameters of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""

msgid "Rebuild with Mono glue"
msgstr ""

msgid ""
"Once you have generated the Mono glue, you can build the final binary with "
"``mono_glue=yes``. This is the default value for ``mono_glue``, so you can "
"also omit it. To build a Mono-enabled editor::"
msgstr ""

msgid "And Mono-enabled export templates::"
msgstr "Używanie szablonów eksportu:"

msgid ""
"If everything went well, apart from the normal output, SCons should have "
"created the following files in the ``bin`` directory:"
msgstr ""

msgid ""
"If you're not linking the Mono runtime statically, the build script will "
"place the Mono runtime shared library (``monosgen-2.0``) next to the Godot "
"binary in the output directory. Make sure to include this library when "
"distributing Godot. When targeting Android, no extra steps are required as "
"this library is automatically copied to ``#platform/android/java/libs`` and "
"Gradle takes care of the rest."
msgstr ""

msgid ""
"Unlike \"classical\" Godot builds, when building with the Mono module "
"enabled (and depending on the target platform), a data directory may be "
"created both for the editor and for export templates. This directory is "
"important for proper functioning and must be distributed together with "
"Godot. More details about this directory in :ref:`Data "
"directory<compiling_with_mono_data_directory>`."
msgstr ""

msgid "Examples"
msgstr "Przykłady"

msgid "Example (Windows)"
msgstr "Przykład (Windows)"

#, fuzzy
msgid "Example (X11)"
msgstr "Przykład (x11)"

msgid "Data directory"
msgstr ""

msgid ""
"The data directory is a dependency for Godot binaries built with the Mono "
"module enabled. It contains important files for the correct functioning of "
"Godot. It must be distributed together with the Godot executable."
msgstr ""

msgid ""
"The information below doesn't apply for Android, iOS and WASM, as there is "
"no data directory for these platforms."
msgstr ""

msgid "Export templates"
msgstr "Szablony do eksportu"

msgid ""
"The name of the data directory for an export template differs based on the "
"configuration it was built with. The format is ``data.mono.<platform>.<bits>."
"<target>``, e.g. ``data.mono.x11.32.release_debug`` or ``data.mono."
"windows.64.release``."
msgstr ""

msgid ""
"This directory must be placed with its original name next to the Godot "
"export templates. When exporting a project, Godot will also copy this "
"directory with the game executable but the name will be changed to "
"``data_<APPNAME>``, where ``<APPNAME>`` is the application name as specified "
"in the project setting ``application/config/name``."
msgstr ""

msgid ""
"In the case of macOS, where the export template is compressed as a ZIP "
"archive, the contents of the data directory can be placed in the following "
"locations inside the ZIP archive:"
msgstr ""

msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/lib``"
msgstr ""

msgid "``/osx_template.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr ""

msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/etc``"
msgstr ""

msgid "``/osx_template.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr ""

msgid "Editor"
msgstr "Edytor"

msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. The contents of this directory are the following:"
msgstr ""

msgid "``Api``"
msgstr ""

#, fuzzy
msgid "``Mono`` (optional)"
msgstr "Postęp ładowania (opcjonalny)"

#, fuzzy
msgid "``Tools``"
msgstr "Narzędzia"

msgid ""
"The ``Api`` subdirectory contains the Godot API assemblies. On macOS, if the "
"Godot editor is distributed as a bundle, the contents of the data directory "
"may be placed in the following locations:"
msgstr ""

msgid "``bin/data.mono.<platform>.<bits>.<target>/Api``"
msgstr ""

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Api``"
msgstr ""

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr ""

msgid "``<bundle_name>.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr ""

msgid "``bin/data.mono.<platform>.<bits>.<target>/Tools``"
msgstr ""

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Tools``"
msgstr ""

msgid ""
"The ``Mono`` subdirectory is optional. It will be needed when distributing "
"the editor, as issues can arise when the user-installed Mono version isn't "
"identical to the one the Godot editor was built with. Pass "
"``copy_mono_root=yes`` to SCons when building the editor in order to create "
"this folder and its contents."
msgstr ""

msgid ""
"The ``Tools`` subdirectory contains tools required by the editor, like the "
"``GodotTools`` assemblies and its dependencies."
msgstr ""

#, fuzzy
msgid "Building the Mono runtime"
msgstr "Tworzenie modułów w Androidzie"

msgid ""
"When building Godot for the desktop, you will likely use the pre-built Mono "
"runtime that is installed on your system. This likely won't be the case when "
"targeting other platforms like Android, iOS and WebAssembly. You will have "
"to build the Mono runtime yourself for those platforms."
msgstr ""

msgid ""
"We recommend using these `build scripts <https://github.com/godotengine/"
"godot-mono-builds>`_. They simplify this process but also include some "
"patches needed for proper functioning with Godot. See the README on the link "
"above for instructions on how to use the scripts."
msgstr ""

#, fuzzy
msgid "Targeting Android"
msgstr "Eksportowanie na Androida"

msgid ""
"Compiling the Android export templates with Mono is a bit simpler than it is "
"for the desktop platforms, as there are no additional steps required after "
"building. There is no need to worry about run-time dependencies like a data "
"directory or the shared library (when dynamically linking) as those are "
"automatically added to the Gradle project."
msgstr ""

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"Android<doc_compiling_for_android>` page. Make sure to let SCons know about "
"the location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/android-armeabi-v7a-release\"`` (This path "
"may be different on your system)."
msgstr ""

#, fuzzy
msgid "Targeting iOS"
msgstr "Eksportowanie na Androida"

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"iOS<doc_compiling_for_ios>` page. Make sure to let SCons know about the "
"location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/ios-arm64-release\"`` (This path may be "
"different on your system)."
msgstr ""

msgid ""
"After building Godot for each architecture, you will notice SCons has copied "
"the Mono libraries for each of them to the output directory:"
msgstr ""

msgid ""
"The last three are only for iOS devices and are not available for the iOS "
"simulator."
msgstr ""

msgid ""
"These libraries must be put in universal (multi-architecture) \"fat\" files "
"to be distributed with the export templates."
msgstr ""

msgid ""
"The following bash script will create the \"fat\" libraries in the directory "
"``#bin/ios/iphone-mono-libs``:"
msgstr ""

msgid ""
"The ``iphone-mono-libs`` folder must be distributed with the export "
"templates. The Godot editor will look for the libraries in ``<templates>/"
"iphone-mono-libs/lib<name>.iphone.fat.a``."
msgstr ""

#, fuzzy
msgid "Targeting WebAssembly"
msgstr "**Przeglądarki:** WebAssembly"

msgid ""
"Building for WebAssembly currently involves the same process regardless of "
"whether the Mono module is enabled."
msgstr ""

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for the "
"Web<doc_compiling_for_web>` page. Make sure to let SCons know about the "
"location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/wasm-runtime-release\"`` (This path may be "
"different on your system)."
msgstr ""

#, fuzzy
msgid "Base Class Library"
msgstr "Biblioteka zasobów"

msgid ""
"The export templates must also include the BCL (Base Class Library) for each "
"target platform. Godot looks for the BCL folder at ``<templates>/bcl/"
"<target_platform>``, where ``<target_platform>`` is the same name passed to "
"the SCons ``platform`` option, e.g.: ``<templates>/bcl/windows``, "
"``<templates>/bcl/javascript``."
msgstr ""

msgid "Alternatively, Godot will look for them in the following locations:"
msgstr ""

msgid "Android"
msgstr "Android"

msgid "``<templates>/bcl/monodroid``"
msgstr ""

msgid "iOS"
msgstr "iOS"

msgid "``<templates>/bcl/monotouch``"
msgstr ""

#, fuzzy
msgid "WebAssembly"
msgstr "**Przeglądarki:** WebAssembly"

msgid "``<templates>/bcl/wasm``"
msgstr ""

#, fuzzy
msgid "Linux and macOS"
msgstr "Uruchamiane na macOS"

msgid "``<templates>/bcl/net_4_x``"
msgstr ""

msgid "Windows"
msgstr "Windows"

msgid "``<templates>/bcl/net_4_x_win``"
msgstr ""

msgid ""
"As of now, we're assuming the same BCL profile can be used for both Linux "
"and macOS, but this may change in the future as they're not guaranteed to be "
"the same (as is the case with the Windows BCL)."
msgstr ""

msgid ""
"If the target platform is the same as the platform of the Godot editor, then "
"the editor will use the BCL it's running on (``<data_folder>/Mono/lib/"
"mono/4.5``) if it cannot find the BCL in the export templates."
msgstr ""

#, fuzzy
msgid "AOT cross-compilers"
msgstr "Kompilator C"

msgid ""
"To perform ahead-of-time (AOT) compilation for other platforms, Godot needs "
"to have access to the Mono cross-compilers for that platform and "
"architecture."
msgstr ""

msgid ""
"Godot will look for the cross-compiler executable in the AOT compilers "
"folder. The location of this folder is ``<data_folder>/Tools/aot-compilers/"
"``."
msgstr ""

#, fuzzy
msgid ""
"In order to build the cross-compilers we recommend using these `build "
"scripts <https://github.com/godotengine/godot-mono-builds>`_."
msgstr ""
"Jeśli chcesz poprawić dokumentację, jej repozytorium znajduje się `na "
"<https://github.com/godotengine/godot-docs>`_."

msgid ""
"After building them, copy the executable to the Godot AOT compilers "
"directory. The executable name is ``<triple>-mono-sgen``, e.g.: ``aarch64-"
"apple-darwin-mono-sgen``."
msgstr ""

#, fuzzy
msgid "Command-line options"
msgstr "Linia komend"

msgid ""
"The following is the list of command-line options available when building "
"with the Mono module:"
msgstr ""

msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr ""

msgid "Build Godot with the Mono module enabled."
msgstr ""

msgid "**mono_glue**\\ =\\ **yes** | no"
msgstr ""

msgid ""
"Whether to include the glue source files in the build and define "
"``MONO_GLUE_DISABLED`` as a preprocessor macro."
msgstr ""

msgid "**mono_prefix**\\ =path"
msgstr ""

msgid ""
"Path to the Mono installation directory for the target platform and "
"architecture."
msgstr ""

msgid "**mono_static**\\ =yes | no"
msgstr ""

msgid "Whether to link the Mono runtime statically."
msgstr ""

msgid ""
"The default is **yes** for iOS and WASM, and **no** for other platforms."
msgstr ""

msgid "**copy_mono_root**\\ =yes | **no**"
msgstr ""

msgid ""
"Whether to copy the Mono framework assemblies and configuration files "
"required by the Godot editor."
msgstr ""

msgid "Translation status"
msgstr "Status tłumaczenia"
