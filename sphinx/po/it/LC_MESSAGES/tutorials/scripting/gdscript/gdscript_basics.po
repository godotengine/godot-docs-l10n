# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript basics"
msgstr "Basi di GDScript"

msgid "Introduction"
msgstr "Introduzione"

msgid ""
"*GDScript* is a high-level, dynamically typed programming language used to "
"create content. It uses a syntax similar to `Python <https://en.wikipedia."
"org/wiki/Python_%28programming_language%29>`_ (blocks are indent-based and "
"many keywords are similar). Its goal is to be optimized for and tightly "
"integrated with Godot Engine, allowing great flexibility for content "
"creation and integration."
msgstr ""
"*GDScript* è un linguaggio di programmazione ad alto livello, dinamicamente "
"tipizzato, usato per creare contenuti. Usa una sintassi simile al `Python "
"<https://en.wikipedia.org/wiki/Python_%28programming_language%29>`_ (i "
"blocchi di codice dipendono dall'indentazione e molte parole chiave sono "
"simili). Il suo obiettivo è di essere ottimizzato e particolarmente "
"integrato con Godot, permettendo grande flessibilità per la creazione di "
"contenuti e integrazione."

msgid "History"
msgstr "Cronologia"

msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr ""
"La documentazione sulla storia di GDScript è stata spostata in: ref:`Domande "
"frequenti <doc_faq_what_is_gdscript>`."

msgid "Example of GDScript"
msgstr "Esempio di GDScript"

msgid ""
"Some people can learn better by taking a look at the syntax, so here's a "
"simple example of how GDScript looks."
msgstr ""
"Alcune persone possono imparare meglio dando un'occhiata alla sintassi, "
"quindi ecco un semplice esempio di come appare GDScript."

msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Se hai avuto esperienze con linguaggi staticamente tipizzati come C, C++, o "
"C# ma non hai mai usato un linguaggio dinamicamente tipizzato, è consigliato "
"che tu legga questo tutorial: :ref:`doc_gdscript_more_efficiently`."

msgid "Language"
msgstr "Lingua"

msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"In questa sezione viene data una panoramica di GDScript. Dettagli, come i "
"metodi disponibili per array e altri oggetti, dovrebbero essere cercati "
"nelle descrizioni delle classi."

msgid "Identifiers"
msgstr "Identificatori"

msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Una qualsiasi stringa, la quale contiene solo caratteri alfabetici (dalla "
"``a`` alla ``z`` e dalla ``A`` alla ``Z``), cifre (da ``0`` a ``9``) e ``_`` "
"può essere un identificatore. Inoltre, gli identificatori non devono "
"iniziare con una cifra. Gli identificatori fanno distinzione tra maiuscole e "
"minuscole (``foo`` è diverso da ``FOO``)."

msgid "Keywords"
msgstr "Parole chiave"

msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Ecco la lista di parole chiave supportate dal linguaggio. Siccome le parole "
"chiave sono riservate (token), non possono essere usate come identificatori. "
"Gli operatori (come ``in``, ``not``, ``and`` o ``or``) e i nomi dei tipi "
"built-in, elencati nella prossima sezione, sono anch'essi riservati."

msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Le parole chiave sono definite in `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ nel "
"caso tu voglia dare un'occhiata sotto il cofano."

msgid "Keyword"
msgstr "Parola chiave"

msgid "Description"
msgstr "Descrizione"

msgid "if"
msgstr "if"

msgid "See `if/else/elif`_."
msgstr "Vedi `if/else/elif`_."

msgid "elif"
msgstr "elif"

msgid "else"
msgstr "else"

msgid "for"
msgstr "for"

msgid "See for_."
msgstr "Vedi for_."

msgid "while"
msgstr "while"

msgid "See while_."
msgstr "Vedi while_."

msgid "match"
msgstr "match"

msgid "See match_."
msgstr "Vedi match_."

msgid "break"
msgstr "break"

msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Esce dall'esecuzione del ciclo ``for`` o ``while`` corrente."

msgid "continue"
msgstr "continue"

msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr ""
"Salta immediatamente alla prossima iterazione del ciclo ``for`` o ``while``."

msgid "pass"
msgstr "pass"

msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Usato quando un istruzione è richiesta sintatticamente ma non si desidera "
"che del codice venga eseguito, per esempio in una funzione vuota."

msgid "return"
msgstr "return"

msgid "Returns a value from a function."
msgstr "Restituisce un valore da una funzione."

msgid "class"
msgstr "class"

#, fuzzy
msgid "Defines an inner class."
msgstr "Definisce una classe interna."

msgid "class_name"
msgstr "class_name"

#, fuzzy
msgid "Defines a class name and optional icon for your script."
msgstr "Definisce il nome di una classe e un'icona facoltativa per lo script."

msgid "extends"
msgstr "extends"

msgid "Defines what class to extend with the current class."
msgstr "Definisce quale classe estendere nella classe corrente."

msgid "is"
msgstr "is"

msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr ""
"Verifica se una variabile estende una determinata classe o è di un "
"determinato tipo integrato."

msgid "as"
msgstr "as"

msgid "Cast the value to a given type if possible."
msgstr "Converte il valore in un certo tipo, se possibile."

msgid "self"
msgstr "self"

msgid "Refers to current class instance."
msgstr "Si riferisce all'istanza della classe corrente."

msgid "tool"
msgstr "tool"

msgid "Executes the script in the editor."
msgstr "Esegue lo script nell'editor."

msgid "signal"
msgstr "signal"

msgid "Defines a signal."
msgstr "Definisce un segnale."

msgid "func"
msgstr "func"

msgid "Defines a function."
msgstr "Definisce una funzione."

msgid "static"
msgstr "static"

msgid "Defines a static function. Static member variables are not allowed."
msgstr ""
"Definisce una funzione statica. Le variabili membro statiche non sono "
"consentite."

msgid "const"
msgstr "const"

msgid "Defines a constant."
msgstr "Definisce una costante."

msgid "enum"
msgstr "enum"

msgid "Defines an enum."
msgstr "Definisce un enumeratore."

msgid "var"
msgstr "var"

msgid "Defines a variable."
msgstr "Definisce una variabile."

msgid "onready"
msgstr "onready"

msgid ""
"Initializes a variable once the Node the script is attached to and its "
"children are part of the scene tree."
msgstr ""
"Inizializza una variabile una volta che il nodo è collegato allo script e i "
"suoi figli fanno parte dell'albero della scene."

msgid "export"
msgstr "export"

msgid ""
"Saves a variable along with the resource it's attached to and makes it "
"visible and modifiable in the editor."
msgstr ""
"Salva una variabile con la risorsa a cui è collegata e la rende visibile e "
"modificabile nell'editor."

msgid "setget"
msgstr "setget"

msgid "Defines setter and getter functions for a variable."
msgstr "Definisce delle funzioni per impostare ed ottenere una variabile."

msgid "breakpoint"
msgstr "breakpoint"

#, fuzzy
msgid "Editor helper for debugger breakpoints."
msgstr "Helper dell'editor per i punti di interruzione del debugger."

msgid "preload"
msgstr "preload"

msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr "Precarica una classe o una variabile. Vedi `Classes as resources`_."

msgid "yield"
msgstr "yield"

#, fuzzy
msgid "Coroutine support. See `Coroutines with yield`_."
msgstr "Supporto per le coroutine. Vedi `Coroutines with yield`_."

msgid "assert"
msgstr "assert"

#, fuzzy
msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Asserisce una condizione, registra l'errore in caso di fallimento. Ignorato "
"nelle build non di debug. Vedi `Assert keyword`_."

msgid "remote"
msgstr "remote"

#, fuzzy
msgid ""
"Networking RPC annotation. See :ref:`high-level multiplayer docs "
"<doc_high_level_multiplayer>`."
msgstr ""
"Annotazione Networking RPC. Vedi :ref: `documenti multiplayer di alto "
"livello <doc_high_level_multiplayer>`."

msgid "master"
msgstr "master"

msgid "puppet"
msgstr "puppet"

msgid "remotesync"
msgstr "remotesync"

msgid "mastersync"
msgstr "mastersync"

msgid "puppetsync"
msgstr "puppetsync"

msgid "PI"
msgstr "PI"

msgid "PI constant."
msgstr "Costante PI."

msgid "TAU"
msgstr "TAU"

msgid "TAU constant."
msgstr "Costante TAU."

msgid "INF"
msgstr "INF"

msgid "Infinity constant. Used for comparisons."
msgstr "Costante di infinito. Usata per i confronti."

msgid "NAN"
msgstr "NAN"

msgid "NAN (not a number) constant. Used for comparisons."
msgstr ""
"Costante per identificare un non-numero (Not A Number) Viene usato per i "
"confronti."

msgid "Operators"
msgstr "Operatori"

msgid "The following is the list of supported operators and their precedence."
msgstr ""
"Di seguito è riportato l'elenco degli operatori supportati e la loro "
"precedenza."

msgid "**Operator**"
msgstr "**Operatore**"

msgid "**Description**"
msgstr "**Descrizione**"

msgid "``x[index]``"
msgstr "``x[index]``"

#, fuzzy
msgid "Subscription (highest priority)"
msgstr "Abbonamento (massima priorità)"

msgid "``x.attribute``"
msgstr "``x.attribute``"

#, fuzzy
msgid "Attribute reference"
msgstr "Riferimento dell'attributo"

msgid "``foo()``"
msgstr "``foo()``"

msgid "Function call"
msgstr "Chiamata a funzione"

msgid "``is``"
msgstr "``is``"

msgid "Instance type checker"
msgstr "Controllo del tipo dell'istanza"

msgid "``~``"
msgstr "``~``"

#, fuzzy
msgid "Bitwise NOT"
msgstr "Operazione bit a bit NOT"

msgid "``-x``"
msgstr "``-x``"

msgid "Negative / Unary negation"
msgstr ""

msgid "``*`` ``/`` ``%``"
msgstr "``*`` ``/`` ``%``"

msgid "Multiplication / Division / Remainder"
msgstr "Moltiplicazione / Divisione / Resto"

msgid ""
"These operators have the same behavior as C++. Integer division is truncated "
"rather than returning a fractional number, and the % operator is only "
"available for ints (\"fmod\" for floats), and is additionally used for "
"Format Strings"
msgstr ""

msgid "``+``"
msgstr "``+``"

msgid "Addition / Concatenation of arrays"
msgstr ""

msgid "``-``"
msgstr "``-``"

msgid "Subtraction"
msgstr "Sottrazione"

msgid "``<<`` ``>>``"
msgstr "``<<`` ``>>``"

msgid "Bit shifting"
msgstr ""

msgid "``&``"
msgstr "``&``"

#, fuzzy
msgid "Bitwise AND"
msgstr "Operazione bit a bit AND"

msgid "``^``"
msgstr "``^``"

#, fuzzy
msgid "Bitwise XOR"
msgstr "Operazione bit a bit XOR"

msgid "``|``"
msgstr "``|``"

#, fuzzy
msgid "Bitwise OR"
msgstr "Operazione bit a bit OR"

msgid "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"
msgstr "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"

msgid "Comparisons"
msgstr "Comparazioni"

msgid "``in``"
msgstr "``in``"

msgid ""
"When used with the ``if`` keyword it checks if a value is within a string, "
"list, range, dictionary, or node. When used with the ``for`` keyword it is "
"used to iterate though the contents of a string, list, range, dictionary or "
"node."
msgstr ""

msgid "``!`` ``not``"
msgstr "``!`` ``not``"

#, fuzzy
msgid "Boolean NOT"
msgstr "Booleano NOT"

msgid "``and`` ``&&``"
msgstr "``and`` ``&&``"

#, fuzzy
msgid "Boolean AND"
msgstr "Booleano AND"

msgid "``or`` ``||``"
msgstr "``or`` ``||``"

#, fuzzy
msgid "Boolean OR"
msgstr "Booleano OR"

msgid "``if x else``"
msgstr "``if x else``"

#, fuzzy
msgid "Ternary if/else"
msgstr "Ternario if/else"

msgid "``as``"
msgstr "``as``"

#, fuzzy
msgid "Type casting"
msgstr "Conversione del tipo"

msgid "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=`` ``<<=`` ``>>=``"
msgstr "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=`` ``<<=`` ``>>=``"

#, fuzzy
msgid "Assignment (lowest priority)"
msgstr "Assegnazione (priorità più bassa)"

msgid "Literals"
msgstr "Letterali"

msgid "**Literal**"
msgstr "**Letterale**"

msgid "**Type**"
msgstr "**Tipo**"

msgid "``45``"
msgstr "``45``"

msgid "Base 10 integer"
msgstr "Numero intero in base 10"

msgid "``0x8f51``"
msgstr "``0x8F51``"

#, fuzzy
msgid "Base 16 (hexadecimal) integer"
msgstr "Numero intero in base 16 (esadecimale)"

msgid "``0b101010``"
msgstr "``0b101010``"

#, fuzzy
msgid "Base 2 (binary) integer"
msgstr "Numero intero in base 2 (binario)"

msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

#, fuzzy
msgid "Floating-point number (real)"
msgstr "Numero a virgola mobile (reale)"

msgid "``\"Hello\"``, ``\"Hi\"``"
msgstr "``\"Ciao\"``, ``\"Salve\"``"

msgid "Strings"
msgstr "Stringhe"

msgid "``\"\"\"Hello\"\"\"``"
msgstr "``\"\"\"Ciao\"\"\"``"

#, fuzzy
msgid "Multiline string"
msgstr "Stringa multilinea"

msgid "``@\"Node/Label\"``"
msgstr "``@\"Node/Label\"``"

msgid ":ref:`class_NodePath` or StringName"
msgstr ":ref:`class_NodePath` o StringName"

msgid "``$NodePath``"
msgstr "``$NodePath``"

msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr ""

msgid ""
"Integers and floats can have their numbers separated with ``_`` to make them "
"more readable. The following ways to write numbers are all valid::"
msgstr ""

msgid "Comments"
msgstr "Commenti"

#, fuzzy
msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Qualsiasi cosa da un ``#`` alla fine della linea è ignorata ed è considerata "
"un commento."

#, fuzzy
msgid "Built-in types"
msgstr "Tipi integrati"

msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The only exceptions are ``Array``\\ s and ``Dictionaries``, which "
"are passed by reference so they are shared. (Pooled arrays such as "
"``PoolByteArray`` are still passed as values.)"
msgstr ""

#, fuzzy
msgid "Basic built-in types"
msgstr "Tipi base incorporati (built-in)"

#, fuzzy
msgid "A variable in GDScript can be assigned to several built-in types."
msgstr ""
"Una variabile in GDScript può essere assegnata a diversi tipi built-in."

msgid "null"
msgstr "null"

msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` è un tipo di dati vuoto che non contiene informazioni e non può "
"esservi assegnato nessun altro valore."

msgid ":ref:`bool <class_bool>`"
msgstr ":ref:`bool <class_bool>`"

#, fuzzy
msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr ""
"Abbreviazione di \"booleano\", può contenere solo ``true`` o ``false``."

msgid ":ref:`int <class_int>`"
msgstr ":ref:`int <class_int>`"

msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to \"int64_t\" in C++."
msgstr ""

msgid ":ref:`float <class_float>`"
msgstr ":ref:`float <class_float>`"

msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to \"double\" in C++. Note: Currently, "
"data structures such as Vector2, Vector3, and PoolRealArray store 32-bit "
"single-precision \"float\" values."
msgstr ""

msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_. Strings can contain the following escape sequences:"
msgstr ""

#, fuzzy
msgid "**Escape sequence**"
msgstr "** Sequenza di fuga**"

#, fuzzy
msgid "**Expands to**"
msgstr "**Si espande a**"

msgid "``\\n``"
msgstr "``\\n``"

#, fuzzy
msgid "Newline (line feed)"
msgstr "Nuova riga (avanzamento riga)"

msgid "``\\t``"
msgstr "``\\t``"

#, fuzzy
msgid "Horizontal tab character"
msgstr "Carattere di tabulazione orizzontale"

msgid "``\\r``"
msgstr "``\\r``"

#, fuzzy
msgid "Carriage return"
msgstr "Andare a capo"

msgid "``\\a``"
msgstr "``\\a``"

#, fuzzy
msgid "Alert (beep/bell)"
msgstr "Avviso (segnale acustico/campanello)"

msgid "``\\b``"
msgstr "``\\b``"

msgid "Backspace"
msgstr "Cancella indietro"

msgid "``\\f``"
msgstr "``\\f``"

#, fuzzy
msgid "Formfeed page break"
msgstr "Interruzione di pagina Formfeed"

msgid "``\\v``"
msgstr "``\\v``"

#, fuzzy
msgid "Vertical tab character"
msgstr "Carattere di tabulazione verticale"

msgid "``\\\"``"
msgstr "``\\\"``"

#, fuzzy
msgid "Double quote"
msgstr "Doppia citazione"

msgid "``\\'``"
msgstr "``\\'``"

#, fuzzy
msgid "Single quote"
msgstr "Citazione singola"

msgid "``\\\\``"
msgstr "``\\\\``"

#, fuzzy
msgid "Backslash"
msgstr "Barra rovesciata"

msgid "``\\uXXXX``"
msgstr "``\\uXXXX``"

msgid "Unicode codepoint ``XXXX`` (hexadecimal, case-insensitive)"
msgstr ""
"Codice Unicode ``XXXX`` (esadecimale, senza distinzione tra maiuscole e "
"minuscole)"

#, fuzzy
msgid "GDScript also supports :ref:`doc_gdscript_printf`."
msgstr "GDScript supporta anche :ref:`doc_gdscript_printf`."

#, fuzzy
msgid "Vector built-in types"
msgstr "Tipi vettoriali incorporati"

msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

#, fuzzy
msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"Tipo di vettore 2D contenente i campi ``x`` e ``y``. Si può accedere anche "
"come array."

msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

#, fuzzy
msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"Tipo di rettangolo 2D contenente due campi vettore: ``position`` e ``size``. "
"Contiene anche un campo ``end`` che è ``position + size``."

msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"Tipo vettore 3D contenente i campi ``x``, ``y`` e ``z``. Si può anche "
"accedervi come un array."

msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

#, fuzzy
msgid "3×2 matrix used for 2D transforms."
msgstr "Matrice 3×2 utilizzata per le trasformazioni 2D."

msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

#, fuzzy
msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"Tipo di piano 3D in forma normalizzata che contiene un campo vettoriale "
"``normale`` e una distanza scalare ``d``."

msgid ":ref:`Quat <class_Quat>`"
msgstr ":ref:`Quat <class_Quat>`"

msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Il quaternione è un tipo di dato usato per rappresentare una rotazione 3D. È "
"utile per interpolare le rotazioni."

msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""

msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"La Matrice 3x3 è usata per la rotazione e la scala 3D. Contiene 3 campi "
"vettoriali (``x``, ``y`` e ``z``) e può anche essere accessibile come un "
"array di vettori 3D."

msgid ":ref:`Transform <class_Transform>`"
msgstr ":ref:`Transform <class_Transform>`"

#, fuzzy
msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"3D Transform contiene un campo Basis ``basis`` e un campo Vector3 ``origin``."

#, fuzzy
msgid "Engine built-in types"
msgstr "Tipi integrati del motore"

msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Il tipo di dati Color contiene i campi ``r``, ``g``, ``b`` e ``a``. Si può "
"anche accedere come ``h``, ``s`` e ``v`` per tonalità/saturazione/valore."

msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

#, fuzzy
msgid ""
"Compiled path to a node used mainly in the scene system. It can be easily "
"assigned to, and from, a String."
msgstr ""
"Percorso compilato di un nodo usato principalmente nel sistema delle scene. "
"Può essere facilmente assegnato a, e da, una stringa."

msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

#, fuzzy
msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"ID risorsa (RID). I server usano RID generici per fare riferimento a dati "
"opachi."

msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

#, fuzzy
msgid "Base class for anything that is not a built-in type."
msgstr "Classe base per tutto ciò che non è un tipo incorporato."

#, fuzzy
msgid "Container built-in types"
msgstr "Tipi di contenitori incorporati"

msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""

msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""

#, fuzzy
msgid ""
":ref:`PoolByteArray <class_PoolByteArray>`: An array of bytes (integers from "
"0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>`: Un array di byte (interi da 0 a "
"255)."

#, fuzzy
msgid ":ref:`PoolIntArray <class_PoolIntArray>`: An array of integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: Un array di interi."

#, fuzzy
msgid ":ref:`PoolRealArray <class_PoolRealArray>`: An array of floats."
msgstr ":ref:`PoolRealArray <class_PoolRealArray>`: Un array di float."

#, fuzzy
msgid ":ref:`PoolStringArray <class_PoolStringArray>`: An array of strings."
msgstr ":ref:`PoolStringArray <class_PoolStringArray>`: Un array di stringhe."

#, fuzzy
msgid ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: An array of :ref:`Vector2 "
"<class_Vector2>` objects."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: Un array di oggetti :ref:"
"`Vector2 <class_Vector2>`."

#, fuzzy
msgid ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: An array of :ref:`Vector3 "
"<class_Vector3>` objects."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: Un array di oggetti :ref:"
"`Vector3 <class_Vector3>`."

#, fuzzy
msgid ""
":ref:`PoolColorArray <class_PoolColorArray>`: An array of :ref:`Color "
"<class_Color>` objects."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>`: Un array di oggetti :ref:"
"`Color <class_Color>`."

msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Contenitore associativo che contiene valori referenziati da chiavi uniche."

msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier)."
msgstr ""

#, fuzzy
msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Per aggiungere una chiave a un dizionario esistente, accedervi come una "
"chiave esistente e assegnarle::"

msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""

msgid "Data"
msgstr "Dati"

msgid "Variables"
msgstr "Variabili"

#, fuzzy
msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Le variabili possono esistere come membri di classe o locali alle funzioni. "
"Sono create con la parola chiave ``var`` e possono, opzionalmente, essere "
"assegnate ad un valore al momento dell'inizializzazione."

msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""

msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""

msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""

msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""

#, fuzzy
msgid "Valid types are:"
msgstr "I tipi validi sono:"

msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr ""

#, fuzzy
msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr "Classi del motore (Node, Resource, Reference, ecc.)."

msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""

msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""

msgid "Script classes declared with the ``class_name`` keyword."
msgstr ""

msgid "Casting"
msgstr "Conversione del tipo"

msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""

msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""

msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""

msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""

msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""

msgid "Constants"
msgstr "Costanti"

msgid ""
"Constants are values you cannot change when the game is running. Their value "
"must be known at compile-time. Using the ``const`` keyword allows you to "
"give a constant value a name. Trying to assign a value to a constant after "
"it's declared will give you an error."
msgstr ""

msgid "We recommend using constants whenever a value is not meant to change."
msgstr ""

msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""

msgid "Assigning a value of an incompatible type will raise an error."
msgstr ""

msgid ""
"Since arrays and dictionaries are passed by reference, constants are "
"\"flat\". This means that if you declare a constant array or dictionary, it "
"can still be modified afterwards. They can't be reassigned with another "
"value though."
msgstr ""

msgid "Enums"
msgstr "Enumerazioni"

msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Gli enum sono fondamentalmente un'abbreviazione per le costanti, e sono "
"abbastanza utili se voui assegnare interi consecutivi a qualche costante."

msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant "
"dictionary of that name."
msgstr ""

msgid ""
"In Godot 3.1 and later, keys in a named enum are not registered as global "
"constants. They should be accessed prefixed by the enum's name (``Name."
"KEY``); see an example below."
msgstr ""

msgid "Functions"
msgstr "Funzioni"

#, fuzzy
msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""
"Le funzioni appartengono sempre a una `classe <Classe_>`_. La priorità di "
"scope per la ricerca delle variabili è: locale → membro della classe → "
"globale. La variabile ``self`` è sempre disponibile ed è fornita come "
"opzione per accedere ai membri della classe, ma non è sempre richiesta (e "
"non dovrebbe *non* essere inviata come primo argomento della funzione, "
"diversamente da Python)."

msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Una funzione può avere un ``valore di ritorno`` in qualsiasi punto. Il "
"valore di ritorno predefinito è ``null``."

msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""

msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""

msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""

msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""

msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""

msgid "Referencing functions"
msgstr "Funzioni di riferimento"

msgid ""
"Contrary to Python, functions are *not* first-class objects in GDScript. "
"This means they cannot be stored in variables, passed as an argument to "
"another function or be returned from other functions. This is for "
"performance reasons."
msgstr ""

msgid ""
"To reference a function by name at run-time, (e.g. to store it in a "
"variable, or pass it to another function as an argument) one must use the "
"``call`` or ``funcref`` helpers::"
msgstr ""

#, fuzzy
msgid "Static functions"
msgstr "Funzioni statiche"

msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. This is mainly useful "
"to make libraries of helper functions::"
msgstr ""

msgid "Statements and control flow"
msgstr "Dichiarazioni e flusso di controllo"

msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""
"Gli statement sono standard e possono essere assegnamenti, chiamate di "
"funzioni, strutture di flusso di controllo, ecc (vedi sotto). Il ``;`` come "
"separatore di dichiarazioni è completamente opzionale."

msgid "if/else/elif"
msgstr "if/else/elif"

#, fuzzy
msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""
"Le condizioni semplici sono create usando la sintassi ``if``/`else``/"
"`elif``. Le parentesi intorno alle condizioni sono permesse, ma non "
"richieste. Data la natura dell'indentazione basata sulla tabulazione, "
"``elif`` può essere usato al posto di ``else``/`if`` per mantenere un "
"livello di indentazione."

#, fuzzy
msgid "Short statements can be written on the same line as the condition::"
msgstr ""
"Le dichiarazioni brevi possono essere scritte sulla stessa linea della "
"condizione::"

msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""

msgid ""
"Ternary-if expressions can be nested to handle more than 2 cases. When "
"nesting ternary-if expressions, it is recommended to wrap the complete "
"expression over multiple lines to preserve readability::"
msgstr ""

msgid ""
"You may also wish to check if a value is contained within something. You can "
"use an ``if`` statement combined with the ``in`` operator to accomplish "
"this::"
msgstr ""

#, fuzzy
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue`` (i.e. skipping to the next "
"iteration of the loop without executing any further code in the current "
"iteration):"
msgstr ""
"I cicli semplici sono creati usando la sintassi ``while``. I cicli possono "
"essere interrotti usando ``break`` o continuati usando ``continue``:"

msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""

msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""

msgid "Basic syntax::"
msgstr "Sintassi di base::"

msgid "**Crash-course for people who are familiar with switch statements**:"
msgstr ""

#, fuzzy
msgid "Replace ``switch`` with ``match``."
msgstr "Sostituisci ``switch`` con ``match``."

#, fuzzy
msgid "Remove ``case``."
msgstr "Rimuovi ``case``."

#, fuzzy
msgid ""
"Remove any ``break``\\ s. If you don't want to ``break`` by default, you can "
"use ``continue`` for a fallthrough."
msgstr ""
"Rimuovi qualsiasi ``break``\\ s. Se non vuoi ``break`` per impostazione "
"predefinita, puoi usare ``continue`` come fallthrough."

#, fuzzy
msgid "Change ``default`` to a single underscore."
msgstr "Cambia ``default`` con un singolo trattino basso."

#, fuzzy
msgid "**Control flow**:"
msgstr "**Flusso di controllo**:"

msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement. You can use ``continue`` to stop execution in "
"the current block and check for an additional match in the patterns below it."
msgstr ""

#, fuzzy
msgid "There are 6 pattern types:"
msgstr "Ci sono 6 tipi di modelli:"

msgid "Constant pattern"
msgstr "Modello costante"

msgid "Constant primitives, like numbers and strings::"
msgstr ""

msgid "Variable pattern"
msgstr ""

#, fuzzy
msgid "Matches the contents of a variable/enum::"
msgstr "Corrisponde al contenuto di una variabile/enum::"

msgid "Wildcard pattern"
msgstr ""

#, fuzzy
msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Questo schema corrisponde a tutto. È scritto come un singolo trattino basso."

msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""

#, fuzzy
msgid "Binding pattern"
msgstr "Modello di collegamneto"

msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""

msgid "Array pattern"
msgstr ""

msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""

msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""

msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""

msgid "Every subpattern has to be comma-separated."
msgstr ""

msgid "Dictionary pattern"
msgstr ""

#, fuzzy
msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""
"Funziona allo stesso modo del modello di array. Ogni chiave deve essere un "
"pattern costante."

msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""

msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""

#, fuzzy
msgid "Every subpattern has to be comma separated."
msgstr "Ogni subpattern deve essere separato da una virgola."

#, fuzzy
msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr ""
"Se non si specifica un valore, viene controllata solo l'esistenza della "
"chiave."

msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr ""

msgid "Multiple patterns"
msgstr "Modelli multipli"

msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""

msgid "Classes"
msgstr "Classi"

#, fuzzy
msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""
"Per impostazione predefinita, tutti i file di script sono classi senza nome. "
"In questo caso, puoi solo fare riferimento a loro usando il percorso del "
"file, usando un percorso relativo o assoluto. Ad esempio, se si denomina un "
"file di script `` character.gd`` ::"

#, fuzzy
msgid "Registering named classes"
msgstr "Registra script come classi"

#, fuzzy
msgid ""
"You can give your class a name to register it as a new type in Godot's "
"editor. For that, you use the ``class_name`` keyword. You can optionally add "
"a comma followed by a path to an image, to use it as an icon. Your class "
"will then appear with its new icon in the editor::"
msgstr ""
"Invece, potete dare alla vostra classe un nome per registrarla come nuovo "
"tipo nell'editor di Godot. Per questo, si usa la parola chiave "
"``class_name``. Puoi aggiungere una virgola opzionale seguita da un percorso "
"ad un'immagine, per usarla come icona. La tua classe apparirà con la sua "
"nuova icona nell'editor::"

msgid ""
"If the script is located in the ``res://addons/`` directory, ``class_name`` "
"will only cause the node to show up in the **Create New Node** dialog if the "
"script is part of an *enabled* editor plugin. See :ref:`doc_making_plugins` "
"for more information."
msgstr ""

#, fuzzy
msgid "Here's a class file example:"
msgstr "Ecco un esempio di file di classe:"

msgid ""
"Godot's class syntax is compact: it can only contain member variables or "
"functions. You can use static functions, but not static member variables. In "
"the same way, the engine initializes variables every time you create an "
"instance, and this includes arrays and dictionaries. This is in the spirit "
"of thread safety, since scripts can be initialized in separate threads "
"without the user knowing."
msgstr ""

msgid "Inheritance"
msgstr "Ereditarietà"

msgid "A class (stored as a file) can inherit from:"
msgstr ""

msgid "A global class."
msgstr "Una classe globale."

#, fuzzy
msgid "Another class file."
msgstr "Un altro file di classe."

#, fuzzy
msgid "An inner class inside another class file."
msgstr "Una classe interna in un altro file di classe."

#, fuzzy
msgid "Multiple inheritance is not allowed."
msgstr "L'ereditarietà multipla non è consentita."

msgid "Inheritance uses the ``extends`` keyword::"
msgstr ""

msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""

msgid ""
"To call a function in a *parent class* (i.e. one ``extend``-ed in your "
"current class), prepend ``.`` to the function name::"
msgstr ""

msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their parent classes. If you still want to "
"call them, you can prefix them with ``.`` (like the ``super`` keyword in "
"other languages)::"
msgstr ""

msgid ""
"Default functions like  ``_init``, and most notifications such as "
"``_enter_tree``, ``_exit_tree``, ``_process``, ``_physics_process``, etc. "
"are called in all parent classes automatically. There is no need to call "
"them explicitly when overloading them."
msgstr ""

#, fuzzy
msgid "Class constructor"
msgstr "Costruttore di classe"

msgid ""
"The class constructor, called on class instantiation, is named ``_init``. As "
"mentioned earlier, the constructors of parent classes are called "
"automatically when inheriting a class. So, there is usually no need to call "
"``._init()`` explicitly."
msgstr ""

msgid ""
"Unlike the call of a regular function, like in the above example with ``."
"some_func``, if the constructor from the inherited class takes arguments, "
"they are passed like this::"
msgstr ""

msgid "This is better explained through examples. Consider this scenario::"
msgstr ""

msgid "There are a few things to keep in mind here:"
msgstr "Ci sono alcune cose da tenere a mente qui:"

msgid ""
"If the inherited class (``State.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``Idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``State.gd``."
msgstr ""

msgid ""
"``Idle.gd`` can have a different number of arguments than the parent class "
"``State.gd``."
msgstr ""

msgid ""
"In the example above, ``e`` passed to the ``State.gd`` constructor is the "
"same ``e`` passed in to ``Idle.gd``."
msgstr ""

msgid ""
"If ``Idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``State.gd`` parent class, even if it does nothing. "
"This brings us to the fact that you can pass literals in the base "
"constructor as well, not just variables, e.g.::"
msgstr ""

#, fuzzy
msgid "Inner classes"
msgstr "Classi interne"

#, fuzzy
msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Un file di classe può contenere classi interne. Le classi interne sono "
"definite usando la parola chiave ``class``. Sono istanziate usando la "
"funzione ``ClassName.new()``."

#, fuzzy
msgid "Classes as resources"
msgstr "Classi come risorse"

msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""

msgid "Exports"
msgstr "Esportazioni"

#, fuzzy
msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr ""
"La documentazione sulle esportazioni è stata spostata in :ref:"
"`doc_gdscript_exports`."

msgid "Setters/getters"
msgstr "Setters/getters"

msgid ""
"It is often useful to know when a class' member variable changes for "
"whatever reason. It may also be desired to encapsulate its access in some "
"way."
msgstr ""

#, fuzzy
msgid ""
"For this, GDScript provides a *setter/getter* syntax using the ``setget`` "
"keyword. It is used directly after a variable definition:"
msgstr ""
"Per questo, GDScript fornisce una sintassi *setter/getter* usando la parola "
"chiave ``setget``. Viene usata direttamente dopo la definizione di una "
"variabile:"

msgid ""
"Whenever the value of ``variable`` is modified by an *external* source (i.e. "
"not from local usage in the class), the *setter* function (``setterfunc`` "
"above) will be called. This happens *before* the value is changed. The "
"*setter* must decide what to do with the new value. Vice versa, when "
"``variable`` is accessed, the *getter* function (``getterfunc`` above) must "
"``return`` the desired value. Below is an example::"
msgstr ""

msgid "Either of the *setter* or *getter* functions can be omitted::"
msgstr ""

msgid ""
"Setters and getters are useful when :ref:`exporting variables "
"<doc_gdscript_exports>` to the editor in tool scripts or plugins, for "
"validating input."
msgstr ""

msgid ""
"As said, *local* access will *not* trigger the setter and getter. Here is an "
"illustration of this:"
msgstr ""

#, fuzzy
msgid "Tool mode"
msgstr "Modalità strumento"

msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``tool`` keyword exists and must be placed at the "
"top of the file::"
msgstr ""

msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr "Vedi :ref:`doc_running_code_in_the_editor` per maggiori informazioni."

msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""

#, fuzzy
msgid "Memory management"
msgstr "Gestione della memoria"

msgid ""
"If a class inherits from :ref:`class_Reference`, then instances will be "
"freed when no longer in use. No garbage collector exists, just reference "
"counting. By default, all classes that don't define inheritance extend "
"**Reference**. If this is not desired, then a class must inherit :ref:"
"`class_Object` manually and must call ``instance.free()``. To avoid "
"reference cycles that can't be freed, a :ref:`class_WeakRef` function is "
"provided for creating weak references. Here is an example:"
msgstr ""

msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""

msgid "Signals"
msgstr "Segnali"

msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""

msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""

msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody`."
msgstr ""

msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_Character_health_depleted`` is called::"
msgstr ""

msgid "You can emit as many arguments as you want along with a signal."
msgstr ""

msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""

msgid ""
"In our ``Character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Object.emit_signal() <class_Object_method_emit_signal>`, "
"and from a ``Game`` node higher up our scene tree, we connect it to the "
"``Lifebar`` using the :ref:`Object.connect() <class_Object_method_connect>` "
"method::"
msgstr ""

msgid ""
"To use signals, your class has to extend the ``Object`` class or any type "
"extending it like ``Node``, ``KinematicBody``, ``Control``..."
msgstr ""

msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""

msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""

msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""

msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""

msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""

msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""

msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""

msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""

msgid "Coroutines with yield"
msgstr ""

msgid ""
"GDScript offers support for `coroutines <https://en.wikipedia.org/wiki/"
"Coroutine>`_ via the :ref:`yield<class_@GDScript_method_yield>` built-in "
"function. Calling ``yield()`` will immediately return from the current "
"function, with the current frozen state of the same function as the return "
"value. Calling ``resume()`` on this resulting object will continue execution "
"and return whatever the function returns. Once resumed, the state object "
"becomes invalid. Here is an example::"
msgstr ""

#, fuzzy
msgid "Will print::"
msgstr "Stamperà::"

msgid ""
"It is also possible to pass values between ``yield()`` and ``resume()``, for "
"example::"
msgstr ""

msgid ""
"Remember to save the new function state, when using multiple ``yield``\\s::"
msgstr ""

#, fuzzy
msgid "Coroutines & signals"
msgstr "Coroutine & segnali"

msgid ""
"The real strength of using ``yield`` is when combined with signals. "
"``yield`` can accept two arguments, an object and a signal. When the signal "
"is received, execution will recommence. Here are some examples::"
msgstr ""

msgid ""
"Coroutines themselves use the ``completed`` signal when they transition into "
"an invalid state, for example::"
msgstr ""

msgid ""
"``my_func`` will only continue execution once both buttons have been pressed."
msgstr ""

msgid "You can also get the signal's argument once it's emitted by an object:"
msgstr ""

msgid ""
"If there is more than one argument, ``yield`` returns an array containing "
"the arguments::"
msgstr ""

msgid ""
"If you're unsure whether a function may yield or not, or whether it may "
"yield multiple times, you can yield to the ``completed`` signal "
"conditionally:"
msgstr ""

msgid ""
"This ensures that the function returns whatever it was supposed to return "
"regardless of whether coroutines were used internally. Note that using "
"``while`` would be redundant here as the ``completed`` signal is only "
"emitted when the function didn't yield anymore."
msgstr ""

#, fuzzy
msgid "`onready` keyword"
msgstr "Parola chiave Onready"

msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""

msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``onready`` keyword, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""

#, fuzzy
msgid "Assert keyword"
msgstr "Parola chiave Assert"

msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""

msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""

msgid "Translation status"
msgstr "Stato della traduzione"
