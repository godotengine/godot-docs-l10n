# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Creating the player scene"
msgstr "Creazione dei poligoni"

msgid ""
"With the project settings in place, we can start working on the player-"
"controlled character."
msgstr ""

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"La prima scena definirà l'oggetto ``Player``. Uno dei vantaggi di creare una "
"scena separata per il giocatore è che possiamo testarla separatamente, anche "
"prima di aver creato altre parti del gioco."

msgid "Node structure"
msgstr "Struttura del nodo"

msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""
"Per iniziare, dobbiamo scegliere un nodo radice per l'oggetto giocatore. "
"Come regola generale, il nodo radice di una scena dovrebbe riflettere la "
"funzionalità desiderata dell'oggetto - ciò che l'oggetto *è*. Fare clic sul "
"pulsante \"Altro nodo\" e aggiungere un nodo :ref:`Area2D <class_Area2D>`` "
"alla scena."

msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godot mostrerà un'icona di avvertimento accanto al nodo nell'albero della "
"scena. Per ora lo puoi ignorare. Ce ne occuperemo successivamente."

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"Con il nodo ``Area2D`` possiamo rilevare gli oggetti che si sovrappongono o "
"scontrano con il giocatore. Rinomina il nodo in ``Player`` facendo doppio "
"click sopra di esso. Ora che abbiamo impostato la scena principale, possiamo "
"aggiungere ulteriori nodi al giocatore per aggiungere altre funzionalità."

msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"Prima di aggiungere figli al nodo ``Player``, vogliamo assicurarci di non "
"muoverli o ridimensionarli accidentalmente cliccandoci sopra. Seleziona il "
"nodo e fai click sull'icona a destra del lucchetto; la descrizione del "
"comando dice \"Accerta che i figli dell'oggetto non siano selezionabili.\""

msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Salva la scena. Clicca su Scena -> Salva, oppure premi :kbd:`Ctrl + S` su "
"Windows/Linux o :kbd:`Cmd + S` su macOS."

msgid "For this project, we will be following the Godot naming conventions."
msgstr ""
"Per questo progetto, seguiremo le convenzioni di denominazione di Godot."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Le classi (nodi) usano PascalCase, le variabili e le funzioni "
"snake_case e le costanti usano ALL_CAPS (Vedi :ref:"
"`doc_gdscript_styleguide`)."

#, fuzzy
msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Le classi, le variabili export e i metodi usano PascalCase, i campi "
"privati usano _camelCase, le variabili locali e i parametri usano camelCase "
"(Vedi :ref:`doc_c_sharp_styleguide`). Bisogna dare attenzione a scrivere il "
"nome dei metodi correttamente quando si connettono i segnali."

msgid "Sprite animation"
msgstr "Animazione Sprite"

#, fuzzy
msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"[empty]\" -> \"New SpriteFrames\". Click again to open the "
"\"SpriteFrames\" panel:"
msgstr ""
"Clicca su il nodo ``Player`` e aggiungi un :ref:`AnimatedSprite "
"<class_AnimatedSprite>` come figlio. Il nodo ``AnimatedSprite`` si occuperà "
"dell'aspetto e delle animazioni del nostro giocatore. Nota che ci sarà un "
"segnale di allarme vicino al nodo. Un ``AnimatedSprite`` richiede una "
"risorsa :ref:`SpriteFrames <class_SpriteFrames>`, la quale è una lista di "
"animazioni che può mostrare. Per crearne una, cerca la proprietà ``Frames`` "
"nell'Inspector e clicca \"[vuoto]\" -> \"Nuovo SpriteFrames\". Clicca ancora "
"per aprire il pannello \"SpriteFrames\":"

msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"walk\". Then click the \"New Animation\" button to create a second "
"animation named \"up\". Find the player images in the \"FileSystem\" tab - "
"they're in the ``art`` folder you unzipped earlier. Drag the two images for "
"each animation, named ``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, "
"into the \"Animation Frames\" side of the panel for the corresponding "
"animation:"
msgstr ""
"Sulla sinistra c'è un elenco di animazioni. Fai clic su quella chiamata "
"\"default\" e rinominala in \"walk\". Quindi fare clic sul pulsante \"Nuova "
"animazione\" per creare una seconda animazione denominata \"up\". Trova le "
"immagini del giocatore nella scheda \"FileSystem\", si trovano nella "
"cartella `` art`` che hai decompresso in precedenza. Trascina le due "
"immagini per ogni animazione, chiamate `` playerGrey_up [1/2] `` e `` "
"playerGrey_walk [1/2] ``, nella parte \"Fotogrammi animazione\" del pannello "
"per l'animazione corrispondente:"

#, fuzzy
msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"Le immagini del giocatore sono un po' troppo grandi per la finestra di "
"gioco, quindi dobbiamo rimpicciolirle. Fai clic sul nodo ``AnimatedSprite`` "
"e imposta la proprietà ``Scale`` a ``(0.5, 0.5)``. La si può trovare "
"all'interno dell' Inspector nella sezione ``Node2D``."

#, fuzzy
msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\"\" -> "
"\"New CapsuleShape2D\". Using the two size handles, resize the shape to "
"cover the sprite:"
msgstr ""
"Infine, aggiungi un :ref:`CollisionShape2D <class_CollisionShape2D>` come "
"figlio di ``Player``. Questo determinerà la \"hitbox\" del giocatore, in "
"altre parole i limiti dell'area di collisione. Per questo personaggio, un "
"nodo ``CapsuleShape2D`` è la scelta migliore, quindi vicino a \"Shape\" nel "
"Inspector, clicca \"[empty]\"\" -> \"New CapsuleShape2D\". Usando le due "
"maniglie di dimensione, ridimensiona la forma in modo da coprire la sprite:"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr ""
"Quando hai finito, la tua scena ``Player`` dovrebbe essere simile a questa:"

msgid "Make sure to save the scene again after these changes."
msgstr "Assicurati di salvare di nuovo la scena dopo queste modifiche."

msgid ""
"In the next part, we'll add a script to the player node to move and animate "
"it. Then, we'll set up collision detection to know when the player got hit "
"by something."
msgstr ""

msgid "Translation status"
msgstr "Stato della traduzione"
