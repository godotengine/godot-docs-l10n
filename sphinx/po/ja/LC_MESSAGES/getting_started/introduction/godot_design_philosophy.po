# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot's design philosophy"
msgstr "Godotの設計哲学"

msgid "Now that you've gotten your feet wet, let's talk about Godot's design."
msgstr "一通り学んだところで、Godotのデザインについて説明しましょう。"

msgid ""
"**Every game engine is different and fits different needs.** Not only do "
"they offer a range of features, but the design of each engine is unique. "
"This leads to different workflows and different ways to form your games' "
"structures. This all stems from their respective design philosophies."
msgstr ""
"**すべてのゲームエンジンは、それぞれ別のニーズに合わせて作られています。**\\ "
"単に機能の違いだけではなく、エンジンによって異なる設計がされているのです。こ"
"れにより、ワークフローや、ゲームを構築する方法に違いを生み出します。これらは"
"すべて設計哲学に由来するものです。"

msgid ""
"This page is here to help you understand how Godot works, starting with some "
"of its core pillars. It is not a list of available features, nor is it an "
"engine comparison. To know if any engine can be a good fit for your project, "
"you need to try it out for yourself and understand its design and "
"limitations."
msgstr ""
"このページは、Godotがどのように機能するのかを理解するのに役立ちます。これは利"
"用可能な機能のリストでもエンジンの比較でもありません。自分のプロジェクトに適"
"したエンジンがあるかどうかを知るには、自分で試してみて、その設計と制限を理解"
"する必要があります。"

msgid ""
"Please watch `Godot explained in 5 minutes <https://www.youtube.com/watch?"
"v=KjX5llYZ5eQ>`_ if you're looking for an overview of the engine's features."
msgstr ""
"エンジンの機能の概要を知りたい場合は、Youtubeにある\\ `Discover Godot 3, the "
"Free game engine <https://youtu.be/4v3qge-3CqQ>`_\\ (英語)をご覧ください。"

msgid "Object-oriented design and composition"
msgstr "オブジェクト指向の設計と構成"

msgid ""
"Godot embraces object-oriented design at its core with its flexible scene "
"system and Node hierarchy. It tries to stay away from strict programming "
"patterns to offer an intuitive way to structure your game."
msgstr ""
"Godotは、柔軟なシーンシステムとノード階層を備えたオブジェクト指向設計をコアに"
"採用しています。ゲームを直感的に構築する方法を提供するために、厳密なプログラ"
"ミング・パターンを避けています。"

msgid ""
"For one, Godot lets you **compose or aggregate** scenes. It's like nested "
"prefabs: you can create a BlinkingLight scene and a BrokenLantern scene that "
"uses the BlinkingLight. Then, create a city filled with BrokenLanterns. "
"Change the BlinkingLight's color, save, and all the BrokenLanterns in the "
"city will update instantly."
msgstr ""
"一例として、Godotはあなたがシーンを\\ **構成または集約すること**\\ を可能にし"
"ます。これは入れ子になったプレハブのようなものです。BlinkingLight(ちらつく"
"光) シーンと、そのBlinkingLightを使用するBrokenLantern(壊れたランタン) シーン"
"を作成できます。その次に、BrokenLanternでいっぱいの街を作成します。それから"
"BlinkingLightの色を変更して保存すると、街にあるすべてのBrokenLanternが即座に"
"更新されます。"

msgid "On top of that, you can **inherit** from any scene."
msgstr "それに加えて、あらゆるシーンから\\ **継承すること**\\ ができます。"

msgid ""
"A Godot scene could be a Weapon, a Character, an Item, a Door, a Level, part "
"of a level… anything you'd like. It works like a class in pure code, except "
"you're free to design it by using the editor, using only the code, or mixing "
"and matching the two."
msgstr ""
"Godotのシーンは、武器になったり、キャラクター、アイテム、ドア、レベル、レベル"
"の一部……など、何にでもなれます。これは純粋なコードにおけるクラスのような働き"
"をします。しかしシーンは、エディタのみを使って作ることも、コードのみで構成す"
"ることも、あるいは両方組み合わせて作成することもできます。"

msgid ""
"It's different from prefabs you find in several 3D engines, as you can then "
"inherit from and extend those scenes. You may create a Magician that extends "
"your Character. Modify the Character in the editor and the Magician will "
"update as well. It helps you build your projects so that their structure "
"matches the game's design."
msgstr ""
"これは、いくつかの3Dエンジンにあるようなプレハブとは異なるものです。シーンは"
"他のシーンから継承し、派生させることができます。キャラクターから派生させて魔"
"法使いを作ることもできます。そしてキャラクターをエディタで編集すれば、魔法使"
"いにも変更が反映されます。このように、ゲームのデザインに合わせてプロジェクト"
"を構築する助けとなります。"

msgid "|image0|"
msgstr "\\ |image0|"

msgid "image0"
msgstr "image0"

msgid ""
"Also note that Godot offers many different types of objects called nodes, "
"each with a specific purpose. Nodes are part of a tree and always inherit "
"from their parents up to the Node class. Although the engine does feature "
"some nodes like collision shapes that a parent physics body will use, most "
"nodes work independently from one another."
msgstr ""
"また、Godotにはノードと呼ばれるさまざまなタイプのオブジェクトがあり、それぞれ"
"に特定の目的を持っていることに注意してください。ノードはツリーの一部であり、"
"常に親からNodeクラスまでを継承します。エンジンには、親の物理ボディが使用する"
"コリジョンシェイプなどのノードがありますが、ほとんどのノードは互いに独立して"
"動作します。"

msgid ""
"In other words, Godot's nodes do not work like components in some other game "
"engines."
msgstr ""
"つまりGodotのノードは、他のゲームエンジンのコンポーネントのようには動作しな"
"い、ということです。"

msgid "|image1|"
msgstr "\\ |image1|"

msgid "image1"
msgstr "image1"

msgid ""
"Sprite is a Node2D, a CanvasItem and a Node. It has all the properties and "
"features of its three parent classes, like transforms or the ability to draw "
"custom shapes and render with a custom shader."
msgstr ""
"スプライトは、Node2D、CanvasItem、Nodeの3つの要素を持っています。スプライト"
"は、トランスフォームやカスタムシェイプの描画、カスタムシェーダーによるレンダ"
"リングなど、3つの親クラスのすべてのプロパティと機能を備えています。"

msgid "All-inclusive package"
msgstr "オールインワン・パッケージ"

msgid ""
"Godot tries to provide its own tools to answer most common needs. It has a "
"dedicated scripting workspace, an animation editor, a tilemap editor, a "
"shader editor, a debugger, a profiler, the ability to hot-reload locally and "
"on remote devices, etc."
msgstr ""
"Godotは最も一般的なニーズに答えるために、備えているツールを提供しようとしま"
"す。専用のスクリプトワークスペース、アニメーションエディタ、タイルマップエ"
"ディタ、シェーダエディタ、デバッガ、プロファイラ、ローカルおよびリモートデバ"
"イス上でのホットリロードなどが可能です。"

msgid "|image2|"
msgstr "\\ |image2|"

msgid "image2"
msgstr "image2"

msgid ""
"The goal is to offer a full package to create games and a continuous user "
"experience. You can still work with external programs as long as there is an "
"import plugin for it. Or you can create one, like the `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`__."
msgstr ""
"目標は、ゲームを作成するための完全なパッケージと、途切れないユーザー エクスペ"
"リエンスを提供することです。外部プログラムからのインポート用プラグインがある"
"場合は、外部プログラムでの作業もできます。あるいは、\\ `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`_\\ のようなプラグインを作成す"
"るのもいいでしょう。"

msgid ""
"That is also partly why Godot offers its own programming languages GDScript "
"and VisualScript, along with C#. They're designed for the needs of game "
"developers and game designers, and they're tightly integrated in the engine "
"and the editor."
msgstr ""
"GodotがC#とともに独自のプログラミング言語であるGDScriptとVisualScriptを提供し"
"ているのもそのためです。これらの言語は、ゲーム開発者やゲームデザイナーのニー"
"ズに合わせて設計されており、エンジンやエディタにしっかりと統合されています。"

msgid ""
"GDScript lets you write code using an indentation-based syntax, yet it "
"detects types and offers a static language's quality of auto-completion. It "
"is also optimized for gameplay code with built-in types like Vectors and "
"Colors."
msgstr ""
"GDScriptでは、インデントベースの構文を使ってコードを書くことができ、しかも型"
"を検出して静的型付け言語並の品質のオートコンプリートを提供します。また、ベク"
"ターやカラーなどの組み込み型を使ったゲーム開発用のコードに最適化されていま"
"す。"

msgid ""
"Note that with GDNative, you can write high-performance code using compiled "
"languages like C, C++, Rust, or Python (using the Cython compiler) without "
"recompiling the engine."
msgstr ""
"GDNativeを使用すると、エンジンを再コンパイルすることなく、C、C++、Rust、また"
"はPython(Cythonコンパイラを使用)などのコンパイル済み言語を使用して高性能コー"
"ドを作成できます。"

msgid "|image3|"
msgstr "\\ |image3|"

msgid "image3"
msgstr "image3"

msgid ""
"*VisualScript is a node-based programming language that integrates well in "
"the editor. You can drag and drop nodes or resources into the graph to "
"create new code blocks.*"
msgstr ""
"*VisualScriptは、エディタにうまく統合されたノードベースのプログラミング言語で"
"す。ノードまたはリソースをグラフにドラッグアンドドロップして、新しいコードブ"
"ロックを作成できます。*"

msgid ""
"Note that the 3D workspace doesn't feature as many tools as the 2D "
"workspace. You'll need external programs or add-ons to edit terrains, "
"animate complex characters, and so on. Godot provides a complete API to "
"extend the editor's functionality using game code. See `The Godot editor is "
"a Godot game`_ below."
msgstr ""
"3Dワークスペースには、2Dワークスペースほど多くのツールはありません。地形を編"
"集したり、複雑なキャラクターをアニメーション化したりするには、外部プログラム"
"やアドオンが必要です。Godotは、ゲームコードを使用してエディタの機能を拡張する"
"ための完全なAPIを提供しています。下の `The Godot editor is a Godot game`_ を"
"参照してください。"

msgid "|image4|"
msgstr "\\ |image4|"

msgid "image4"
msgstr "image4"

msgid ""
"*A State Machine editor plugin in Godot 2 by kubecz3k. It lets you manage "
"states and transitions visually.*"
msgstr ""
"*kubecz3k氏制作のGodot 2用プラグインであるステートマシン・エディタ。状態およ"
"び遷移を視覚的に整理できます。*"

msgid ""
"`Godot 4.0 will remove VisualScript from core entirely. <https://godotengine."
"org/article/godot-4-will-discontinue-visual-scripting>`__ As a result, "
"creating new projects using visual scripting in Godot is not recommended. "
"Future Godot 4.x releases may have VisualScript reimplemented as an "
"extension."
msgstr ""
"`Godot4.0ではビジュアルスクリプトを完全に廃止することが決定されています。"
"<https://godotengine.org/article/godot-4-will-discontinue-visual-scripting>` "
"そのため、これからビジュアルスクリプトを使用してプロジェクトを作成するのは推"
"奨されていません。Godot4.0より先のバージョンでビジュアルスクリプトを拡張機能"
"としてリリースする可能性はあります。"

msgid ""
"While Godot 3.x will keep VisualScript supported, we recommend :ref:`trying "
"out GDScript <toc-learn-scripting-gdscript>` instead, especially if you "
"intend to migrate your project to Godot 4."
msgstr ""
"Godot3はビジュアルスクリプトをサポートしているものの、特にGodot4に移行したい"
"と考えている場合はこちらを :ref:`trying out GDScript <toc-learn-scripting-"
"gdscript>` 見ることをお勧めします。"

msgid "Open source"
msgstr "オープンソース"

msgid ""
"Godot offers a fully open source codebase under the **MIT license**. This "
"means all the technologies that ship with it have to be Free (as in freedom) "
"as well. For the most part, they're developed from the ground up by "
"contributors."
msgstr ""
"Godotのコードベースは\\ **MITライセンス**\\ のもとで完全にオープンソースと"
"なっています。これはつまり、Godotエンジンに付属するコードは、フリー(自由)でな"
"ければならない、ということです。それらのコードはほとんどの場合、人々の貢献に"
"よって開発されたものです。"

msgid ""
"Anyone can plug in proprietary tools for the needs of their projects — they "
"just won't ship with the engine. This may include Google AdMob, or FMOD. Any "
"of these can come as third-party plugins instead."
msgstr ""
"もしプロジェクトに必要とあれば、プロプライエタリ(非オープン)なプラグインを追"
"加することは可能ですが、しかしエンジンに最初から付属はしていません。これには"
"Google AdMobやFMODなどが当てはまるでしょう。いずれもサードパーティーのプラグ"
"インとして追加できます。"

msgid ""
"On the other hand, an open codebase means you can **learn from and extend "
"the engine** to your heart's content. You can also debug games easily, as "
"Godot will print errors with a stack trace, even if they come from the "
"engine itself."
msgstr ""
"一方、コードベースがオープンであるということは、心ゆくまで\\ **エンジンの内部"
"を学んだり、拡張することができます。**\\ またこれによりGodotは、エンジン自身"
"のものも含めて、スタックトレース付きのエラーを表示できるので、ゲームのデバッ"
"グがより容易になります。"

msgid ""
"This **does not affect the work you do with Godot** in any way: there's no "
"strings attached to the engine or anything you make with it."
msgstr ""
"これは\\ **Godotで作られた作品にはなんら影響をおよぼしません。**\\ Godotエン"
"ジン自体にも、それで作られたものにも、使用条件が課されることはありません。"

msgid "Community-driven"
msgstr "コミュニティ主導"

msgid ""
"**Godot is made by its community, for the community, and for all game "
"creators out there.** It's the needs of the users and open discussions that "
"drive the core updates. New features from the core developers often focus on "
"what will benefit the most users first."
msgstr ""
"**Godotは、そのコミュニティによって、コミュニティのために、そしてすべてのゲー"
"ムクリエイターのために作られています。**\\ コアアップデートを推進するのは、"
"ユーザーのニーズとオープンな議論です。コア開発者が提供する新機能は、多くの場"
"合、最も多くのユーザーにメリットをもたらすものに重点が置かれます。"

msgid ""
"That said, although a handful of core developers work on it full-time, the "
"project has over 600 contributors at the time of writing. Benevolent "
"programmers work on features they may need themselves, so you'll see "
"improvements in all corners of the engine at the same time in every major "
"release."
msgstr ""
"つまり、フルタイムで働く中心的開発者はわずか数名ですが、このプロジェクトには"
"現時点で600名を超える貢献者がおります。善意のプログラマーの方々が自分自身の求"
"める機能を追加していくので、メジャーリリースのたびにエンジンのあらゆる点が改"
"善されていくのです。"

msgid "The Godot editor is a Godot game"
msgstr "Godotエディタ自身がGodotのゲーム"

msgid ""
"The Godot editor runs on the game engine. It uses the engine's own UI "
"system, it can hot-reload code and scenes when you test your projects, or "
"run game code in the editor. This means you can **use the same code** and "
"scenes for your games, or **build plugins and extend the editor.**"
msgstr ""
"Godotエディタもゲームエンジン上で動作しています。 エディタは、エンジン自身の"
"UIシステムを使用しており、プロジェクトのテスト時にコードやシーンをホットリ"
"ロードしたり、エディタ内でゲームコードを実行したりできます。つまり、ゲームと"
"\\ **同じコード**\\ とシーンを使用したり、\\ **プラグインを構築してエディタを"
"拡張することもできます。**"

msgid ""
"This leads to a reliable and flexible UI system, as it powers the editor "
"itself. With the ``tool`` keyword, you can run any game code in the editor."
msgstr ""
"エディタ自身も使用するために、信頼性のある柔軟なUIシステムを実現しました。\\ "
"``tool`` キーワードを使えば、あらゆるゲーム用コードをエディタ内で実行できま"
"す。"

msgid "|image5|"
msgstr "\\ |image5|"

msgid "image5"
msgstr "image5"

msgid ""
"*RPG in a Box is a voxel RPG editor made with Godot 2. It uses Godot's UI "
"tools for its node-based programming system and for the rest of the "
"interface.*"
msgstr ""
"*Godot 2でつくられたボクセルRPGエディタ『RPG in a Box』。ノードベースのプログ"
"ラミング・システムおよびユーザーインターフェースに、GodotのUIツールが使われて"
"います。*"

msgid ""
"Put the ``tool`` keyword at the top of any GDScript file and it will run in "
"the editor. This lets you import and export plugins, create plugins like "
"custom level editors, or create scripts with the same nodes and API you use "
"in your projects."
msgstr ""
"GDScriptファイルの一番上に ``tool`` キーワードを追加すれば、エディタ内で動か"
"せます。これによりインポートおよびエクスポート用プラグインや、カスタムのレベ"
"ルエディタ、組み込みノードやAPIのように使えるスクリプトなどが作れます。"

msgid ""
"The editor is fully written in C++ and is statically compiled into the "
"binary. This means you can't import it as a typical project that would have "
"a ``project.godot`` file."
msgstr ""
"エディタは完全にC++で書かれており、静的にバイナリにコンパイルされています。つ"
"まり、 ``project.godot`` のファイルを持つような典型的なプロジェクトとしてイン"
"ポートすることはできません。"

msgid "Separate 2D and 3D engines"
msgstr "2Dと3Dのエンジンを分割"

msgid ""
"Godot offers dedicated 2D and 3D rendering engines. As a result, **the base "
"unit for 2D scenes is pixels.** Even though the engines are separate, you "
"can render 2D in 3D, 3D in 2D, and overlay 2D sprites and interfaces over "
"your 3D world."
msgstr ""
"Godotには2Dと3Dでそれぞれ別の描写エンジンを搭載しています。その結果、\\ **2D"
"シーンの基本単位はピクセルです。**\\ 描写エンジンは分離していますが、3D内で2D"
"レンダーも、2D内で3Dレンダーも、3Dワールドの画面に2Dスプライトやインター"
"フェースをオーバーレイすることもできます。"

msgid "Translation status"
msgstr "翻訳ステータス"
