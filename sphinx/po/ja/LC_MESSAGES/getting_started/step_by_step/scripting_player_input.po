# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Listening to player input"
msgstr "プレイヤーの入力を聞く"

msgid ""
"Building upon the previous lesson :ref:`doc_scripting_first_script`, let's "
"look at another important feature of any game: giving control to the player. "
"To add this, we need to modify our ``Sprite.gd`` code."
msgstr ""
"前回の :ref:`doc_scripting_first_script` を踏まえて、ゲームのもうひとつの重要"
"な機能である、プレイヤーにコントロールを与えることについて見ていきましょう。"
"これを追加するには、\\ ``Sprite.gd``\\ コードを修正する必要があります。"

msgid "You have two main tools to process the player's input in Godot:"
msgstr ""
"Godotでは、プレイヤーの入力を処理するために、主に2つのツールが用意されていま"
"す。"

msgid ""
"The built-in input callbacks, mainly ``_unhandled_input()``. Like "
"``_process()``, it's a built-in virtual function that Godot calls every time "
"the player presses a key. It's the tool you want to use to react to events "
"that don't happen every frame, like pressing :kbd:`Space` to jump. To learn "
"more about input callbacks, see :ref:`doc_inputevent`."
msgstr ""
"組み込みの入力コールバック。主に \\ ``_unhandled_input()``\\ です。これ"
"は、\\ ``_process()``\\ のように、プレーヤーがキーを押すたびに Godot が呼び出"
"す組み込みの仮想関数です。例えば :kbd:`Space` を押してジャンプするような、毎"
"フレームで発生しないイベントに反応するために使用するツールです。入力コール"
"バックについて詳しくは、 :ref:`doc_inputevent` を参照してください。"

msgid ""
"The ``Input`` singleton. A singleton is a globally accessible object. Godot "
"provides access to several in scripts. It's the right tool to check for "
"input every frame."
msgstr ""
"\\ ``Input``\\ シングルトン。シングルトンは、グローバルにアクセス可能なオブ"
"ジェクトです。Godotはスクリプトでいくつかへのアクセスを提供しています。これ"
"は、毎フレーム入力があるかどうかを確認するのに適したツールです。"

msgid ""
"We're going to use the ``Input`` singleton here as we need to know if the "
"player wants to turn or move every frame."
msgstr ""
"ここでは、\\ ``Input``\\ シングルトンを使用します。これは、プレイヤーがフレー"
"ムごとに回転または移動したいかを知る必要があるからです。"

msgid ""
"For turning, we should use a new variable: ``direction``. In our "
"``_process()`` function, replace the ``rotation += angular_speed * delta`` "
"line with the code below."
msgstr ""
"回転させるために、新しい変数を使用する必要があります。これを\\ "
"``direction``\\ とします。\\ ``_process()``\\ 関数の \\ ``rotation += "
"angular_speed * delta``\\ 行を以下のコードに置き換えてください。"

msgid ""
"Our ``direction`` local variable is a multiplier representing the direction "
"in which the player wants to turn. A value of ``0`` means the player isn't "
"pressing the left or the right arrow key. A value of ``1`` means the player "
"wants to turn right, and ``-1`` means they want to turn left."
msgstr ""
"ローカル変数\\ ``direction``\\ は、プレイヤーが曲がりたい方向を表す乗数です。"
"値が\\ ``0``\\ なら、プレーヤーが左または右矢印キーを押していないことを意味し"
"ます。値\\ ``1``\\ なら、プレイヤーが右に曲がりたい、\\ ``-1``\\ なら左に曲が"
"りたいことを意味します。"

msgid ""
"To produce these values, we introduce conditions and the use of ``Input``. A "
"condition starts with the ``if`` keyword in GDScript and ends with a colon. "
"The condition is the expression between the keyword and the end of the line."
msgstr ""
"これらの値を生成するために、条件と\\ ``Input``\\ の使用を導入します。条件は、"
"GDScriptの\\ ``if``\\ キーワードで始まり、コロンで終わります。条件は、キー"
"ワードと行末の間の式です。"

msgid ""
"To check if a key was pressed this frame, we call ``Input."
"is_action_pressed()``. The method takes a text string representing an input "
"action and returns ``true`` if the action is pressed, ``false`` otherwise."
msgstr ""
"このフレームでキーが押されたかどうかを確認するために、\\ ``Input."
"is_action_pressed()``\\ を呼び出します。このメソッドは入力アクションを表す文"
"字列を受け取り、アクションが押された場合は\\ ``true``\\ を、それ以外の場合は"
"\\ ``false``\\ を返すようになっています。"

msgid ""
"The two actions we use above, \"ui_left\" and \"ui_right\", are predefined "
"in every Godot project. They respectively trigger when the player presses "
"the left and right arrows on the keyboard or left and right on a gamepad's D-"
"pad."
msgstr ""
"上記で使用した2つのアクション、\"ui_left\" と \"ui_right\" は、すべてのGodot"
"プロジェクトであらかじめ定義されています。それぞれ、プレイヤーがキーボードの"
"左矢印と右矢印、またはゲームパッドのDパッドの左と右を押したときに起動します。"

msgid ""
"You can see and edit input actions in your project by going to Project -> "
"Project Settings and clicking on the Input Map tab."
msgstr ""
"プロジェクト(\"Project\") -> プロジェクト設定(\"Project Settings\") から イン"
"プットマップ(\"Input Map\") タブをクリックすると、プロジェクト内の入力アク"
"ションを確認・編集することができます。"

msgid ""
"Finally, we use the ``direction`` as a multiplier when we update the node's "
"``rotation``: ``rotation += angular_speed * direction * delta``."
msgstr ""
"最後に、\\ ``direction``\\ をノードの\\ ``direction``\\ の更新時の乗数として"
"使用します。\\ ``rotation += angular_speed * direction * delta``\\ とします。"

msgid ""
"If you run the scene with this code, the icon should rotate when you press :"
"kbd:`Left` and :kbd:`Right`."
msgstr ""
"このコードでシーンを実行すると、 :kbd:`Left` と :kbd:`Right` を押したときにア"
"イコンが回転します。"

msgid "Moving when pressing \"up\""
msgstr "「上」ボタンを押すと動く"

msgid ""
"To only move when pressing a key, we need to modify the code that calculates "
"the velocity. Replace the line starting with ``var velocity`` with the code "
"below."
msgstr ""
"キーを押した時だけ動くようにするには、速度を計算するコードを修正する必要があ"
"ります。\\ ``var velocity``\\ で始まる行を、以下のコードに置き換えます。"

msgid ""
"We initialize the ``velocity`` with a value of ``Vector2.ZERO``, another "
"constant of the built-in ``Vector`` type representing a 2D vector of length "
"0."
msgstr ""
"\\ ``velocity``\\ を\\ ``Vector2.ZERO``\\ という値で初期化します。これは\\ "
"``Vector``\\ 型の組み込み定数の一つで、長さ0の2次元ベクトルを表します。"

msgid ""
"If the player presses the \"ui_up\" action, we then update the velocity's "
"value, causing the sprite to move forward."
msgstr ""
"プレイヤーが\"ui_up\"アクションを押すと、velocityの値が更新され、スプライトが"
"前に移動するようになります。"

msgid "Complete script"
msgstr "完全なスクリプト"

msgid "Here is the complete ``Sprite.gd`` file for reference."
msgstr "参考までに、\\ ``Sprite.gd``\\ ファイル全体は次のようになります。"

msgid ""
"If you run the scene, you should now be able to rotate with the left and "
"right arrow keys and move forward by pressing :kbd:`Up`."
msgstr ""
"シーンを実行すると、左右の矢印キーで回転し、 :kbd:`Up` を押して前進することが"
"できるはずです。"

msgid "Summary"
msgstr "概要"

msgid ""
"In summary, every script in Godot represents a class and extends one of the "
"engine's built-in classes. The node types your classes inherit from give you "
"access to properties like ``rotation`` and ``position`` in our sprite's "
"case. You also inherit many functions, which we didn't get to use in this "
"example."
msgstr ""
"要約すると、Godot のすべてのスクリプトはクラスを表し、エンジンの組み込みクラ"
"スの 1 つを継承します。クラスが継承するノードタイプによって、スプライトの場合"
"では\\ ``rotation``\\ や \\ ``position``\\ など、プロパティにアクセスできるよ"
"うになっています。また、この例では使用しませんでしたが、多くの関数も継承して"
"います。"

msgid ""
"In GDScript, the variables you put at the top of the file are your class's "
"properties, also called member variables. Besides variables, you can define "
"functions, which, for the most part, will be your classes' methods."
msgstr ""
"GDScript では、ファイルの先頭に置いた変数は、クラスのプロパティで、メンバー変"
"数とも呼ばれます。また、変数以外にも関数を定義することができますが、これはほ"
"とんどの場合、クラスのメソッドになります。"

msgid ""
"Godot provides several virtual functions you can define to connect your "
"class with the engine. These include ``_process()``, to apply changes to the "
"node every frame, and ``_unhandled_input()``, to receive input events like "
"key and button presses from the users. There are quite a few more."
msgstr ""
"Godotは、クラスとエンジンを接続するために定義可能ないくつかの仮想関数を提供し"
"ます。例えば、\\ ``_process()``\\ はフレームごとにノードに変更を適用し、\\ "
"``_unhandled_input()``\\ はユーザからキーやボタンを押すなどの入力イベントを受"
"け取ります。他にもたくさんの仮装関数があります。"

msgid ""
"The ``Input`` singleton allows you to react to the players' input anywhere "
"in your code. In particular, you'll get to use it in the ``_process()`` loop."
msgstr ""
"\\ ``Input``\\ シングルトンにより、コードの任意の場所でプレーヤーの入力に反応"
"することができます。特に、\\ ``_process()``\\ のループで使用することになりま"
"す。"

msgid ""
"In the next lesson :ref:`doc_signals`, we'll build upon the relationship "
"between scripts and nodes by having our nodes trigger code in scripts."
msgstr ""
"次のレッスン :ref:`doc_signals` では、スクリプトの中でノードにトリガーコード"
"を持たせることで、スクリプトとノードの関係を構築します。"

msgid "Translation status"
msgstr "翻訳ステータス"
