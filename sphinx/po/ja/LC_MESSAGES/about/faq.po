# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "FAQ"
msgstr "FAQ"

msgid "Frequently asked questions"
msgstr "よくある質問"

msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr ""
"Godotで何ができますか？費用はいくらかかりますか？ライセンス条項は何ですか？"

msgid ""
"Godot is `Free and Open-Source Software <https://en.wikipedia.org/wiki/"
"Free_and_open-source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godotは\\ `フリーかつオープンソースのソフトウェア <https://ja.wikipedia.org/"
"wiki/FLOSS>`_\\ であり、\\ `OSI承認済み <https://opensource.org/licenses/"
"MIT>`_\\ のMITライセンスの元で利用できます。これは「フリービール (無料のビー"
"ル)」および「フリースピーチ (言論の自由)」の、両方の意味でフリーであることを"
"意味します。"

msgid "In short:"
msgstr "要約すれば:"

msgid ""
"You are free to download and use Godot for any purpose: personal, non-"
"profit, commercial, or otherwise."
msgstr ""
"Godotをダウンロードして、個人的、非営利、商業、またはその他の目的に無料で自由"
"に使用できます。"

msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr ""
"商用と非商用を問わず、どのような用途であれ、心おきなく無料で自由にGodotを改"
"変、配布、再配布およびリミックスできます。"

msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"このコンテンツは、「Juan Linietsky」、「Ariel Manzur」そして 「Godot Engineコ"
"ミュニティ」によって、クリエイティブ・コモンズ-表示 3.0(\\ `CC-BY 3.0 "
"<https://creativecommons.org/licenses/by/3.0/deed.ja>`_\\ )ライセンスの下、管"
"理されております。"

msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"ロゴ、アイコンはクリエイティブ・コモンズ・ライセンス下で管理しています。補足"
"としてサードパーティライブラリには、Godotのソースコードとは違うライセンスを含"
"んでいる可能性があります。"

msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE."
"txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ "
"files in the Godot repository."
msgstr ""
"詳細はGodotリポジトリの、\\ `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_\\ または `LICENSE.txt <https://github.com/"
"godotengine/godot/blob/master/LICENSE.txt>`_\\ と\\ `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_\\ ファイ"
"ルをご覧ください。"

msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"また、\\ `Godotウェブサイトのライセンス情報ページ <https://godotengine.org/"
"license>`_\\ も見てみて下さい。"

msgid "Which platforms are supported by Godot?"
msgstr "Godotが対応するプラットフォームは？"

msgid "**For the editor:**"
msgstr "**エディタ:**"

msgid "Windows"
msgstr "Windows"

msgid "macOS"
msgstr "macOS"

msgid "X11 (Linux, \\*BSD)"
msgstr "X11 (Linux, \\*BSD)"

msgid ":ref:`Web <doc_using_the_web_editor>`"
msgstr ":ref:`Web <doc_using_the_web_editor>`"

msgid "Android (experimental)"
msgstr "Android (実験的)"

msgid "**For exporting your games:**"
msgstr "**ゲームの書き出し:**"

msgid "Windows (and UWP)"
msgstr "Windows (およびUWP)"

msgid "Android"
msgstr "Android"

msgid "iOS"
msgstr "iOS"

msgid "Web"
msgstr "Web"

msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default."
msgstr ""
"デフォルトは64ビットですが、場合に応じて32ビットと64ビット両方に対応していま"
"す。"

msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr ""
"Raspberry Piのような、ARMベースのLinuxマシンでGodotが動作したという報告もいく"
"つかあります。"

msgid ""
"Additionally, there is some unofficial third-party work being done on "
"building for some consoles. However, none of this is included in the default "
"build scripts or export templates at this time."
msgstr ""
"それに加えて、コンソール機向けに第三者による非公式のビルドがいくつかありま"
"す。しかし、現時点では標準のビルドスクリプトや書き出しテンプレートには含まれ"
"ていません。"

msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"詳しくは、\\ :ref:`書き出しについて <toc-learn-workflow-export>`\\ の節や\\ :"
"ref:`Godotをコンパイルする <toc-devel-compiling>`\\ をご参照ください。"

msgid "Which programming languages are supported in Godot?"
msgstr "Godotが対応するプログラミング言語は？"

msgid ""
"The officially supported languages for Godot are GDScript, Visual Scripting, "
"C#, and C++. See the subcategories for each language in the :ref:`scripting "
"<toc-learn-scripting>` section."
msgstr ""
"Godotが公式対応している言語は、GDScript、ビジュアルスクリプト、C#、およびC+"
"+です。それぞれの言語についてのサブカテゴリーは\\ :ref:`スクリプト <toc-"
"learn-scripting>`\\ セクションにあります。"

msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"初めてGodotを使う人や、これからゲーム開発を始める人には、Godot内蔵のGDScript"
"がおすすめです。スクリプト言語はより低水準な言語に比べて、必ずしも長期的には"
"最適ではありません。しかし試作や、実用最小限の製品(MVP)の開発、製品化への時間"
"(TTM)を重視する場合、GDScriptはゲーム開発のためのスピーディで親しみやすい、有"
"用な手段になります。"

msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. Our friendly and hard-working development "
"community is always ready to tackle new problems as they arise, but since "
"this is an open-source project, we recommend that you first do some due "
"diligence yourself. Searching through discussions on `open issues <https://"
"github.com/godotengine/godot/issues>`_ is a great way to start your "
"troubleshooting."
msgstr ""
"C#への対応はまだ比較的新しいため、何らかの問題が生じる可能性があります。当方"
"のフレンドリーで仕事熱心な開発コミュニティーは、新たに浮かんできた問題に挑む"
"準備は万端です。しかし、これはオープンソース・プロジェクトなので、まずはご自"
"身で解決法を探ることを推奨します。トラブルシューティングには最初に、\\ `open "
"issues(英語) <https://github.com/godotengine/godot/issues>`_\\ 内にて交わされ"
"ているやりとりを調べてみて下さい。"

msgid ""
"As for new languages, support is possible via third parties using the "
"GDNative / NativeScript / PluginScript facilities. (See the question about "
"plugins below.) Work is currently underway, for example, on unofficial "
"bindings for Godot to `Python <https://github.com/touilleMan/godot-python>`_ "
"and `Nim <https://github.com/pragmagic/godot-nim>`_."
msgstr ""
"新しい言語については、GDNative/NativeScript/PluginScript機能を通じてサード"
"パーティによる対応が可能です。例えば現在、\\ `Python <https://github.com/"
"touilleMan/godot-python>`_\\ や\\ `Nim <https://github.com/pragmagic/godot-"
"nim>`_\\ のGodot向け非公式バインディングが開発進行中です。"

msgid "What is GDScript and why should I use it?"
msgstr "GDScriptとは何で、それを使う必要性は？"

msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before then you'll feel right at home. For examples, history, "
"and a complete overview of the power GDScript offers you, check out the :ref:"
"`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScriptはGodot内蔵のスクリプト言語です。最小のコード行数でGodotの能力を最大"
"限に発揮できるよう、一から設計されています。初心者からエキスパートまで、すば"
"やくGodotの性能を引き出せるようになります。もしPythonのような言語で書いた経験"
"があれば、すぐに馴染めることでしょう。GDScriptのサンプルや歴史、その力の概要"
"を知りたい方は、\\ :ref:`GDScriptスクリプティング・ガイド <doc_gdscript>`\\ "
"をお読み下さい。"

msgid ""
"There are several reasons to use GDScript--especially when you are "
"prototyping, in alpha/beta stages of your project, or are not creating the "
"next AAA title--but the most salient reason is the overall **reduction of "
"complexity**."
msgstr ""
"GDScriptを使用する理由は幾つもありますが、特に、試作やアルファ/ベータ版の段階"
"にある場合や、大作を作るのでない場合などが挙げられます。しかし一番の理由は、"
"全体的に **複雑さを減らせることです**。"

msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core--rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"Godot用に緊密に統合されたカスタムスクリプト言語を作る目的は、初めに2つありま"
"した: 第一に、Godotを立ち上げて走らせるのに必要な時間を減らし、開発者がエンジ"
"ンにすばやく触れる方法を提供して、生産性を重視するためです。第二に、維持にか"
"かる負担を全体的に軽減し、問題の次元を下げるためで、これによりエンジンの開発"
"者は、多くの言語で動作する小さな機能追加に多くの時間を費やすのではなく、エン"
"ジンコアのみに関連する機能改善やバグ修正に集中できるようになります。"

msgid ""
"Since Godot is an open-source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages--"
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and rapid your development becomes, we think "
"GDScript will grow on you."
msgstr ""
"Godot はオープンソースプロジェクトなので、よく知られたプログラミング言語をサ"
"ポートすることでユーザー数を増やそうとするより、より統合されたシームレスな体"
"験を必須要件として優先してきました。あなたがGodotで別の言語(上記のサポートさ"
"れるオプションのリストを参照してください) を使用したいということは理解しま"
"す。とはいえ、GDScriptをまだ試していない人は、\\ **3日間**\\ だけ試してみてく"
"ださい。Godotと同じように、GDScriptがいかに強力であり、開発がいかに迅速になる"
"かを見れば、気に入ってもらえるはずです。"

msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"GDScriptや他の動的言語を使いこなすための情報は、こちらのチュートリアル\\ :"
"ref:`doc_gdscript_more_efficiently`\\ にあります。"

msgid "What were the motivations behind creating GDScript?"
msgstr "GDScriptを作った動機はどのようなものですか？"

msgid ""
"In the early days, the engine used the `Lua <https://www.lua.org>`__ "
"scripting language. Lua is fast, but creating bindings to an object oriented "
"system (by using fallbacks) was complex and slow and took an enormous amount "
"of code. After some experiments with `Python <https://www.python.org>`__, it "
"also proved difficult to embed."
msgstr ""
"初期には、このエンジンは `Lua <http://www.lua.org>`_ スクリプト言語を使用して"
"いました。Luaは高速ですが、オブジェクト指向システム(フォールバックを使用して)"
"へのバインディングの作成は複雑で時間がかかり、膨大なコードを必要としました。 "
"`Python <https://www.python.org>`_ でいくつかの実験を行った結果、それを埋め込"
"むのは難しいことがわかりました。"

msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "Godot専用のスクリプト言語を作った主な理由は以下の通りです:"

msgid ""
"Poor threading support in most script VMs, and Godot uses threads (Lua, "
"Python, Squirrel, JavaScript, ActionScript, etc.)."
msgstr ""
"ほとんどのスクリプトVM(Lua、Python、Squirrel、JavaScript、ActionScriptなど)で"
"はスレッドサポートが不十分ですが、Godotはスレッドを使用します。"

msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JavaScript)."
msgstr ""
"ほとんどのスクリプトVM(Lua、Python、JavaScript)ではクラス拡張のサポートが不十"
"分で、Godotの動作方法に適応させる作業は非常に非効率的です。"

msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JavaScript, etc.) We wanted to focus on "
"a great engine, not a great amount of integrations."
msgstr ""
"既存の多くの言語(Lua、Python、Squirrel、JavaScript など)では、C++とバインドす"
"るには、恐ろしく出来の悪いインターフェイスを使わなければなりません。その結"
"果、大量のコード、バグ、ボトルネック、および全般的な非効率性が生じてしまいま"
"す。私たちは、たくさんの結合用コードではなく、すばらしいエンジンのために集中"
"したかったのです。"

msgid ""
"No native vector types (vector3, matrix4, etc.), resulting in highly reduced "
"performance when using custom types (Lua, Python, Squirrel, JavaScript, "
"ActionScript, etc.)."
msgstr ""
"(Lua、Python、Squirrel、JavaScript、ActionScriptなどには)ネイティブなベクトル"
"タイプ(vector3、matrix4など)がないため、その代わりにカスタムタイプを使用する"
"必要がありますが、それによってパフォーマンスが大幅に低下します。"

msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JavaScript, ActionScript, etc.)."
msgstr ""
"(Lua、Python、JavaScript、ActionScriptなどでは)ガベージコレクタが原因で速度低"
"下が発生したり、不必要にメモリ使用量が増えたりします。"

msgid ""
"Difficulty to integrate with the code editor for providing code completion, "
"live editing, etc. (all of them). This is well-supported by GDScript."
msgstr ""
"(前記の各種言語では)コード補完、ライブ編集などを提供するコードエディタとの統"
"合が困難です。GDScriptではそれらがサポートされています。"

msgid "GDScript was designed to curtail the issues above, and more."
msgstr "GDScriptは上記の問題を減らすように設計されています。"

msgid "What type of 3D model formats does Godot support?"
msgstr "Godotはどんな3Dモデルフォーマットをサポートしていますか？"

msgid ""
"Godot supports Collada via the `OpenCollada <https://github.com/KhronosGroup/"
"OpenCOLLADA/wiki/OpenCOLLADA-Tools>`_ exporter (Maya, 3DSMax). If you are "
"using Blender, take a look at our own `Better Collada Exporter <https://"
"godotengine.org/download>`_."
msgstr ""
"Godotは、\\ `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`_ エクスポーターを介してColladaをサポートしています(Maya、"
"3DSMax)。 Blenderを使用している場合は、我々の `Better Collada Exporter "
"<https://godotengine.org/download>`_ をご確認ください。"

msgid "As of Godot 3.0, glTF is supported."
msgstr "Godot 3.0の時点で、glTFをサポートしています。"

msgid ""
"FBX is supported via the Open Asset Import library. However, FBX is "
"proprietary so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"FBXは、Open Asset Importライブラリを介してサポートされています。ただし、FBXは"
"プロプライエタリですので、ワークフローに適している場合は、上記の他の形式を使"
"用することをお勧めします。"

msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr ""
"Godotでは(FMODやGameWorksなどの)クローズドSDKの組み込みがサポートされますか?"

msgid ""
"The aim of Godot is to create a free and open-source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godotの目的は、モジュール式で拡張可能な自由でオープンソースのMITライセンスエ"
"ンジンを作成することです。コアエンジン開発コミュニティは、サードパーティのク"
"ローズドソース/プロプライエタリSDKについては、これらとの統合がGodotの精神に反"
"するとして、サポートする計画はありません。"

msgid ""
"That said, because Godot is open-source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them--as either open- or closed-source."
msgstr ""
"とはいえ、Godot はオープンソースかつモジュラーであるため、ライブラリがオープ"
"ンソースかクローズドソースであるかに関わりなく、それらをモジュールとして追加"
"して、ゲームを出荷することを妨げるものは何もありません。"

msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr ""
"選択したSDKのサポートがどのように提供されるのかを確認するには、以下のプラグイ"
"ンの質問を参照してください。"

msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open-source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"Godotではサポートされていないものの、自由かつオープン ソースでの統合が可能な"
"サードパーティ製のSDKがあるのをご存知であれば、その統合作業を自身で始めること"
"をご検討ください。Godotは一人の人間が所有しているわけではなく、コミュニティに"
"属しているので、あなたのような野心的なコミュニティへの貢献者と一緒に成長しま"
"す。"

msgid ""
"How do I install the Godot editor on my system (for desktop integration)?"
msgstr "Godotを自分のシステムにインストール（デスクトップへ統合）するには？"

msgid ""
"Since you don't need to actually install Godot on your system to run it, "
"this means desktop integration is not performed automatically. There are two "
"ways to overcome this. You can install Godot from `Steam <https://store."
"steampowered.com/app/404790/Godot_Engine/>`__ (all platforms), `Scoop "
"<https://scoop.sh/>`__ (Windows), `Homebrew <https://brew.sh/>`__ (macOS) or "
"`Flathub <https://flathub.org/apps/details/org.godotengine.Godot>`__ "
"(Linux). This will automatically perform the required steps for desktop "
"integration."
msgstr ""
"実際にはGodotをあなたのシステムで実行する必要はないので、デスクトップ統合は自"
"動的には実行されません。これを解決するには2つの方法があります。Godotを`Steam "
"<https://store.steampowered.com/app/404790/Godot_Engine/>`__ (all "
"platforms), `Scoop <https://scoop.sh/>`__ (Windows), `Homebrew <https://brew."
"sh/>`__ (macOS) もしくは `Flathub <https://flathub.org/apps/details/org."
"godotengine.Godot>`__ (Linux) からインストールできます。これらの方法では、デ"
"スクトップ統合に必要なステップが自動的に実行されます。"

msgid ""
"Alternatively, you can manually perform the steps that an installer would do "
"for you:"
msgstr ""
"あるいは、インストーラーが実行するステップをあなたが手動で行うこともできま"
"す。"

msgid ""
"Move the Godot executable to a stable location (i.e. outside of your "
"Downloads folder), so you don't accidentally move it and break the shortcut "
"in the future."
msgstr ""
"Godot の実行可能ファイルを安定した場所（ダウンロードフォルダ以外など）に移動"
"し、将来誤って移動してショートカットが壊れないようにします。"

msgid "Right-click the Godot executable and choose **Create Shortcut**."
msgstr "Godotの実行ファイルを右クリックして**ショートカットの作成**を選択。"

msgid ""
"Move the created shortcut to ``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``. This is the user-wide location for shortcuts that will "
"appear in the Start menu. You can also pin Godot in the task bar by right-"
"clicking the executable and choosing **Pin to Task Bar**."
msgstr ""
"作成したショートカットを``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``へ移動します。 これは、スタートメニューに表示されるショート"
"カットのユーザー共通の場所です。また、実行ファイルを右クリックして「タスク"
"バーにピン留め」を選択すれば、Godotをタスクバーにピン留めすることができます。"

msgid ""
"Drag the extracted Godot application to ``/Applications/Godot.app``, then "
"drag it to the Dock if desired. Spotlight will be able to find Godot as long "
"as it's in ``/Applications`` or ``~/Applications``."
msgstr ""
"取り出されたGodotアプリケーションを`/Applications/Godot.app`にドラッグし、必"
"要な場合にはDockにもドラッグします。Spotlightは`/Applications`または`~/"
"Applications`にある限り、Godotを見つけられるようになります。"

msgid "Linux"
msgstr "Linux"

msgid ""
"Move the Godot binary to a stable location (i.e. outside of your Downloads "
"folder), so you don't accidentally move it and break the shortcut in the "
"future."
msgstr ""
"Godot の実行可能ファイルを安定した場所（ダウンロードフォルダ以外など）に移動"
"し、将来誤って移動してショートカットが壊れないようにします。"

msgid ""
"Rename and move the Godot binary to a location present in your ``PATH`` "
"environment variable. This is typically ``/usr/local/bin/godot`` or ``/usr/"
"bin/godot``. Doing this requires administrator privileges, but this also "
"allows you to :ref:`run the Godot editor from a terminal "
"<doc_command_line_tutorial>` by entering ``godot``."
msgstr ""
"Godotのバイナリを環境変数`PATH`に含まれる場所にリネームして移動してください。"
"これは標準では`/usr/local/bin/godot`または`/usr/bin/godot`です。この作業を行"
"うには管理者権限が必要ですが、 :ref:`ターミナルからGodotエディタを起動する"
"<doc_command_line_tutorial>`のように`godot`と入力して起動することも可能になり"
"ます。"

msgid ""
"If you cannot move the Godot editor binary to a protected location, you can "
"keep the binary somewhere in your home directory, and modify the ``Path=`` "
"line in the ``.desktop`` file linked below to contain the full *absolute* "
"path to the Godot binary."
msgstr ""
"Godot エディタのバイナリを保護された場所に移動できない場合、バイナリをホーム"
"ディレクトリのどこかに置いて、下記にリンクされている \\ ``.desktop``\\ ファイ"
"ルの中の ``Path=`` 行を修正し、Godotバイナリへの\\ *絶対*\\ パスのすべてを含"
"めることができます。"

msgid ""
"Save `this .desktop file <https://raw.githubusercontent.com/godotengine/"
"godot/3.x/misc/dist/linux/org.godotengine.Godot.desktop>`__ to ``$HOME/."
"local/share/applications/``. If you have administrator privileges, you can "
"also save the ``.desktop`` file to ``/usr/local/share/applications`` to make "
"the shortcut available for all users."
msgstr ""
"\\ `この .desktop ファイル<https://raw.githubusercontent.com/godotengine/"
"godot/3.x/misc/dist/linux/org.godotengine.Godot.desktop>`__\\ を \\ ``$HOME/."
"local/share/applications/``\\ に保存してください。また、管理者権限があれ"
"ば、\\ ``.desktop``\\ のファイルを \\ ``/usr/local/share/applications``\\ に"
"保存することによって、すべてのユーザーがショートカットを使用できる状態にする"
"ことが可能です。"

msgid "Is the Godot editor a portable application?"
msgstr "Godotエディタはポータブルなアプリケーションですか？"

msgid ""
"In its default configuration, Godot is *semi-portable*. Its executable can "
"run from any location (including non-writable locations) and never requires "
"administrator privileges."
msgstr ""
"デフォルトの設定では、Godot は \"セミポータブル\" です。その実行ファイルはど"
"んな場所（書き込み不可能な場所を含む）からも実行でき、管理者特権を必要としま"
"せん。"

msgid ""
"However, configuration files will be written to the user-wide configuration "
"or data directory. This is usually a good approach, but this means "
"configuration files will not carry across machines if you copy the folder "
"containing the Godot executable. See :ref:`doc_data_paths` for more "
"information."
msgstr ""
"しかし、設定ファイルはユーザー全体の設定またはデータディレクトリに書き込まれ"
"ます。これは通常良いアプローチですが、Godotの実行ファイルがあるフォルダをコ"
"ピーした場合、設定ファイルが異なる環境で共有されないことを意味します。詳しく"
"は :ref:`doc_data_paths` を参照してください。"

msgid ""
"If *true* portable operation is desired (e.g. for use on an USB stick), "
"follow the steps in :ref:`doc_data_paths_self_contained_mode`."
msgstr ""
"もし、\\ *本当に*\\ ポータブルな操作が必要な場合 (例: USB メモリでの使用)、 :"
"ref:`doc_data_paths_self_contained_mode` のステップに従ってください。"

msgid "Why does Godot use Vulkan or OpenGL instead of Direct3D?"
msgstr "GodotがDirect3Dの代わりにVulkanやOpenGLを使うのはなぜですか？"

msgid ""
"Godot aims for cross-platform compatibility and open standards first and "
"foremost. OpenGL and Vulkan are the technologies that are both open and "
"available (nearly) on all platforms. Thanks to this design decision, a "
"project developed with Godot on Windows will run out of the box on Linux, "
"macOS, and more."
msgstr ""
"Godotは第一にクロスプラットフォームでの互換性とオープンスタンダードを目指して"
"います。OpenGLとVulkanは(ほぼ)すべてのプラットフォームで利用できるオープンな"
"技術です。この設計上の決定のおかげで、Windows上のGodotで開発されたプロジェク"
"トでもLinuxやmacOSなどで実行することができます。"

msgid ""
"Since Godot only has a few people working on its renderer, we would prefer "
"having fewer rendering backends to maintain. On top of that, using a single "
"API on all platforms allows for greater consistency with fewer platform-"
"specific issues."
msgstr ""
"Godotのレンダラーについて作業する人は数人しかいないため、私たちがメンテナンス"
"するレンダリングバックエンドはより少ない方が望ましいです。またすべてのプラッ"
"トフォームにおいて単一のAPIを使用することでプラットフォーム固有の問題が少なく"
"なり、一貫性の向上が見込めます。"

msgid ""
"In the long term, we may develop a Direct3D 12 renderer for Godot (mainly "
"for the Xbox's purposes), but Vulkan and OpenGL will remain the default "
"rendering backends on all platforms, including Windows."
msgstr ""
"長期的には、私たちはDirect3D 12 レンダラーを(主にXbox用に)開発する可能性はあ"
"りますが、VulkanとOpenGLはWindowsを含むすべてのプラットフォームにおいてデフォ"
"ルトのレンダリングバックエンドであり続けるでしょう。"

msgid "Why does Godot aim to keep its core feature set small?"
msgstr ""
"なぜGodotはそのコア機能セットを小さいままにすることを目指しているのですか？"

msgid ""
"Godot intentionally does not include features that can be implemented by add-"
"ons unless they are used very often. One example of this would be advanced "
"artificial intelligence functionality."
msgstr ""
"よほど使用機会が多くない限り、Godotではアドオンで実装できるような機能は意図的"
"に搭載していません。例えば、高度な人工知能の機能などがその例です。"

msgid "There are several reasons for this:"
msgstr "これにはいくつかの理由があります:"

msgid ""
"**Code maintenance and surface for bugs.** Every time we accept new code in "
"the Godot repository, existing contributors often take the reponsibility of "
"maintaining it. Some contributors don't always stick around after getting "
"their code merged, which can make it difficult for us to maintain the code "
"in question. This can lead to poorly maintained features with bugs that are "
"never fixed. On top of that, the \"API surface\" that needs to be tested and "
"checked for regressions keeps increasing over time."
msgstr ""
"**コードのメンテナンスとバグの表面化。** Godotのリポジトリに新しいコードを受"
"け入れるたびに、既存の貢献者がそのコードを維持する責任を負うことがよくありま"
"す。一部の貢献者はコードがマージされた後も常にいるわけではありませんので、私"
"たちが当該コードを保守することが困難になることがあります。そのため、バグが修"
"正されないまま、メンテナンスが不十分な機能になってしまうことがあります。それ"
"に加えて、テストやリグレッションのチェックが必要な「APIサーフェス」は、時間と"
"ともに増え続けます。"

msgid ""
"**Ease of contribution.** By keeping the codebase small and tidy, it can "
"remain fast and easy to compile from source. This makes it easier for new "
"contributors to get started with Godot, without requiring them to purchase "
"high-end hardware."
msgstr ""
"**開発参加の容易化。** コードベースを小さく整頓することで、ソースからのコンパ"
"イルを高速かつ簡単に行うことができます。これにより、新しい貢献者は、ハイエン"
"ドのハードウェアを購入することなく、Godot開発を始めることができます。"

msgid ""
"**Keeping the binary size small for the editor.** Not everyone has a fast "
"Internet connection. Ensuring that everyone can download the Godot editor, "
"extract it and run it in less than 5 minutes makes Godot more accessible to "
"developers in all countries."
msgstr ""
"**エディタのバイナリサイズ削減。** 誰もが高速なインターネット接続を持っている"
"わけではありません。誰もがGodotエディタをダウンロードし、解凍し、5分以内に実"
"行できるようにすることで、あらゆる国の開発者がGodotにアクセスできるようになり"
"ます。"

msgid ""
"**Keeping the binary size small for export templates.** This directly "
"impacts the size of projects exported with Godot. On mobile and web "
"platforms, keeping file sizes low is primordial to ensure fast installation "
"and loading on underpowered devices. Again, there are many countries where "
"high-speed Internet is not readily available. To add to this, strict data "
"usage caps are often in effect in those countries."
msgstr ""
"**エクスポートテンプレートのバイナリサイズ削減。** これはGodotでエクスポート"
"するプロジェクトのサイズに直接影響します。モバイルやウェブのプラットフォーム"
"では、ファイルサイズを小さくすることは、パワー不足のデバイスでのインストール"
"や読み込みを高速に行うためには基本的なことです。また、高速インターネットが容"
"易に利用できない国も多くあります。さらに、これらの国では厳しいデータ使用量の"
"上限が設定されていることもあります。"

msgid ""
"For all the reasons above, we have to be selective of what we can accept as "
"core functionality in Godot. This is why we are aiming to move some core "
"functionality to officially supported add-ons in future versions of Godot. "
"In terms of binary size, this also has the advantage of making you pay only "
"for what you actually use in your project. (In the meantime, you can :ref:"
"`compile custom export templates with unused features disabled "
"<doc_optimizing_for_size>` to optimize the distribution size of your "
"project.)"
msgstr ""
"上記のような理由から、Godotのコア機能として認められるものを選択しなければなり"
"ません。そのため、Godotの将来のバージョンでは、コア機能の一部を公式にサポート"
"されるアドオンに移行することを目指しています。バイナリサイズの点では、プロ"
"ジェクトで実際に使用する分だけを消費することになるという利点もあります。(今の"
"段階では、プロジェクトの配布サイズを最適化するためには、未使用の機能を無効に"
"したカスタムエクスポートテンプレートを :ref:`コンパイル "
"<doc_optimizing_for_size>` します)"

msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr ""
"複数の解像度やアスペクト比に対応するアセットを作成するにはどうすればよいです"
"か？"

msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"この質問は頻繁に出てきますが、これはおそらくAppleが当初デバイスの解像度を2倍"
"にしたときに起こした誤解のせいでしょう。同じアセットを異なる解像度で持つこと"
"は良い考えだと人々に思わせ、多くの人がその道に向かって進み続けました。当初は"
"Appleのデバイスのみであり、ある程度はうまくいっていましたが、その後、解像度と"
"アスペクト比の異なる複数のAndroidとAppleのデバイスが作られたことで、サイズと"
"DPIの幅が非常に広くなりました。"

msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D it's just a matter of Camera XFov or "
"YFov."
msgstr ""
"これを実現する最も一般的で適切な方法は、代わりに、ゲームでは単一の基本解像度"
"を使用して、異なる画面アスペクト比のみに対処することです。これが必要になるの"
"は主に2Dにおいてであり、3DではカメラXFov (X視野角) またはYFovの問題になりま"
"す。"

msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 2K and devices that go down to 400p, regular hardware scaling "
"in your device will take care of this at little or no performance cost. Most "
"common choices are either near 1080p (1920x1080) or 720p (1280x720). Keep in "
"mind the higher the resolution, the larger your assets, the more memory they "
"will take and the longer the time it will take for loading."
msgstr ""
"ゲームの基本解像度を1つ選択します。2Kあるデバイスであれ、400pだけのデバイスで"
"あれ、デバイスの通常のハードウェアスケーリングは、パフォーマンスコストをほと"
"んど又はまったくかけずに対応できます。最も一般的な選択肢は、1080p(1920x1080)"
"または720p(1280x720)です。この解像度が高いほどアセットが大きくなり、メモリの"
"使用量が多くなり、ロードに時間がかかることに注意してください。"

msgid ""
"Use the stretch options in Godot; 2D stretching while keeping aspect ratios "
"works best. Check the :ref:`doc_multiple_resolutions` tutorial on how to "
"achieve this."
msgstr ""
"Godotのストレッチオプションを使用します。アスペクト比を維持したまま2Dストレッ"
"チを行うと、最適な結果が得られます。この方法については、チュートリアル\\ :"
"ref:`doc_multiple_resolutions`\\ を参照してください。"

msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"最小解像度を決定し、ゲームを縦横比ごとに垂直または水平に伸ばすかどうか、また"
"は縦横比を固定して余白に黒いバーを表示するかどうかを決定します。これについて"
"は、\\ :ref:`doc_multiple_resolutions`\\ でも説明されています。"

msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"ユーザインタフェースでは、\\ :ref:`anchoring <doc_size_and_anchors>`\\ を使用"
"して、コントロールの位置と移動先を指定します。UIがより複雑な場合は、コンテナ"
"について学ぶことを検討してください。"

msgid "And that's it! Your game should work in multiple resolutions."
msgstr "これで終わりです！あなたのゲームは複数の解像度で動くことでしょう。"

msgid ""
"If there is a desire to make your game also work on ancient devices with "
"tiny screens (fewer than 300 pixels in width), you can use the export option "
"to shrink images, and set that build to be used for certain screen sizes in "
"the App Store or Google Play."
msgstr ""
"小さな画面(幅が300ピクセル未満)の古いデバイスでもゲームを動作させたい場合は、"
"エクスポートオプションを使用して画像を縮小し、そのビルドをAppStoreまたは"
"GooglePlayの特定の画面サイズで使用するように設定できます。"

msgid "How can I extend Godot?"
msgstr "Godotを拡張するにはどうすればよいですか?"

msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"Godotエディタプラグインの作成や追加言語のサポートの追加など、Godotを拡張する"
"には、\\ :ref:`エディタプラグイン <doc_making_plugins>`\\ およびツールスクリ"
"プトを参照してください。"

msgid "Also, see the official blog posts on these topics:"
msgstr "また、これらのトピックに関する公式ブログの投稿を参照してください:"

msgid ""
"`A look at the GDNative architecture <https://godotengine.org/article/look-"
"gdnative-architecture>`_"
msgstr ""
"`GDNativeアーキテクチャの概要(英語) <https://godotengine.org/article/look-"
"gdnative-architecture>`_"

msgid "`GDNative is here! <https://godotengine.org/article/dlscript-here>`_"
msgstr ""
"`GDNativeが来た！(英語) <https://godotengine.org/article/dlscript-here>`_"

msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `unofficial Python support <https://github.com/touilleMan/"
"godot-python>`_ for Godot. This would be a good starting point to see how "
"another third-party library integrates with Godot."
msgstr ""
"GDScriptの実装、Godotモジュール、およびGodotの\\ `非公式Pythonサポート "
"<https://github.com/touilleMan/godot-python>`_\\ もご覧ください。これは、別の"
"サードパーティライブラリがどのようにGodotに統合されるかを知る良い出発点です。"

msgid "When is the next release of Godot out?"
msgstr "次のGodotのリリースはいつですか？"

msgid ""
"When it's ready! See :ref:`doc_release_policy_when_is_next_release_out` for "
"more information."
msgstr ""
"用意できたときです！ 詳細については、\\ :ref:"
"`doc_release_policy_when_is_next_release_out`\\ を参照してください。"

msgid "I would like to contribute! How can I get started?"
msgstr "Godotに貢献したいのですが、どうすればよいですか？"

msgid ""
"Awesome! As an open-source project, Godot thrives off of the innovation and "
"ambition of developers like you."
msgstr ""
"素晴らしい！オープンソースプロジェクトとして、Godotは、あなたのような開発者の"
"技術革新と野心によって支えられています。"

msgid ""
"The first place to get started is in the `issues <https://github.com/"
"godotengine/godot/issues>`_. Find an issue that resonates with you, then "
"proceed to the `How to Contribute <https://github.com/godotengine/godot/blob/"
"master/CONTRIBUTING.md#contributing-pull-requests>`_ guide to learn how to "
"fork, modify, and submit a Pull Request (PR) with your changes."
msgstr ""
"まずはじめに見るべきは\\ `issues <https://github.com/godotengine/godot/"
"issues>`_\\ です。あなたの共感を呼ぶIssueを見つけ、\\ `How to Contribute "
"<https://github.com/godotengine/godot/blob/master/CONTRIBUTING."
"md#contributing-pull-requests>`_\\ でforkや編集の方法を学び、そしてプルリクエ"
"ストを提出してください。"

msgid "I have a great idea for Godot. How can I share it?"
msgstr "Godotについていいアイデアがあるのですが、どこで共有すればいいですか？"

msgid ""
"It might be tempting to want to bring ideas to Godot, like ones that result "
"in massive core changes, some sort of mimicry of what another game engine "
"does, or alternative workflows that you'd like built into the editor. These "
"are great, and we are thankful to have such motivated people want to "
"contribute, but Godot's focus is and always will be the core functionality "
"as outlined in the `Roadmap <https://github.com/godotengine/godot-roadmap/"
"blob/master/ROADMAP.md>`_, `squashing bugs and addressing issues <https://"
"github.com/godotengine/godot/issues>`_, and conversations between Godot "
"community members."
msgstr ""
"Godotにアイデアをもたらしたいと思うかもしれません。たとえば、大規模なコアの変"
"更が必要なことであったり、他のゲームエンジンがしていることを取り入れたり、あ"
"るいは代替ワークフローをエディタに組み込むべきといったことです。これらは素晴"
"らしく、そのような貢献をのぞむ意欲的な方々に感謝しておりますが、Godotがあくま"
"で重視しているのは、コア機能を\\ `ロードマップ <https://github.com/"
"godotengine/godot-roadmap/blob/master/ROADMAP.md>`_\\ に定められたとおりにす"
"ること、\\ `バグをつぶしたり問題に対処すること <https://github.com/"
"godotengine/godot/issues>`_\\ 、そしてGodotコミュニティメンバー同士の対話で"
"す。"

msgid ""
"Most developers in the Godot community will be more interested to learn "
"about things like:"
msgstr ""
"それよりも、Godotコミュニティのほとんどの開発者は、以下のようなことを知りたい"
"と思っているでしょう:"

msgid ""
"Your experience using the software and the problems you have (we care about "
"this much more than ideas on how to improve it)."
msgstr ""
"あなたがソフトウェアを使って得た体験と問題(我々は改善のアイデアよりも、これに"
"重きをおいています)。"

msgid ""
"The features you would like to see implemented because you need them for "
"your project."
msgstr "あなたのプロジェクトで必要なので、新たに実装してほしい機能。"

msgid ""
"The concepts that were difficult to understand while learning the software."
msgstr "使い方を学ぶにあたって理解しにくかった概念。"

msgid "The parts of your workflow you would like to see optimized."
msgstr "あなたの作業フローにおいて、最適化したい部分。"

msgid ""
"Parts where you missed clear tutorials or where the documentation wasn't "
"clear."
msgstr ""
"明確なチュートリアルを見逃した部分、またはドキュメントが明確ではなかった部"
"分。"

msgid ""
"Please don't feel like your ideas for Godot are unwelcome. Instead, try to "
"reformulate them as a problem first, so developers and the community have a "
"functional foundation to ground your ideas on."
msgstr ""
"Godotに対するあなたのアイデアが歓迎されないとは思わないでください。それより"
"も、それらを最初に問題としてまとめ上げてみてください。そうすれば、それは開発"
"者とコミュニティがあなたのアイデアを土台にした機能を実現する為の基礎になりま"
"す。"

msgid ""
"A good way to approach sharing your ideas and problems with the community is "
"as a set of user stories. Explain what you are trying to do, what behavior "
"you expect to happen, and then what behavior actually happened. Framing "
"problems and ideas this way will help the whole community stay focused on "
"improving developer experiences as a whole."
msgstr ""
"コミュニティでアイデアや問題を共有するための良い方法は、ユーザーのストーリー"
"として共有することです。あなたが 何をしようとしているのか、どのような行動が起"
"こると予想されるのか、そして実際にどのような行動が起こったのかを説明してくだ"
"さい。 この方法で問題やアイデアを立案すると、コミュニティ全体が開発者エクスペ"
"リエンス全体の改善に集中できるようになります。"

msgid ""
"Bonus points for bringing screenshots, concrete numbers, test cases, or "
"example projects (if applicable)."
msgstr ""
"スクリーンショット、具体的な数字、テストケース、またはサンプルプロジェクト(該"
"当する場合)はボーナスポイントをもたらします。"

msgid "Is it possible to use Godot to create non-game applications?"
msgstr "ゲーム以外のアプリケーション作成のためにGodotを使用できますか？"

msgid ""
"Yes! Godot features an extensive built-in UI system, and its small "
"distribution size can make it a suitable alternative to frameworks like "
"Electron or Qt."
msgstr ""
"Godotには豊富なUIシステムが組み込まれており、ディストリビューションサイズが小"
"さいため、ElectronやQtのようなフレームワークの代替としても適しています。"

msgid ""
"When creating a non-game application, make sure to enable :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>` in the Project Settings to decrease CPU and GPU usage."
msgstr ""
"ゲーム以外のアプリケーションを作成する場合、プロジェクト設定で :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>`を有効にして、CPUとGPUの使用量を減らしてください。"

msgid ""
"That said, we wouldn't recommend using Godot to create a *mobile* "
"application since low-processor mode isn't supported on mobile platforms yet."
msgstr ""
"ただし、モバイルプラットフォームでは low-processor モードがまだサポートされて"
"いないため、Godotを使用して *モバイル* アプリケーションを作成することはお勧め"
"しません。"

msgid ""
"Check out `Material Maker <https://github.com/RodZill4/material-maker>`__ "
"and `Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__ for "
"examples of open source applications made with Godot."
msgstr ""
"Godotで作成されたオープンソースアプリケーションの例については、 `Material "
"Maker <https://github.com/RodZill4/material-maker>`__ と `Pixelorama "
"<https://github.com/Orama-Interactive/Pixelorama>`__ をご覧ください。"

msgid "Is it possible to use Godot as a library?"
msgstr "ライブラリとしてGodotを使用できますか？"

msgid ""
"Godot is meant to be used with its editor. We recommend you give it a try, "
"as it will most likely save you time in the long term. There are no plans to "
"make Godot usable as a library, as it would make the rest of the engine more "
"convoluted and difficult to use for casual users."
msgstr ""
"Godotはエディタを通じて使用されるように作られています。長い目で見れば時間の節"
"約になるはずなので、まずはエディタを試してみてください。Godotをライブラリとし"
"て使用可能にする計画は今のところありません。そうするとエンジンの他の部分がよ"
"り複雑になり、カジュアルユーザーにとって使うのが難しくなってしまうためです。"

msgid ""
"If you want to use a rendering library, look into using an established "
"rendering engine instead. Keep in mind rendering engines usually have "
"smaller communities compared to Godot. This will make it more difficult to "
"find answers to your questions."
msgstr ""
"もしレンダリング ライブラリとして使用されたければ、代わりに既存のレンダリング"
"エンジンを検討してください。ただし、レンダリングエンジンは通常、Godotと比較す"
"るとコミュニティーが小さいことに注意してください。疑問の答えを見つけるのは、"
"より難しくなるでしょう。"

msgid "What user interface toolkit does Godot use?"
msgstr "Godot はどのユーザーインターフェースツールキットを使いますか？"

msgid ""
"Godot does not use a standard :abbr:`GUI (Graphical User Interface)` toolkit "
"like GTK, Qt or wxWidgets. Instead, Godot uses its own user interface "
"toolkit, rendered using OpenGL ES or Vulkan. This toolkit is exposed in the "
"form of Control nodes, which are used to render the editor (which is written "
"in C++). These Control nodes can also be used in projects from any scripting "
"language supported by Godot."
msgstr ""
"Godotは、GTK、Qt、wxWidgetsなどの標準の :abbr:`GUI (Graphical User "
"Interface)` ツールキットを使用しません。代わりに、Godotは、OpenGLESまたは"
"Vulkanを使用してレンダリングされた独自のユーザーインターフェイスツールキット"
"を使用します。このツールキットは、エディター (C ++で記述されている) のレンダ"
"リングに使用されるコントロールノードの形式で公開されます。これらのコントロー"
"ルノードは、Godotでサポートされている任意のスクリプト言語のプロジェクトでも使"
"用できます。"

msgid ""
"This custom toolkit makes it possible to benefit from hardware acceleration "
"and have a consistent appearance across all platforms. On top of that, it "
"doesn't have to deal with the LGPL licensing caveats that come with GTK or "
"Qt. Lastly, this means Godot is \"eating its own dog food\" since the editor "
"itself is one of the most complex users of Godot's UI system."
msgstr ""
"このカスタムツールキットを使用すると、ハードウェア アクセラレーションのメリッ"
"トを受けられ、すべてのプラットフォームで一貫した外観を実現できます。その上、"
"GTKやQtに付随するLGPLライセンス制限に対処する必要がありません。最後に、エディ"
"タ自体がGodotのUIシステムを特に複雑に応用しているユーザの一つなので、Godotは"
"「ドッグフーディング」しています。"

msgid ""
"This custom UI toolkit :ref:`can't be used as a library "
"<doc_faq_use_godot_as_library>`, but you can still :ref:`use Godot to create "
"non-game applications by using the editor <doc_faq_non_game_applications>`."
msgstr ""
"このカスタムUIツールキットを\\ :ref:`ライブラリとして使用することはできませ"
"ん <doc_faq_use_godot_as_library>`\\ が、しかしエディタを使えばGodotで\\ :"
"ref:`ゲーム以外のアプリケーションを作成する "
"<doc_faq_non_game_applications>`\\ ことはできます。"

msgid "Why does Godot not use STL (Standard Template Library)?"
msgstr "なぜGodotはSTL (Standard Template Library)を使わないのですか？"

msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of "
"STL. We believe STL is a great general purpose library, but we had special "
"requirements for Godot."
msgstr ""
"他のライブラリのように(例えばQt)、GodotはSTLを使いません。私たちはSTLが素晴ら"
"しい標準的な目的のためのライブラリだと信じています、しかし、私たちはGodotのた"
"めに特に必要とはしていません。"

msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STLテンプレートは非常に大きなシンボルを作ります、そして巨大のデバッグバイナ"
"リーを結果として生じます。私たちは、代わりにいくつかのテンプレートをとても短"
"い名前と共に使います。"

msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"私たちのコンテナのほとんどは、コピーオンライトを使用していてデータの受け渡し"
"に使うベクターや、必要とするアクセス時間が O(1) のみであるパフォーマンス重視"
"なRIDシステムなど、特別なニーズに対応しています。同様に、ハッシュマップの実装"
"は、内部エンジンタイプとシームレスに統合するように設計されています。"

msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr ""
"コンテナにはメモリトラッキングが組み込まれているため、メモリ使用量を追跡でき"
"ます。"

msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr ""
"大規模な配列の場合、プールメモリを使用します。これは、事前に割り当てられた"
"バッファまたは仮想メモリのいずれかにマップできます。"

msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr ""
"私たちはカスタムString型を使用しています。STLが提供するものは基本的すぎて、適"
"切な国際化サポートが不足しているためです。"

msgid "Why does Godot not use exceptions?"
msgstr "なぜGodotは例外処理を使わないのですか？"

msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"私たちは、ゲームが何であれ、クラッシュすべきではないと考えています。予期しな"
"い状況が発生した場合、Godotはエラーを出力します(スクリプトまでトレース可能)"
"が、その後、可能な限り正常に回復し、動き続けます。"

msgid ""
"Additionally, exceptions significantly increase binary size for the "
"executable."
msgstr ""
"さらに、例外を処理する機能の分、実行ファイルのバイナリサイズが大幅に増加しま"
"す。"

msgid "Why does Godot not enforce RTTI?"
msgstr "GodotがRTTI(実行時型情報)を強制しないのはなぜですか？"

msgid ""
"Godot provides its own type-casting system, which can optionally use RTTI "
"internally. Disabling RTTI in Godot means considerably smaller binary sizes "
"can be achieved, at a little performance cost."
msgstr ""
"Godotには独自の型キャストシステムがあり、オプションで内部でRTTIを使用できま"
"す。 GodotでRTTIを無効にすると、わずかなパフォーマンスコストで、かなり小さい"
"バイナリサイズを実現できます。"

msgid "Why does Godot not force users to implement DoD (Data oriented Design)?"
msgstr "GodotがユーザーにDoD(データ指向設計)の実装を強制しないのはなぜですか？"

msgid ""
"While Godot internally for a lot of the heavy performance tasks attempts to "
"use cache coherency as well as possible, we believe most users don't really "
"need to be forced to use DoD practices."
msgstr ""
"多くの重いパフォーマンスタスクのためにGodotは内部的に可能な限り最高のキャッ"
"シュコヒーレンシーを使用しようとしていますが、ほとんどのユーザーはDoDプラク"
"ティスを強制する必要はほとんどないと考えています。"

msgid ""
"DoD is mostly a cache coherency optimization that can only gain you "
"significant performance improvements when dealing with dozens of thousands "
"of objects (which are processed every frame with little modification). As "
"in, if you are moving a few hundred sprites or enemies per frame, DoD won't "
"help you, and you should consider a different approach to optimization."
msgstr ""
"DoDは主にキャッシュコヒーレンシ最適化であり、何十万ものオブジェクト(ほとんど"
"変更なしでフレームごとに処理される)を処理する場合にのみ、大幅なパフォーマンス"
"の向上が得られます。たとえば、フレームごとに数百のスプライトまたは敵を移動す"
"る場合、DoDは役に立ちません。最適化の別のアプローチを検討する必要があります。"

msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"ゲームの大部分はこれを必要としません。そして、あなたがそのような仕事を必要と"
"する時には、殆どの場合Godotは便利なヘルパーを提供します。"

msgid ""
"If a game that really needs to process such large amount of objects is "
"needed, our recommendation is to use C++ and GDNative for the high "
"performance parts and GDScript (or C#) for the rest of the game."
msgstr ""
"このような大量のオブジェクトを本当に処理する必要があるゲームが必要な場合、推"
"奨されるのは、高性能部分にはC++とGDNativeを、残りのゲームにはGDScript(または"
"C#)を使用することです。"

msgid "How can I support Godot development or contribute?"
msgstr "Godotの開発をサポートしたり、貢献したりするにはどうすればいいですか?"

msgid "See :ref:`doc_ways_to_contribute`."
msgstr ":ref:`doc_ways_to_contribute`\\ をご覧ください。"

msgid "Who is working on Godot? How can I contact you?"
msgstr "Godotには誰が関わっているのですか？どうしたら連絡が取れますか？"

msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"`Godot webサイト <https://godotengine.org/contact>`_\\ の対応するページをご覧"
"ください。"

msgid "Translation status"
msgstr "翻訳ステータス"
