# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to the buildsystem"
msgstr "ビルドシステムの説明"

msgid "SCons"
msgstr "\\ SCons"

msgid ""
"Godot uses `SCons <https://www.scons.org/>`__ to build. We love it, we are "
"not changing it for anything else. We are not even sure other build systems "
"are up to the task of building Godot. We constantly get requests to move the "
"build system to CMake, or Visual Studio, but this is not going to happen. "
"There are many reasons why we have chosen SCons over other alternatives, for "
"example:"
msgstr ""
"Godotはビルドするために `SCons <https://www.scons.org/>`__ を使用しています。"
"私たちはSconsが大好きなので、他のものに変えるつもりはありません。他のビルドシ"
"ステムがGodotのビルドに適しているかどうかさえ、確信がありません。ビルドシステ"
"ムをCMakeやVisual Studioに変更してほしいというリクエストをよく受けますが、起"
"こり得ないことです。他のシステムではなくSConsを選ぶのには、多くの理由がありま"
"す。例えば:"

msgid ""
"Godot can be compiled for a dozen different platforms: all PC platforms, all "
"mobile platforms, many consoles, and WebAssembly."
msgstr ""
"Godotは十種類以上のプラットフォームを対象にコンパイルできます: すべてのPCプ"
"ラットフォーム、すべてのモバイルプラットフォーム、多くのコンソール機、および"
"WebAssembly。"

msgid ""
"Developers often need to compile for several of the platforms **at the same "
"time**, or even different targets of the same platform. They can't afford "
"reconfiguring and rebuilding the project each time. SCons can do this with "
"no sweat, without breaking the builds."
msgstr ""
"開発者は、多くの場合、複数のプラットフォームを\\ **同時に**\\ コンパイルする"
"必要があります、または同じプラットフォームの異なるターゲットをコンパイルする"
"必要があります。毎回プロジェクトを再構成して再構築する余裕はありません。SCons"
"は、ビルドを壊すことなく、労なくこれを行うことができます。"

msgid ""
"SCons will *never* break a build no matter how many changes, configurations, "
"additions, removals etc. You have more chances to die struck by lightning "
"than needing to clean and rebuild in SCons."
msgstr ""
"変更、構成、追加、削除などの回数にかかわらず、SConsはビルドを中断することは"
"\\ *ありません*\\ 。SConsでクリーニングとリビルドを行うよりも、落雷で死亡する"
"可能性の方が高くなります。"

msgid ""
"Godot build process is not simple. Several files are generated by code "
"(binders), others are parsed (shaders), and others need to offer "
"customization (plugins). This requires complex logic which is easier to "
"write in an actual programming language (like Python) rather than using a "
"mostly macro-based language only meant for building."
msgstr ""
"Godotビルドプロセスは簡単ではありません。いくつかのファイルはコード(バイン"
"ダー)によって生成され、他のファイルは解析(シェーダー)であり、他のファイルはカ"
"スタマイズ(プラグイン)を提供する必要があります。これには、構築のみを意図した"
"マクロベースの言語を使用するのではなく、実際のプログラミング言語(Pythonなど)"
"で記述する方が簡単な複雑なロジックが必要です。"

msgid ""
"Godot build process makes heavy use of cross-compiling tools. Each platform "
"has a specific detection process, and all these must be handled as specific "
"cases with special code written for each."
msgstr ""
"Godotのビルド処理はクロスコンパイル ツールを多用しています。それぞれのプラッ"
"トフォームには専用の検査処理があり、またそれらすべてを個別の問題として、専用"
"のコードでもって対処しなければなりません。"

msgid ""
"So, please try to keep an open mind and get at least a little familiar with "
"it if you are planning to build Godot yourself."
msgstr ""
"ですので、もしGodotを自分でビルドすることを計画している場合は、オープンマイン"
"ドを持って、SConsに多少は触れてみてください。"

msgid "Setup"
msgstr "セットアップ"

msgid ""
"Please refer to the documentation for :ref:`doc_compiling_for_android`, :ref:"
"`doc_compiling_for_ios`, :ref:`doc_compiling_for_osx`, :ref:"
"`doc_compiling_for_uwp`, :ref:`doc_compiling_for_web`, :ref:"
"`doc_compiling_for_windows` and :ref:`doc_compiling_for_x11`."
msgstr ""
"以下のドキュメントを参照して下さい: :ref:`doc_compiling_for_android` 、 :ref:"
"`doc_compiling_for_ios` 、 :ref:`doc_compiling_for_osx`、:ref:"
"`doc_compiling_for_uwp`\\ 、\\ :ref:`doc_compiling_for_web`、 :ref:"
"`doc_compiling_for_windows` 及び :ref:`doc_compiling_for_x11`。"

msgid ""
"Note that for **Windows/Visual Studio**, you need to use ``x86_x64 Cross "
"Tools Command Prompt for VS 2017`` or similar, depending on your install, "
"instead of the standard Windows command prompt to enter the commands below."
msgstr ""
"**Windows/Visual Studio** の場合、以下のコマンドを入力するには、標準のWindows"
"コマンドプロンプトではなく、インストールに応じてx86_x64Cross Tools Command "
"Prompt for VS2017または同様のコマンドプロンプトを使用する必要があります。"

msgid "Platform selection"
msgstr "プラットフォームの選択"

msgid ""
"Godot's build system will begin by detecting the platforms it can build for. "
"If not detected, the platform will simply not appear on the list of "
"available platforms. The build requirements for each platform are described "
"in the rest of this tutorial section."
msgstr ""
"Godot のビルドシステムは、ビルド可能なプラットフォームを検出することによって"
"開始されます。検出されない場合、使用可能なプラットフォームの一覧に表示されま"
"せん。各プラットフォームのビルド要件については、このチュートリアルの残りの部"
"分で説明します。"

msgid ""
"SCons is invoked by just calling ``scons``. If no platform is specified, "
"SCons will detect the target platform automatically based on the host "
"platform. It will then start building for the target platform right away."
msgstr ""
"SCons は\\ ``scons``\\ を呼ぶだけで起動します。もしプラットフォームが指定され"
"なければ、SConsはホスト プラットフォームを自動的に検出してターゲット プラット"
"フォームとします。それからすぐにターゲット プラットフォームへのビルドを開始し"
"ます。"

msgid "To list the available target platforms, use ``scons platform=list``::"
msgstr ""
"利用可能なターゲット プラットフォームのリストを得るには、\\ ``scons "
"platform=list``\\ を使います:"

msgid ""
"To build for a platform (for example, x11), run with the ``platform=`` (or "
"``p=`` to make it short) argument:"
msgstr ""
"特定のプラットフォーム (たとえばX11) にビルドするには、引数として\\ "
"``platform=`` (あるいはその短縮形\\ ``p=``\\ ) を付けて実行します:"

msgid ""
"This will start the build process, which will take a while. By default, "
"Godot's SCons setup is configured to use all CPU threads but one (to keep "
"the system responsive during compilation). If you want to adjust how many "
"CPU threads SCons will use, use the ``-j <threads>`` parameter to specify "
"how many threads will be used for the build."
msgstr ""

#, fuzzy
msgid "Example for using 4 threads:"
msgstr "4つのコアを使用する例:"

msgid "Resulting binary"
msgstr "結果のバイナリ"

msgid ""
"The resulting binaries will be placed in the ``bin/`` subdirectory, "
"generally with this naming convention::"
msgstr ""
"結果のバイナリは副ディレクトリの\\ ``bin/``\\ に、通常は以下の命名規則に沿っ"
"て保存されます:"

msgid "For the previous build attempt, the result would look like this::"
msgstr "前記のビルドを試みると、結果は次のようになります:"

msgid ""
"This means that the binary is for X11, is not optimized, has tools (the "
"whole editor) compiled in, and is meant for 64 bits."
msgstr ""
"これは、バイナリがX11用であり、最適化されておらず、ツール(エディタ全体)が組み"
"込まれており、64ビット用であることを意味します。"

#, fuzzy
msgid "A Windows binary with the same configuration will look like this:"
msgstr "同じ設定のWindowsバイナリは次のようになります::"

msgid ""
"Copy that binary to any location you like, as it contains the project "
"manager, editor and all means to execute the game. However, it lacks the "
"data to export it to the different platforms. For that the export templates "
"are needed (which can be either downloaded from `godotengine.org <https://"
"godotengine.org/>`__, or you can build them yourself)."
msgstr ""
"このバイナリには、プロジェクト マネージャ、エディタ、そしてゲームの実行に必要"
"なものすべてが含まれているので、好きな場所にコピーしてください。しかしこのバ"
"イナリには、他のプラットフォームへエクスポートするためのデータは含まれませ"
"ん。それには、エクスポート テンプレートが必要になります (\\ `godotengine.org "
"<https://godotengine.org/>`__ からダウンロードするか、または自身でビルドして"
"ください)。"

msgid ""
"Aside from that, there are a few standard options that can be set in all "
"build targets, and which will be explained below."
msgstr ""
"それとは別に、すべてのビルドターゲットで設定できるいくつかの標準オプションが"
"あり、以下で説明します。"

msgid "Tools"
msgstr "ツール"

msgid ""
"Tools are enabled by default in all PC targets (Linux, Windows, macOS), "
"disabled for everything else. Disabling tools produces a binary that can run "
"projects but that does not include the editor or the project manager."
msgstr ""
"ツールは、すべてのPCターゲット(Linux、Windows、macOS)でデフォルトで有効になっ"
"ています。ツールを無効にすると、プロジェクトを実行できるバイナリが生成されま"
"すが、編集者やプロジェクト マネージャは含まれません。"

msgid "Target"
msgstr "ターゲット"

msgid "Target controls optimization and debug flags. Each mode means:"
msgstr ""
"ターゲットは最適化フラグとデバッグフラグを制御します。各モードの意味は次のと"
"おりです:"

msgid ""
"**debug**: Build with C++ debugging symbols, runtime checks (performs checks "
"and reports error) and none to little optimization."
msgstr ""
"**debug**: C++デバッグシンボル、ランタイムチェック (チェックを実行してエラー"
"を通知する) を使用して、最適化は最小限でビルドします。"

msgid ""
"**release_debug**: Build without C++ debugging symbols and optimization, but "
"keep the runtime checks (performs checks and reports errors). Official "
"editor binaries use this configuration."
msgstr ""
"**release_debug**: C++デバッグ シンボルは無効になり、最適化してビルドされます"
"が、ランタイム チェック (チェックを実行してエラーを通知する) は行われます。公"
"式エディタ バイナリはこの設定を使用しています。"

msgid ""
"**release**: Build without symbols, with optimization and with little to no "
"runtime checks. This target can't be used together with ``tools=yes``, as "
"the editor requires some debug functionality and run-time checks to run."
msgstr ""
"**release**: シンボルは無効になり、最適化された上、ランタイム チェックは最小"
"限でビルドされます。エディタにはいくつかのデバッグ機能とランタイム チェックを"
"必要なので、このターゲットは\\ ``tool=yes``\\ と同時に使うことはできません。"

msgid ""
"This flag appends the ``.debug`` suffix (for debug), or ``.tools`` (for "
"debug with tools enabled). When optimization is enabled (release), it "
"appends the ``.opt`` suffix."
msgstr ""
"このフラグは、ファイル名に\\ ``.debug``\\ (debug版)、あるいは\\ ``.tools``\\ "
"(tool有効のdebug版) を追加します。最適化が有効なとき (release) は、\\ ``."
"opt``\\ を追加します。"

msgid "Bits"
msgstr "ビット"

msgid ""
"Bits is meant to control the CPU or OS version intended to run the binaries. "
"It is focused mostly on desktop platforms and ignored everywhere else."
msgstr ""
"ビットは、バイナリを実行するCPUまたはOSのバージョンを制御するためのものです。"
"主にデスクトッププラットフォームに焦点が当てられており、それ以外の場所では無"
"視されています。"

msgid "**32**: Build binaries for 32-bit platforms."
msgstr "**32**: 32ビット プラットフォーム用のバイナリをビルド。"

msgid "**64**: Build binaries for 64-bit platforms."
msgstr "**64**: 64ビット プラットフォーム用のバイナルをビルド。"

msgid "**default**: Build for the architecture that matches the host platform."
msgstr "**default**: ホスト プラットフォームのアーキテクチャに合わせてビルド。"

msgid ""
"This flag appends ``.32`` or ``.64`` suffixes to resulting binaries when "
"relevant. If ``bits=default`` is used, the suffix will match the detected "
"architecture."
msgstr ""
"このフラグは、出力されたバイナリの名前に\\ ``.32``\\ あるいは\\ ``.64``\\ を"
"対象によって加えます。もし\\ ``bits=default``\\ の場合には、検出されたアーキ"
"テクチャに適したほうを追加します。"

#, fuzzy
msgid "Custom modules"
msgstr "C++のカスタムモジュール"

msgid ""
"It's possible to compile modules residing outside of Godot's directory tree, "
"along with the built-in modules."
msgstr ""

msgid ""
"A ``custom_modules`` build option can be passed to the command line before "
"compiling. The option represents a comma-separated list of directory paths "
"containing a collection of independent C++ modules that can be seen as C++ "
"packages, just like the built-in ``modules/`` directory."
msgstr ""

msgid ""
"For instance, it's possible to provide both relative, absolute, and user "
"directory paths containing such modules:"
msgstr ""

msgid ""
"If there's any custom module with the exact directory name as a built-in "
"module, the engine will only compile the custom one. This logic can be used "
"to override built-in module implementations."
msgstr ""

#, fuzzy
msgid ":ref:`doc_custom_modules_in_c++`"
msgstr "\\ :ref:`doc_custom_postprocessing`"

#, fuzzy
msgid "Cleaning generated files"
msgstr "エクスポートテンプレートのクリーニング"

msgid ""
"Sometimes, you may encounter an error due to generated files being present. "
"You can remove them by using ``scons --clean <options>``, where "
"``<options>`` is the list of build options you've used to build Godot "
"previously."
msgstr ""

msgid ""
"Alternatively, you can use ``git clean -fixd`` which will clean build "
"artifacts for all platforms and configurations. Beware, as this will remove "
"all untracked and ignored files in the repository. Don't run this command if "
"you have uncommitted work!"
msgstr ""

msgid "Other build options"
msgstr "その他のビルドオプション"

msgid ""
"There are several other build options that you can use to configure the way "
"Godot should be built (compiler, debug options, etc.) as well as the "
"features to include/disable."
msgstr ""
"Godotのビルド方法 (コンパイラ、デバッグ オプションなど)と、インクルード/無効"
"化する機能を構成するために使用できるビルドオプションは他にもいくつかありま"
"す。"

msgid ""
"Check the output of ``scons --help`` for details about each option for the "
"version you are willing to compile."
msgstr ""
"コンパイルするバージョンの各オプションの詳細については、 ``scons --help`` の"
"出力を確認してください。"

#, fuzzy
msgid "Overriding the build options"
msgstr "その他のビルドオプション"

#, fuzzy
msgid "Using a file"
msgstr "スクリプトを使用する"

msgid ""
"The default ``custom.py`` file can be created at the root of the Godot "
"Engine source to initialize any SCons build options passed via the command "
"line:"
msgstr ""

#, fuzzy
msgid ""
"You can also disable some of the builtin modules before compiling, saving "
"some time it takes to build the engine. See :ref:`doc_optimizing_for_size` "
"page for more details."
msgstr ""
"必要な機能のみを使用してAndroidエクスポートテンプレートをコンパイルすることに"
"より、サイズをさらに最適化できます。詳細については、\\ :ref:"
"`doc_optimizing_for_size` を参照してください。"

msgid ""
"You can use the online `Godot build options generator <https://godot-build-"
"options-generator.github.io/>`__ to generate a ``custom.py`` file containing "
"SCons options. You can then save this file and place it at the root of your "
"Godot source directory."
msgstr ""

msgid ""
"Another custom file can be specified explicitly with the ``profile`` command "
"line option, both overriding the default build configuration:"
msgstr ""

msgid ""
"Build options set from the file can be overridden by the command line "
"options."
msgstr ""

msgid "It's also possible to override the options conditionally:"
msgstr "条件に応じてオプションをオーバーライドすることもできます:"

msgid "Using the SCONSFLAGS"
msgstr ""

msgid ""
"``SCONSFLAGS`` is an environment variable which is used by the SCons to set "
"the options automatically without having to supply them via the command line."
msgstr ""

msgid ""
"For instance, you may want to force a number of CPU threads with the "
"aforementioned ``-j`` option for all future builds:"
msgstr ""

msgid "Export templates"
msgstr "エクスポートテンプレート"

msgid ""
"Official export templates are downloaded from the Godot Engine site: "
"`godotengine.org <https://godotengine.org/>`__. However, you might want to "
"build them yourself (in case you want newer ones, you are using custom "
"modules, or simply don't trust your own shadow)."
msgstr ""
"公式エクスポートテンプレートは、Godot Engineサイトからダウンロードできます: "
"`godotengine.org <https://godotengine.org/>`_\\ 。ただし、新しいモジュールが"
"必要な場合、カスタム モジュールを使用している場合、または単に自身の影すらも信"
"用しない主義であるなら、自分でビルドすることもできます。"

msgid ""
"If you download the official export templates package and unzip it, you will "
"notice that most files are optimized binaries or packages for each platform:"
msgstr ""
"公式のエクスポート テンプレートのパッケージをダウンロードして解凍すれば、その"
"ほとんどのファイルは、最適化されたバイナリかパッケージであることに気づくで"
"しょう:"

msgid ""
"To create those yourself, follow the instructions detailed for each platform "
"in this same tutorial section. Each platform explains how to create its own "
"template."
msgstr ""
"これらを自分で作るには、このチュートリアル セクションにある、それぞれのプラッ"
"トフォーム用の解説をお読みください。それぞれのプラットフォームにて、エクス"
"ポート テンプレートの作成法が書かれています。"

msgid ""
"The ``version.txt`` file should contain the corresponding Godot version "
"identifier. This file is used to install export templates in a version-"
"specific directory to avoid conflicts. For instance, if you are building "
"export templates for Godot 3.1.1, ``version.txt`` should contain ``3.1.1."
"stable`` on the first line (and nothing else). This version identifier is "
"based on the ``major``, ``minor``, ``patch`` (if present) and ``status`` "
"lines of the `version.py file in the Godot Git repository <https://github."
"com/godotengine/godot/blob/master/version.py>`__."
msgstr ""
"\\ ``version.txt`` ファイルには、対応する Godot のバージョン識別子を含める必"
"要があります。このファイルは、バージョン専用のディレクトリにエクスポート テン"
"プレートをインストールして、名前の衝突を避けるためにあります。一例として、も"
"し Godot 3.1.1 用のエクスポート テンプレートをビルドするなら、\\ ``version."
"txt``\\ の最初の行に\\ ``3.1.1.stable``\\ と書きます (それ以外は不要)。この"
"バージョン識別子を構成するのは、\\ ``メジャー``\\ 、\\ ``マイナー``\\ 、\\ ``"
"パッチ(ある場合)``\\ 、そして\\ `Godot の Git レポジトリにある version.py "
"<https://github.com/godotengine/godot/blob/master/version.py>`_\\ ファイルの"
"\\ ``status``\\ ラインです。"

msgid ""
"If you are developing for multiple platforms, macOS is definitely the most "
"convenient host platform for cross-compilation, since you can cross-compile "
"for almost every target (except for UWP). Linux and Windows come in second "
"place, but Linux has the advantage of being the easier platform to set this "
"up."
msgstr ""
"もし複数のプラットフォームに向けて開発するなら、間違いなく macOS が一番実用的"
"なクロスコンパイルのためのホスト プラットフォームでしょう。ほぼ全てのターゲッ"
"ト (UWPを除く) にクロスコンパイルできます。Linux と Windows がその次に来ます"
"が、しかし、Linux にはセットアップが容易であるという利点があります。"

msgid "Translation status"
msgstr "翻訳ステータス"
