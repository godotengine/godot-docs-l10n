# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Android"
msgstr "Android用のコンパイル"

msgid ""
"This page describes how to compile Android export template binaries from "
"source. If you're looking to export your project to Android instead, read :"
"ref:`doc_exporting_for_android`."
msgstr ""

msgid "Note"
msgstr "注意"

msgid ""
"In most cases, using the built-in deployer and export templates is good "
"enough. Compiling the Android APK manually is mostly useful for custom "
"builds or custom packages for the deployer."
msgstr ""
"たいていの場合、デプロイヤーとエクスポートテンプレートはビルトインのもので十"
"分です。Android APKを手動でコンパイルするのは、デプロイヤーのためにカスタムビ"
"ルドやカスタムパッケージを用意する場合がほとんどです。"

msgid ""
"Also, you still need to follow the steps mentioned in the :ref:"
"`doc_exporting_for_android` tutorial before attempting to build a custom "
"export template."
msgstr ""
"また、カスタムのエクスポート テンプレートを作成するときでも、チュートリアル"
"\\ :ref:`doc_exporting_for_android`\\ のステップを追う必要があります。"

msgid "Requirements"
msgstr "必要条件"

msgid "For compiling under Windows, Linux or macOS, the following is required:"
msgstr "Windows、Linux、またはmacOSでコンパイルするには、次のことが必要です:"

msgid "`Python 3.5+ <https://www.python.org/downloads/>`_."
msgstr "`Python 3.5 以降 <https://www.python.org/downloads/>`_\\ 。"

msgid "`SCons 3.0+ <https://scons.org/pages/download.html>`_ build system."
msgstr ""
"`3.0以降のSCons <https://scons.org/pages/download.html>`_ ビルドシステム。"

msgid ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ "
"(command-line tools are sufficient)."
msgstr ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ (コマン"
"ドライン ツールで十分です)。"

#, fuzzy
msgid "Required SDK components will be automatically installed."
msgstr ""
"必要なSDKコンポーネントは、Gradleにより自動的にインストールされます (NDKを除"
"く)。"

msgid ""
"On Linux, **do not use an Android SDK provided by your distribution's "
"repositories as it will often be outdated**."
msgstr ""

msgid "Gradle (will be downloaded and installed automatically if missing)."
msgstr ""
"Gradle(欠落している場合は自動的にダウンロードされ、インストールされます)。"

#, fuzzy
msgid "JDK 11 (either OpenJDK or Oracle JDK)."
msgstr "JDK 8 (OpenJDK あるいは Oracle JDK のどちらか)。"

msgid ""
"You can download a build from `ojdkbuild <https://github.com/ojdkbuild/"
"ojdkbuild>`_."
msgstr ""
"ビルドされたものが `ojdkbuild <https://github.com/ojdkbuild/ojdkbuild>`_ にて"
"ダウンロードできます。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"Godotにおける基本的なSconsの使い方については、\\ :ref:"
"`doc_introduction_to_the_buildsystem`\\ を参照してください。"

msgid "Setting up the buildsystem"
msgstr "ビルドシステムのセットアップ"

msgid ""
"Set the environment variable ``ANDROID_SDK_ROOT`` to point to the Android "
"SDK. If you downloaded the Android command-line tools, this would be the "
"folder where you extracted the contents of the ZIP archive."
msgstr ""

msgid "Install the necessary SDK components in this folder:"
msgstr ""

msgid ""
"Accept the SDK component licenses by running the following command where "
"``android_sdk_path`` is the path to the Android SDK, then answering all the "
"prompts with ``y``:"
msgstr ""

msgid ""
"Complete setup by running the following command where ``android_sdk_path`` "
"is the path to the Android SDK."
msgstr ""

#, fuzzy
msgid ""
"To set the environment variable on Windows, press :kbd:`Windows + R`, type "
"\"control system\", then click on **Advanced system settings** in the left "
"pane, then click on **Environment variables** on the window that appears."
msgstr ""
"Windowsでこれらの環境変数を設定するには、\\ :kbd:`Windows + R` を押し"
"て、\"control system\" と打ち、左のペインから **システムの詳細設定** をクリッ"
"クし、表示されるウィンドウで **環境変数** をクリックします。"

#, fuzzy
msgid ""
"To set the environment variable on Linux or macOS, use ``export "
"ANDROID_SDK_ROOT=/path/to/android-sdk`` where ``/path/to/android-sdk`` "
"points to the root of the SDK directories."
msgstr ""
"LinuxやmacOSで環境変数を設定するには、\\ ``export ANDROID_HOME=/path/to/"
"android-sdk`` および ``export ANDROID_NDK_ROOT=/path/to/android-ndk`` を使用"
"し、 ``/path/to/android-sdk`` と ``/path/to/android-ndk`` はそれぞれSDKとNDK"
"のルート ディレクトリを指定します。"

msgid "Building the export templates"
msgstr "エクスポートテンプレートのビルド"

msgid ""
"Godot needs two export templates for Android: the optimized \"release\" "
"template (``android_release.apk``) and the debug template (``android_debug."
"apk``). As Google will require all APKs to include ARMv8 (64-bit) libraries "
"starting from August 2019, the commands below will build an APK containing "
"both ARMv7 and ARMv8 libraries."
msgstr ""
"Godotには、Android用の2つのエクスポートテンプレートが必要です。最適化された "
"\"release\" テンプレート(``android_release.apk``)とデバッグテンプレート "
"(``android_debug.apk``)です。 Googleは2019年8月からすべてのAPKにARMv8(64ビッ"
"ト)ライブラリを含めることを要求するため、以下のコマンドはARMv7およびARMv8ライ"
"ブラリの両方を含むAPKを構築します。"

#, fuzzy
msgid ""
"Compiling the standard export templates is done by calling SCons from the "
"Godot root directory with the following arguments:"
msgstr ""
"標準エクスポートテンプレートのコンパイルは、SConsを次の引数で呼び出して実行さ"
"れます:"

msgid ""
"Release template (used when exporting with **Debugging Enabled** unchecked)"
msgstr ""
"リリーステンプレート(**Debugging Enabled** をオフにしてエクスポートするときに"
"使用)"

msgid "The resulting APK will be located at ``bin/android_release.apk``."
msgstr "得られたAPKは ``bin/android_release.apk`` にあります。"

msgid "Debug template (used when exporting with **Debugging Enabled** checked)"
msgstr ""
"デバッグテンプレート(**Debugging Enabled** をオンにしてエクスポートするときに"
"使用)"

msgid "The resulting APK will be located at ``bin/android_debug.apk``."
msgstr "得られたAPKは ``bin/android_debug.apk`` にあります。"

msgid "Adding support for x86 devices"
msgstr "x86デバイスのサポートの追加"

#, fuzzy
msgid ""
"If you also want to include support for x86 and x86-64 devices, run the "
"SCons command a third and fourth time with the ``android_arch=x86``, and "
"``android_arch=x86_64`` arguments before building the APK with Gradle. For "
"example, for the release template:"
msgstr ""
"x86デバイスのサポートも含める場合は、GradleでAPKをビルドする前に、\\ "
"``android_arch=x86`` 引数を指定してSConsコマンドを3回実行します。たとえば、リ"
"リーステンプレートの場合:"

msgid ""
"This will create a fat binary that works on all platforms. The final APK "
"size of exported projects will depend on the platforms you choose to support "
"when exporting; in other words, unused platforms will be removed from the "
"APK."
msgstr ""
"これにより、すべてのプラットフォームで機能するファットバイナリが作成されま"
"す。エクスポートされたプロジェクトの最終的なAPKサイズは、エクスポート時にサ"
"ポートすることを選択したプラットフォームによって異なります。つまり、未使用の"
"プラットフォームはAPKから削除されます。"

msgid "Cleaning the generated export templates"
msgstr "エクスポートテンプレートのクリーニング"

msgid ""
"You can use the following commands to remove the generated export templates:"
msgstr ""
"次のコマンドを使用して、生成されたエクスポートテンプレートを削除できます:"

msgid "Using the export templates"
msgstr "エクスポートテンプレートの使用"

msgid ""
"Godot needs release and debug APKs that were compiled against the same "
"version/commit as the editor. If you are using official binaries for the "
"editor, make sure to install the matching export templates, or build your "
"own from the same version."
msgstr ""
"Godotには、エディタと同じバージョン/コミットに対してコンパイルされたAPKのリ"
"リースとデバッグが必要です。エディタに公式のバイナリを使用している場合は、必"
"ず一致するエクスポートテンプレートをインストールするか、同じバージョンから独"
"自のテンプレートをビルドしてください。"

msgid ""
"When exporting your game, Godot opens the APK, changes a few things inside "
"and adds your files."
msgstr ""
"ゲームをエクスポートするとき、GodotはAPKを開き、内部のいくつかを変更してファ"
"イルを追加します。"

msgid "Installing the templates"
msgstr "テンプレートのインストール"

msgid ""
"The newly-compiled templates (``android_debug.apk`` and ``android_release."
"apk``) must be copied to Godot's templates folder with their respective "
"names. The templates folder can be located in:"
msgstr ""
"新しくコンパイルされたテンプレート(``android_debug.apk`` および "
"``android_release.apk``) は、それぞれの名前でGodotのテンプレートフォルダにコ"
"ピーする必要があります。テンプレートフォルダは次の場所にあります:"

msgid "Windows: ``%APPDATA%\\Godot\\templates\\<version>\\``"
msgstr "Windows: ``%APPDATA%\\Godot\\templates\\<version>\\``"

msgid "Linux: ``$HOME/.local/share/godot/templates/<version>/``"
msgstr "Linux: ``$HOME/.local/share/godot/templates/<version>/``"

msgid "macOS: ``$HOME/Library/Application Support/Godot/templates/<version>/``"
msgstr ""
"macOS: ``$HOME/Library/Application Support/Godot/templates/<version>/``"

msgid ""
"``<version>`` is of the form ``major.minor[.patch].status`` using values "
"from ``version.py`` in your Godot source repository (e.g. ``3.0.5.stable`` "
"or ``3.1.dev``). You also need to write this same version string to a "
"``version.txt`` file located next to your export templates."
msgstr ""
"``<version> `` の形式は ``major.minor[.patch].status`` で、Godotソースリポジ"
"トリの ``version.py`` の値を使用します(例: ``3.0.5.stable`` または ``3.1."
"dev``)。また、エクスポートテンプレートの隣にある ``version.txt`` ファイルにこ"
"の同じバージョン文字列を書き込む必要があります。"

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your APKs as custom export templates here:"
msgstr ""
"ただし、カスタムモジュールまたはカスタムC++コードを記述している場合は、代わり"
"にここでカスタムエクスポートテンプレートとしてAPKを構成することをお勧めしま"
"す:"

msgid ""
"You don't even need to copy them, you can just reference the resulting file "
"in the ``bin\\`` directory of your Godot source folder, so that the next "
"time you build you will automatically have the custom templates referenced."
msgstr ""
"コピーする必要もなく、Godotソースフォルダの ``bin\\`` ディレクトリで結果の"
"ファイルを参照するだけで、次回ビルド時にカスタム テンプレートが自動的に参照さ"
"れます。"

msgid "Troubleshooting"
msgstr "トラブルシューティング"

msgid "Platform doesn't appear in SCons"
msgstr ""

msgid ""
"Double-check that you've set the ``ANDROID_SDK_ROOT`` environment variable. "
"This is required for the platform to appear in SCons' list of detected "
"platforms. See :ref:`Setting up the buildsystem "
"<doc_android_setting_up_the_buildsystem>` for more information."
msgstr ""

msgid "Application not installed"
msgstr "アプリケーションがインストールされていません"

msgid ""
"Android might complain the application is not correctly installed. If so:"
msgstr ""
"Androidは、アプリケーションが正しくインストールされていないことを訴えます。そ"
"の場合:"

msgid "Check that the debug keystore is properly generated."
msgstr "デバッグ キーストアが正しく生成されていることを確認します。"

msgid "Check that the jarsigner executable is from JDK 8."
msgstr "jarsigner実行可能ファイルがJDK 8からのものであることを確認します。"

msgid ""
"If it still fails, open a command line and run `logcat <https://developer."
"android.com/studio/command-line/logcat>`_:"
msgstr ""
"それでも失敗する場合は、コマンドラインを開き、\\ `logcat <https://developer."
"android.com/studio/command-line/logcat>`_を実行します。"

msgid ""
"Then check the output while the application is installed; the error message "
"should be presented there. Seek assistance if you can't figure it out."
msgstr ""
"次に、アプリケーションのインストール中に出力を確認します。エラーメッセージが"
"表示されます。理解できない場合は支援を求めてください。"

msgid "Application exits immediately"
msgstr "アプリケーションは直ちに終了します"

msgid ""
"If the application runs but exits immediately, this might be due to one of "
"the following reasons:"
msgstr ""
"アプリケーションは実行されてもすぐに終了する場合は、次のいずれかの理由が考え"
"られます:"

msgid ""
"Make sure to use export templates that match your editor version; if you use "
"a new Godot version, you *have* to update the templates too."
msgstr ""
"エディタのバージョンと一致するエクスポートテンプレートを使用してください。 新"
"しいGodotバージョンを使用する場合は、テンプレートも更新する\\ *必要があります"
"*\\ 。"

msgid ""
"``libgodot_android.so`` is not in ``libs/<android_arch>/`` where "
"``<android_arch>`` is the device's architecture."
msgstr ""
"``libgodot_android.so`` は ``libs/<android_arch>/`` にありません。ここで "
"``<android_arch>`` はデバイスのアーキテクチャです。"

msgid ""
"The device's architecture does not match the exported one(s). Make sure your "
"templates were built for that device's architecture, and that the export "
"settings included support for that architecture."
msgstr ""
"デバイスのアーキテクチャが、エクスポートされたものと一致しません。テンプレー"
"トがそのデバイスのアーキテクチャ用に構築されていること、およびエクスポート設"
"定にそのアーキテクチャのサポートが含まれていることを確認してください。"

msgid "In any case, ``adb logcat`` should also show the cause of the error."
msgstr "いずれの場合も、\\ ``adb logcat`` にはエラーの原因も表示されます。"

msgid "Translation status"
msgstr "翻訳ステータス"
