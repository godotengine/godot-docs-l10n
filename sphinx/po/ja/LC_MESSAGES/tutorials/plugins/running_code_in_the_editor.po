# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Running code in the editor"
msgstr "エディタでコードを実行する"

msgid "What is ``tool``?"
msgstr "``tool`` とは何ですか？"

msgid ""
"``tool`` is a powerful line of code that, when added at the top of your "
"script, makes it execute in the editor. You can also decide which parts of "
"the script execute in the editor, which in game, and which in both."
msgstr ""
"`` tool``は強力なコード行で、スクリプトの先頭に追加すると、エディタで実行でき"
"るようになります。スクリプトのどの部分をエディタで実行し、どの部分をゲームで"
"実行するか、または両方で実行するかを決定することもできます。"

msgid ""
"You can use it for doing many things, but it is mostly useful in level "
"design for visually presenting things that are hard to predict ourselves. "
"Here are some use cases:"
msgstr ""
"多くの目的のためにそれを使用できますが、レベル設計をするときに、予測が難しい"
"ものを視覚的に提示するためにとても役立ちます。使用例は次のとおりです:"

#, fuzzy
msgid ""
"If you have a cannon that shoots cannonballs affected by physics (gravity), "
"you can draw the cannonball's trajectory in the editor, making level design "
"a lot easier."
msgstr ""
"物理演算(重力)の影響を受ける砲弾を発射する大砲を持っている場合、エディタで砲"
"弾の軌跡を描くことができ、レベル設計がはるかに簡単になります。"

msgid ""
"If you have jumppads with varying jump heights, you can draw the maximum "
"jump height a player would reach if it jumped on one, also making level "
"design easier."
msgstr ""
"ジャンプの高さが異なるジャンプパッドがある場合、プレイヤーがジャンプした場合"
"に到達する最大ジャンプ高を描画でき、レベル設計も容易になります。"

msgid ""
"If your player doesn't use a sprite, but draws itself using code, you can "
"make that drawing code execute in the editor to see your player."
msgstr ""
"プレイヤーがスプライトを使用せず、コードを使用して描画を行う場合に、エディタ"
"でその描画コードを実行してプレイヤーを表示できます。"

msgid ""
"``tool`` scripts run inside the editor, and let you access the scene tree of "
"the currently edited scene. This is a powerful feature which also comes with "
"caveats, as the editor does not include protections for potential misuse of "
"``tool`` scripts. Be **extremely** cautious when manipulating the scene "
"tree, especially via :ref:`Node.queue_free<class_Node_method_queue_free>`, "
"as it can cause crashes if you free a node while the editor runs logic "
"involving it."
msgstr ""
"``tool`` スクリプトはエディタ内で実行され、現在編集されているシーンのシーンツ"
"リーにアクセスできます。エディタには ``tool`` スクリプトの潜在的な誤用に対す"
"る保護が含まれていないため、これは警告も伴う強力な機能です。特に :ref:`Node."
"queue_free <class_Node_method_queue_free>` を介してシーンツリーを操作するとき"
"は、エディタがそれに関連するロジックを実行している間にノードを解放するとク"
"ラッシュする可能性があるため、\\ **非常に**\\ 注意してください。"

msgid "How to use it"
msgstr "使用方法"

#, fuzzy
msgid ""
"To turn a script into a tool, add the keyword ``tool`` at the top of your "
"code."
msgstr ""
"スクリプトをツールにするには、コードの先頭に ``tool`` キーワードを追加しま"
"す。"

msgid ""
"To check if you are currently in the editor, use: ``Engine.editor_hint``."
msgstr ""
"現在エディタで実行されているかどうかを確認するには、\\ ``Engine."
"editor_hint`` を使用します。"

#, fuzzy
msgid "For example, if you want to execute some code only in the editor, use:"
msgstr "たとえば、エディタでのみコードを実行する場合は、次を使用します:"

#, fuzzy
msgid ""
"On the other hand, if you want to execute code only in game, simply negate "
"the same statement:"
msgstr "一方、ゲームでのみコードを実行する場合は、前の表現を単純に否定します:"

#, fuzzy
msgid ""
"Pieces of code do not have either of the 2 conditions above will run both in-"
"editor and in-game."
msgstr ""
"上記の2つの条件のいずれにも該当しないコードは、エディタとゲームの両方で実行さ"
"れます。"

#, fuzzy
msgid "Here is how a ``_process()`` function might look for you:"
msgstr "以下は ``_process()`` 関数がどのように見えるかです:"

#, fuzzy
msgid ""
"Modifications in editor are permanent. For example, in the following case, "
"when we remove the script, the node will keep its rotation. Be careful to "
"avoid making unwanted modifications."
msgstr ""
"エディタでの変更は永続的です。この場合、スクリプトを削除すると、ノードは回転"
"方向を維持します。不要な変更を加えないように注意してください。"

msgid "Try it out"
msgstr "やってみましょう"

msgid ""
"Add a ``Sprite`` node to your scene and set the texture to Godot icon. "
"Attach and open a script, and change it to this:"
msgstr ""
"シーンに ``Sprite`` ノードを追加し、テクスチャをGodotアイコンに設定します。ス"
"クリプトをアタッチして開き、次の手順に変更します:"

msgid ""
"Save the script and return to the editor. You should now see your object "
"rotate. If you run the game, it will also rotate."
msgstr ""
"スクリプトを保存して、エディタに戻ります。これで、オブジェクトが回転するのが"
"見えるはずです。ゲームを実行すると、ゲームも回転します。"

msgid ""
"If you don't see the changes, reload the scene (close it and open it again)."
msgstr ""
"変更が表示されない場合は、シーンをリロードします(閉じてからもう一度開きま"
"す)。"

msgid ""
"Now let's choose which code runs when. Modify your ``_process()`` function "
"to look like this:"
msgstr ""
"次に、どのコードがいつ実行されるのかを選択しましょう。\\ ``_process()`` 関数"
"を次のように変更します:"

msgid ""
"Save the script. Now the object will spin clockwise in the editor, but if "
"you run the game, it will spin counter-clockwise."
msgstr ""
"スクリプトを保存します。これで、オブジェクトはエディタでは時計回りに回転しま"
"すが、ゲームを実行すると、反時計回りに回転します。"

#, fuzzy
msgid "Editing variables"
msgstr "インスタンスの編集"

msgid ""
"Add and export a variable speed to the script. The function set_speed after "
"\"setget\" is executed with your input to change the variable. Modify  "
"``_process()`` to include the rotation speed."
msgstr ""

msgid ""
"Code from other nodes doesn't run in the editor. Your access to other nodes "
"is limited. You can access the tree and nodes, and their default properties, "
"but you can't access user variables. If you want to do so, other nodes have "
"to run in the editor too. AutoLoad nodes cannot be accessed in the editor at "
"all."
msgstr ""
"他のノードからのコードはエディタで実行されません。他のノードへのアクセスは制"
"限されています。ツリーとノード、およびそれらのデフォルトのプロパティにはアク"
"セスできますが、ユーザー変数にはアクセスできません。そうしたい場合は、他の"
"ノードもエディタで実行する必要があります。 AutoLoadノードにはエディタではまっ"
"たくアクセスできません。"

msgid "Instancing scenes"
msgstr "シーンのインスタンス化"

msgid ""
"You can instantiate packed scenes normally and add them to the scene "
"currently opened in the editor. By default, nodes or scenes added with :ref:"
"`Node.add_child(node) <class_Node_method_add_child>` are **not** visible in "
"the Scene tree dock and are **not** persisted to disk. If you wish the node "
"or scene to be visible in the scene tree dock and persisted to disk when "
"saving the scene, you need to set the child node's :ref:`owner "
"<class_Node_property_owner>` property to the currently edited scene root."
msgstr ""

msgid "If you are using ``tool``:"
msgstr ""

msgid "If you are using :ref:`EditorScript<class_EditorScript>`:"
msgstr ""

#, fuzzy
msgid ""
"Using ``tool`` improperly can yield many errors. It is advised to first "
"write the code how you want it, and only then add the ``tool`` keyword to "
"the top. Also, make sure to separate code that runs in-editor from code that "
"runs in-game. This way, you can find bugs more easily."
msgstr ""
"``tool`` を不適切に使用すると、多くのエラーが発生する可能性があります。最初に"
"あなたが望むようにコードを書き、次に ``tool`` キーワードを追加することをお勧"
"めします。また、エディタで実行する部分とゲームで実行する部分にコードを分割し"
"てください。これにより、バグを簡単に見つけることができます。"

msgid "Translation status"
msgstr "翻訳ステータス"
