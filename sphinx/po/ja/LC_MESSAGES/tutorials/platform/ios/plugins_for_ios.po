# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Plugins for iOS"
msgstr "iOS用プラグイン"

#, fuzzy
msgid ""
"Godot provides StoreKit, GameCenter, iCloud services and other plugins. They "
"are using same model of asynchronous calls explained below."
msgstr ""
"現時点では、GameCenterとStorekitの2つのiOS APIが部分的に実装されています。両"
"方とも、以下で説明する非同期呼び出しの同じモデルを使用します。"

msgid "ARKit and Camera access are also provided as plugins."
msgstr ""

msgid ""
"Latest updates, documentation and source code can be found at `Godot iOS "
"plugins repository <https://github.com/godotengine/godot-ios-plugins>`_"
msgstr ""
"最新のアップデートについては、ドキュメントとソースコードが `Godot iOS "
"plugins repository <https://github.com/godotengine/godot-ios-plugins>`_ にあ"
"ります。"

#, fuzzy
msgid "Accessing plugin singletons"
msgstr "シーンノードへのアクセス"

msgid ""
"To access plugin functionality, you first need to check that the plugin is "
"exported and available by calling the `Engine.has_singleton()` function, "
"which returns a registered singleton."
msgstr ""

#, fuzzy
msgid "Here's an example of how to do this in GDScript:"
msgstr "2つのボーンを持つスケルトンノードの例を次に示します:"

msgid "Asynchronous methods"
msgstr "非同期メソッド"

msgid ""
"When requesting an asynchronous operation, the method will look like this:"
msgstr "非同期操作を要求する場合、メソッドは次のようになります:"

msgid ""
"The parameter will usually be a Dictionary, with the information necessary "
"to make the request, and the call will have two phases. First, the method "
"will immediately return an Error value. If the Error is not 'OK', the call "
"operation is completed, with an error probably caused locally (no internet "
"connection, API incorrectly configured, etc). If the error value is 'OK', a "
"response event will be produced and added to the 'pending events' queue. "
"Example:"
msgstr ""
"通常、パラメーターは、要求を行うのに必要な情報を含むDictionaryであり、呼び出"
"しには2つのフェーズがあります。 まず、メソッドはすぐにエラー値を返します。 エ"
"ラーが ``OK`` でない場合、コール操作は終了しますが、おそらく、ローカルで発生"
"したエラー(インターネット接続がない、APIが正しく構成されていないなど)です。 "
"エラー値が ``OK`` の場合、応答イベントが生成され、'pending events' キューに追"
"加されます。 例:"

msgid ""
"Remember that when a call returns OK, the API will *always* produce an event "
"through the pending_event interface, even if it's an error, or a network "
"timeout, etc. You should be able to, for example, safely block the interface "
"waiting for a reply from the server. If any of the APIs don't behave this "
"way it should be treated as a bug."
msgstr ""
"呼び出しがOKを返すと、エラーやネットワークタイムアウトなどであっても、APIは *"
"常に* pending_eventインターフェースを介してイベントを生成することに注意してく"
"ださい。 たとえば、サーバーからの応答を待っているインターフェイスを安全にブ"
"ロックできる必要があります。 APIのいずれかがこのように動作しない場合は、バグ"
"として扱う必要があります。"

msgid "The pending event interface consists of two methods:"
msgstr ""
"保留中のイベント(pending event)インターフェイスは、2つのメソッドで構成されて"
"います:"

msgid ""
"``get_pending_event_count()`` Returns the number of pending events on the "
"queue."
msgstr ""
"``get_pending_event_count()`` キュー上の保留中のイベントの数を返します。"

msgid ""
"``Variant pop_pending_event()`` Pops the first event from the queue and "
"returns it."
msgstr ""
"``Variant pop_pending_event()`` キューから最初のイベントをポップし、それを返"
"します。"

msgid "Store Kit"
msgstr "\\ Store Kit"

msgid ""
"Implemented in `Godot iOS InAppStore plugin <https://github.com/godotengine/"
"godot-ios-plugins/blob/master/plugins/inappstore/in_app_store.mm>`_."
msgstr ""
"`Godot iOS InAppStore plugin <https://github.com/godotengine/godot-ios-"
"plugins/blob/master/plugins/inappstore/in_app_store.mm>`_\\ で実装されていま"
"す。"

msgid ""
"The Store Kit API is accessible through the ``InAppStore`` singleton. It is "
"initialized automatically."
msgstr ""
"Store Kit APIは \"InAppStore\" シングルトンからアクセスできます(常にgdscript"
"から利用可能です)。自動的に初期化されます。"

#, fuzzy
msgid "The following methods are available and documented below:"
msgstr "プレゼンテーションを実装するには、次のメソッドを使用します:"

#, fuzzy
msgid "``purchase``"
msgstr "購入"

msgid ""
"Purchases a product ID through the Store Kit API. You have to call "
"``finish_transaction(product_id)`` once you receive a successful response or "
"call ``set_auto_finish_transaction(true)`` prior to calling ``purchase()``. "
"These two methods ensure the transaction is completed."
msgstr ""

msgid "Parameters"
msgstr "パラメーター"

#, fuzzy
msgid ""
"Takes a dictionary as a parameter, with one field, ``product_id``, a string "
"with your product ID. Example:"
msgstr ""
"製品IDを含む文字列である ``product_id`` という1つのフィールドを持つ "
"Dictionary をパラメーターとして受け取ります。例:"

msgid "Response event"
msgstr "応答イベント"

msgid "The response event will be a dictionary with the following fields:"
msgstr "応答イベントは、次のフィールドを持つ Dictionary になります:"

msgid "On error:"
msgstr "エラー時:"

msgid "On success:"
msgstr "成功時:"

#, fuzzy
msgid "``request_product_info``"
msgstr "request_product_info"

msgid "Requests the product info on a list of product IDs."
msgstr "製品IDのリストで製品情報を要求します。"

#, fuzzy
msgid ""
"Takes a dictionary as a parameter, with a single ``product_ids`` key to "
"which a string array of product IDs is assigned. Example:"
msgstr ""
"製品IDを含む文字列配列である ``product_ids`` という1つのフィールドを持つ "
"Dictionary をパラメーターとして受け取ります。例:"

#, fuzzy
msgid "``restore_purchases``"
msgstr "restore_purchases"

#, fuzzy
msgid ""
"Restores previously made purchases on user's account. This will create "
"response events for each previously purchased product ID."
msgstr ""
"ユーザーのアカウントで以前に購入したものを復元します。 これにより、以前に購入"
"した製品IDごとに応答イベントが作成されます。"

msgid "The response events will be dictionaries with the following fields:"
msgstr "応答イベントは、次のフィールドを持つ Dictionary になります:"

msgid "``set_auto_finish_transaction``"
msgstr ""

msgid ""
"If set to ``true``, once a purchase is successful, your purchase will be "
"finalized automatically. Call this method prior to calling ``purchase()``."
msgstr ""

msgid ""
"Takes a boolean as a parameter which specifies if purchases should be "
"automatically finalized. Example:"
msgstr ""

#, fuzzy
msgid "``finish_transaction``"
msgstr "\\ ``connection``"

msgid ""
"If you don't want transactions to be automatically finalized, call this "
"method after you receive a successful purchase response."
msgstr ""

msgid ""
"Takes a string ``product_id`` as an argument. ``product_id`` specifies what "
"product to finalize the purchase on. Example:"
msgstr ""

msgid "Game Center"
msgstr "\\ Game Center"

msgid ""
"Implemented in `Godot iOS GameCenter plugin <https://github.com/godotengine/"
"godot-ios-plugins/blob/master/plugins/gamecenter/game_center.mm>`_."
msgstr ""
"`Godot iOS GameCenter plugin <https://github.com/godotengine/godot-ios-"
"plugins/blob/master/plugins/gamecenter/game_center.mm>`_\\ で実装されていま"
"す。"

#, fuzzy
msgid ""
"The Game Center API is available through the \"GameCenter\" singleton. It "
"has the following methods:"
msgstr ""
"Game Center APIは、\"GameCenter\" シングルトンから入手できます。 8つのメソッ"
"ドがあります:"

msgid "and the pending events interface:"
msgstr "およびpending_eventインターフェース:"

#, fuzzy
msgid "``authenticate``"
msgstr "``bool is_authenticated();``"

msgid "Authenticates a user in Game Center."
msgstr ""

#, fuzzy
msgid "``post_score``"
msgstr "post_score"

msgid "Posts a score to a Game Center leaderboard."
msgstr "Game Centerリーダーボードにスコアを投稿します。"

#, fuzzy
msgid "Takes a dictionary as a parameter, with two fields:"
msgstr ""
"次の2つのフィールドを使用した、Dictionaryをパラメーターとして受け取ります。"

msgid "``score`` a float number"
msgstr "``score`` 浮動小数点数"

msgid "``category`` a string with the category name"
msgstr "``category`` カテゴリー名の文字列"

msgid "Example:"
msgstr "例:"

#, fuzzy
msgid "``award_achievement``"
msgstr "award_achievement"

msgid "Modifies the progress of a Game Center achievement."
msgstr "Game Centerアチーブメント(実績)の進捗を変更します。"

msgid "Takes a Dictionary as a parameter, with 3 fields:"
msgstr "3つのフィールドを持つ Dictionary をパラメーターとして受け取ります:"

msgid "``name`` (string) the achievement name"
msgstr "``name`` (string) 実績名"

msgid ""
"``progress`` (float) the achievement progress from 0.0 to 100.0 (passed to "
"``GKAchievement::percentComplete``)"
msgstr ""
"``progress`` (float) 0.0から100.0への達成の進捗(``GKAchievement::"
"percentComplete``に渡されます)"

msgid ""
"``show_completion_banner`` (bool) whether Game Center should display an "
"achievement banner at the top of the screen"
msgstr ""
"``show_completion_banner`` (bool) Game Centerが画面の上部に実績バナーを表示す"
"るかどうか"

#, fuzzy
msgid "``reset_achievements``"
msgstr "reset_achievements"

msgid "Clears all Game Center achievements. The function takes no parameters."
msgstr ""
"Game Centerのすべての実績をクリアします。 この関数はパラメーターを受け取りま"
"せん。"

#, fuzzy
msgid "``request_achievements``"
msgstr "request_achievements"

msgid ""
"Request all the Game Center achievements the player has made progress on. "
"The function takes no parameters."
msgstr ""
"プレイヤーが進捗したGame Centerのすべての実績を要求します。この関数はパラメー"
"ターを受け取りません。"

#, fuzzy
msgid "``request_achievement_descriptions``"
msgstr "request_achievement_descriptions"

msgid ""
"Request the descriptions of all existing Game Center achievements regardless "
"of progress. The function takes no parameters."
msgstr ""
"進行状況に関係なく、既存のすべてのGame Centerの実績の説明を要求します。この関"
"数はパラメーターを受け取りません。"

#, fuzzy
msgid "``show_game_center``"
msgstr "show_game_center"

msgid ""
"Displays the built in Game Center overlay showing leaderboards, "
"achievements, and challenges."
msgstr ""
"組み込みのGame Centerオーバーレイを表示し、リーダーボード、実績、課題を示しま"
"す。"

msgid "Takes a Dictionary as a parameter, with two fields:"
msgstr ""
"次の2つのフィールドを使用した、Dictionaryをパラメーターとして受け取ります。"

msgid ""
"``view`` (string) (optional) the name of the view to present. Accepts "
"\"default\", \"leaderboards\", \"achievements\", or \"challenges\". Defaults "
"to \"default\"."
msgstr ""
"``view`` (string) (オプション) 表示するビューの名"
"前。\"default\"、\"leaderboards\"、 \"achievements\"、または \"challenges\" "
"を受け入れます。 デフォルトは \"default\" です。"

msgid ""
"``leaderboard_name`` (string) (optional) the name of the leaderboard to "
"present. Only used when \"view\" is \"leaderboards\" (or \"default\" is "
"configured to show leaderboards). If not specified, Game Center will display "
"the aggregate leaderboard."
msgstr ""
"``leaderboard_name`` (string) (オプション) 提示するリーダーボードの名"
"前。\"view\" が \"leaderboards\" (または \"default\" がリーダーボードを表示す"
"るように設定されている)の場合にのみ使用されます。指定しない場合、Game Center"
"は集計リーダーボードを表示します。"

msgid "Examples:"
msgstr "例:"

msgid "On close:"
msgstr "クローズ時:"

msgid "Multi-platform games"
msgstr "マルチプラットフォームゲーム"

msgid ""
"When working on a multi-platform game, you won't always have the "
"\"GameCenter\" singleton available (for example when running on PC or "
"Android). Because the gdscript compiler looks up the singletons at compile "
"time, you can't just query the singletons to see and use what you need "
"inside a conditional block, you need to also define them as valid "
"identifiers (local variable or class member). This is an example of how to "
"work around this in a class:"
msgstr ""
"マルチプラットフォームゲームで作業する場合、\"GameCenter\"シングルトンを常に"
"使用できるとは限りません(たとえば、PCまたはAndroidで実行している場合)。 "
"gdscriptコンパイラはコンパイル時にシングルトンを検索するため、シングルトンに"
"クエリを実行して条件ブロック内で必要なものを確認して使用することはできませ"
"ん。また、シングルトンを有効な識別子(ローカル変数またはクラスメンバー)として"
"定義する必要があります。これは、クラスでこれを回避する方法の例です:"

msgid "Translation status"
msgstr "翻訳ステータス"
