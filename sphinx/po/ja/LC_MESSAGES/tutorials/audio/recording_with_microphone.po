# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Recording with microphone"
msgstr "マイクでの録音"

msgid ""
"Godot supports in-game audio recording for Windows, macOS, Linux, Android "
"and iOS."
msgstr ""
"Godotは、Windows、macOS、Linux、Android、およびiOSのゲーム内オーディオ録音を"
"サポートしています。"

msgid ""
"A simple demo is included in the official demo projects and will be used as "
"support for this tutorial: `<https://github.com/godotengine/godot-demo-"
"projects/tree/master/audio/mic_record>`_."
msgstr ""
"簡単なデモが公式デモプロジェクトに含まれており、このチュートリアルのサポート"
"として使用されます: `<https://github.com/godotengine/godot-demo-projects/"
"tree/master/audio/mic_record>`_。"

msgid ""
"You will need to enable audio input in the project settings, or you'll just "
"get empty audio files."
msgstr ""

msgid "The structure of the demo"
msgstr "デモの構造"

msgid ""
"The demo consists of a single scene. This scene includes two major parts: "
"the GUI and the audio."
msgstr ""
"デモは単一のシーンで構成されています。このシーンには、GUIとオーディオの2つの"
"主要部分が含まれます。"

msgid ""
"We will focus on the audio part. In this demo, a bus named ``Record`` with "
"the effect ``Record`` is created to handle the audio recording. An "
"``AudioStreamPlayer`` named ``AudioStreamRecord`` is used for recording."
msgstr ""
"オーディオ部分に焦点を当てます。このデモでは、オーディオ録音を処理するため"
"に、\\ ``Record``\\ エフェクトを持つ ``Record`` という名前のバスが作成されま"
"す。録音には ``AudioStreamRecord`` という名前の ``AudioStreamPlayer`` が使用"
"されます。"

msgid ""
"The audio recording is handled by the :ref:`class_AudioEffectRecord` "
"resource which has three methods: :ref:`get_recording() "
"<class_AudioEffectRecord_method_get_recording>`, :ref:`is_recording_active() "
"<class_AudioEffectRecord_method_is_recording_active>`, and :ref:"
"`set_recording_active() "
"<class_AudioEffectRecord_method_set_recording_active>`."
msgstr ""
"オーディオ録音は、\\ :ref:`get_recording() "
"<class_AudioEffectRecord_method_get_recording>`\\ 、\\ :ref:"
"`is_recording_active() <class_AudioEffectRecord_method_is_recording_active>` "
"および :ref:`set_recording_active() "
"<class_AudioEffectRecord_method_set_recording_active>` の3つのメソッドを持"
"つ :ref:`class_AudioEffectRecord` リソースで処理されます。"

msgid ""
"At the start of the demo, the recording effect is not active. When the user "
"presses the ``RecordButton``, the effect is enabled with "
"``set_recording_active(true)``."
msgstr ""
"デモの開始時には、録音エフェクトはアクティブではありません。ユーザーが "
"``RecordButton`` を押すと、エフェクトは ``set_recording_active(true)`` で有効"
"になります。"

msgid ""
"On the next button press, as ``effect.is_recording_active()`` is ``true``, "
"the recorded stream can be stored into the ``recording`` variable by calling "
"``effect.get_recording()``."
msgstr ""
"次のボタンを押すと、\\ ``effect.is_recording_active()`` は ``true`` なの"
"で、\\ ``effect.get_recording()`` を呼び出すことで、記録されたストリームを "
"``recording`` 変数に保存できます。"

msgid ""
"To playback the recording, you assign the recording as the stream of the "
"``AudioStreamPlayer`` and call ``play()``."
msgstr ""
"録音を再生するには、録音を ``AudioStreamPlayer`` のストリームとして割り当"
"て、\\ ``play()`` を呼び出します。"

msgid ""
"To save the recording, you call ``save_to_wav()`` with the path to a file. "
"In this demo, the path is defined by the user via a ``LineEdit`` input box."
msgstr ""
"記録を保存するには、ファイルへのパスを指定して ``save_to_wav()`` を呼び出しま"
"す。このデモでは、パスは ``LineEdit`` 入力ボックスを介してユーザーが定義しま"
"す。"

msgid "Translation status"
msgstr "翻訳ステータス"
