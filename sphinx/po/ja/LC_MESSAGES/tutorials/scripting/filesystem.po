# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "File system"
msgstr "ファイルシステム"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"A file system manages how assets are stored and how they are accessed. A "
"well-designed file system also allows multiple developers to edit the same "
"source files and assets while collaborating. Godot stores all assets as "
"files in its file system."
msgstr ""
"ファイルシステムは、アセットの保存方法とアクセス方法を管理します。また、適切"
"に設計されたファイルシステムにより、複数の開発者が共同作業中に同じソースファ"
"イルとアセットを編集できます。 Godotは、すべてのアセットをファイルシステムの"
"ファイルとして保存します。"

msgid "Implementation"
msgstr "実装"

msgid ""
"The file system stores resources on disk. Anything, from a script, to a "
"scene or a PNG image is a resource to the engine. If a resource contains "
"properties that reference other resources on disk, the paths to those "
"resources are also included. If a resource has sub-resources that are built-"
"in, the resource is saved in a single file together with all the bundled sub-"
"resources. For example, a font resource is often bundled together with the "
"font textures."
msgstr ""
"ファイルシステムはディスク上にリソースを格納します。スクリプトからシーンPNGイ"
"メージに至るまであらゆるものがエンジンのリソースとなります。ディスク上のほか"
"のリソースを参照するプロパティーがリソースに含まれている場合は、それらのリ"
"ソースへのパスも含まれます。リソースに組み込みのサブリソースがある場合、その"
"リソースはバンドルされたすべてのサブリソースとともに1つのファイルに保存されま"
"す。たとえば、フォントリソースは多くの場合、フォントテクスチャと一緒にバンド"
"ルされています。"

msgid ""
"The Godot file system avoids using metadata files. Existing asset managers "
"and VCSs are better than anything we can implement, so Godot tries its best "
"to play along with SVN, Git, Mercurial, Perforce, etc."
msgstr ""
"Godot ファイルシステムは、メタデータファイルの使用を回避します。既存のアセッ"
"トマネージャーやVCS(バージョン管理システム)は、私たちが実装できるものよりも優"
"れているので、GodotはSVN、Git、Mercurial、Perforceなどと一緒に作業出来るよう"
"に最善を尽くします。"

msgid "Example of file system contents:"
msgstr "ファイルシステムの内容例:"

msgid "project.godot"
msgstr "project.godotファイル"

msgid ""
"The ``project.godot`` file is the project description file, and it is always "
"found at the root of the project. In fact, its location defines where the "
"root is. This is the first file that Godot looks for when opening a project."
msgstr ""
"``project.godot`` ファイルはプロジェクト記述ファイルであり、常にプロジェクト"
"のルートにあります。というより、これが置かれた場所にルートが設定されます。こ"
"れは、プロジェクトを開くときにGodotが検索する最初のファイルです。"

msgid ""
"This file contains the project configuration in plain text, using the win."
"ini format. Even an empty ``project.godot`` can function as a basic "
"definition of a blank project."
msgstr ""
"このファイルには、win.ini形式を使用したプロジェクト構成がプレーンテキストで含"
"まれています。空の ``project.godot`` であっても、空白のプロジェクトの基本的な"
"定義として機能します。"

msgid "Path delimiter"
msgstr "パス区切り文字"

msgid ""
"Godot only supports ``/`` as a path delimiter. This is done for portability "
"reasons. All operating systems support this, even Windows, so a path such as "
"``C:\\project\\project.godot`` needs to be typed as ``C:/project/project."
"godot``."
msgstr ""
"Godotでは、パスの区切り文字として ``/`` だけを使用できます。これは移植性のた"
"めです。Windowsを含め、すべてのオペレーティングシステムがこれをサポートしてい"
"るため、パスは ``C:\\project\\project.godot`` ではなく ``C:/project/project."
"godot`` と入力する必要があります。"

msgid "Resource path"
msgstr "リソースパス"

msgid ""
"When accessing resources, using the host OS file system layout can be "
"cumbersome and non-portable. To solve this problem, the special path ``res://"
"`` was created."
msgstr ""
"リソースにアクセスするときに、ホストOSファイルシステムのレイアウトを使用する"
"と、面倒で移植性に欠けることがあります。この問題を解決するために、特別なパス "
"``res://`` が作成されました。"

msgid ""
"The path ``res://`` will always point at the project root (where ``project."
"godot`` is located, so ``res://project.godot`` is always valid)."
msgstr ""
"パス ``res://`` は常にプロジェクトルートを指します (``project.godot`` がある"
"場所なので、 ``res://project.godot`` は常に有効です)。"

msgid ""
"This file system is read-write only when running the project locally from "
"the editor. When exported or when running on different devices (such as "
"phones or consoles, or running from DVD), the file system will become read-"
"only and writing will no longer be permitted."
msgstr ""
"このファイルシステムは、エディタからプロジェクトをローカルで実行する場合にの"
"み、読み取り/書き込み可能になります。エクスポートする場合、または異なるデバイ"
"ス(スマートフォンやコンソール、DVDなど)で実行する場合、ファイルシステムは読み"
"取り専用になり、書き込みは許可されなくなります。"

msgid "User path"
msgstr "ユーザー・パス"

msgid ""
"Writing to disk is still needed for tasks such as saving game state or "
"downloading content packs. To this end, the engine ensures that there is a "
"special path ``user://`` that is always writable. This path resolves "
"differently depending on the OS the project is running on. Local path "
"resolution is further explained in :ref:`doc_data_paths`."
msgstr ""
"ゲームの状態の保存やコンテンツパックのダウンロードなどのタスクには、ディスク"
"への書き込みが引き続き必要です。このため、エンジンには特別なパス ``user://`` "
"があり、いつでも書き込みが出来ることを確保しています。このパスの解決方法は、"
"プロジェクトが実行されているOSによって異なります。ローカルパスの解決について"
"は、\\ :ref:`doc_data_paths`\\ で詳しく説明しています。"

msgid "Host file system"
msgstr "ホストファイルシステム"

msgid ""
"Alternatively host file system paths can also be used, but this is not "
"recommended for a released product as these paths are not guaranteed to work "
"on all platforms. However, using host file system paths can be useful when "
"writing development tools in Godot."
msgstr ""
"また、ホストファイルシステムパスも使用できますが、これらのパスがすべてのプ"
"ラットフォームで動作するとは限らないため、リリースする製品にはお勧めできませ"
"ん。ただし、Godotで開発ツールを作成する場合は、ホストファイルシステムパスを使"
"用すると便利です。"

msgid "Drawbacks"
msgstr "デメリット"

msgid ""
"There are some drawbacks to this simple file system design. The first issue "
"is that moving assets around (renaming them or moving them from one path to "
"another inside the project) will break existing references to these assets. "
"These references will have to be re-defined to point at the new asset "
"location."
msgstr ""
"この単純なファイルシステム設計にはいくつかの欠点があります。最初の問題は、ア"
"セットを移動すること(プロジェクト内でアセットの名前を変更したり、あるパスから"
"別のパスにアセットを移動したりする)によりこれらのアセットへの既存の参照が失わ"
"れることです。新しいアセットの場所を指すように再定義する必要があります。"

msgid ""
"To avoid this, do all your move, delete and rename operations from within "
"Godot, on the FileSystem dock. Never move assets from outside Godot, or "
"dependencies will have to be fixed manually (Godot detects this and helps "
"you fix them anyway, but why go the hard route?)."
msgstr ""
"これを避けるには、ファイルシステムドックで、Godot内からすべての移動、削除、お"
"よび名前変更操作を行います。 Godotの外部からアセットの移動操作をしないでくだ"
"さい。そうでないと、依存関係を手動で修正する必要が出てきます(Godotはこの操作"
"を検出し、それを修正する為に役立ちますが、なぜわざわざ面倒な道を行くのです"
"か？)。"

msgid ""
"The second is that, under Windows and macOS, file and path names are case "
"insensitive. If a developer working in a case insensitive host file system "
"saves an asset as ``myfile.PNG``, but then references it as ``myfile.png``, "
"it will work fine on their platform, but not on other platforms, such as "
"Linux, Android, etc. This may also apply to exported binaries, which use a "
"compressed package to store all files."
msgstr ""
"2つ目は、WindowsおよびmacOSでは、ファイル名とパス名は大文字と小文字が区別され"
"ないことです。大文字と小文字を区別しないホストファイルシステムで作業している"
"開発者がアセットを「myfile.PNG」として保存してから「myfile.png」として参照す"
"る場合、プラットフォームでは正常に動作しますが、LinuxやAndroidなどの他のプ"
"ラットフォームでは動作しません。 これはおそらく、すべてのファイルが圧縮された"
"パッケージを使用する、エクスポートされたバイナリにも現れるでしょう。"

msgid ""
"It is recommended that your team clearly define a naming convention for "
"files when working with Godot. One simple fool-proof convention is to only "
"allow lowercase file and path names."
msgstr ""
"Godotを使用する場合、ファイルの命名規則をチーム内で明確に定義することをお勧め"
"します。簡単なフールプルーフ(間違い防止)用の規則の1つは、小文字のファイル名と"
"パス名のみを許可することです。"

msgid "Translation status"
msgstr "翻訳ステータス"
