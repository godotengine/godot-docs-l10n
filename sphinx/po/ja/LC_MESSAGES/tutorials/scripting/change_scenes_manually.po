# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Change scenes manually"
msgstr "シーンを手動で変更する"

msgid ""
"Sometimes it helps to have more control over how one swaps scenes around. As "
"mentioned above, a :ref:`Viewport <class_Viewport>`'s child nodes will "
"render to the image it generates. This holds true even for nodes outside of "
"the \"current\" scene. Autoloads fall into this category, but so do scenes "
"which one instances and adds to the tree at runtime:"
msgstr ""
"シーンを入れ替える方法をより詳細に制御できると便利な場合があります。前述のよ"
"うに、\\ :ref:`Viewport <class_Viewport>` の子ノードは、生成する画像にレンダ"
"リングします。これは、「現在の」シーン外のノードにも当てはまります。自動ロー"
"ドはこのカテゴリに分類されますが、実行時にツリーにインスタンスを追加するシー"
"ンも同様です:"

msgid ""
"To complete the cycle and swap out the new scene with the old one, "
"developers have a choice to make. Many strategies exist for removing a scene "
"from view of the :ref:`Viewport <class_Viewport>`. The tradeoffs involve "
"balancing operation speed and memory consumption as well as balancing data "
"access and integrity."
msgstr ""
"サイクルを完了し、古いシーンと新しいシーンを交換するとき、開発者には複数の選"
"択肢があります。\\ :ref:`Viewport <class_Viewport>` のビューからシーンを削除"
"する方法は数多く存在します。トレードオフには、操作速度とメモリ消費のバランス"
"をとることと、データアクセスと整合性のバランスを取る必要があります。"

msgid ""
"**We can delete the existing scene.** :ref:`SceneTree.change_scene() "
"<class_SceneTree_method_change_scene>` and :ref:`SceneTree.change_scene_to() "
"<class_SceneTree_method_change_scene_to>` will delete the current scene "
"immediately. Developers can also delete the main scene though. Assuming the "
"root node's name is \"Main\", one could do ``get_node(\"/root/Main\")."
"free()`` to delete the whole scene."
msgstr ""
"**既存のシーンを削除できます。** :ref:`SceneTree.change_scene() "
"<class_SceneTree_method_change_scene>` および :ref:`SceneTree."
"change_scene_to() <class_SceneTree_method_change_scene_to>` は現在のシーンを"
"すぐに削除します。ただし、開発者はメインシーンを削除することもできます。ルー"
"トノードの名前が \"Main\" だとすると、\\ ``get_node(\"/root/Main\").free()`` "
"を実行してシーン全体を削除できます。"

msgid "Unloads memory."
msgstr "メモリをアンロードします。"

msgid "Pro: RAM is no longer dragging the dead weight."
msgstr "長所: RAMはもはやデッドウェイトを引きずっていません。"

msgid ""
"Con: Returning to that scene is now more expensive since it must be loaded "
"back into memory again (takes time AND memory). Not a problem if returning "
"soon is unnecessary."
msgstr ""
"短所: 再びメモリにロードし直す必要があるため、そのシーンに戻るのにコストがか"
"かります(時間がかかります)。すぐに戻る必要がない場合は問題ありません。"

msgid ""
"Con: No longer have access to that scene's data. Not a problem if using that "
"data soon is unnecessary."
msgstr ""
"短所: そのシーンのデータにアクセスできなくなります。そのデータをすぐに使用す"
"る必要がない場合は問題ありません。"

msgid ""
"Note: It can be useful to preserve the data in a soon-to-be-deleted scene by "
"re-attaching one or more of its nodes to a different scene, or even directly "
"to the :ref:`SceneTree <class_SceneTree>`."
msgstr ""
"注: 1つまたは複数のノードを別のシーンに再アタッチするか、\\ :ref:`SceneTree "
"<class_SceneTree>` に直接アタッチすることで、間もなく削除されるシーンのデータ"
"を保存すると便利です。"

msgid "Processing stops."
msgstr "処理の停止。"

msgid ""
"Pro: No nodes means no process, physics process, or input handling. The CPU "
"is available to work on the new scene's contents."
msgstr ""
"長所: ノードがないということは、プロセス、物理プロセス、または入力処理がない"
"ことを意味します。 CPUは、新しいシーンのコンテンツを処理するために使用できま"
"す。"

msgid ""
"Con: Those nodes' processing and input handling no longer operate. Not a "
"problem if using the updated data is unnecessary."
msgstr ""
"短所: これらのノードの処理と入力処理は動作しなくなります。更新されたデータを"
"使用する必要がない場合は問題ありません。"

msgid ""
"**We can hide the existing scene.** By changing the visibility or collision "
"detection of the nodes, we can hide the entire node sub-tree from the "
"player's perspective."
msgstr ""
"**既存のシーンを非表示にできます。** ノードの可視性または衝突検出を変更するこ"
"とにより、プレイヤーの視点からノードサブツリー全体を隠すことができます。"

msgid "Memory still exists."
msgstr "メモリはまだ存在しています。"

msgid "Pro: One can still access the data if need be."
msgstr "長所: 必要に応じてデータにアクセスできます。"

msgid "Pro: There's no need to move any more nodes around to save data."
msgstr "長所: データを保存するためにノードを移動する必要はありません。"

msgid ""
"Con: More data is being kept in memory which will be become a problem on "
"memory-sensitive platforms like web or mobile."
msgstr ""
"短所: より多くのデータがメモリに保持されているため、Webやモバイルなどのメモリ"
"に敏感なプラットフォームで問題になります。"

msgid "Processing continues."
msgstr "処理は続行されます。"

msgid ""
"Pro: Data continues to receive processing updates, so the scene will keep "
"updated any data within it that relies on delta time or frame data."
msgstr ""
"長所: データは処理の更新を引き続き受信するため、シーンは、デルタ時間またはフ"
"レームデータに依存するデータを更新し続けます。"

msgid ""
"Pro: Nodes are still members of groups (since groups belong to the :ref:"
"`SceneTree <class_SceneTree>`)."
msgstr ""
"長所: ノードはまだグループのメンバーです(グループは :ref:`SceneTree "
"<class_SceneTree>` に属しているため)。"

msgid ""
"Con: The CPU's attention is now divided between both scenes. Too much load "
"could result in low frame rates. One should be sure to test performance as "
"they go to ensure the target platform can support the load they are giving "
"it."
msgstr ""
"短所: CPUの負担は両方のシーンに分かれています。負荷が多すぎると、フレームレー"
"トが低下する可能性があります。ターゲットプラットフォームが提供する負荷をサ"
"ポートできることを確認するために、パフォーマンスをテストする必要があります。"

msgid ""
"**We can remove the existing scene from the tree.** Assign a variable to the "
"existing scene's root node. Then use :ref:`Node.remove_child(Node) "
"<class_Node_method_remove_child>` to detach the entire scene from the tree."
msgstr ""
"**既存のシーンをツリーから削除できます。** 変数を既存のシーンのルートノードに"
"割り当てます。次に :ref:`Node.remove_child(Node) "
"<class_Node_method_remove_child>` を使用して、シーン全体をツリーからデタッチ"
"します。"

msgid "Memory still exists (similar pros/cons as with hiding it from view)."
msgstr "メモリはまだ存在します(ビューから隠す場合と同様の長所と短所)。"

msgid "Processing stops (similar pros/cons as with deleting it completely)."
msgstr "処理は停止します(完全に削除する場合と同様の長所と短所)。"

msgid ""
"Pro: This variation of \"hiding\" it is much easier to show/hide. Rather "
"than potentially keeping track of multiple changes to the scene, one must "
"only call the one method add/remove_child pair of methods. It is similar to "
"disabling game objects in other engines."
msgstr ""
"長所: この「非表示」のバリエーションは、表示/非表示がはるかに簡単です。シーン"
"に対する複数の変更を追跡するのではなく、1つの add/remove_child のメソッドペア"
"のみを呼び出す必要があります。他のエンジンでゲームオブジェクトを無効にする方"
"法と似ています。"

msgid ""
"Con: Unlike with hiding it from view only, the data contained within the "
"scene will become stale if it relies on delta time, input, groups, or other "
"data that is derived from :ref:`SceneTree <class_SceneTree>` access."
msgstr ""
"短所: 表示のみから非表示にする場合とは異なり、デルタ時間、入力、グループ、ま"
"たは :ref:`SceneTree <class_SceneTree>` アクセスから派生した他のデータに依存"
"している場合、シーン内に含まれるデータは、古いままになってしまいます。"

msgid ""
"There are also cases where one may wish to have many scenes present at the "
"same time. Perhaps one is adding their own singleton at runtime, or "
"preserving a a scene's data between scene changes (adding the scene to the "
"root node)."
msgstr ""
"多くのシーンを同時に表示したい場合もあります。おそらく、実行時に独自のシング"
"ルトンを追加するか、シーンの変更間でシーンのデータを保持する(シーンをルート"
"ノードに追加する)のでしょう。"

#, fuzzy
msgid ""
"Perhaps instead they wish to display multiple scenes at the same time using :"
"ref:`ViewportContainers <class_ViewportContainer>`. This is optimal in cases "
"where the intent is to render different content in different parts of the "
"screen. Minimaps and split-screen multiplayer are good examples."
msgstr ""
"代わりに、\\ :ref:`ViewportContainers <class_ViewportContainer>` を使用して、"
"複数のシーンを同時に表示したい場合があります。これは、画面のさまざまな部分に"
"さまざまなコンテンツを表示することが目的の場合に最適です。ミニマップと分割画"
"面マルチプレイヤーが良い例です。"

msgid ""
"Each option will have cases where it is best appropriate, so one must "
"examine the effects of each and determine what path best fits their unique "
"situation."
msgstr ""
"各オプションには最適なケースがあるため、それぞれの効果を調べて、それぞれの状"
"況に最適なパスを決定する必要があります。"

msgid "Translation status"
msgstr "翻訳ステータス"
