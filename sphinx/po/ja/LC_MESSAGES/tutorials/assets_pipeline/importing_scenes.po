# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Importing 3D scenes"
msgstr "3Dシーンのインポート"

msgid "Godot scene importer"
msgstr "Godotシーンインポーター"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr ""
"3Dアセットを扱う場合、Godotには柔軟で設定可能なインポーターがあります。"

msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D DCC will be transferred as close as possible."
msgstr ""
"Godotは\\ *シーン*\\ で動作します。つまり、お気に入りの3D DCCツールで作業して"
"いるシーン全体が、可能な限り同様な内容で転送されます。"

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godotは、次の3D\\ *シーンファイルフォーマット*\\ をサポートしています:"

#, fuzzy
msgid ""
"glTF 2.0 **(recommended)**. Godot has full support for both text (``.gltf``) "
"and binary (``.glb``) formats."
msgstr ""
"glTF 2.0。 Godotは、テキストおよびバイナリ形式を完全にサポートしています。"

msgid "DAE (COLLADA), an older format that is fully supported."
msgstr "DAE(COLLADA)、完全にサポートされている古い形式です。"

#, fuzzy
msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also fully "
"supported, but pretty limited (no support for pivots, skeletons, animations, "
"PBR materials, ...)."
msgstr ""
"OBJ(Wavefront)フォーマット。これも完全にサポートされていますが、かなり制限さ"
"れています(ピボット、スケルトンなどのサポートはありません)。"

#, fuzzy
msgid "ESCN, a Godot-specific format that Blender can export with a plugin."
msgstr ""
"ESCN。Godot専用のフォーマットで、Blenderにプラグインを入れることでエクスポー"
"トできます。"

#, fuzzy
msgid ""
"FBX, supported via the Open Asset Import library. However, FBX is "
"proprietary, so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"FBX は、オープンアセットインポートライブラリを介してサポートされます。ただ"
"し、FBX は独自のものであり、ワークフローに適している場合は、上記の他の形式を"
"使用することをお勧めします。"

msgid ""
"Just copy the scene file together with the texture to the project "
"repository, and Godot will do a full import."
msgstr ""
"シーンファイルとテクスチャをプロジェクト・リポジトリにコピーするだけで、Godot"
"は完全なインポートを行います。"

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"これは重要なことですが、エクスポートする際にボーンがメッシュを変形させないよ"
"うにしてください。お使いの3Dエディタからエクスポートする前にまず、スケルトン"
"がTポーズなどデフォルトのポーズになっていること確認しましょう。"

msgid "Exporting DAE files from Maya and 3DS Max"
msgstr "Mayaおよび3DS MaxからのDAEファイルのエクスポート"

msgid ""
"Autodesk added built-in COLLADA support to Maya and 3DS Max, but it's broken "
"by default and should not be used. The best way to export this format is by "
"using the `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`__ plugins. They work well, although they are not always "
"up-to date with the latest version of the software."
msgstr ""
"AutodeskはMayaと3DS MaxをCOLLADAに対応させましたが、しかしデフォルトでは壊れ"
"ており、使わないほうが良いでしょう。COLLADAでのエクスポートするのに一番良いの"
"は\\ `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`__ プラグインを使用することです。常にソフトの最新版に対応"
"しているとは限りませんが、これはうまく動きます。"

msgid "Exporting glTF 2.0 files from Blender"
msgstr "BlenderからglTF 2.0ファイルをエクスポートする"

msgid ""
"There are three ways to export glTF files from Blender. As a glTF binary (``."
"glb`` file), glTF embedded (``.gltf`` file), and with textures (``gltf`` + "
"``.bin`` + textures)."
msgstr ""
"BlenderからglTFファイルをエクスポートするには3つの方法があります。 glTFバイナ"
"リ(``.glb`` ファイル)、glTF埋め込み(``.gltf`` ファイル)、およびテクスチャ"
"(``gltf`` + ``.bin`` + テクスチャ)。"

msgid ""
"glTF binary files are the smallest of the three options. They include the "
"mesh and textures set up in Blender. When brought into Godot the textures "
"are part of the object's material file."
msgstr ""
"glTFバイナリファイルは、3つのオプションのうちデータサイズが最小のものです。そ"
"れらには、Blenderで設定されたメッシュとテクスチャが含まれます。 Godotに取り込"
"むと、テクスチャはオブジェクトのマテリアルファイルの一部になります。"

msgid ""
"glTF embedded files function the same way as binary files. They don't "
"provide extra functionality in Godot, and shouldn't be used since they have "
"a larger file size."
msgstr ""
"glTF埋め込みファイルは、バイナリ ファイルと同じように機能します。Godotでは追"
"加機能が提供されず、ファイル サイズが大きいため使用しないでください。"

msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those "
"glTF binary files are fine."
msgstr ""
"テクスチャを分離してglTFを使用する理由は2つあります。 1つは、シーン記述はテキ"
"ストベース形式にして、バイナリデータは別のバイナリファイルで持つことです。こ"
"れは、テキストベース形式の変更をバージョン管理で確認する場合に役立ちます。 2"
"番目は、マテリアルファイルとは別のテクスチャファイルが必要です。これらのglTF"
"バイナリファイルのいずれも必要ない場合は問題ありません。"

msgid ""
"Blend shape animations cannot be imported - they require manual animation "
"within Godot."
msgstr ""

#, fuzzy
msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Blenderは、glTFファイルで放射性テクスチャ(emissive texture)をエクスポートしま"
"せん。モデルで使用する場合は、個別に持ち込む必要があります。"

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""

msgid "Exporting DAE files from Blender"
msgstr "BlenderからDAEファイルをエクスポートする"

msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and should not be used as is."
msgstr ""
"BlenderにはCOLLADAサポートが組み込まれていますが、ゲームエンジンのニーズでは"
"適切に機能しないため、そのままでは使用しないでください。"

#, fuzzy
msgid ""
"Godot provides a `Blender plugin <https://github.com/godotengine/collada-"
"exporter>`_ that will correctly export COLLADA scenes for use in Godot. It "
"does not work in Blender 2.8 or newer, but there are plans to update it in "
"the future."
msgstr ""
"Godotは、Godotで使用するためにCOLLADAシーンを正しくエクスポートする `Blender"
"プラグイン<https://github.com/godotengine/collada-exporter>` を提供します。"

msgid "Exporting ESCN files from Blender"
msgstr "BlenderからESCNファイルをエクスポートする"

#, fuzzy
msgid ""
"The most powerful one, called `godot-blender-exporter <https://github.com/"
"godotengine/godot-blender-exporter>`__. It uses a .escn file, which is kind "
"of another name for a .tscn file (Godot scene file); it keeps as much "
"information as possible from a Blender scene. However, it is considered "
"experimental."
msgstr ""
"最も強力なものは、\\ `godot-blender-exporter <https://github.com/godotengine/"
"godot-blender-exporter>`_ と呼ばれるものです。.escn ファイルを使用しますが、"
"これは .tscn ファイル(Godotシーンファイル)の別名のようなものです。Blenderの"
"シーンから、可能な限り多くの情報をエクスポートします。"

msgid ""
"The ESCN exporter has a detailed `document <escn_exporter/index.html>`__ "
"describing its functionality and usage."
msgstr ""
"ESCNエクスポーターには、その機能と使用法を説明する詳細な `ドキュメント "
"<escn_exporter/index.html>`__ があります。"

#, fuzzy
msgid "Exporting textures separately"
msgstr "テクスチャのインポート"

msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures, they can work in Godot. This includes the `Substance suite "
"<https://www.substance3d.com/>`__, `ArmorPaint (open source) <https://"
"armorpaint.org/>`__, and `Material Maker (open source) <https://github.com/"
"RodZill4/material-maker>`__."
msgstr ""

#, fuzzy
msgid ""
"For more information on Godot's materials, see :ref:`doc_spatial_material`."
msgstr ""
"スレッドの詳細については、次を参照してください:"
"ref:'doc_using_multiple_threads' 。"

#, fuzzy
msgid "Exporting considerations"
msgstr "その他の考慮事項"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""

msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D DCC triangulate objects on its own. In Blender, "
"this can be done by adding a Triangulate modifier to your objects and making "
"sure **Apply Modifiers** is checked in the export dialog. Alternatively, "
"depending on the exporter, you may be able to find and enable a "
"**Triangulate Faces** option in the export dialog."
msgstr ""

msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D DCC before exporting the scene."
msgstr ""

msgid "Import workflows"
msgstr "ワークフローのインポート"

msgid ""
"Godot scene importer allows different workflows regarding how data is "
"imported. Depending on many options, it is possible to import a scene with:"
msgstr ""
"Godot シーンインポーターでは、データのインポート方法に関するさまざまなワーク"
"フローを使用できます。多くのオプションに応じて、次の方法でシーンを読み込む場"
"合があります:"

msgid ""
"External materials (default): Where each material is saved to a file "
"resource. Modifications to them are kept."
msgstr ""
"外部マテリアル (デフォルト): 各マテリアルがファイル リソースに保存される場"
"所。それらに対する変更は保持されます。"

msgid ""
"External meshes: Where each mesh is saved to a different file. Many users "
"prefer to deal with meshes directly."
msgstr ""
"外部メッシュ: 各メッシュが別のファイルに保存される場所。多くのユーザーは、直"
"接メッシュを扱うことを好みます。"

msgid ""
"External animations: Allowing saved animations to be modified and merged "
"when sources change."
msgstr ""
"外部アニメーション: ソースが変更されたときに、保存したアニメーションを変更お"
"よびマージできるようにします。"

msgid ""
"External scenes: Save each of the root nodes of the imported scenes as a "
"separate scene."
msgstr ""
"外部シーン: インポートされたシーンの各ルートノードを個別のシーンとして保存し"
"ます。"

msgid "Single scene: A single scene file with everything built in."
msgstr "シングルシーン: すべてが組み込まれた単一のシーンファイル。"

msgid ""
"As different developers have different needs, this import process is highly "
"customizable."
msgstr ""
"開発者によってニーズが異なるように、このインポートプロセスは高度にカスタマイ"
"ズ可能です。"

msgid "Import options"
msgstr "インポートオプション"

msgid "The importer has several options, which will be discussed below:"
msgstr "インポーターには、以下で説明するいくつかのオプションがあります:"

msgid "Nodes"
msgstr "ノード"

msgid "Root Type"
msgstr "ルートの型"

msgid ""
"By default, the type of the root node in imported scenes is \"Spatial\", but "
"this can be modified."
msgstr ""
"デフォルトでは、読み込まれたシーンのルート ノードのタイプは \"Spatial\" です"
"が、これは変更できます。"

msgid "Root Name"
msgstr "ルートの名前"

msgid "Allows setting a specific name to the generated root node."
msgstr "生成されたルート ノードに特定の名前を設定できます。"

msgid "Root Scale"
msgstr "ルートのスケール"

msgid "The scale of the root node."
msgstr "ルートノードの大きさ。"

msgid "Custom Script"
msgstr "カスタムスクリプト"

msgid ""
"A special script to process the whole scene after import can be provided. "
"This is great for post processing, changing materials, doing funny stuff "
"with the geometry etc."
msgstr ""
"インポート後にシーン全体を処理する特別なスクリプトを提供できます。これは、後"
"処理、マテリアルの変更、ジオメトリの面白い処理などに最適です。"

msgid "Create a script like this:"
msgstr "次のようなスクリプトを作成します:"

msgid ""
"The ``post_import`` function takes the imported scene as argument (the "
"parameter is actually the root node of the scene). The scene that will "
"finally be used must be returned. It can be a different one."
msgstr ""
"``post_import`` 関数はインポートされたシーンを引数として取ります(パラメーター"
"は実際にはシーンのルートノードです)。最終的に使用されるシーンを返す必要があり"
"ます。別のものでもかまいません。"

msgid "Storage"
msgstr "ストレージ"

msgid ""
"By default, Godot imports a single scene. This option allows specifying that "
"nodes below the root will each be a separate scene and instanced into the "
"imported one."
msgstr ""
"デフォルトでは、Godot は 1つのシーンを読み取りします。このオプションを使用す"
"ると、ルートの下にあるノードがそれぞれ別々のシーンになり、インポートされた"
"シーンにインスタンス化されることを指定できます。"

msgid ""
"Of course, instancing such imported scenes in other places manually works, "
"too."
msgstr ""
"もちろん、このようなインポートされたシーンを他の場所に手動でインスタンス化す"
"ることもできます。"

msgid "Materials"
msgstr "マテリアル"

msgid "Location"
msgstr "位置"

msgid ""
"Godot supports materials in meshes or nodes. By default, materials will be "
"put on each node."
msgstr ""
"Godot は、メッシュまたはノード内のマテリアルをサポートします。デフォルトで"
"は、マテリアルは各ノードに配置されます。"

msgid ""
"Materials can be stored within the scene or in external files. By default, "
"they are stored in external files so editing them is possible. This is "
"because most 3D DCCs don't have the same material options as those present "
"in Godot."
msgstr ""
"マテリアルは、シーン内または外部ファイルに格納できます。デフォルトでは、外部"
"ファイルに保存されるため、編集が可能です。これは、ほとんどの3D DDC にはGodot"
"のマテリアル・オプションと同じであるためです。"

msgid ""
"When materials are built-in, they will be lost each time the source scene is "
"modified and re-imported."
msgstr ""
"マテリアルがシーン内に組み込まれていると、ソース シーンが変更され、再インポー"
"トされるたびにマテリアルが失われます。"

msgid ""
"Godot will not reimport materials that are stored in external files unless "
"you remove the associated ``.material`` file before reimporting."
msgstr ""

msgid ""
"To force reimporting materials every time the 3D scene is reimported, change "
"the material storage mode in the 3D scene by selecting it in the FileSystem "
"dock, going to the Import dock then setting **Material > Storage** to "
"**Built-In** instead of **Files**."
msgstr ""

msgid "Keep On Reimport"
msgstr "再インポート時に保持(Keep On Reimport)"

msgid ""
"Once materials are edited to use Godot features, the importer will keep the "
"edited ones and ignore the ones coming from the source scene. This option is "
"only present if materials are saved as files."
msgstr ""
"Godotフィーチャーを使用するようにマテリアルを編集すると、インポーターは編集し"
"たフィーチャーを保持し、ソース シーンから送信されたものを無視します。このオプ"
"ションは、マテリアルがファイルとして保存されている場合にのみ存在します。"

msgid "Meshes"
msgstr "メッシュ"

msgid "Compress"
msgstr "圧縮"

msgid ""
"Makes meshes use less precise numbers for multiple aspects of the mesh in "
"order to save space."
msgstr ""
"メッシュは、スペースを節約するためにメッシュの複数の側面に対してあまり正確で"
"ない数値を使用するようにします。"

msgid "These are:"
msgstr "これらは:"

msgid ""
"Transform Matrix (Location, rotation, and scale)             : 32-bit float "
"to 16-bit signed integer."
msgstr ""
"変換マトリックス(位置、回転、およびスケール):　32ビット浮動小数点数を16ビット"
"符号付き整数にします。"

msgid ""
"Vertices                                                     : 32-bit float "
"to 16-bit signed integer."
msgstr "頂点:　32ビット浮動小数点数から16ビット符号付き整数にします。"

msgid ""
"Normals                                                      : 32-bit float "
"to 32-bit unsigned integer."
msgstr "法線:　32ビット浮動小数点数から32ビット符号なし整数にします。"

msgid ""
"Tangents                                                     : 32-bit float "
"to 32-bit unsigned integer."
msgstr "接線:　32ビット浮動小数点数から32ビット符号なし整数にします。"

msgid ""
"Vertex Colors                                                : 32-bit float "
"to 32-bit unsigned integer."
msgstr "頂点の色:　32ビット浮動小数点数から32ビット符号なし整数にします。"

msgid ""
"UV                                                           : 32-bit float "
"to 32-bit unsigned integer."
msgstr "UV:　32ビット浮動小数点数から32ビット符号なし整数にします。"

msgid ""
"UV2                                                          : 32-bit float "
"to 32-bit unsigned integer."
msgstr "UV2:　32ビット浮動小数点数から32ビット符号なし整数にします。"

msgid ""
"Vertex weights                                               : 32-bit float "
"to 16-bit unsigned integer."
msgstr "頂点ウェイト:　32ビット浮動小数点数から16ビット符号なし整数にします。"

msgid ""
"Armature bones                                               : 32-bit float "
"to 16-bit unsigned integer."
msgstr ""
"アーマチュア・ボーン: 　32ビット浮動小数点数から16ビット符号なし整数にしま"
"す。"

msgid ""
"Array index                                                  : 32-bit or 16-"
"bit unsigned integer based on how many elements there are."
msgstr ""
"配列インデックス:　要素数に応じた32ビットまたは16ビットの符号なし整数へ。"

msgid "Additional info:"
msgstr "追加情報:"

msgid ""
"UV2 = The second UV channel for detail textures and baked lightmap textures."
msgstr ""
"UV2 = 詳細テクスチャとベイク処理されたライトマップテクスチャの2番目のUVチャネ"
"ル。"

msgid ""
"Array index = An array of numbers that number each element of the arrays "
"above; i.e. they number the vertices and normals."
msgstr ""
"配列インデックス = 上記の配列の各要素に番号を付す数値の配列。つまり、頂点と法"
"線に番号を付けます。"

msgid ""
"In some cases, this might lead to loss of precision, so disabling this "
"option may be needed. For instance, if a mesh is very big or there are "
"multiple meshes being imported that cover a large area, compressing the "
"import of this mesh(es) may lead to gaps in geometry or vertices not being "
"exactly where they should be."
msgstr ""
"場合によっては、これにより精度が失われる可能性があるため、このオプションを無"
"効にする必要があります。たとえば、メッシュが非常に大きい場合、または大きな領"
"域をカバーする複数のメッシュがインポートされている場合、このメッシュのイン"
"ポートを圧縮すると、ジオメトリまたは頂点が正確な場所にないことがあります。"

msgid "Ensure Tangents"
msgstr "接線の確保"

#, fuzzy
msgid ""
"If textures with normal mapping are to be used, meshes need to have tangent "
"arrays. This option ensures that these are generated if not present in the "
"source scene. Godot uses `Mikktspace <http://www.mikktspace.com/>`__ for "
"this, but it's always better to have them generated in the exporter."
msgstr ""
"法線マッピングのテクスチャを使用する場合、メッシュには接線配列が必要です。こ"
"のオプションは、ソースシーンに存在しない場合にこれらが生成されるようにしま"
"す。 GodotはこれにMikktspaceを使用しますが、エクスポーターで生成する方が常に"
"良い結果になります。"

msgid ""
"Meshes can be stored in separate files (resources) instead of built-in. This "
"does not have much practical use unless one wants to build objects with them "
"directly."
msgstr ""
"メッシュは、組み込みではなく別々のファイル (リソース) に格納できます。オブ"
"ジェクトを直接ビルドする場合を除き、これはあまり実用的ではありません。"

msgid ""
"This option is provided to help those who prefer working directly with "
"meshes instead of scenes."
msgstr ""
"このオプションは、シーンの代わりに直接メッシュを操作することを好む人を支援す"
"るために提供されています。"

msgid "Light Baking"
msgstr "ライトベーキング(Light Baking)"

msgid "Whether or not the mesh is used in baked lightmaps."
msgstr "メッシュがベイク処理されたライトマップで使用されるかどうか。"

msgid "**Disabled:** The mesh is not used in baked lightmaps."
msgstr ""
"**無効(Disabled):** メッシュはベイク処理されたライトマップでは使用されませ"
"ん。"

msgid "**Enable:** The mesh is used in baked lightmaps."
msgstr ""
"**有効(Enable):** メッシュはベイク処理されたライトマップで使用されます。"

msgid ""
"**Gen Lightmaps:** The mesh is used in baked lightmaps, and unwraps a second "
"UV layer for lightmaps."
msgstr ""
"**ライトマップ生成(Gen Lightmaps):** メッシュはベイク処理されたライトマップで"
"使用され、ライトマップの第2UVレイヤーに展開します。"

msgid "For more information on light baking see :ref:`doc_baked_lightmaps`."
msgstr ""
"ライトのベイク処理の詳細については、\\ :ref:`doc_baked_lightmaps` を参照して"
"ください。"

msgid "External Files"
msgstr "外部ファイル"

msgid ""
"Generated meshes and materials can be optionally stored in a subdirectory "
"with the name of the scene."
msgstr ""
"生成されたメッシュとマテリアルは、必要に応じてシーンの名前を持つサブディレク"
"トリに格納できます。"

msgid "Animation options"
msgstr "アニメーションオプション"

msgid ""
"Godot provides many options regarding how animation data is dealt with. Some "
"exporters (such as Blender) can generate many animations in a single file. "
"Others, such as 3DS Max or Maya, need many animations put into the same "
"timeline or, at worst, put each animation in a separate file."
msgstr ""
"Godotには、アニメーションデータの処理方法に関する多くのオプションがあります。"
"一部のエクスポーター(Blenderなど)は、1つのファイルで多くのアニメーションを生"
"成できます。 3DS MaxやMayaなどのその他のものでは、複数のアニメーションを同じ"
"タイムラインに配置するか、最悪の場合、各アニメーションを個別のファイルに配置"
"する必要があります。"

msgid "Import of animations is enabled by default."
msgstr "アニメーションのインポート(Import)はデフォルトで有効になっています。"

msgid ""
"To modify animations from an imported 3D scene, you need to change the "
"animation storage option from **Built-In** to **Files** in the Import dock. "
"Otherwise, changes made to animations from Godot will be lost when the "
"project is run."
msgstr ""

msgid "FPS"
msgstr "フレームレート(FPS)"

msgid ""
"Most 3D export formats store animation timeline in seconds instead of "
"frames. To ensure animations are imported as faithfully as possible, please "
"specify the frames per second used to edit them. Failing to do this may "
"result in shaky animations."
msgstr ""
"ほとんどの3Dエクスポート形式では、フレームではなく秒単位でアニメーションタイ"
"ムラインを保存します。アニメーションを可能な限り忠実にインポートするには、編"
"集に使用する1秒あたりのフレーム数を指定してください。これを行わないと、アニ"
"メーションが不安定になる場合があります。"

msgid "Filter Script"
msgstr "スクリプトを絞り込む"

msgid ""
"It is possible to specify a filter script in a special syntax to decide "
"which tracks from which animations should be kept."
msgstr ""
"特別な構文でフィルタースクリプトを指定して、どのアニメーションのどのトラック"
"を保持するかを決定することができます。"

msgid ""
"The filter script is executed against each imported animation. The syntax "
"consists of two types of statements, the first for choosing which animations "
"to filter, and the second for filtering individual tracks within the matched "
"animation. All name patterns are performed using a case insensitive "
"expression match, using ``?`` and ``*`` wildcards (using ``String.matchn()`` "
"under the hood)."
msgstr ""
"フィルタスクリプトは、インポートされた各アニメーションに対して実行されます。"
"構文は2種類のステートメントで構成されます。1つ目は、フィルタリングするアニ"
"メーションを選択するためのもので、2つ目は、一致するアニメーション内の個々のト"
"ラックをフィルタリングするためのものです。すべての名前パターンは、大文字と小"
"文字を区別しないマッチパターンを使用して実行され、\\ ``?`` および ``*`` ワイ"
"ルドカードを使用します(``String.matchn()`` を内部で使用しています)。"

msgid ""
"The script must start with an animation filter statement (as denoted by the "
"line beginning with an ``@``). For example, if we would like to apply "
"filters to all imported animations which have a name ending in "
"``\"_Loop\"``::"
msgstr ""
"スクリプトは、(``@`` で始まる行で示される)アニメーション・フィルタ・ステート"
"メントで開始する必要があります。たとえば、インポートされた、名前が "
"``\"_Loop\"``で終わるすべてのアニメーションにフィルタを適用する場合は::"

msgid ""
"Similarly, additional patterns can be added to the same line, separated by "
"commas. Here is a modified example to additionally *include* all animations "
"with names that begin with ``\"Arm_Left\"``, but also *exclude* all "
"animations which have names ending in ``\"Attack\"``::"
msgstr ""
"同様に、追加のパターンをコンマで区切って同じ行に追加できます。これは、名前が"
"\\ ``\"Arm_Left\"`` で始まるすべてのアニメーションを\\ *追加*\\ し、そして\\ "
"``\"Attack\"`` で終わる名前を持つすべてのアニメーションを\\ *除外*\\ する設定"
"を追加した変更例です::"

msgid ""
"Following the animation selection filter statement, we add track filtering "
"patterns to indicate which animation tracks should be kept or discarded. If "
"no track filter patterns are specified, then all tracks within the matched "
"animations will be discarded!"
msgstr ""
"アニメーション選択用のフィルタステートメントに続いて、トラック・フィルタリン"
"グ・パターンを追加して、どのアニメーショントラックを保持または破棄するかを示"
"します。トラック・フィルタ・パターンが指定されていない場合、一致するアニメー"
"ション内のすべてのトラックは破棄されます！"

msgid ""
"It's important to note that track filter statements are applied in order for "
"each track within the animation, this means that one line may include a "
"track, a later rule can still discard it. Similarly, a track excluded by an "
"early rule may then be re-included once again by a filter rule further down "
"in the filter script."
msgstr ""
"トラック・フィルタ・ステートメントは、アニメーション内の各トラックに順番に適"
"用されることに注意することが重要です。これは、ある行のルールでトラックが追加"
"されても、後のルールでそれを破棄できることを意味します。同様に、始めの方の"
"ルールによって除外されたトラックが、フィルタ・スクリプトのさらに下のルールに"
"よって再度追加される場合もあります。"

msgid ""
"For example: include all tracks in animations with names ending in "
"``\"_Loop\"``, but discard any tracks affecting a ``\"Skeleton\"`` which end "
"in ``\"Control\"``, unless they have ``\"Arm\"`` in their name::"
msgstr ""
"例: ``\"_Loop\"`` で終わる名前を持つアニメーションにすべてのトラックを含めま"
"すが、名前に ``\"arm\"`` が含まれている場合を除き、\\ ``\"Skeleton\"`` の "
"``\"Control\"``で終わっているトラックは破棄します::"

msgid ""
"In the above example, tracks like ``\"Skeleton:Leg_Control\"`` would be "
"discarded, while tracks such as ``\"Skeleton:Head\"`` or ``\"Skeleton:"
"Arm_Left_Control\"`` would be retained."
msgstr ""
"上記の例では、\\ ``\"Skeleton:Leg_Control\"`` のようなトラックは破棄されます"
"が、\\ ``\"Skeleton:Head\"`` や ``Skeleton:Arm_Left_Control`` などのトラック"
"は保持されます。"

msgid ""
"Any track filter lines that do not begin with a ``+`` or ``-`` are ignored."
msgstr "``+`` または ``-`` で始まらないトラック・フィルタ行は無視されます。"

msgid ""
"By default, animations are saved as built-in. It is possible to save them to "
"a file instead. This allows adding custom tracks to the animations and "
"keeping them after a reimport."
msgstr ""
"デフォルトでは、アニメーションは組み込みとして保存されます。代わりにファイル"
"に保存できます。これにより、アニメーションにカスタムトラックを追加し、再読み"
"込み後も保持できます。"

msgid "Optimizer"
msgstr "オプティマイザー(Optimizer)"

msgid ""
"When animations are imported, an optimizer is run, which reduces the size of "
"the animation considerably. In general, this should always be turned on "
"unless you suspect that an animation might be broken due to it being enabled."
msgstr ""
"アニメーションがインポートされると、オプティマイザーが実行され、アニメーショ"
"ンのサイズが大幅に縮小されます。一般に、アニメーションが有効になっているため"
"にアニメーションが壊れている疑いがない限り、これは常にオンにする必要がありま"
"す。"

msgid "Clips"
msgstr "クリップ"

msgid ""
"It is possible to specify multiple animations from a single timeline as "
"clips. For this to work, the model must have only one animation that is "
"named ``default``. To create clips, change the clip amount to something "
"greater than zero. You can then name a clip, specify which frames it starts "
"and stops on, and choose whether the animation loops or not."
msgstr ""
"1つのタイムラインから複数のアニメーションをクリップとして指定することができま"
"す。この機能を使うためには、モデルには ``default`` という名前のアニメーション"
"を 1 つだけ用意しなければなりません。クリップを作成するには、クリップの量をゼ"
"ロよりも大きい値に変更してください。クリップに名前を付けて、どのフレームで開"
"始し、どのフレームで停止するかを指定し、アニメーションをループさせるかどうか"
"を選択することができます。"

msgid "Scene inheritance"
msgstr "シーンの継承"

msgid ""
"In many cases, it may be desired to make modifications to the imported "
"scene. By default, this is not possible because if the source asset changes "
"(source ``.dae``, ``.gltf``, ``.obj`` file re-exported from 3D modelling "
"app), Godot will re-import the whole scene."
msgstr ""
"多くの場合、インポートされたシーンに変更を加えることが望ましい場合がありま"
"す。デフォルトでは、ソースアセットが変更された場合(ソース ``.dae``\\ 、\\ ``."
"gltf``\\ 、\\ ``.obj``\\ ファイルが3Dモデリングアプリから再エクスポートされた"
"場合)、Godotはシーン全体を再インポートする必要があるため変更は出来ません。"

msgid ""
"It is possible, however, to make local modifications by using *Scene "
"Inheritance*. Try to open the imported scene and the following dialog will "
"appear:"
msgstr ""
"ただし、\\ *シーンの継承(Scene Inheritance)* を使用してローカルに変更すること"
"は可能です。インポートしたシーンを開こうとすると、次のダイアログが表示されま"
"す:"

msgid "In inherited scenes, the only limitations for modifications are:"
msgstr "継承されたシーンでは、変更の唯一の制限は次のとおりです:"

msgid "Nodes can't be removed (but can be added anywhere)."
msgstr "ノードは削除できません(ただし、どこにでも追加できます)。"

msgid ""
"Sub-Resources can't be edited (save them externally as described above for "
"this)"
msgstr "サブリソースは編集できません(このために上記のように外部に保存します)"

msgid "Other than that, everything is allowed!"
msgstr "それ以外は、すべてが許可されています！"

msgid "Import hints"
msgstr "インポートのヒント"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr ""
"多くの場合、シーンを編集する場合、エクスポート後に実行する必要がある一般的な"
"タスクがあります:"

msgid "Adding collision detection to objects."
msgstr "オブジェクトへのコリジョン検出の追加。"

msgid "Setting objects as navigation meshes."
msgstr "オブジェクトをナビゲーションメッシュとして設定する。"

msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modelling)."
msgstr ""
"ゲーム エンジンで使用されていないノードの削除 (モデリングに使用される特定のラ"
"イトなど)。"

msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modelling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"このワークフローを簡略化するために、Godotには3Dモデリング・ソフトウェアのオブ"
"ジェクトの名前に追加できるサフィックスがいくつかあります。インポートすると、"
"Godotはそれらのオブジェクトの名前のサフィックスを検出し、自動的にアクションを"
"実行します。"

msgid "All the suffixes described below are *case-sensitive*."
msgstr ""

msgid "Remove nodes (-noimp)"
msgstr "ノードの削除 (-noimp)"

#, fuzzy
msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"このサフィックスを持つノード名は、インポート時に、その型に関係なく削除されま"
"す。読み込まれたシーンには表示されません。"

#, fuzzy
msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "コリジョンの作成 (-col、-colonly、-convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""

msgid ""
"The option ``-convcol`` will create a :ref:`class_convexpolygonshape` "
"instead of a :ref:`class_concavepolygonshape`. Unlike triangle meshes which "
"can be concave, a convex shape can only accurately represent a shape that "
"doesn't have any concave angles (a pyramid is convex, but a hollow box is "
"concave). Due to this, convex collision shapes are generally not suited for "
"level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""

#, fuzzy
msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"ただし、視覚的ジオメトリが複雑すぎたり、コリジョンに対してスムーズでなかった"
"りして、うまく機能しないことがよくあります。"

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_staticbody` collision instead. "
"This helps the visual mesh and actual collision to be separated."
msgstr ""
"これを解決するには、インポート時にメッシュを削除し、代わりに \\ :ref:"
"`class_staticbody` の衝突を作成する \"-colonly\" 修飾子が存在します。これによ"
"り、視覚的なメッシュと実際のコリジョンを分離できます。"

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_convexpolygonshape` instead."
msgstr ""
"オプション \"-convcolonly\" は、\\ :ref:`class_concavepolygonshape` の代わり"
"に :ref:`class_convexpolygonshape` を作成します。"

#, fuzzy
msgid ""
"The option ``-colonly`` can also be used with Blender's empty objects. On "
"import, it will create a :ref:`class_staticbody` with a collision node as a "
"child. The collision node will have one of a number of predefined shapes, "
"depending on Blender's empty draw type:"
msgstr ""
"オプション \"-colonly\" は、Blenderの空のオブジェクトでも使用できます。イン"
"ポート時に、コリジョンノードを子として持つ :ref:`class_staticbody` が作成され"
"ます。コリジョンノードには、Blenderの空の描画タイプに応じて、事前定義されたい"
"くつかの形状があります:"

msgid "Single arrow will create a :ref:`class_rayshape`."
msgstr "単一の矢印(Single arrow)は :ref:`class_rayshape` を作成します。"

msgid "Cube will create a :ref:`class_boxshape`."
msgstr "キューブは :ref:`class_boxshape` を作成します。"

msgid "Image will create a :ref:`class_planeshape`."
msgstr "イメージ :ref:`class_planeshape` を作成します。"

msgid ""
"Sphere (and the others not listed) will create a :ref:`class_sphereshape`."
msgstr ""
"球、(およびリストされていない他のもの)は :ref:`class_sphereshape` を作成しま"
"す。"

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""

#, fuzzy
msgid ""
"For better visibility in Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them in Blender's "
"**User Preferences > Themes > 3D View > Empty**."
msgstr ""
"Blenderのエディタで見やすくするために、ユーザーはコリジョン用エンプティに「X-"
"Ray」オプションを設定し、プリファレンス/テーマ/3Dビュー/エンプティでそれらに"
"明確な色を設定できます。"

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""

msgid "Create navigation (-navmesh)"
msgstr "ナビゲーションの作成(-navmesh)"

#, fuzzy
msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"このサフィックスを持つメッシュノードは、ナビゲーションメッシュに変換されま"
"す。元のメッシュノードが削除されます。"

msgid "Create a VehicleBody (-vehicle)"
msgstr "VehicleBodyの作成(-vehicle)"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody` node."
msgstr ""
"このサフィックスを持つメッシュノードは、\\ :ref:`VehicleBody "
"<class_VehicleBody>` ノードの子としてインポートされます。"

msgid "Create a VehicleWheel (-wheel)"
msgstr "VehicleWheelの作成[-wheel)"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel` node."
msgstr ""
"このサフィックスを持つメッシュノードは、\\ :ref:`VehicleWheel "
"<class_VehicleWheel>` ノードの子としてインポートされます。"

msgid "Rigid Body (-rigid)"
msgstr "リジッドボディ(-rigid)"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody`."
msgstr ""
"このサフィックスを持つメッシュノードは、\\ :ref:`VehicleBody "
"<class_VehicleBody>` ノードの子としてインポートされます。"

msgid "Animation loop (-loop, -cycle)"
msgstr "アニメーションループ(-loop、-cycle)"

msgid ""
"Animation clips in the COLLADA document that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot Animation with the loop "
"flag set. **Unlike the other suffixes described above, this does not require "
"a hyphen.**"
msgstr ""
"``loop``または ``cycle``トークンで開始または終了するCOLLADAドキュメント内のア"
"ニメーションクリップは、ループフラグが設定されたGodotアニメーションとしてイン"
"ポートされます。**これは上記で示したような他のサフィックスとは違い、ハイフン"
"は不要です。**"

#, fuzzy
msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"Blenderでは、NLAエディタを使用し、アクジョンの名前に「loop」または「cycle」の"
"プレフィックスもしくはサフィックスを付ける必要があります。"

msgid "Translation status"
msgstr "翻訳ステータス"
