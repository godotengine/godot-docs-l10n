# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "AR/VR primer"
msgstr "AR/VR入門書"

msgid ""
"This tutorial gives you a springboard into the world of AR and VR in the "
"Godot game engine."
msgstr ""
"このチュートリアルでは、GodotゲームエンジンのARとVRの世界への踏み台を提供しま"
"す。"

msgid ""
"A new architecture was introduced in Godot 3 called the AR/VR Server. On top "
"of this architecture, specific implementations are available as interfaces, "
"most of which are plugins based on GDNative. This tutorial focuses purely on "
"the core elements abstracted by the core architecture. This architecture has "
"enough features for you to create an entire VR experience that can then be "
"deployed for various interfaces. However, each platform often has some "
"unique features that are impossible to abstract. Such features will be "
"documented on the relevant interfaces and fall outside of the scope of this "
"primer."
msgstr ""
"AR / VRサーバーと呼ばれる新しいアーキテクチャがGodot 3に導入されました。この"
"アーキテクチャの上に、特定の実装がインターフェイスとして利用できます。そのほ"
"とんどはGDNativeに基づくプラグインです。このチュートリアルは、コアアーキテク"
"チャによって抽象化されたコア要素にのみ焦点を当てています。このアーキテクチャ"
"には、VRエクスペリエンス全体を作成してさまざまなインターフェイスに展開できる"
"十分な機能があります。ただし、多くの場合、各プラットフォームには抽象化が不可"
"能な独自の機能がいくつかあります。このような機能は、関連するインターフェース"
"で文書化され、この入門書の範囲外になります。"

msgid "AR/VR server"
msgstr "AR/VRサーバー"

msgid ""
"When Godot starts, each available interface will make itself known to the AR/"
"VR server. GDNative interfaces are setup as singletons; as long as they are "
"added to the list of GDNative singletons in your project, they will make "
"themselves known to the server."
msgstr ""
"Godotが起動すると、使用可能な各インターフェイスがAR/VRサーバーに認識されま"
"す。 GDNativeインターフェースはシングルトンとしてセットアップされます。プロ"
"ジェクトのGDNativeシングルトンのリストに追加されている限り、サーバーに認識さ"
"れます。"

msgid ""
"You can use the function :ref:`get_interfaces() "
"<class_ARVRServer_method_get_interfaces>` to return a list of available "
"interfaces, but for this tutorial, we're going to use the :ref:`native "
"mobile VR interface <class_MobileVRInterface>` in our examples. This "
"interface is a straightforward implementation that uses the 3DOF sensors on "
"your phone for orientation and outputs a stereoscopic image to the screen. "
"It is also available in the Godot core and outputs to screen on desktop, "
"which makes it ideal for prototyping or a tutorial such as this one."
msgstr ""
"関数 :ref:`get_interfaces() <class_ARVRServer_method_get_interfaces>` を使用"
"して使用可能なインターフェイスのリストを返すことができますが、このチュートリ"
"アルでは、例に \\ :ref:`native mobile VR interface "
"<class_MobileVRInterface>` を使用します。このインターフェイスは、電話機の3DOF"
"センサーを使用して向きを決定し、立体画像を画面に出力する簡単な実装です。ま"
"た、Godotコアで利用可能であり、プロトタイピングやこのようなチュートリアルに最"
"適なデスクトップ上の画面に出力できます。"

msgid "To enable an interface, you execute the following code:"
msgstr "インターフェイスを有効にするには、次のコードを実行します:"

msgid ""
"This code finds the interface we wish to use, initializes it and, if that is "
"successful, binds the main viewport to the interface. This last step gives "
"some control over the viewport to the interface, which automatically enables "
"things like stereoscopic rendering on the viewport."
msgstr ""
"このコードは、使用するインターフェイスを見つけて初期化し、それが成功した場"
"合、メインビューポートをインターフェイスにバインドします。この最後のステップ"
"により、ビューポートをインターフェイスに制御できるようになり、ビューポートで"
"の立体視レンダリングなどが自動的に有効になります。"

msgid ""
"For our mobile VR interface, and any interface where the main input is "
"directly displayed on screen, the main viewport needs to be the viewport "
"where :ref:`arvr<class_Viewport_property_arvr>` is set to ``true``. But for "
"interfaces that render on an externally attached device, you can use a "
"secondary viewport. In the latter case, a viewport that shows its output on "
"screen will show an undistorted version of the left eye, while showing the "
"fully processed stereoscopic output on the device."
msgstr ""
"モバイルVRインターフェイス、およびメイン入力が画面に直接表示されるインター"
"フェイスの場合、メインビューポートは、\\ :ref:`arvr "
"<class_Viewport_property_arvr>` が ``true`` に設定されているビューポートであ"
"る必要があります。ただし、外部接続デバイスでレンダリングするインターフェイス"
"の場合、セカンダリビューポートを使用できます。後者の場合、画面に出力を表示す"
"るビューポートは、デバイス上で完全に処理された立体視出力を表示しながら、左目"
"の歪みのないバージョンを表示します。"

msgid ""
"Finally, you should only initialize an interface once; switching scenes and "
"reinitializing interfaces will just introduce a lot of overhead. If you want "
"to turn the headset off temporarily, just disable the viewport or set :ref:"
"`arvr<class_Viewport_property_arvr>` to ``false`` on the viewport. In most "
"scenarios though, you wouldn't disable the headset once you're in VR, this "
"can be disconcerting to the gamer."
msgstr ""
"最後に、インターフェイスを一度だけ初期化する必要があります。シーンを切り替え"
"てインターフェイスを再初期化すると、多くのオーバーヘッドが発生します。ヘッド"
"セットを一時的にオフにする場合は、ビューポートを無効にするか、ビューポート"
"で :ref:`arvr <class_Viewport_property_arvr>` を ``false`` に設定するだけで"
"す。ただし、ほとんどのシナリオでは、VRになってからヘッドセットを無効にするこ"
"とはありません。これはゲーマーを混乱させる可能性があります。"

msgid "New AR/VR nodes"
msgstr "新しいAR/VRノード"

msgid ""
"Three new node types have been added for supporting AR and VR in Godot and "
"one additional node type especially for AR. These are:"
msgstr ""
"GodotでARとVRをサポートするために3つの新しいノードタイプが追加され、特にAR用"
"に1つの追加ノードタイプが追加されました。これらは:"

msgid ":ref:`ARVROrigin <class_ARVROrigin>` - our origin point in the world"
msgstr ":ref:`ARVROrigin <class_ARVROrigin>` - 世界の原点"

msgid ""
":ref:`ARVRCamera <class_ARVRCamera>` - a special subclass of the camera, "
"which is positionally tracked"
msgstr ""
":ref:`ARVRCamera <class_ARVRCamera>` - ポジショントラッキングされるカメラの特"
"別なサブクラス"

msgid ""
":ref:`ARVRController <class_ARVRController>` - a new spatial class, which "
"tracks the location of a controller"
msgstr ""
":ref:`ARVRController <class_ARVRController>` - コントローラーの位置をトラッキ"
"ングする新しいSpatialクラス"

msgid ""
":ref:`ARVRAnchor <class_ARVRAnchor>` - an anchor point for an AR "
"implementation mapping a real world location into your virtual world"
msgstr ""
":ref:`ARVRAnchor <class_ARVRAnchor>` - 実世界の位置を仮想世界にマッピングする"
"AR実装用のアンカーポイント"

msgid ""
"The first two must exist in your scene for AR/VR to work and this tutorial "
"focuses purely on them."
msgstr ""
"AR/VRが機能するには、シーンに最初の2つが存在する必要があります。このチュート"
"リアルでは、純粋にそれらに焦点を合わせます。"

msgid ""
":ref:`ARVROrigin <class_ARVROrigin>` is an important node, you must have one "
"and only one of these somewhere in your scene. This node maps the center of "
"your real world tracking space to a location in your virtual world. "
"Everything else is positionally tracked in relation to this point. Where "
"this point lies exactly differs from one implementation to another, but the "
"best example to understand how this node works is to take a look at a room "
"scale location. While we have functions to adjust the point to center it on "
"the player by default, the origin point will be the center location of the "
"room you are in. As you physically walk around the room, the location of the "
"HMD is tracked in relation to this center position and the tracking is "
"mirror in the virtual world."
msgstr ""
":ref:`ARVROrigin <class_ARVROrigin>` は重要なノードです。シーン内のどこかにこ"
"れらのうちの1つだけが必要です。このノードは、現実世界の追跡空間の中心を仮想世"
"界の場所にマッピングします。他のすべては、この地点に関連してポジショントラッ"
"キングされます。この地点がどこにあるかは実装ごとにまったく異なりますが、この"
"ノードがどのように機能するかを理解する最良の例は、部屋の規模の場所を調べるこ"
"とです。デフォルトでプレイヤーの中心にポイントを調整する機能がありますが、原"
"点はあなたがいる部屋の中心位置になります。物理的に部屋を歩き回ると、HMDの位置"
"はこの中心位置に関連してトラッキングされ、仮想世界にそのトラッキングがミラー"
"リングされます。"

msgid ""
"To keep things simple, when you physically move around your room, the ARVR "
"Origin point stays where it is, the position of the camera and controllers "
"will be adjusted according to your movements. When you move through the "
"virtual world, either through controller input or when you implement a "
"teleport system, it is the position of the origin point which you will have "
"to adjust."
msgstr ""
"物事をシンプルに保つために、部屋を物理的に移動するとき、ARVRの原点は現在の位"
"置にとどまり、カメラとコントローラーの位置は動きに応じて調整されます。コント"
"ローラー入力を介して、またはテレポートシステムを実装して、仮想世界を移動する"
"場合、原点の位置を調整する必要があります。"

msgid ""
":ref:`ARVRCamera <class_ARVRCamera>` is the second node that must always be "
"a part of your scene and it must always be a child node of your origin node. "
"It is a subclass of Godot's normal camera. However, its position is "
"automatically updated each frame based on the physical orientation and "
"position of the HMD. Also due to the precision required for rendering to an "
"HMD or rendering an AR overlay over a real world camera, most of the "
"standard camera properties are ignored. The only properties of the camera "
"that are used are the near and far plane settings. The FOV, aspect ratio and "
"projection mode are all ignored."
msgstr ""
":ref:`ARVRCamera <class_ARVRCamera>` は、常にシーンの一部である必要があり、常"
"に起点ノードの子ノードである必要がある2番目のノードです。 Godotの通常のカメラ"
"のサブクラスです。ただし、その位置は、HMDの物理的な方向と位置に基づいて各フ"
"レームで自動的に更新されます。また、HMDへのレンダリングまたは現実世界のカメラ"
"でのARオーバーレイのレンダリングに必要な精度のため、標準のカメラプロパティの"
"ほとんどは無視されます。使用されるカメラのプロパティは、ニアプレーンとファー"
"プレーンの設定のみです。 FOV、アスペクト比、投影モードはすべて無視されます。"

msgid ""
"Note that, for our native mobile VR implementation, there is no positional "
"tracking, only the orientation of the phone and by extension, the HMD is "
"tracked. This implementation artificially places the camera at a height (Y) "
"of 1.85."
msgstr ""
"ネイティブモバイルVRの実装では、位置の追跡は行われず、電話の向きと、ひいては"
"HMDのみが追跡されることに注意してください。この実装では、カメラを人工的に1.85"
"の高さ(Y)に配置します。"

msgid ""
"Conclusion: your minimum setup in your scene to make AR or VR work should "
"look like this:"
msgstr ""
"結論: ARまたはVRを機能させるためのシーンの最小設定は次のようになります:"

#, fuzzy
msgid ""
"And that's all you need to get started with the native mobile interface. "
"Obviously, you need to add something more into your scene, so there is "
"something to see, but after that, you can export the game to your phone of "
"choice, pop it into a viewer and away you go."
msgstr ""
"そして、それがあなたが始めるために必要なすべてです。もちろん、シーンに何かを"
"追加する必要があるので、見るべきものはありますが、その後、ゲームを好きな携帯"
"電話にエクスポートし、3Dビュワーにひょいと入れて、(現実世界から)離れて行くこ"
"とができます。"

#, fuzzy
msgid "Official plugins and resources"
msgstr "チュートリアルとリソース"

msgid ""
"As mentioned earlier, Godot does not support the various VR and AR SDKs out "
"of the box, you need a plugin for the specific SDK you want to use. There "
"are several official plugins available in the `GodotVR Repository <https://"
"github.com/GodotVR>`__."
msgstr ""

msgid ""
"`Godot OpenXR <https://github.com/GodotVR/godot_openxr>`_: This is the "
"**official XR plugin** starting with Godot **3.4**. It supports OpenXR, an "
"open standard for designing and building cross-platform VR and AR software. "
"Tested with SteamVR, Monada and Oculus OpenXR (desktop and mobile) runtimes."
msgstr ""

#, fuzzy
msgid "See :ref:`doc_openxr_introduction`."
msgstr "\\ :ref:`doc_interpolation`"

#, fuzzy
msgid ""
"`Godot Oculus Mobile <https://github.com/GodotVR/godot_oculus_mobile>`_ "
"provides :ref:`support for the Meta Quest <doc_developing_for_oculus_quest>`."
msgstr ""
"`Godot Oculus <https://github.com/GodotVR/godot_oculus>`_はOculus SDK (デスク"
"トップヘッドセットのみ) をサポートしています。"

msgid ""
"**Note**: This plugin has been deprecated starting with Godot 3.4. We "
"recommend migrating to the `Godot OpenXR <https://github.com/GodotVR/"
"godot_openxr>`_ plugin instead."
msgstr ""

#, fuzzy
msgid ""
"`Godot OpenVR <https://github.com/GodotVR/godot_openvr>`_ (not to be "
"confused with OpenXR) supports the OpenVR SDK used by Steam."
msgstr ""
"`Godot Oculus <https://github.com/GodotVR/godot_oculus>`_はOculus SDK (デスク"
"トップヘッドセットのみ) をサポートしています。"

#, fuzzy
msgid ""
"`Godot Oculus <https://github.com/GodotVR/godot_oculus>`__ supports the "
"Oculus SDK (desktop headsets only)."
msgstr ""
"`Godot Oculus <https://github.com/GodotVR/godot_oculus>`_はOculus SDK (デスク"
"トップヘッドセットのみ) をサポートしています。"

#, fuzzy
msgid ""
"`Godot OpenHMD <https://github.com/GodotVR/godot_openhmd>`_ supports "
"OpenHMD, an open source API and drivers for headsets."
msgstr ""
"`Godot Oculus <https://github.com/GodotVR/godot_oculus>`_はOculus SDK (デスク"
"トップヘッドセットのみ) をサポートしています。"

msgid "These plugins can be downloaded from GitHub or the Godot Asset Library."
msgstr ""

msgid "In addition to the plugins, there are several official demos."
msgstr ""

#, fuzzy
msgid "`Godot Oculus Demo <https://github.com/GodotVR/godot-oculus-demo>`__."
msgstr "`Godot Oculus Demo <https://github.com/GodotVR/godot-oculus-demo>`_。"

msgid ""
"`Godot OpenVR FPS <https://github.com/GodotVR/godot_openvr_fps>`__ (the "
"tutorial for this project is :ref:`doc_vr_starter_tutorial_part_one`)."
msgstr ""

msgid ""
"`Godot XR tools <https://github.com/GodotVR/godot-xr-tools>`__, which shows "
"implementations for VR features such as movement and picking up objects."
msgstr ""

msgid "Other things to consider"
msgstr "考慮すべきその他のもの"

msgid ""
"There are a few other subjects that we need to briefly touch upon in this "
"primer that are important to know."
msgstr "この入門書では、知っておくべき重要なテーマをいくつか簡単に説明します。"

msgid ""
"The first are our units. In normal 3D games, you don't have to think a lot "
"about units. As long as everything is at the same scale, a box sized 1 unit "
"by 1 unit by 1 unit can be any size from a cub you can hold in your hand to "
"something the size of a building. In AR and VR, this changes because things "
"in your virtual world are mapped to things in the real world. If you step 1 "
"meter forward in the real world, but you only move 1 cm forward in your "
"virtual world, you have a problem. The same with the position of your "
"controllers; if they don't appear in the right relative space, it breaks the "
"immersion for the player. Most VR platforms, including our AR/VR Server, "
"assume that 1 unit = 1 meter. The AR/VR server, however, has a property "
"that, for convenience, is also exposed on the ARVROrigin node called world "
"scale. For instance, setting this to a value of 10 changes our coordinate "
"system so 10 units = 1 meter."
msgstr ""
"最初は私たちが使う単位です。通常の3Dゲームでは、単位についてあまり考える必要"
"はありません。すべてが同じ縮尺である限り、1単位x 1単位x 1単位のサイズのボック"
"スは、手に持つことができる立方体から建物のサイズのものまで、任意のサイズにで"
"きます。 ARおよびVRでは、これは変化します。これは、仮想世界のものが現実世界の"
"ものにマッピングされるためです。現実の世界で1メートル先に進んでも、仮想世界で"
"1センチしか移動しない場合は問題があります。コントローラーの位置も同じです。そ"
"れらが適切な相対的なスペースに表示されない場合、プレイヤーの没入感を損ないま"
"す。 AR/VRサーバーを含むほとんどのVRプラットフォームでは、1単位= 1メートルと"
"想定しています。ただし、AR/VRサーバーには、便宜上、ワールドスケールと呼ばれる"
"ARVROriginノードでも公開されるプロパティがあります。たとえば、これを10の値に"
"設定すると、座標系が変更され、10単位= 1メートルになります。"

#, fuzzy
msgid ""
"Performance is another thing that needs to be carefully considered. "
"Especially VR taxes your game a lot more than most people realize. For "
"mobile VR, you have to be extra careful here, but even for desktop games, "
"there are three factors that make life extra difficult:"
msgstr ""
"パフォーマンスも慎重に検討する必要がある別の事柄です。特にVRは、ほとんどの人"
"が認識している以上にゲームに負担をかけます。モバイルVRの場合、ここでは特に注"
"意する必要がありますが、デスクトップゲームでも、(仮想)生活をさらに難しくする3"
"つの要因があります:"

msgid ""
"You are rendering stereoscopic, two for the price of one. While not exactly "
"doubling the work load and with things in the pipeline such as supporting "
"the new MultiView OpenGL extension in mind, there still is an extra workload "
"in rendering images for both eyes"
msgstr ""
"2つのステレオスコピックを1つの代価でレンダリングしています。作業負荷が正確に"
"倍増するわけではありませんが、新しいMultiView OpenGL拡張機能のサポートなど、"
"パイプラインのことを念頭に置いても、両眼の画像のレンダリングにはまだ余分な作"
"業負荷が残っています"

msgid ""
"A normal game will run acceptably on 30fps and ideally manages 60fps. That "
"gives you a big range to play with between lower end and higher end "
"hardware. For any HMD application of AR or VR, however, 60fps is the "
"absolute minimum and you should target your games to run at a stable 90fps "
"to ensure your users don't get motion sickness right off the bat."
msgstr ""
"通常のゲームは30fpsの実行で十分で、理想的には60fpsで処理します。これにより、"
"ローエンドハードウェアとハイエンドハードウェアの両方でプレイできる範囲が広が"
"ります。ただし、ARまたはVRのHMDアプリケーションの場合、60fpsは絶対最小値で"
"す。安定した90fpsで実行するようにゲームをターゲットし、ユーザーがすぐに乗り物"
"酔いしないようにする必要があります。"

msgid ""
"The high FOV and related lens distortion effect require many VR experiences "
"to render at double the resolution. Yes a VIVE may only have a resolution of "
"1080x1200 per eye, we're rendering each eye at 2160x2400 as a result. This "
"is less of an issue for most AR applications."
msgstr ""
"高いFOVとそれに関連するレンズの歪み効果のせいで、2倍の解像度でレンダリングす"
"る必要があるので多くのVRエクスペリエンスを必要とします。そう、VIVEの解像度は"
"片目あたり1080x1200です。なので、それぞれの目は2160x2400でレンダリングされま"
"す。これは、ほとんどの AR アプリケーションでは問題ではありません。"

msgid ""
"All in all, the workload your GPU has in comparison with a normal 3D game is "
"a fair amount higher. While things are in the pipeline to improve this, such "
"as MultiView and foveated rendering, these aren't supported on all devices. "
"This is why you see many VR games using a more art style and if you pay "
"close attention to those VR games that go for realism, you'll probably "
"notice they're a bit more conservative on the effects or use some good old "
"optical trickery."
msgstr ""
"全体として、通常の3Dゲームと比較してGPUの処理負荷がかなり高いです。MultiView "
"や foveated レンダリングなど、これを改善するためのパイプラインが導入されてい"
"ますが、これらはすべてのデバイスでサポートされているわけではありません。これ"
"が、抽象的スタイルを多用しているVRゲームを数多く見かける理由であり、リアリズ"
"ムを追求しているVRゲームでも細心の注意を払うと、おそらく効果が少し保守的であ"
"るか、古き良き光学トリックを使用していることに気付くでしょう。"

msgid "Translation status"
msgstr "翻訳ステータス"
