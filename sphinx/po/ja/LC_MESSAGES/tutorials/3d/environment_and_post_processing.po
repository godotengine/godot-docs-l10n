# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Environment and post-processing"
msgstr "環境とポストプロセッシング"

#, fuzzy
msgid ""
"Godot 3 provides a redesigned Environment resource, as well as a new post-"
"processing system with many available effects right out of the box."
msgstr ""
"Godot 3.x は、再設計された環境(Environment/エンバイロメント)リソースと、すぐ"
"に使用できる多くのエフェクトを備えた真新しいポストプロセッシングシステムを提"
"供します。"

msgid "Environment"
msgstr "環境"

msgid ""
"The Environment resource stores all the information required for controlling "
"rendering environment. This includes sky, ambient lighting, tone mapping, "
"effects, and adjustments. By itself it does nothing, but it becomes enabled "
"once used in one of the following locations in order of priority:"
msgstr ""
"Environment(環境)リソースには、レンダリング環境の制御に必要なすべての情報が格"
"納されます。これには、空、環境光、トーンマッピング、エフェクト、調整が含まれ"
"ます。それ自体は何もしませんが、次の場所のいずれかで使用されると、優先度順に"
"有効になります:"

msgid "Camera node"
msgstr "Cameraノード"

msgid ""
"An Environment can be set to a camera. It will have priority over any other "
"setting."
msgstr "環境はカメラに設定できます。他の設定よりも優先されます。"

msgid ""
"This is mostly useful when wanting to override an existing environment, but "
"in general it's a better idea to use the option below."
msgstr ""
"これは、既存の環境をオーバーライドする場合に最も役立ちますが、一般的には以下"
"のオプションを使用することをお勧めします。"

msgid "WorldEnvironment node"
msgstr "WorldEnvironmentノード"

msgid ""
"The WorldEnvironment node can be added to any scene, but only one can exist "
"per active scene tree. Adding more than one will result in a warning."
msgstr ""
"WorldEnvironmentノードはどのシーンにも追加できますが、アクティブなシーンツ"
"リーごとに1つしか存在できません。複数追加すると警告が表示されます。"

msgid ""
"Any Environment added has higher priority than the default Environment "
"(explained below). This means it can be overridden on a per-scene basis, "
"which makes it quite useful."
msgstr ""
"追加された環境は、デフォルトの環境(以下で説明)よりも高い優先度を持ちます。つ"
"まり、シーンごとにオーバーライドできるため、非常に便利です。"

msgid "Default environment"
msgstr "デフォルトの環境"

msgid ""
"A default environment can be set, which acts as a fallback when no "
"Environment was set to a Camera or WorldEnvironment. Just head to Project "
"Settings -> Rendering -> Environment:"
msgstr ""
"デフォルトの環境を設定できます。これは、環境がCameraノードまたは"
"WorldEnvironmentノードに設定されていない場合のフォールバックとして機能しま"
"す。 [プロジェクト設定] → [Rendering ] → [Environment]に進みます:"

msgid ""
"New projects created from the Project Manager come with a default "
"environment (``default_env.tres``). If one needs to be created, save it to "
"disk before referencing it here."
msgstr ""
"プロジェクトマネージャーから作成された新しいプロジェクトには、デフォルトの環"
"境(``default_env.tres``)が付属しています。作成する必要がある場合は、ここで参"
"照する前にディスクに保存してください。"

msgid "Environment options"
msgstr "Environment(環境)のオプション"

msgid ""
"Following is a detailed description of all environment options and how they "
"are intended to be used."
msgstr ""
"以下は、すべてのEnvironmentのオプションとそれらの使用方法の詳細な説明です。"

msgid "Background"
msgstr "背景"

msgid ""
"The Background section contains settings on how to fill the background "
"(parts of the screen where objects were not drawn). In Godot 3.0, the "
"background not only serves the purpose of displaying an image or color, it "
"can also change how objects are affected by ambient and reflected light."
msgstr ""
"Backgroundセクションには、背景(オブジェクトが描画されなかった画面の一部)を塗"
"りつぶす方法に関する設定が含まれています。Godot 3.0では、背景は画像や色を表示"
"するだけでなく、環境光や反射光によるオブジェクトへの影響を変えることもできま"
"す。"

msgid "There are many ways to set the background:"
msgstr "背景を設定するには多くの方法があります:"

msgid ""
"**Clear Color** uses the default clear color defined by the project. The "
"background will be a constant color."
msgstr ""
"**Clear Color** は、プロジェクトで定義されているデフォルトのクリアカラーを使"
"用します。背景は一定の色になります。"

msgid "**Custom Color** is like Clear Color, but with a custom color value."
msgstr ""
"**Custom Color** はクリアカラーに似ていますが、カスタムカラー値を持ちます。"

msgid ""
"**Sky** lets you define a panorama sky (a 360 degree sphere texture) or a "
"procedural sky (a simple sky featuring a gradient and an optional sun). "
"Objects will reflect it and absorb ambient light from it."
msgstr ""
"**Sky** では、パノラマの空 (360度の球体テクスチャ) または手続き型の空 (グラ"
"デーションとオプションの太陽を備えたシンプルな空) を定義できます。オブジェク"
"トはそれを反射し、そこから環境光を吸収します。"

msgid ""
"**Color+Sky** lets you define a sky (as above), but uses a constant color "
"value for drawing the background. The sky will only be used for reflection "
"and ambient light."
msgstr ""
"**Color+Sky** では(上記のように)空を定義できますが、背景の描画には一定の色値"
"を使用します。空は反射光と環境光にのみ使用されます。"

msgid "Ambient Light"
msgstr "Ambient Light(環境光)"

msgid ""
"Ambient (as defined here) is a type of light that affects every piece of "
"geometry with the same intensity. It is global and independent of lights "
"that might be added to the scene."
msgstr ""
"Ambient(ここで定義)は、同じ強度ですべてのジオメトリに影響するライトの一種で"
"す。これはグローバルであり、シーンに追加される可能性のあるライトとは無関係で"
"す。"

msgid ""
"There are two types of ambient light: the *Ambient Color* (which is a "
"constant color multiplied by the material albedo) and then one obtained from "
"the *Sky* (as described before, but a sky needs to be set as background for "
"this to be enabled)."
msgstr ""
"環境光には2つのタイプがあります: *Ambient Color* (マテリアルのアルベドに乗算"
"する一定の色です)、および *Sky* から取得したもの(前述のように、これを有効にす"
"るには、空を背景として設定する必要があります)。"

msgid ""
"When a *Sky* is set as background, it's possible to blend between ambient "
"color and sky using the **Sky Contribution** setting (this value is 1.0 by "
"default for convenience, so only the sky affects objects)."
msgstr ""
"*Sky* を背景として設定すると、\\ **Sky Contribution** 設定を使用して環境色と"
"空をブレンドできます(便宜上、この値はデフォルトでは1.0であるため、空のみがオ"
"ブジェクトに影響します)。"

msgid "Here is a comparison of how different ambient light affects a scene:"
msgstr "異なる環境光がシーンに与える影響の比較は次のとおりです:"

#, fuzzy
msgid ""
"Finally, there is an **Energy** setting, which is a multiplier. It's useful "
"when working with HDR."
msgstr ""
"最後に、\\ **Energy** 設定があります。これは乗数であり、HDRで作業するときに便"
"利です。"

msgid ""
"In general, ambient light should only be used for simple scenes, large "
"exteriors, or for performance reasons (ambient light is cheap), as it does "
"not provide the best lighting quality. It's better to generate ambient light "
"from ReflectionProbe or GIProbe, which will more faithfully simulate how "
"indirect light propagates. Below is a comparison, in terms of quality, "
"between using a flat ambient color and a GIProbe:"
msgstr ""
"一般に、環境光は、最高の照明品質を提供しないため、単純なシーン、大きなエクス"
"テリア、またはパフォーマンス上の理由(環境光はレンダリングコストが安い)に対し"
"てのみ使用する必要があります。 ReflectionProbeまたはGIProbeから環境光を生成す"
"ると、間接光がどのように伝播するかをより忠実にシミュレートできます。以下は、"
"均一な環境色とGIProbeを使用した場合の品質の比較です:"

msgid ""
"Using one of the methods described above, objects get constant ambient "
"lighting replaced by ambient light from the probes."
msgstr ""
"上記の方法のいずれかを使用すると、オブジェクトは一定した環境光をプローブから"
"の環境光に置き換えます。"

msgid "Fog"
msgstr "フォグ"

msgid ""
"Fog, as in real life, makes distant objects fade away into an uniform color. "
"The physical effect is actually pretty complex, but Godot provides a good "
"approximation. There are two kinds of fog in Godot:"
msgstr ""
"霧は、実生活と同様に、遠くのオブジェクトを均一な色にフェードアウトさせます。"
"物理的な効果は実際にはかなり複雑ですが、Godotは適切な近似を提供します。 Godot"
"には2種類の霧があります:"

msgid ""
"**Depth Fog:** This one is applied based on the distance from the camera."
msgstr "**Depth Fog:** これはカメラからの距離に基づいて適用されます。"

msgid ""
"**Height Fog:** This one is applied to any objects below (or above) a "
"certain height, regardless of the distance from the camera."
msgstr ""
"**Height Fog:** これは、カメラからの距離に関係なく、特定の高さの下(または上)"
"のオブジェクトに適用されます。"

msgid ""
"Both of these fog types can have their curve tweaked, making their "
"transition more or less sharp."
msgstr ""
"これらの霧のタイプは両方とも、カーブを微調整して、トランジションを多少シャー"
"プにすることができます。"

msgid "Two properties can be tweaked to make the fog effect more interesting:"
msgstr "霧の効果をさらに面白くするために、2つのプロパティを調整できます:"

msgid ""
"The first is **Sun Amount**, which makes use of the Sun Color property of "
"the fog. When looking towards a directional light (usually a sun), the color "
"of the fog will be changed, simulating the sunlight passing through the fog."
msgstr ""
"1つ目は **Sun Amount** で、霧のSun Colorプロパティを使用します。指向性ライト"
"(通常は太陽)を見ると、フォグの色が変わり、フォグを通過する日光をシミュレート"
"します。"

msgid ""
"The second is **Transmit Enabled** which simulates more realistic light "
"transmittance. In practice, it makes light stand out more across the fog."
msgstr ""
"2つ目は **Transmit Enabled** で、より現実的な光透過率をシミュレートします。実"
"際には、霧の中で光をより際立たせます。"

msgid "Tonemap"
msgstr "トーンマップ"

msgid "*This feature is only available when using the GLES3 backend.*"
msgstr "*この機能は、GLES3バックエンドを使用している場合にのみ使用できます。*"

#, fuzzy
msgid ""
"Selects the tonemapping curve that will be applied to the scene, from a list "
"of standard curves used in the film and game industry. Tonemapping operators "
"other than Linear are used to make light and dark areas more homogeneous, "
"while also avoiding clipping of bright highlights."
msgstr ""
"映画およびゲーム業界で使用される標準曲線の短いリストから、シーンに適用される"
"トーンマッピング曲線を選択します。トーンマッピングは、結果がそれほど強くない"
"場合でも、明るい領域と暗い領域をより均一にすることができます。トーンマッピン"
"グオプションは次のとおりです:"

#, fuzzy
msgid "The tone mapping options are:"
msgstr "主な欠点は次のとおりです:"

msgid "**Mode:** The tone mapping mode to use."
msgstr ""

msgid ""
"**Linear:** The default tonemapping mode. This is the fastest and simplest "
"tonemapping operator, but it causes bright lighting to look blown out, with "
"noticeable clipping in the output colors."
msgstr ""

msgid ""
"**Reinhardt:** Performs a variation on rendered pixels' colors by this "
"formula: ``color = color / (1 + color)``. This avoids clipping bright "
"highlights, but the resulting image can look a bit dull."
msgstr ""

msgid ""
"**Filmic:** This avoids clipping bright highlights, with a resulting image "
"that usually looks more vivid than Reinhardt."
msgstr ""

msgid ""
"**ACES Fitted:** Academy Color Encoding System tonemapper. ACES Fitted is "
"slightly more expensive than other options, but it handles bright lighting "
"in a more realistic fashion by desaturating it as it becomes brighter. ACES "
"typically has a more contrasted output compared to Reinhardt and Filmic. "
"ACES is the recommended option when aiming for photorealistic visuals."
msgstr ""

msgid ""
"**ACES:** *Deprecated (will be removed in Godot 4.0).* Behaves like ACES, "
"but doesn't desaturate lighting as it becomes brighter (which is less "
"realistic). It's recommended to use ACES Fitted instead of ACES."
msgstr ""

msgid ""
"**Exposure:** Tone mapping exposure which simulates amount of light received "
"over time (default: ``1.0``). Higher values result in an overall brighter "
"appearance. If the scene appears too dark as a result of a tonemapping "
"operator or whitepoint change, try increasing this value slightly."
msgstr ""

msgid ""
"**White:** Tone mapping whitepoint, which simulates where in the scale white "
"is located (default: ``1.0``). For photorealistic lighting, recommended "
"values are between ``6.0`` and ``8.0``. Higher values result in less blown "
"out highlights, but make the scene appear slightly darker as a whole."
msgstr ""

msgid "Auto Exposure (HDR)"
msgstr "自動露出(HDR)"

msgid ""
"Even though, in most cases, lighting and texturing are heavily artist "
"controlled, Godot supports a simple high dynamic range implementation with "
"the auto exposure mechanism. This is generally used for the sake of realism "
"when combining interior areas with low light and outdoors. Auto exposure "
"simulates the camera (or eye) in an effort to adapt between light and dark "
"locations and their different amounts of light."
msgstr ""
"ほとんどの場合、照明とテクスチャリングはアーティストによって厳しく制御されま"
"すが、Godotは自動露出メカニズムを備えたシンプルなハイダイナミックレンジの実装"
"をサポートしています。これは一般に、暗い場所や屋外で屋内エリアを組み合わせる"
"ときにリアリズムのために使用されます。自動露出は、明るい場所と暗い場所、およ"
"び異なる光量の間を適応させるために、カメラ(または目)をシミュレートします。"

msgid ""
"The simplest way to use auto exposure is to make sure outdoor lights (or "
"other strong lights) have energy beyond 1.0. This is done by tweaking their "
"**Energy** multiplier (on the Light itself). To make it consistent, the "
"**Sky** usually needs to use the energy multiplier too, to match with the "
"directional light. Normally, values between 3.0 and 6.0 are enough to "
"simulate indoor-outdoor conditions."
msgstr ""
"自動露出を使用する最も簡単な方法は、屋外の照明(または他の強い照明)のエネル"
"ギーが1.0を超えるようにすることです。これは、(ライト自体の) **Energy** 乗数を"
"微調整することによって行われます。通常、一貫性を持たせるために、\\ **Sky** も"
"指向性ライトと一致させるためにエネルギー乗数を使用する必要があります。一般的"
"に、屋内と屋外の状態をシミュレートするには、3.0〜6.0の値で十分です。"

msgid ""
"By combining Auto Exposure with *Glow* post processing (more on that below), "
"pixels that go over the tonemap **White** will bleed to the glow buffer, "
"creating the typical bloom effect in photography."
msgstr ""
"自動露出と *Glow* ポストプロセッシング(詳細は下記)を組み合わせることにより、"
"トーンマップの **White** を超えたピクセルがグローバッファー流れ込み、典型的な"
"写真のブルームエフェクトを作成できます。"

msgid ""
"The user-controllable values in the Auto Exposure section come with sensible "
"defaults, but you can still tweak them:"
msgstr ""
"Auto Exposureセクションのユーザーが制御可能な値には、適切なデフォルトがありま"
"すが、微調整ができます:"

msgid ""
"**Scale:** Value to scale the lighting. Brighter values produce brighter "
"images, smaller ones produce darker ones."
msgstr ""
"**Scale:** 照明をスケールする値。明るい値は明るい画像を生成し、小さい値は暗い"
"画像を生成します。"

msgid ""
"**Min Luma:** Minimum luminance that auto exposure will aim to adjust for. "
"Luminance is the average of the light in all the pixels of the screen."
msgstr ""
"**Min Luma:** 自動露出の調整対象となる最小輝度。輝度は、画面のすべてのピクセ"
"ルの光の平均です。"

msgid ""
"**Max Luma:** Maximum luminance that auto exposure will aim to adjust for."
msgstr "**Max Luma:** 自動露出の調整対象となる最大輝度。"

msgid ""
"**Speed:** Speed at which luminance corrects itself. The higher the value, "
"the faster correction happens."
msgstr ""
"**Speed:** 輝度が補正される速度。値が大きいほど、より速い補正が行われます。"

msgid "Mid- and post-processing effects"
msgstr "中間およびポストプロセッシングエフェクト"

msgid ""
"A large amount of widely-used mid- and post-processing effects are supported "
"in the Environment."
msgstr ""
"環境(Environment)では、広く使用されている大量の中間プロセッシングおよびポスト"
"プロセッシングエフェクトがサポートされています。"

msgid "Screen-Space Reflections (SSR)"
msgstr "スクリーンスペース反射(Ss Reflections/SSR)"

msgid ""
"While Godot supports three sources of reflection data (Sky, ReflectionProbe, "
"and GIProbe), they may not provide enough detail for all situations. "
"Scenarios where Screen Space Reflections make the most sense are when "
"objects are in contact with each other (object over floor, over a table, "
"floating on water, etc)."
msgstr ""
"Godotは3つの反射データソース(Sky、ReflectionProbe、GIProbe)をサポートしていま"
"すが、すべての状況に対して十分な詳細を提供するわけではありません。スクリーン"
"スペースの反射が最も意味のあるシナリオは、オブジェクトが互いに接触している場"
"合です(床の上、テーブルの上、水に浮いているオブジェクトなど)。"

msgid ""
"The other advantage (even if only enabled to a minimum), is that it works in "
"real-time (while the other types of reflections are pre-computed). This can "
"be used to make characters, cars, etc. reflect on surrounding surfaces when "
"moving around."
msgstr ""
"もう1つの利点は(最低限しか有効にしない場合でも)、リアルタイムで機能することで"
"す(他の種類の反射は事前に計算されます)。これを使用して、キャラクター、車など"
"が動き回るときに周囲の表面に反映させることができます。"

msgid ""
"A few user-controlled parameters are available to better tweak the technique:"
msgstr ""
"いくつかのユーザー制御パラメーターを使用して、この手法を微調整できます:"

msgid ""
"**Max Steps** determines the length of the reflection. The bigger this "
"number, the more costly it is to compute."
msgstr ""
"**Max Steps** は、反射の長さを決定します。この数値が大きいほど、計算にコスト"
"がかかります。"

msgid ""
"**Fade In** allows adjusting the fade-in curve, which is useful to make the "
"contact area softer."
msgstr ""
"**Fade In** では、接触領域を柔らかくために役立つフェードイン曲線を調整できま"
"す。"

msgid ""
"**Fade Out** allows adjusting the fade-out curve, so the step limit fades "
"out softly."
msgstr ""
"**Fade Out** で、フェードアウト曲線を調整できるため、ステップの限界は柔らかく"
"フェードアウトします。"

msgid ""
"**Depth Tolerance** can be used for screen-space-ray hit tolerance to gaps. "
"The bigger the value, the more gaps will be ignored."
msgstr ""
"**Depth Tolerance** は、ギャップに対するスクリーンスペースレイヒット許容値の"
"調整に使用できます。値が大きいほど、無視されるギャップが多くなります。"

msgid ""
"**Roughness** will apply a screen-space blur to approximate roughness in "
"objects with this material characteristic."
msgstr ""
"**Roughness** は、スクリーンスペースのぼかしを適用して、このマテリアル特性を"
"持つオブジェクトの粗さを近似します。"

#, fuzzy
msgid ""
"Keep in mind that screen-space-reflections only work for reflecting opaque "
"geometry. Transparent materials won't be reflected, as they don't write to "
"the depth buffer. This also applies to shaders that use ``SCREEN_TEXTURE`` "
"or ``DEPTH_TEXTURE``."
msgstr ""
"スクリーンスペース反射は不透明なジオメトリを反射する場合にのみ機能することに"
"注意してください。透明なオブジェクトは反射できません。"

msgid "Screen-Space Ambient Occlusion (SSAO)"
msgstr "スクリーンスペース・アンビエントオクルージョン(Ssao/SSAO)"

msgid ""
"As mentioned in the **Ambient** section, areas where light from light nodes "
"does not reach (either because it's outside the radius or shadowed) are lit "
"with ambient light. Godot can simulate this using GIProbe, ReflectionProbe, "
"the Sky, or a constant ambient color. The problem, however, is that all the "
"methods proposed previously act more on a larger scale (large regions) than "
"at the smaller geometry level."
msgstr ""
"**Ambient** セクションで述べたように、Lightノードからの光が(その範囲外にある"
"か、遮られているといった理由で)到達しない領域は環境光で照らされます。 Godot"
"は、GIProbe、ReflectionProbe、Sky、または一定の環境色を使用してこれをシミュ"
"レートできます。しかしこれらの方法はすべて、小さなジオメトリ・レベルではな"
"く、より大きなスケール (大きな領域)にて効果が表れるという欠点があります。"

msgid ""
"Constant ambient color and Sky are the same everywhere, while GI and "
"Reflection probes have more local detail, but not enough to simulate "
"situations where light is not able to fill inside hollow or concave features."
msgstr ""
"一定の環境色とSkyはどの場所でも同じですが、それに比べてGIおよびReflectionプ"
"ローブはより局所的な詳細度を持つとはいえ、光が中空または凹面の形状を照らすこ"
"とができない状況をシミュレートするには不十分です。"

msgid ""
"This can be simulated with Screen Space Ambient Occlusion. As you can see in "
"the image below, its purpose is to make sure concave areas are darker, "
"simulating a narrower path for the light to enter:"
msgstr ""
"これは、スクリーンスペースアンビエントオクルージョンでシミュレートできます。"
"下の画像でわかるように、その目的は、光が入る狭い経路をシミュレートして、凹面"
"領域がより暗くなるようにすることです:"

msgid ""
"It is a common mistake to enable this effect, turn on a light, and not be "
"able to appreciate it. This is because SSAO only acts on *ambient* light, "
"not direct light."
msgstr ""
"よくある間違いとして、このエフェクトを有効にし、ライトをオンにしても、結果が"
"確認できないというものです。これは、SSAOが直接光ではなく、\\ *環境*\\ 光のみ"
"に作用するためです。"

msgid ""
"This is why, in the image above, the effect is less noticeable under the "
"direct light (on the left). If you want to force SSAO to work with direct "
"light too, use the **Light Affect** parameter (even though this is not "
"correct, some artists like how it looks)."
msgstr ""
"これが、上の画像で、直接光の下(左側)では効果が目立たない理由です。 SSAOを直接"
"光でも機能させる場合は、\\ **Light Affect** パラメーターを使用します(これは正"
"しくありませんが、一部のアーティストはこの見た目が好きです)。"

msgid ""
"SSAO looks best when combined with a real source of indirect light, like "
"GIProbe:"
msgstr ""
"SSAOは、GIProbeのような間接光の実際の光源と組み合わせたときに見栄えがします:"

msgid "Tweaking SSAO is possible with several parameters:"
msgstr "SSAOの調整は、いくつかのパラメーターで可能です:"

msgid ""
"**Radius/Intensity:** To control the radius or intensity of the occlusion, "
"these two parameters are available. Radius is in world (Metric) units."
msgstr ""
"**Radius/Intensity:** オクルージョンの半径または強度を制御するために、これら2"
"つのパラメーターを使用できます。半径はワールド(メートル)単位です。"

msgid ""
"**Radius2/Intensity2:** A Secondary radius/intensity can be used. Combining "
"a large and a small radius AO generally works well."
msgstr ""
"**Radius2/Intensity2:** 第二の半径/強度を使用できます。一般に、半径の大きいAO"
"と小さいAOを組み合わせるとうまくいきます。"

msgid ""
"**Bias:** This can be tweaked to solve self occlusion, though the default "
"generally works well enough."
msgstr ""
"**Bias:** これはセルフオクルージョンを解決するために微調整できますが、通常は"
"デフォルトで十分に機能します。"

msgid ""
"**Light Affect:** SSAO only affects ambient light, but increasing this "
"slider can make it also affect direct light. Some artists prefer this effect."
msgstr ""
"**Light Affect:** SSAOは周囲光のみに影響しますが、このスライダーを大きくする"
"と、直接光にも影響します。この効果を好むアーティストもいます。"

msgid ""
"**Ao Channel Affect:** If a value of zero is used, only the material's AO "
"texture will be used for ambient occlusion; SSAO will not be applied. Values "
"greater than 0 multiply the AO texture by the SSAO effect to varying "
"degrees. This does not affect materials without an AO texture."
msgstr ""
"**Ao Channel Affect:** ゼロの値を使用すると、マテリアルのAOテクスチャのみがア"
"ンビエントオクルージョンに使用されます。 SSAOは適用されません。 0より大きい値"
"は、AOテクスチャにSSAOエフェクトをさまざまな度合いで掛けます。これは、AOテク"
"スチャのないマテリアルには影響しません。"

msgid ""
"**Quality:** Depending on quality, SSAO will take more samples over a sphere "
"for every pixel. High quality only works well on modern GPUs."
msgstr ""
"**Quality:** 品質に応じて、SSAOは、すべてのピクセルについて球体上のサンプルを"
"より多く取得します。High qualityは、最新のGPUでのみ有効です。"

msgid ""
"**Blur:** Type of blur kernel used. The 1x1 kernel is a simple blur that "
"preserves local detail better, but is not as efficient (generally works "
"better with the high quality setting above), while 3x3 will soften the image "
"better (with a bit of dithering-like effect), but does not preserve local "
"detail as well."
msgstr ""
"**Blur:** 使用されるブラーカーネルのタイプ。 1x1カーネルは、局所の詳細度をよ"
"り良く保つ単純なぼかしですが、それほど効果的ではありません。一方、3x3は画像を"
"より柔らかくしますが(ディザリングのような効果が少しあります)、局所の詳細度を"
"保ちません。"

msgid ""
"**Edge Sharpness**: This can be used to preserve the sharpness of edges "
"(avoids areas without AO on creases)."
msgstr ""
"**Edge Sharpness**: エッジのシャープネスを維持するために使用することができま"
"す(折り目にAOのない領域を避けます)。"

msgid "Depth of Field / Far Blur"
msgstr "被写界深度(DOF)/遠方ぼかし(Far Blur)"

msgid ""
"This effect simulates focal distance on high end cameras. It blurs objects "
"behind a given range. It has an initial **Distance** with a **Transition** "
"region (in world units):"
msgstr ""
"このエフェクトは、ハイエンドカメラの焦点距離をシミュレートします。特定の範囲"
"の背後にあるオブジェクトをぼかします。\\ **Transition**(遷移)領域(ワールド単"
"位)を持つ 開始 **Distance**(距離) を持っています:"

msgid ""
"The **Amount** parameter controls the amount of blur. For larger blurs, "
"tweaking the **Quality** may be needed in order to avoid artifacts."
msgstr ""
"**Amount** パラメーターは、ぼかしの量を制御します。大きなぼかしの場合、アー"
"ティファクトを回避するために **Quality** の調整が必要になる場合があります。"

msgid "Depth of Field / Near Blur"
msgstr "被写界深度(DOF)/近方ぼかし(Near Blur)"

msgid ""
"This effect simulates focal distance on high end cameras. It blurs objects "
"close to the camera (acts in the opposite direction as far blur). It has an "
"initial **Distance** with a **Transition** region (in world units):"
msgstr ""
"このエフェクトは、ハイエンドカメラの焦点距離をシミュレートします。カメラに近"
"いオブジェクトをぼかします(遠方ぼかしとは反対方向に作用します)。\\ "
"**Transition**(遷移)領域(ワールド単位)を持つ 開始 **Distance**(距離) を持って"
"います:"

msgid ""
"It is common to use both blurs together to focus the viewer's attention on a "
"given object:"
msgstr ""
"両方のぼかしを一緒に使用して、特定のオブジェクトに視聴者の注意を集中させる使"
"い方が一般的です:"

msgid "Glow"
msgstr "Glow(にじみ/発光)"

msgid ""
"In photography and film, when light amount exceeds the maximum supported by "
"the media (be it analog or digital), it generally bleeds outwards to darker "
"regions of the image. This is simulated in Godot with the **Glow** effect."
msgstr ""
"写真やフィルムでは、光量がメディアでサポートされている最大値(アナログまたはデ"
"ジタル)を超えると、一般に画像の暗い領域に向かって外側ににじみます。これ"
"は、\\ **Glow** エフェクトを使用してGodotでシミュレートされます。"

msgid ""
"By default, even if the effect is enabled, it will be weak or invisible. One "
"of two conditions need to happen for it to actually show:"
msgstr ""
"デフォルトでは、エフェクトが有効になっていても、効果が弱いか見えません。実際"
"に表示するには、次の2つの条件のいずれかが必要です:"

msgid ""
"The light in a pixel surpasses the **HDR Threshold** (where 0 is all light "
"surpasses it, and 1.0 is light over the tonemapper **White** value). "
"Normally, this value is expected to be at 1.0, but it can be lowered to "
"allow more light to bleed. There is also an extra parameter, **HDR Scale**, "
"that allows scaling (making brighter or darker) the light surpassing the "
"threshold."
msgstr ""
"ピクセル内の光が **HDR Threshold** を超えている(0はすべてのライトを超え、1.0"
"はトーンマッパー **White** の値を超えています)。通常、この値は1.0であると予想"
"されますが、より多くの光を放出できるように下げることができます。また、\\ "
"**HDR Scale** という追加のパラメーターがあり、しきい値を超える光のスケーリン"
"グ(明るくまたは暗くする)を可能にします。"

msgid ""
"The Bloom effect has a value set greater than 0. As it increases, it sends "
"the whole screen to the glow processor at higher amounts."
msgstr ""
"Bloomエフェクトの値が0より大きい値に設定されている。値が大きくなると、画面全"
"体がグロープロセッサーに大量に送信されます。"

msgid "Both will cause the light to start bleeding out of the brighter areas."
msgstr "両方とも、明るい部分から光がにじみ出始めます。"

msgid "Once glow is visible, it can be controlled with a few extra parameters:"
msgstr "Glowが表示されたら、いくつかの追加パラメーターで制御できます:"

msgid ""
"**Intensity** is an overall scale for the effect, it can be made stronger or "
"weaker (0.0 removes it)."
msgstr ""
"**Intensity** はエフェクトの全体的な尺度であり、より強くまたはより弱くするこ"
"とができます(0.0に設定すると削除します)。"

msgid ""
"**Strength** is how strong the gaussian filter kernel is processed. Greater "
"values make the filter saturate and expand outwards. In general, changing "
"this is not needed, as the size can be more efficiently adjusted with the "
"**Levels**."
msgstr ""
"**Strength** ガウスフィルターカーネルが処理される強度です。値を大きくすると、"
"フィルターが飽和して外側に拡張します。一般に、\\ **Levels** でサイズをより効"
"率的に調整できるため、これを変更する必要はありません。"

msgid "The **Blend Mode** of the effect can also be changed:"
msgstr "エフェクトの **Blend Mode** も変更できます:"

#, fuzzy
msgid ""
"**Additive** is the strongest one, as it only adds the glow effect over the "
"image with no blending involved. In general, it's too strong to be used, but "
"can look good with low intensity Bloom (produces a dream-like effect)."
msgstr ""
"**Additive** は、ブレンドを行わずに画像にグロー効果を加算するだけなので、最も"
"強力です。一般的に使用するには効果が強すぎますが、低強度のブルームでは見栄え"
"がよくなります(夢のような効果が得られます)。"

#, fuzzy
msgid ""
"**Screen** ensures glow never brightens more than itself and it works great "
"as an all around."
msgstr ""
"**Screen** がデフォルトです。それはGlowがそれ自体よりも明るくならないことを保"
"証し、すべての周囲で素晴らしい働きをします。"

#, fuzzy
msgid ""
"**Softlight** is the default and weakest one, producing only a subtle color "
"disturbance around the objects. This mode works best on dark scenes."
msgstr ""
"**Softlight** は最も弱いもので、オブジェクトの周囲にわずかな色の乱れしか生じ"
"ません。このモードは暗いシーンに最適です。"

#, fuzzy
msgid ""
"**Replace** can be used to blur the whole screen or debug the effect. It "
"only shows the glow effect without the image below."
msgstr ""
"**Replace** は、画面全体をぼかす、または効果をデバッグするために使用できま"
"す。下地の画像なしでグローエフェクトを表示します。"

msgid ""
"To change the glow effect size and shape, Godot provides **Levels**. Smaller "
"levels are strong glows that appear around objects, while large levels are "
"hazy glows covering the whole screen:"
msgstr ""
"グローエフェクトのサイズと形状を変更するために、Godotは **Levels** を提供しま"
"す。小さなレベルはオブジェクトの周りに現れる強い輝きであり、大きいレベルは画"
"面全体を覆うかすんだ輝きです。"

msgid ""
"The real strength of this system, though, is to combine levels to create "
"more interesting glow patterns:"
msgstr ""
"ただし、このシステムの本当の長所は、複数のレベルを組み合わせてより興味深いグ"
"ローパターンを作成することです:"

msgid ""
"Finally, as the highest layers are created by stretching small blurred "
"images, it is possible that some blockiness may be visible. Enabling "
"**Bicubic Upscaling** gets rids of it, at a minimal performance cost. *Note "
"that this is effective only when using the GLES3 backend.*"
msgstr ""
"最後に、小さなぼかした画像を引き伸ばすことによって最上位のレイヤーが作成され"
"るため、何らかのブロックが見える可能性があります。 **Bicubic Upscaling** を有"
"効にすると、最小限のパフォーマンスコストでそれが削除されます。*これはGLES3"
"バックエンドを使っている場合にのみ有効です。*"

msgid "Adjustments"
msgstr "Adjustments(調整)"

msgid ""
"At the end of processing, Godot offers the possibility to do some standard "
"image adjustments."
msgstr ""
"処理の最後に、Godotはいくつかの標準的な画像調整を行う可能性を提供します。"

msgid ""
"The first one is being able to change the typical Brightness, Contrast, and "
"Saturation:"
msgstr ""
"1つ目は、一般的なBrightness(明るさ)、Contrast(コントラスト)、Saturation(彩度)"
"を変更できることです:"

msgid ""
"The second is by supplying a color correction gradient. A regular black to "
"white gradient like the following one will produce no effect:"
msgstr ""
"2つ目は、色補正のグラデーションを指定することです。次のような通常の黒から白へ"
"のグラデーションでは効果がありません:"

msgid ""
"But creating custom ones will allow to map each channel to a different color:"
msgstr ""
"しかし、カスタムのものを作成すると、各チャンネルを異なる色にマップすることが"
"できます:"

msgid "Translation status"
msgstr "翻訳ステータス"
