# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Baked lightmaps"
msgstr "ベイクドライトマップ(焼き込み済ライトマップ)"

msgid "Introduction"
msgstr "はじめに"

#, fuzzy
msgid ""
"Baked lightmaps are an alternative workflow for adding indirect (or fully "
"baked) lighting to a scene. Unlike the :ref:`doc_gi_probes` approach, baked "
"lightmaps work fine on low-end PCs and mobile devices, as they consume "
"almost no resources at run-time. Also unlike GIProbe, baked lightmaps can "
"optionally be used to store direct lighting, which provides even further "
"performance gains."
msgstr ""
"焼き込み済のライトマップは、間接(または焼き込み済)ライティングをシーンに追加"
"するための代替ワークフローです。 :ref:`doc_gi_probes` のアプローチとは異な"
"り、焼き付けられたライトマップは実行時にほとんどリソースを消費しないため、"
"ローエンドのPCやモバイルデバイスで正常に機能します。"

#, fuzzy
msgid ""
"Unlike GIProbes, Baked Lightmaps are completely static. Once baked, they "
"can't be modified at all. They also don't provide the scene with "
"reflections, so using :ref:`doc_reflection_probes` together with it on "
"interiors (or using a Sky on exteriors) is a requirement to get good quality."
msgstr ""
"``GIProbe`` とは異なり、ベイクドライトマップは完全に静的です。焼き込んだ後"
"は、まったく変更できません。また、シーンに反射を提供しません。そのため、イン"
"テリアで :ref:`doc_reflection_probes` を使用する(またはエクステリアでSkyを使"
"用する)ことが、高品質を得るための要件です。"

msgid ""
"As they are baked, they have fewer problems than ``GIProbe`` regarding light "
"bleeding, and indirect light will often look better. The downside is that "
"baking lightmaps takes much longer than baking a GIProbe. While baking a "
"GIProbe can be done in a matter of seconds, baking lightmaps will take "
"several minutes if not more. This can slow down iteration speed "
"significantly, so it is recommended to bake lightmaps only when you actually "
"need to see changes in lighting."
msgstr ""

msgid ""
"Baking lightmaps will also reserve baked materials' UV2 slot, which means "
"you can no longer use it for other purposes in materials (either in the "
"built-in :ref:`doc_spatial_material` or in custom shaders)."
msgstr ""

#, fuzzy
msgid ""
"In the end, deciding which indirect lighting approach is better depends on "
"your use case. In general, GIProbe is easier to set up and works better with "
"dynamic objects. For mobile or low-end compatibility, though, baked "
"lightmaps are your only choice."
msgstr ""
"最終的に、どの間接照明アプローチがより良いかは、ユースケースに依存します。一"
"般に、GIProbeは見栄えが良く、セットアップがはるかに簡単です。ただし、モバイル"
"またはローエンドの互換性を確保するには、ベイクドライトマップが唯一の選択肢で"
"す。"

msgid "Visual comparison"
msgstr "視覚的比較"

#, fuzzy
msgid ""
"Here are some comparisons of how BakedLightmap vs. GIProbe look. Notice that "
"lightmaps are more accurate, but also suffer from the fact that lighting is "
"on an unwrapped texture, so transitions and resolution may not be that good. "
"GIProbe looks less accurate (as it's an approximation), but smoother overall."
msgstr ""
"ベイクドライトマップとGIProbeの見た目の比較を次に示します。ライトマップはより"
"正確ですが、照明がラップされていないテクスチャ上にあるという事実に苦しむこと"
"に注意してください。そのため、トランジションと解像度はそれほど良くないかもし"
"れません。 GIProbeは(近似なので)あまり正確ではありませんが、全体的に滑らかに"
"見えます。"

msgid "Setting up"
msgstr "セットアップ"

msgid ""
"First of all, before the lightmapper can do anything, the objects to be "
"baked need an UV2 layer and a texture size. An UV2 layer is a set of "
"secondary texture coordinates that ensures any face in the object has its "
"own place in the UV map. Faces must not share pixels in the texture."
msgstr ""
"まず、ライトマッパーが何かを行う前に、ベイク処理するオブジェクトにUV2レイヤー"
"とテクスチャサイズが必要です。 UV2レイヤーは、オブジェクト内のすべての面がUV"
"マップ内で独自の場所を持つことを保証する2次テクスチャ座標のセットです。面はテ"
"クスチャ内のピクセルを共有してはいけません。"

msgid ""
"There are a few ways to ensure your object has a unique UV2 layer and "
"texture size:"
msgstr ""
"オブジェクトに一意のUV2レイヤーとテクスチャサイズを持たせるには、いくつかの方"
"法があります:"

msgid "Unwrap on scene import"
msgstr "シーンのインポート時に展開"

msgid ""
"This is probably the best approach overall. The only downside is that, on "
"large models, unwrapping can take a while on import. Nonetheless, Godot will "
"cache the UV2 across reimports, so it will only be regenerated when needed."
msgstr ""
"これはおそらく全体的に最善のアプローチです。唯一の欠点は、大きなモデルでは、"
"インポート時に展開に時間がかかることがあるということです。ファイルシステム"
"ドックでインポートされたシーンを選択し、[インポート]タブに移動します。そこ"
"で、次のオプションを変更できます。"

#, fuzzy
msgid ""
"Select the imported scene in the filesystem dock, then go to the **Import** "
"dock. There, the following option can be modified:"
msgstr ""
"これはおそらく全体的に最善のアプローチです。唯一の欠点は、大きなモデルでは、"
"インポート時に展開に時間がかかることがあるということです。ファイルシステム"
"ドックでインポートされたシーンを選択し、[インポート]タブに移動します。そこ"
"で、次のオプションを変更できます:"

#, fuzzy
msgid ""
"The **Light Baking** mode needs to be set to **Gen Lightmaps**. A texel size "
"in world units must also be provided, as this will determine the final size "
"of the lightmap texture (and, in consequence, the UV padding in the map)."
msgstr ""
"**Light Baking** モードは **\"Gen Lightmaps\"** に設定する必要があります。"
"ワールド単位のテクセルサイズ(Texel Size)も指定する必要があります。これによ"
"り、ライトマップテクスチャの最終サイズ(および、結果として、マップのUVパディン"
"グ)が決定されます。"

msgid ""
"The effect of setting this option is that all meshes within the scene will "
"have their UV2 maps properly generated."
msgstr ""
"このオプションを設定すると、シーン内のすべてのメッシュのUV2マップが適切に生成"
"されます。"

#, fuzzy
msgid ""
"When reusing a mesh within a scene, keep in mind that UVs will be generated "
"for the first instance found. If the mesh is re-used with different scales "
"(and the scales are wildly different, more than half or twice), this will "
"result in inefficient lightmaps. Don't reuse a source mesh at significantly "
"different scales if you are planning to use lightmapping."
msgstr ""
"注意点: シーン内でメッシュを再利用する場合、最初に見つかったインスタンスに対"
"してUVが生成されることに注意してください。メッシュがさまざまな縮尺で再利用さ"
"れる場合(および縮尺が大きく異なる場合、半分以下または二倍以上)、これは非効率"
"的なライトマップになります。ライトマッピングの使用を計画している場合は、異な"
"るスケールでソースメッシュを再利用しないでください。"

msgid ""
"Also, the ``*.unwrap_cache`` files should *not* be ignored in version "
"control as these files guarantee that UV2 reimports are consistent across "
"platforms and engine versions."
msgstr ""

msgid "Unwrap from within Godot"
msgstr "Godot内から展開する"

msgid ""
"Godot has an option to unwrap meshes and visualize the UV channels. It can "
"be found in the Mesh menu:"
msgstr ""
"Godotには、メッシュを展開してUVチャネルを視覚化するオプションがあります。 "
"Meshメニューにあります:"

msgid ""
"This will generate a second set of UV2 coordinates which can be used for "
"baking, and it will also set the texture size automatically."
msgstr ""
"これにより、焼き込みに使用できる2番目のUV2座標セットが生成され、テクスチャサ"
"イズも自動的に設定されます。"

msgid "Unwrap from your 3D DCC"
msgstr "3D DCCから展開(アンラップ)"

#, fuzzy
msgid ""
"The last option is to do it from your favorite 3D app. This approach is "
"generally not recommended, but it's explained first so that you know it "
"exists. The main advantage is that, on complex objects that you may want to "
"re-import a lot, the texture generation process can be quite costly within "
"Godot, so having it unwrapped before import can be faster."
msgstr ""
"1つの選択肢は、お気に入りの3Dアプリから実行することです。通常、このアプローチ"
"は推奨されませんが、その手段が存在することを知ってもらうために最初に説明しま"
"す。主な利点は、多くの再インポートが必要な複雑なオブジェクトでは、テクスチャ"
"生成プロセスがGodot内で非常にコストがかかる可能性があるため、インポート前に展"
"開(アンラップ)すると処理が速くなるということです。"

msgid "Simply do an unwrap on the second UV2 layer."
msgstr "2番目のUV2レイヤーで展開するだけです。"

#, fuzzy
msgid ""
"Then import the 3D scene normally. Remember you will need to set the texture "
"size on the mesh after import."
msgstr ""
"そして、普通にインポートします。インポート後にメッシュのテクスチャサイズを設"
"定する必要があることに注意してください。"

msgid ""
"If you use external meshes on import, the size will be kept. Be wary that "
"most unwrappers in 3D DCCs are not quality oriented, as they are meant to "
"work quickly. You will mostly need to use seams or other techniques to "
"create better unwrapping."
msgstr ""
"インポート時に外部メッシュを使用する場合、サイズは保持されます。 3D DCCのほと"
"んどのアンラッパーは、迅速に動作することを目的としているため、品質重視ではあ"
"りません。より良い展開図を作成するには、ほとんどの場合、シームや他の技術を使"
"用する必要があります。"

msgid "Checking UV2"
msgstr "UV2を確認する"

msgid ""
"In the mesh menu mentioned before, the UV2 texture coordinates can be "
"visualized. Make sure, if something is failing, to check that the meshes "
"have these UV2 coordinates:"
msgstr ""
"前に説明したメッシュメニューで、UV2テクスチャ座標を視覚化できます。何かが失敗"
"している場合は、メッシュに次の UV2座標があることを確認してください:"

msgid "Setting up the scene"
msgstr "シーンの設定"

#, fuzzy
msgid ""
"Before anything is done, a **BakedLightmap** node needs to be added to a "
"scene. This will enable light baking on all nodes (and sub-nodes) in that "
"scene, even on instanced scenes."
msgstr ""
"何かを行う前に、\\ **BakedLightmap** ノードをシーンに追加する必要があります。"
"これにより、インスタンス化されたシーンであっても、そのシーンのすべてのノード"
"(およびサブノード)でライトのベイク処理が有効になります。"

msgid ""
"A sub-scene can be instanced several times, as this is supported by the "
"baker, and each will be assigned a lightmap of its own (just make sure to "
"respect the rule about scaling mentioned before):"
msgstr ""
"これはベイカーによってサポートされているため、サブシーンは複数回インスタンス"
"化することができ、それぞれに独自のライトマップが割り当てられます(前述のスケー"
"リングに関するルールを必ず守ってください):"

msgid "Configure bounds"
msgstr "範囲設定"

msgid ""
"Lightmap needs an approximate volume of the area affected because it uses it "
"to transfer light to dynamic objects inside it (more on that later). Just "
"cover the scene with the volume as you do with ``GIProbe``:"
msgstr ""
"ライトマップは、それを使用して内部の動的オブジェクトに光を伝達するため、影響"
"を受けるエリアと同程度のボリューム(容積)が必要です。(詳細は後述)。\\ "
"``GIProbe`` で行うように、ボリュームでシーンをカバーするだけです:"

msgid "Setting up meshes"
msgstr "メッシュの設定"

#, fuzzy
msgid ""
"For a **MeshInstance** node to take part in the baking process, it needs to "
"have the **Use in Baked Light** property enabled."
msgstr ""
"**MeshInstance** ノードがベイク処理に参加するには、\"Use in Baked Light\"プロ"
"パティを有効にする必要があります。"

msgid ""
"When auto-generating lightmaps on scene import, this is enabled "
"automatically."
msgstr ""
"シーンのインポート時にライトマップを自動生成する場合、これは自動的に有効にな"
"ります。"

msgid "Setting up lights"
msgstr "ライトの設定"

msgid ""
"Lights are baked with indirect light by default. This means that "
"shadowmapping and lighting are still dynamic and affect moving objects, but "
"light bounces from that light will be baked."
msgstr ""
"デフォルトでは、ライトは間接光でベイク処理されます。これは、シャドウマッピン"
"グと照明は依然として動的であり、移動するオブジェクトに影響を与えますが、その"
"ライトからの光の跳ね返りはベイク処理されることを意味します。"

msgid ""
"Lights can be disabled (no bake) or be fully baked (direct and indirect). "
"This can be controlled from the **Bake Mode** menu in lights:"
msgstr ""
"ライトは無効(ベイクなし)または完全にベイク処理(直接および間接)できます。これ"
"は、ライトの **Bake Mode** メニューから制御できます:"

msgid "The modes are:"
msgstr "モードは次のとおりです:"

msgid "Disabled"
msgstr "Disabled"

#, fuzzy
msgid ""
"The light is ignored when baking lightmaps. Keep in mind hiding a light will "
"have no effect for baking, so this must be used instead of hiding the Light "
"node."
msgstr ""
"**Disabled(無効):** ベイク処理ではライトは無視されます。ライトを非表示にして"
"もベイク処理は無効化されないので、代わりにこれを使用する必要があります。"

msgid ""
"This is the mode to use for dynamic lighting effects such as explosions and "
"weapon effects."
msgstr ""

#, fuzzy
msgid "Indirect"
msgstr "\\ rect2"

msgid ""
"This is the default mode, and is a compromise between performance and real-"
"time friendliness. Only indirect lighting will be baked. Direct light and "
"shadows are still real-time, as they would be without BakedLightmap."
msgstr ""

msgid ""
"This mode allows performing *subtle* changes to a light's color, energy and "
"position while still looking fairly correct. For example, you can use this "
"to create flickering static torches that have their indirect light baked."
msgstr ""

msgid "All"
msgstr "すべて"

msgid ""
"Both indirect and direct lighting will be baked. Since static surfaces can "
"skip lighting and shadow computations entirely, this mode provides the best "
"performance along with smooth shadows that never fade based on distance. The "
"real-time light will not affect baked surfaces anymore, but it will still "
"affect dynamic objects. When using the **All** bake mode on a light, dynamic "
"objects will not cast real-time shadows onto baked surfaces, so you need to "
"use a different approach such as blob shadows instead. Blob shadows can be "
"implemented with a Sprite3D + RayCast setup, or a negative SpotLight "
"pointing down with its bake mode set to **Disabled**."
msgstr ""

msgid ""
"The light will not be adjustable at all during gameplay. Moving the light "
"and changing its color or energy will not have any effect on static surfaces."
msgstr ""

msgid ""
"Since bake modes can be adjusted on a per-light basis, it is possible to "
"create hybrid baked light setups. One popular option is to use a real-time "
"DirectionalLight with its bake mode set to **Indirect**, and use the **All** "
"bake mode for OmniLights and SpotLights. This provides good performance "
"while still allowing dynamic objects to cast real-time shadows in outdoor "
"areas."
msgstr ""

msgid ""
"After selecting the **All** bake mode on a light, you can optionally specify "
"a **Size** greater than 0 for the light in the inspector. This size is used "
"to provide softer shadows depending on the distance between the shadow "
"caster and the object receiving the shadow. This mimics real life shadow "
"appearance:"
msgstr ""

msgid ""
"The light's **Size** property is ignored for real-time shadows; it will only "
"affect baked shadows. When the **Size** property is changed, lightmaps must "
"be baked again to make changes visible."
msgstr ""

msgid "Baking"
msgstr "ベイク"

#, fuzzy
msgid ""
"To begin the bake process, just push the **Bake Lightmaps** button on top "
"when selecting the BakedLightmap node:"
msgstr ""
"ベイク処理を開始するには、\\ **BakedLightmap`` ノードの選択中に一番上の大き"
"な **ライトマップを焼き込む** ボタンを押すだけです:"

msgid ""
"This can take from seconds to minutes (or hours) depending on scene size, "
"bake method and quality selected."
msgstr ""
"これには、選択したシーンのサイズ、焼き込み方法、品質に応じて、数秒から数分(ま"
"たは数時間)かかります。"

msgid "Balancing bake times with quality"
msgstr ""

msgid ""
"Since high-quality bakes can take very long (up to several hours for large "
"complex scenes), it is recommended to use lower quality settings at first. "
"Then, once you are confident with your scene's lighting setup, raise the "
"quality settings and perform a \"final\" bake before exporting your project."
msgstr ""

msgid ""
"By default, the lightmap baker will use all the system's logical CPU cores "
"to speed up baking. This can reduce system responsiveness. To preserve "
"system responsiveness while lightmaps are baking, you can reduce the number "
"of CPU threads used to bake lightmaps. Keeping 1 or 2 CPU threads free will "
"help improve system responsiveness, which is useful when multi-tasking while "
"lightmaps are baking at the cost of slowing down lightmap baking slightly."
msgstr ""

msgid ""
"To do so, open **Editor > Editor Settings** and adjust **Editors > 3d > "
"Lightmap Baking Number Of Cpu Threads**. The default value (``0``) uses all "
"of the system's logical CPU cores. Positive values will specify a number of "
"threads to use, while negative values will subtract from the total number of "
"logical CPU cores in the system. For example, on a system with 8 logical CPU "
"cores, adjusting the setting to ``-1`` will use 7 CPU threads for lightmap "
"baking."
msgstr ""

msgid "Configuring bake"
msgstr "焼き込みの設定"

msgid "Several more options are present for baking:"
msgstr "ベイク処理にはさらにいくつかのオプションがあります:"

msgid ""
"**Bake Extents**: The size of the area affected. This can be edited in the "
"3D editor viewport using the handles. Any object that can have lightmaps "
"baked and is *touching* the bake extents will have lightmaps baked for it, "
"but dynamic object capture will only work within the extents."
msgstr ""

#, fuzzy
msgid "Tweaks"
msgstr "微調整"

msgid ""
"**Quality:** Four bake quality modes are provided: Low, Medium, High, and "
"Ultra. Higher quality takes more time, but result in a better-looking "
"lightmap with less noise. The difference is especially noticeable with "
"emissive materials or areas that get little to no direct lighting."
msgstr ""

msgid ""
"**Bounces:** The number of bounces to use for indirect lighting. The default "
"value (3) is a good compromise between bake times and quality. Higher values "
"will make light bounce around more times before it stops, which makes "
"indirect lighting look smoother (but also brighter). During the initial "
"lighting iteration work, it is recommended to decrease the number of bounces "
"to 1 to speed up baking. Remember that your scene will be darker when "
"decreasing the number of bounces."
msgstr ""

msgid ""
"**Use Denoiser:** If enabled, uses OpenImageDenoise to make the lightmap "
"significantly less noisy. This increases bake times and can occasionally "
"introduce artifacts, but the result is often worth it."
msgstr ""

msgid ""
"**Use Hdr:** If disabled, lightmaps are smaller on disk, but they won't be "
"able to capture any light over white (1.0). This will result in visible "
"clipping if you have bright lights in your scene. When HDR is disabled, "
"banding may also be visible in the lightmap."
msgstr ""

msgid ""
"**Use Color:** If disabled, lightmaps are smaller on disk, but the lightmap "
"won't be able to store colored lighting. When baking indirect light only, "
"the difference may be barely visible since indirect light is generally not "
"highly saturated. However, when baking both direct and indirect lighting "
"using the **All** bake mode on a light, this will turn colored lighting into "
"grayscale lighting. This can be disabled together with HDR to get the "
"smallest possible lightmap file at a given resolution."
msgstr ""

msgid ""
"**Bias:** The offset value to use for shadows in 3D units. You generally "
"don't need to change this value, except if you run into issues with light "
"bleeding or dark spots in your lightmap after baking. This setting does not "
"affect real-time shadows casted on baked surfaces."
msgstr ""

msgid ""
"**Default Texels Per Unit:** For meshes that do not specify their own "
"lightmap texel density, this will be used as the value. Higher values result "
"in *lower-resolution* lightmaps, which result in faster bake times and lower "
"file sizes at the cost of blurrier indirect lighting and shadows."
msgstr ""

msgid "Atlas"
msgstr "アトラス"

msgid ""
"**Generate:** If enabled, a texture atlas will be generated for the "
"lightmap. This results in more efficient rendering, but is only compatible "
"with the GLES3 rendering backend. Disable this setting if your project is "
"allowed to fall back to GLES2. (This is not the case by default and must be "
"enabled in the Project Settings.) *This setting is ignored when the project "
"is configured to use GLES2 by default.*"
msgstr ""

msgid ""
"**Max Size:** The maximum size of the atlas in pixels. Higher values result "
"in a more efficient atlas, but are less compatible with old/low-end "
"hardware. If in doubt, leave this setting on its default value (4096)."
msgstr ""

msgid "Capture"
msgstr "キャプチャ"

msgid ""
"**Enabled:** This enables probe capture so that dynamic objects can "
"*receive* indirect lighting. Regardless of this setting's value, dynamic "
"objects will not be able to *contribute* indirect lighting to the scene. "
"This is a limitation of lightmaps."
msgstr ""

msgid ""
"**Cell Size:** The distance between lightmap probes in 3D units. Higher "
"values result in more sparse probe placement, which decreases bake times and "
"file size at the cost of lower lighting accuracy for dynamic objects."
msgstr ""

msgid ""
"**Quality:** The lightmap probe generation quality. Higher values result in "
"more accurate lighting, but take longer to bake. This setting does not "
"affect the *density* of the lightmap probes, only their quality."
msgstr ""

msgid ""
"**Propagation:** Similar to :ref:`GIProbe <doc_gi_probes>`'s Propagation "
"property. Higher values result in brighter and more diffuse indirect "
"lighting for dynamic objects. Adjust this value depending on your scene to "
"make dynamic objects better fit with static baked lighting."
msgstr ""

msgid "Data"
msgstr "データ"

#, fuzzy
msgid ""
"**Light Data**: Contains the light baked data after baking. Textures are "
"saved to disk, but this also contains the capture data for dynamic objects, "
"which can be heavy. If you are using a scene in ``.tscn`` format, you should "
"save this resource to an external binary ``.lmbake`` file to avoid bloating "
"the ``.tscn`` scene with binary data encoded in Base64."
msgstr ""
"**Light Data**: ベイク処理後のライトベイク処理されたデータが含まれます。テク"
"スチャはディスクに保存されますが、これには動的オブジェクトのキャプチャデータ"
"も含まれますが、これは少し重い場合があります。.scn の代わりに .tscn 形式を使"
"用している場合は、ディスクに保存できます。"

msgid ""
"The Light Data resource can be edited to adjust two additional properties:"
msgstr ""

msgid ""
"**Energy:** Adjusts the lightmap's brightness. Higher values result in "
"brighter lightmaps. This can be adjusted at run-time for short-lived dynamic "
"effects such as thunderstorms. However, keep in mind that it will affect "
"*all* baked lights."
msgstr ""

msgid ""
"**Interior:** If enabled, dynamic objects will not make use of environment "
"lighting and will use light probes for ambient lighting exclusively. If "
"disabled, both environment lighting and light probes are used to light up "
"dynamic objects."
msgstr ""

msgid ""
"The generated EXR file can be viewed and even edited using an image editor "
"to perform post-processing if needed. However, keep in mind that changes to "
"the EXR file will be lost when baking lightmaps again."
msgstr ""

msgid "Dynamic objects"
msgstr "動的オブジェクト"

#, fuzzy
msgid ""
"In other engines or lightmapper implementations, you are generally required "
"to manually place small objects called \"lightprobes\" all around the level "
"to generate *capture* data. This is then used to transfer the light to "
"dynamic objects that move around the scene."
msgstr ""
"他のエンジンまたはライトマッパーの実装では、「ライトプローブ」と呼ばれる小さ"
"なオブジェクトをレベル全体に手動で配置して、\\ *キャプチャ* データを生成する"
"必要があります。これは、光をシーン内を移動する動的オブジェクトに転送するため"
"に使用されます。"

msgid ""
"However, this implementation of lightmapping uses a different method. The "
"process is automatic, so you don't have to do anything. Just move your "
"objects around, and they will be lit accordingly. Of course, you have to "
"make sure you set up your scene bounds accordingly or it won't work."
msgstr ""
"ただし、このライトマッピングの実装では別の方法が使用されます。プロセスは自動"
"であるため、何もする必要はありません。オブジェクトを動かすだけで、それに応じ"
"て点灯します。もちろん、それに応じてシーンの境界を設定する必要があります。そ"
"うしないと機能しません。"

msgid "Translation status"
msgstr "翻訳ステータス"
