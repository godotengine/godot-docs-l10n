# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Prototyping levels with CSG"
msgstr "レベルのプロトタイプ作成"

msgid ""
"CSG stands for **Constructive Solid Geometry**, and is a tool to combine "
"basic shapes or custom meshes to create more complex shapes. In 3D modelling "
"software, CSG is mostly known as \"Boolean Operators\"."
msgstr ""
"CSGは **Constructive Solid Geometry** (空間領域構成法) の略で、基本的な形状あ"
"るいはカスタムのメッシュを組み合わせることで、より複雑な形状を作成するツール"
"です。3Dモデリングのソフトウェアでは、CSGは『ブーリアン演算』という名でも知ら"
"れています。"

msgid ""
"Level prototyping is one of the main uses of CSG in Godot. This technique "
"allows users to create simple versions of most common shapes by combining "
"primitives. Interior environments can be created by using inverted "
"primitives."
msgstr ""
"レベルのプロトタイプ作成は、GodotでCSGを使う主な理由の一つです。このテクニッ"
"クにより、ユーザーはプリミティブを組み合わせることで、よく使う形状の簡易版を"
"作れます。インテリア環境も反転したプリミティブで作成できます。"

msgid ""
"The CSG nodes in Godot are mainly intended for prototyping. There is no "
"built-in support for UV mapping or editing 3D polygons (though extruded 2D "
"polygons can be used with the CSGPolygon node)."
msgstr ""

msgid ""
"If you're looking for an easy to use level design tool for a project, you "
"may want to use `Qodot <https://github.com/Shfty/qodot-plugin>`__ instead. "
"It lets you design levels using `TrenchBroom <https://kristianduske.com/"
"trenchbroom/>`__ and import them in Godot."
msgstr ""

msgid "Introduction to CSG nodes"
msgstr "CSGノードの入門"

msgid ""
"Like other features of Godot, CSG is supported in the form of nodes. These "
"are the CSG nodes:"
msgstr ""
"Godotの他の機能と同様に、CSGもノードとしてサポートされています。これらがCSG"
"ノードです:"

msgid ":ref:`CSGBox <class_CSGBox>`"
msgstr ":ref:`CSGBox <class_CSGBox>`"

msgid ":ref:`CSGCylinder <class_CSGCylinder>` (also supports cone)"
msgstr ":ref:`CSGCylinder <class_CSGCylinder>` (コーン形状も可)"

msgid ":ref:`CSGSphere <class_CSGSphere>`"
msgstr ":ref:`CSGSphere <class_CSGSphere>`"

msgid ":ref:`CSGTorus <class_CSGTorus>`"
msgstr ":ref:`CSGTorus <class_CSGTorus>`"

msgid ":ref:`CSGPolygon <class_CSGPolygon>`"
msgstr ":ref:`CSGPolygon <class_CSGPolygon>`"

msgid ":ref:`CSGMesh <class_CSGMesh>`"
msgstr ":ref:`CSGMesh <class_CSGMesh>`"

msgid ":ref:`CSGCombiner <class_CSGcombiner>`"
msgstr ":ref:`CSGCombiner <class_CSGcombiner>`"

msgid "CSG tools features"
msgstr "CSGツール機能"

msgid "Every CSG node supports 3 kinds of boolean operations:"
msgstr "すべてのCSGノードは3種類のブーリアン演算に対応しています:"

msgid ""
"**Union:** Geometry of both primitives is merged, intersecting geometry is "
"removed."
msgstr ""
"**Union (和集合):** プリミティブのジオメトリを結合させて、共通部分のジオメト"
"リは除去されます。"

msgid ""
"**Intersection:** Only intersecting geometry remains, the rest is removed."
msgstr ""
"**Intersection (共通部分):** ジオメトリの共通部分のみを残し、他は除去されま"
"す。"

msgid ""
"**Subtraction:** The second shape is subtracted from the first, leaving a "
"dent with its shape."
msgstr ""
"**Subtraction (差集合):** 第一の形状を、第二の形状で差し引いて、形状に穴を開"
"けます。"

msgid "CSGPolygon"
msgstr "\\ CSGPolygon"

#, fuzzy
msgid ""
"The :ref:`CSGPolygon <class_CSGPolygon>` node extrude along a Polygon drawn "
"in 2D (in X, Y coordinates) in the following ways:"
msgstr ""
":ref:`CSGPolygon <class_CSGPolygon>`\\ ノードは、2Dに描いたポリゴン (X, Y 座"
"標にて) を、以下の方法により押し出します:"

msgid "**Depth:** Extruded back a given amount."
msgstr "**Depth (深さ):** 指定された量で後ろに押し出します。"

msgid "**Spin:** Extruded while spinning around its origin."
msgstr "**Spin (回転):** 原点を中心に、回転しながら押し出します。"

msgid ""
"**Path:** Extruded along a Path node. This operation is commonly called "
"lofting."
msgstr ""
"**Path (パス):** Pathノードに沿って押し出します。ロフティングともよく呼ばれる"
"操作です。"

msgid ""
"The **Path** mode must be provided with a :ref:`Path <class_Path>` node to "
"work. In the Path node, draw the path and the polygon in CSGPolygon will "
"extrude along the given path."
msgstr ""
"**Path** モードを動かすには、まず\\ :ref:`Path <class_Path>`\\ ノードを用意し"
"なければなりません。このPathノードにてパスを描くと、CSGPolygonのポリゴンはそ"
"のパスに沿って押し出されます。"

msgid "Custom meshes"
msgstr "カスタム メッシュ"

msgid ""
"Any mesh can be used for :ref:`CSGMesh <class_CSGMesh>`; the mesh can be "
"modelled in other software and imported into Godot. Multiple materials are "
"supported. There are some restrictions for geometry:"
msgstr ""
"\\ :ref:`CSGMesh <class_CSGMesh>`\\ なら、どんなメッシュでも使用できます。他"
"のソフトウェアでモデリングしてからGodotにインポートしたメッシュでも可能です。"
"複数のマテリアルにも対応しています。ジオメトリにはいくつかの制限があります:"

msgid "it must be closed,"
msgstr "閉じていること、"

msgid "it must not self-intersect,"
msgstr "自己交差していないこと、"

msgid "it must not contain internal faces,"
msgstr "内部に面がないこと、"

msgid "every edge must connect to only two other faces."
msgstr "すべてのエッジは２つの面のみに接していること。"

msgid "CSGCombiner"
msgstr "\\ CSGCombiner"

msgid ""
"The :ref:`CSGCombiner <class_CSGCombiner>` node is an empty shape used for "
"organization. It will only combine children nodes."
msgstr ""
"\\ :ref:`CSGCombiner <class_CSGCombiner>` ノードは、整理のための空のシェイプ"
"です。子ノードを一つにまとめます。"

msgid "Processing order"
msgstr "処理の順番"

msgid ""
"Every CSG node will first process its children nodes and their operations: "
"union, intersection or subtraction, in tree order, and apply them to itself "
"one after the other."
msgstr ""
"すべてのCSGノードは、まずその子ノードから処理を始め、その和、共通部分、差の演"
"算をツリー順に行ってから、自身に適用してそれを繰り返します。"

msgid ""
"In the interest of performance, make sure CSG geometry remains relatively "
"simple, as complex meshes can take a while to process. If adding objects "
"together (such as table and room objects), create them as separate CSG "
"trees. Forcing too many objects in a single tree will eventually start "
"affecting performance. Only use binary operations where you actually need "
"them."
msgstr ""
"複雑なメッシュは処理に時間がかかるので、性能を上げるためには、CSGジオメトリを"
"比較的シンプルなままに保ってください。(テーブルや部屋の物体など) 複数の物体を"
"一緒にする場合は、それぞれ別のCSGツリーに分けましょう。ひとつのツリーに多くの"
"オブジェクトを入れすぎると、やがて性能に影響が出始めます。バイナリ演算は本当"
"に必要な時にだけ使用するようにしてください。"

msgid "Prototyping a level"
msgstr "レベルのプロトタイプ作成"

msgid "We will prototype a room to practice the use of CSG tools."
msgstr "CSGツールの練習に、部屋のプロトタイプを作ってみましょう。"

msgid ""
"Working in **Orthogonal** projection gives a better view when combining the "
"CSG shapes."
msgstr ""
"CSGシェイプを組み合わせるときは、\\ **平行投影**\\ のほうが見えやすくなりま"
"す。"

msgid "Our level will contain these objects:"
msgstr "これから作るレベルには次のような物体があります:"

msgid "a room,"
msgstr "部屋、"

msgid "a bed,"
msgstr "ベッド、"

msgid "a lamp,"
msgstr "ランプ、"

msgid "a desk,"
msgstr "机、"

msgid "a bookshelf."
msgstr "本棚。"

msgid "Create a scene with a Spatial node as root node."
msgstr "Spatial ノードをルートにしてシーンを作成します。"

msgid ""
"The default lighting of the environment doesn't provide clear shading at "
"some angles. Change the display mode using **Display Overdraw** in the 3D "
"viewport menu, or add a DirectionalLight node to help you see clearly."
msgstr ""
"環境のデフォルトの照明設定では、角度によってはシェーディングがきれいに表示さ"
"れません。3Dビューポート メニューにて表示モードを\\ **オーバードロー表示**\\ "
"にするか、あるいは DirectionalLight をひとつ追加すれば、はっきりと見えるよう"
"になります。"

msgid ""
"Create a CSGBox and name it ``room``, enable **Invert Faces** and change the "
"dimensions of your room."
msgstr ""
"CSGBoxをひとつ作成し、\\ ``room``\\ という名前を付けて、\\ **Invert "
"Faces**\\ を有効にしてから、部屋のサイズを変更してください。"

msgid "Next, create a CSGCombiner and name it ``desk``."
msgstr "次に、CSGCombiner を作成して\\ ``desk``\\ という名前を付けます。"

msgid "A desk has one surface and 4 legs:"
msgstr "デスクにはひとつの平面と４本の脚があります:"

msgid ""
"Create 1 CSGBox children node in **Union** mode for the surface and adjust "
"the dimensions."
msgstr ""
"平面として、子ノードのCSGBoxをひとつ作成し、\\ **Union (和集合)**\\ モードに"
"してから大きさを変更します。"

msgid ""
"Create 4 CSGBox children nodes in **Union** mode for the legs and adjust the "
"dimensions."
msgstr ""
"脚には、子ノードのCSGBoxを４個作成し、\\ **Union**\\ モードにしてから大きさを"
"調節します。"

msgid "Adjust their placement to resemble a desk."
msgstr "それらの位置を調節してデスクの形にしましょう。"

msgid ""
"CSG nodes inside a CSGCombiner will only process their operation within the "
"combiner. Therefore, CSGCombiners are used to organize CSG nodes."
msgstr ""
"CSGCombiner の中にあるCSGノードは、その combiner(連合) の中だけで演算処理を行"
"います。そのため、CSGノードの整理には CSGCombiner が使われます。"

msgid "Create a CSGCombiner and name it ``bed``."
msgstr "CSGCombiner を作り、\\ ``bed``\\ と名付けます。"

msgid ""
"Our bed consists of 3 parts: the bed, the mattress and a pillow. Create a "
"CSGBox and adjust its dimension for the bed. Create another CSGBox and "
"adjust its dimension for the mattress."
msgstr ""
"ベッドは３つのパーツからなります: ベッド本体、マットレス、そして枕です。"
"CSGBox を作成して、サイズ調整してベッド本体にします。さらに CSGBox をもうひと"
"つ作って、大きさ変更をしてマットレスにします。"

msgid ""
"We will create another CSGCombiner named ``pillow`` as the child of  "
"``bed``. The scene tree should look like this:"
msgstr ""
"\\ ``bed``\\ の子として、\\ ``pillow``\\ という名前の CSGCombiner を作りま"
"す。シーンツリーはこのようになるでしょう:"

msgid ""
"We will combine 3 CSGSphere nodes in **Union** mode to form a pillow. Scale "
"the Y axis of the spheres and enable **Smooth Faces**."
msgstr ""
"それから３つの CSGSphere ノードを **Union (和)** モードにして組み合わせ、枕に"
"します。それぞれの球体をY軸でサイズ変更し、\\ **Smooth Faces** を有効にしま"
"す。"

msgid ""
"Select the ``pillow`` node and switch the mode to **Subtraction**; the "
"combined spheres will cut a hole into the mattress."
msgstr ""
"\\ ``pillow``\\ ノードを選択して、モードを\\ **Subtraction (差)**\\ に切り替"
"えます。すると組み合わせた球体により、マットレスに穴が開きます。"

msgid ""
"Try to re-parent the ``pillow`` node to the root ``Spatial`` node; the hole "
"will disappear."
msgstr ""
"\\ ``pillow``\\ ノードの親を、ルート\\ ``Spatial``\\ に変更してみましょう。そ"
"うすれば穴は消えます。"

msgid ""
"This is to illustrate the effect of CSG processing order. Since the root "
"node is not a CSG node, the CSGCombiner nodes are the end of the operations; "
"this shows the use of CSGCombiner to organize the CSG scene."
msgstr ""
"これはCSGの処理順による影響を示すためのものです。ここでのルートノードは CSG"
"ノードではないため、CSGCombiner ノードの処理は最後になります。これが "
"CSGCombiner を使ったCSGシーン整理の一例です。"

msgid ""
"Undo the re-parent after observing the effect. The bed you've built should "
"look like this:"
msgstr ""
"結果を確かめてから、親の変更とモード変更を取り消すと、ベッドはこのようになっ"
"ているはずです:"

msgid "Create a CSGCombiner and name it ``lamp``."
msgstr "CSGCombiner を作成して\\ ``lamp``\\ と名付けます。"

msgid ""
"A lamp consists of 3 parts: the stand, the pole and the lampshade. Create a "
"CSGCylinder, enable the **Cone** option and make it the stand. Create "
"another CSGCylinder and adjust the dimensions to use it as a pole."
msgstr ""
"ランプはスタンド、支柱、そしてランプシェードの、３つのパーツからなります。"
"CSGCylinder を作成し、\\ **Cone** オプションを有効にしてスタンドにします。そ"
"れから、もうひとつ CSGCylinder を作って、大きさを調整して支柱にします。"

msgid ""
"We will use a CSGPolygon for the lampshade. Use the **Spin** mode for the "
"CSGPolygon and draw a `trapezoid <https://en.wikipedia.org/wiki/Trapezoid>`_ "
"while in **Front View** (numeric keypad 1); this shape will extrude around "
"the origin and form the lampshade."
msgstr ""
"ランプシェードには CSGPolygon を使います。CSGPolygon を **Spin** モードにし、"
"ビューを前面図 (テンキーの1) にしてから\\ `台形 <https://ja.wikipedia.org/"
"wiki/%E5%8F%B0%E5%BD%A2>`_\\ を描きましょう。この形状は原点を中心に、回転しな"
"がら押し出されてランプシェードを形作ります。"

msgid "Adjust the placement of the 3 parts to make it look like a lamp."
msgstr "３つのパーツの位置を調整して、ランプに見えるようにします。"

msgid "Create a CSGCombiner and name it ``bookshelf``."
msgstr "CSGCombiner を作り、\\ ``bookshelf``\\ と名付けます。"

msgid ""
"We will use 3 CSGBox nodes for the bookshelf. Create a CSGBox and adjust its "
"dimensions; this will be the size of the bookshelf."
msgstr ""
"本棚には３つの CSGBox を使います。CSGBox をひとつ作って、サイズを調節してくだ"
"さい。これが本棚のサイズになります。"

msgid ""
"Duplicate the CSGBox and shorten the dimensions of each axis and change the "
"mode to **Subtraction**."
msgstr ""
"この CSGBox を複製して、すべての軸で縮小させてから、モードを **Subtraction "
"(差)** に変更します。"

msgid ""
"You've almost built a shelf. Create one more CSGBox for dividing the shelf "
"into two levels."
msgstr ""
"本棚はもうすぐ完成です。CSGBox をもうひとつ作成して、棚を二段に分けます。"

msgid ""
"Position your furniture in your room as you like and your scene should look "
"this:"
msgstr "部屋の中に家具を自由に配置すれば、シーンはこういう風になるはずです。"

msgid ""
"You've successfully prototyped a room level with the CSG tools in Godot. CSG "
"tools can be used for designing all kinds of levels, such as a maze or a "
"city; explore its limitations when designing your game."
msgstr ""
"これで部屋のレベルのプロトタイプを、Godot の CSG ツールを使って作ることができ"
"ました。迷路や街など、あらゆる種類のレベルをデザインするのに CSG ツールは使え"
"ます。ゲームをデザインするときは、その限界まで探ってみてください。"

#, fuzzy
msgid "Using prototype textures"
msgstr "ビューポートをテクスチャとして使用する"

msgid ""
"Godot's :ref:`doc_spatial_material` supports *triplanar mapping*, which can "
"be used to automatically apply a texture to arbitrary objects without "
"distortion. This is handy when using CSG as Godot doesn't support editing UV "
"maps on CSG nodes yet. Triplanar mapping is relatively slow, which usually "
"restricts its usage to organic surfaces like terrain. Still, when "
"prototyping, it can be used to quickly apply textures to CSG-based levels."
msgstr ""
"Godot の :ref:`doc_spatial_material` は *triplanar mapping* をサポートしてい"
"ます。Godot はまだ CSG ノード上の UV マップの編集をサポートしていないので、こ"
"れは CSG を使うときに便利です。トリプラナーマッピングは比較的低速なので、地形"
"のような有機的なサーフェスには通常は不向きです。しかし、プロトタイピングの際"
"には、CSGベースのレベルにテクスチャを素早く適用するために使用できます。"

msgid ""
"If you need some textures for prototyping, Kenney made a `set of CC0-"
"licensed prototype textures <https://kenney.nl/assets/prototype-textures>`__."
msgstr ""

#, fuzzy
msgid "There are two ways to apply a material to a CSG node:"
msgstr "証明書を取得するには2つの方法があります:"

msgid ""
"Applying it to a CSGCombiner node as a material override (**Geometry > "
"Material Override** in the Inspector). This will affect its children "
"automatically, but will make it impossible to change the material in "
"individual children."
msgstr ""

msgid ""
"Applying a material to individual nodes (**Material** in the Inspector). "
"This way, each CSG node can have its own appearance. Subtractive CSG nodes "
"will apply their material to the nodes they're \"digging\" into."
msgstr ""

msgid ""
"To apply triplanar mapping to a CSG node, select it, go to the Inspector, "
"click the **[empty]** text next to **Material Override** (or **Material** "
"for individual CSG nodes). Choose **New SpatialMaterial**. Click the newly "
"created material's icon to edit it. Unfold the **Albedo** section and load a "
"texture into the **Texture** property. Now, unfold the **Uv1** section and "
"check **Triplanar**. You can change the texture offset and scale on each "
"axis by playing with the **Scale** and **Offset** properties just above. "
"Higher values in the **Scale** property will cause the texture to repeat "
"more often."
msgstr ""
"CSGノードにトリプラナーマッピングを適用するには、CSGノードを選択してインスペ"
"クタに移動し、 **Material Override** (個々のCSGノードの場合は **Material**) "
"の隣にある **[empty]** テキストをクリックします。 **New SpatialMaterial** を"
"選択します。新しく作成されたマテリアルのアイコンをクリックして編集します。 "
"**Albedo** セクションを展開し、 **Texture** プロパティにテクスチャをロードし"
"ます。次に、 **Uv1** セクションを展開し、 **Triplanar** にチェックを入れま"
"す。上の **Scale** と **Offset** プロパティを使用して、各軸のテクスチャオフ"
"セットとスケールを変更することができます。 **Scale** プロパティの値を高くする"
"と、テクスチャがより頻繁に繰り返されるようになります。"

msgid ""
"You can copy a SpatialMaterial to reuse it across CSG nodes. To do so, click "
"the dropdown arrow next to a material property in the Inspector and choose "
"**Copy**. To paste it, select the node you'd like to apply the material "
"onto, click the dropdown arrow next to its material property then choose "
"**Paste**."
msgstr ""

msgid "Translation status"
msgstr "翻訳ステータス"
