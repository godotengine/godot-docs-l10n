# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Particle shaders"
msgstr "パーティクルシェーダー"

msgid ""
"Particle shaders are a special type of vertex shader that runs before the "
"object is drawn. They are used for calculating material properties such as "
"color, position, and rotation. They are drawn with any regular material for "
"CanvasItem or Spatial, depending on whether they are 2D or 3D."
msgstr ""
"パーティクルシェーダーは、オブジェクトが描画される前に実行される特別なタイプ"
"の頂点シェーダーです。これらは、色、位置、回転などのマテリアル特性の計算に使"
"用されます。 2Dか3Dかによって、CanvasItemまたはSpatialの通常のマテリアルで描"
"画されます。"

msgid ""
"Particle shaders are unique because they are not used to draw the object "
"itself; they are used to calculate particle properties, which are then used "
"by the CanvasItem of Spatial shader. They contain only a vertex processor "
"function that outputs multiple properties (see built-ins below)."
msgstr ""
"パーティクルシェーダーは、オブジェクト自体の描画には使用されないため、ユニー"
"クです。これらはパーティクルプロパティの計算に使用され、Spatialシェーダーの"
"CanvasItemによって使用されます。これらには、複数のプロパティを出力する頂点プ"
"ロセッサ関数のみが含まれています(以下のビルトインを参照)。"

msgid ""
"Particle shaders use a transform feedback shader, which is a special type of "
"vertex shader that runs on its own. It takes in data in a buffer like a "
"regular vertex shader does, but it also outputs to data buffers instead of "
"outputting to the fragment shader for pixel-processing. Because of this, "
"transform feedback shaders can build on themselves each run, unlike other "
"shaders that discard the data they have calculated once they draw to the "
"frame buffer."
msgstr ""
"パーティクルシェーダーは、独自に実行される特殊なタイプの頂点シェーダーである"
"変換フィードバックシェーダーを使用します。通常の頂点シェーダーと同様にバッ"
"ファー内のデータを取り込みますが、ピクセル処理のためにフラグメントシェーダー"
"に出力する代わりに、データバッファーに出力します。このため、トランスフォーム"
"フィードバックシェーダーは、フレームバッファーに描画した後に計算したデータを"
"破棄する他のシェーダーとは異なり、実行ごとに自身で構築できます。"

msgid ""
"Particle shaders are only available in the GLES3 backend. If you need "
"particles in GLES2, use :ref:`CPUParticles <class_CPUParticles>`."
msgstr ""
"パーティクルシェーダーは、GLES3バックエンドでのみ使用できます。 GLES2でパー"
"ティクルが必要な場合は、\\ :ref:`CPUParticles <class_CPUParticles>` を使用し"
"ます。"

msgid "Render modes"
msgstr "レンダリングモード"

msgid "Render mode"
msgstr "レンダリングモード"

msgid "Description"
msgstr "説明"

msgid "**keep_data**"
msgstr "\\ **keep_data**"

msgid "Do not clear previous data on restart."
msgstr "再起動時に以前のデータをクリアしない。"

msgid "**disable_force**"
msgstr "\\ **disable_force**"

msgid "Disable attractor force. (Not currently implemented in 3.1)"
msgstr "アトラクターの力を無効にします。(3.1ではまだ実装されていません)"

msgid "**disable_velocity**"
msgstr "\\ **disable_velocity**"

msgid "Ignore **VELOCITY** value."
msgstr "**VELOCITY** 値を無視します。"

#, fuzzy
msgid "Built-ins"
msgstr "ビルトイン"

msgid ""
"Values marked as \"in\" are read-only. Values marked as \"out\" are for "
"optional writing and will not necessarily contain sensible values. Values "
"marked as \"inout\" provide a sensible default value, and can optionally be "
"written to. Samplers are not subjects of writing and they are not marked."
msgstr ""
"\"in\"としてマークされた値は読み取り専用です。\"out\"とマークされた値はオプ"
"ションの書き込み用であり、必ずしも適切な値を含むとは限りません。\"inout\"と"
"マークされた値は、適切なデフォルト値を提供し、オプションで書き込むことができ"
"ます。サンプラーは書込みの対象ではなく、マークされていません。"

#, fuzzy
msgid "Global built-ins"
msgstr "フラグメント用ビルトイン"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

msgid "Built-in"
msgstr "ビルトイン"

msgid "in float **TIME**"
msgstr "\\ in float **TIME**"

msgid "Global time, in seconds."
msgstr "秒単位のグローバル時間。"

msgid "Vertex built-ins"
msgstr "頂点用ビルトイン"

msgid ""
"In order to use the ``COLOR`` variable in a SpatialMaterial, set "
"``use_vertex_as_albedo`` to ``true``. In a ShaderMaterial, access it with "
"the ``COLOR`` variable."
msgstr ""
"SpatialMaterialで ``COLOR`` 変数を使用するには、\\ ``use_vertex_as_albedo`` "
"を ``true`` に設定します。 ShaderMaterialで、\\ ``COLOR`` 変数を使用してアク"
"セスします。"

msgid "inout vec4 **COLOR**"
msgstr "\\ inout vec4 **COLOR**"

msgid ""
"Particle color, can be written to and accessed in mesh's vertex function."
msgstr "パーティクルの色。メッシュの頂点関数に書き込み、アクセスできます。"

msgid "inout vec3 **VELOCITY**"
msgstr "\\ inout vec3 **VELOCITY**"

msgid "Particle velocity, can be modified."
msgstr "パーティクルの速度は変更できます。"

msgid "out float **MASS**"
msgstr "\\ out float **MASS**"

msgid "Particle mass, use for attractors (not implemented in 3.1)."
msgstr "パーティクルの質量、アトラクターで使用(3.1では実装されていません)。"

msgid "inout bool **ACTIVE**"
msgstr "\\ inout bool **ACTIVE**"

msgid "``true`` when Particle is active, can be set to ``false``."
msgstr ""
"パーティクルがアクティブな場合は ``true`` を ``false`` に設定できます。"

msgid "in bool **RESTART**"
msgstr "\\ in bool **RESTART**"

msgid "``true`` when particle must restart (lifetime cycled)."
msgstr ""
"パーティクルを再起動する必要がある(ライフサイクルが繰り返される)場合は "
"``true``\\ 。"

msgid "inout vec4 **CUSTOM**"
msgstr "\\ inout vec4 **CUSTOM**"

msgid ""
"Custom particle data. Accessible from shader of mesh as **INSTANCE_CUSTOM**."
msgstr ""
"カスタムパーティクルデータ。メッシュのシェーダーから **INSTANCE_CUSTOM** とし"
"てアクセス可能。"

msgid "inout mat4 **TRANSFORM**"
msgstr "\\ inout mat4 **TRANSFORM**"

msgid "Particle transform."
msgstr "パーティクルの変換。"

msgid "in float **LIFETIME**"
msgstr "\\ in float **LIFETIME**"

msgid "Particle lifetime."
msgstr "パーティクルの寿命。"

msgid "in float **DELTA**"
msgstr "\\ in float **DELTA**"

msgid "Delta process time."
msgstr "デルタプロセス時間。"

msgid "in uint **NUMBER**"
msgstr "\\ in uint **NUMBER**"

msgid "Unique number since emission start."
msgstr "放出開始以降のユニークな番号。"

msgid "in int **INDEX**"
msgstr "\\ in int **INDEX**"

msgid "Particle index (from total particles)."
msgstr "パーティクル インデックス(パーティクル全体から)。"

msgid "in mat4 **EMISSION_TRANSFORM**"
msgstr "\\ in mat4 **EMISSION_TRANSFORM**"

msgid "Emitter transform (used for non-local systems)."
msgstr "エミッタの変換(非ローカルシステムに使用)。"

msgid "in uint **RANDOM_SEED**"
msgstr "\\ in uint **RANDOM_SEED**"

msgid "Random seed used as base for random."
msgstr "乱数のベースとして使用される乱数シード。"

msgid "Translation status"
msgstr "翻訳ステータス"
