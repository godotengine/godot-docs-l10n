# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Shader materials"
msgstr "シェーダーマテリアル"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"For the most common cases, Godot provides ready to use materials for most "
"types of shaders, such as :ref:`SpatialMaterial <class_SpatialMaterial>`, :"
"ref:`CanvasItemMaterial <class_CanvasItemMaterial>` and :ref:"
"`ParticlesMaterial <class_ParticlesMaterial>`. They are flexible "
"implementations that cover most use cases."
msgstr ""
"最も一般的なケースでは、Godotは、\\ :ref:`SpatialMaterial "
"<class_SpatialMaterial>`\\、\\ :ref:`CanvasItemMaterial "
"<class_CanvasItemMaterial>`\\、および :ref:`ParticlesMaterial "
"<class_ParticlesMaterial>` など、ほとんどのタイプのシェーダーにすぐに使用でき"
"るマテリアルを提供します。それらはほとんどのユースケースをカバーする柔軟な実"
"装です。"

msgid ""
"Shader materials allow writing a custom shader directly, for maximum "
"flexibility. Examples of this are:"
msgstr ""
"シェーダーマテリアルを使用すると、カスタムシェーダーを直接作成して、最大限の"
"柔軟性を得ることができます。この例は次のとおりです:"

msgid "Create procedural textures."
msgstr "手続き型テクスチャの作成。"

msgid "Create complex texture blending effects."
msgstr "複雑なテクスチャブレンド効果の作成。"

msgid "Create animated materials, or materials that change over time."
msgstr ""
"アニメーション化されたマテリアル、または時間とともに変化するマテリアルの作"
"成。"

msgid "Create refractive effects or other advanced effects."
msgstr "屈折効果またはその他の高度な効果の作成。"

msgid "Create special lighting shaders for more exotic materials."
msgstr "よりエキゾチックな素材のための特別な照明シェーダーの作成。"

msgid "Animate vertices, like tree leaves or grass."
msgstr "木の葉や草のような頂点のアニメーション化。"

msgid "Create custom particle code."
msgstr "カスタムパーティクルコードの作成。"

msgid "And much more!"
msgstr "さらに多くも！"

msgid ""
"Godot provides built in functionality to make frequent operations easier. "
"Additionally, Godot's shader editor will detect errors as you type, so you "
"can see your edited shaders in real-time. It is also possible to edit "
"shaders using a visual, node-based graph editor."
msgstr ""
"Godotには、頻繁な操作を簡単にするための機能が組み込まれています。さらに、"
"Godotのシェーダーエディタは入力時にエラーを検出するため、編集したシェーダーを"
"リアルタイムで確認できます。視覚的なノードベースのグラフエディタを使用して"
"シェーダーを編集することもできます。"

msgid "Creating a ShaderMaterial"
msgstr "ShaderMaterialの作成"

msgid ""
"Create a new ShaderMaterial in some object of your choice. Go to the "
"\"Material\" property and create a ShaderMaterial."
msgstr ""
"選択したオブジェクトに新しいShaderMaterialを作成します。[Material] プロパティ"
"に移動し、ShaderMaterialを作成します。"

msgid ""
"Next, click on the shader material to see its properties. From here you can "
"create a shader or visual shader. Regular shaders use code to set their "
"properties while a visual shader uses a node based workflow."
msgstr ""
"次に、シェーダーマテリアルをクリックして、そのプロパティを確認します。ここか"
"ら、シェーダーまたはビジュアルシェーダーを作成できます。通常のシェーダーは"
"コードを使用してプロパティを設定し、ビジュアルシェーダーはノードベースのワー"
"クフローを使用します。"

msgid ""
"If you need to you can convert a visual shader to a text shader. However you "
"can't convert a text shader to a visual shader."
msgstr ""
"必要に応じて、ビジュアルシェーダーをテキストシェーダーに変換できます。ただ"
"し、テキストシェーダーをビジュアルシェーダーに変換することはできません。"

msgid "Choose one of them and you can start editing your shader."
msgstr "いずれかを選択すると、シェーダーの編集を開始できます。"

msgid ""
"If you create a regular shader click on it and the shader editor will open."
msgstr ""
"通常のシェーダーを作成する場合は、クリックしてシェーダーエディタを開きます。"

msgid ""
"If you create a visual shader the visual shader editor will open "
"automatically."
msgstr ""
"ビジュアルシェーダーを作成すると、ビジュアルシェーダーエディタが自動的に開き"
"ます。"

msgid ""
"In the visual shader editor you can click a button and see what your visual "
"shader looks like as shader code. This can be useful if you're trying to "
"replicate a text shader as nodes, or it can be used as a preview for "
"converting your visual shader to a text shader."
msgstr ""
"ビジュアルシェーダーエディタでボタンをクリックすると、ビジュアルシェーダーが"
"シェーダーコードとしてどのように見えるかを確認できます。これは、テキスト"
"シェーダーをノードとして複製しようとしている場合、またはビジュアルシェーダー"
"をテキストシェーダーに変換するためのプレビューとして使用できる場合に役立ちま"
"す。"

msgid "To learn more about visual shaders, read :ref:`doc_visual_shaders`."
msgstr ""
"ビジュアルシェーダーの詳細については、\\ :ref:`doc_visual_shaders` を参照して"
"ください。"

msgid "Converting to ShaderMaterial"
msgstr "ShaderMaterialへの変換"

msgid ""
"It is possible to convert from SpatialMaterial, CanvasItemMaterial and "
"ParticlesMaterial to ShaderMaterial. To do so, go to the material properties "
"and select the convert option."
msgstr ""
"SpatialMaterial、CanvasItemMaterial、およびParticlesMaterialから"
"ShaderMaterialに変換できます。これを行うには、マテリアルのプロパティに移動"
"し、変換オプションを選択します。"

msgid ""
"Using the convert option will turn the SpatialMaterial into a ShaderMaterial "
"with a text shader, not a visual shader."
msgstr ""
"変換オプションを使用すると、SpatialMaterialが、視覚的なシェーダーではなく、テ"
"キストシェーダーを持つShaderMaterialに変わります。"

msgid "Translation status"
msgstr "翻訳ステータス"
