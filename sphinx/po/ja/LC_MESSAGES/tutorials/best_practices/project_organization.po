# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Project organization"
msgstr "プロジェクトの構成"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"Since Godot has no restrictions on project structure or filesystem usage, "
"organizing files when learning the engine can seem challenging. This "
"tutorial suggests a workflow which should be a good starting point. We will "
"also cover using version control with Godot."
msgstr ""
"Godotにはプロジェクト構造やファイルシステムの使用方法に制限がないため、エンジ"
"ンを学習する際にファイルを整理することが難しいようです。このチュートリアルで"
"は、出発点として適切なワークフローを提案します。また、Godotでのバージョン管理"
"の使用についても説明します。"

msgid "Organization"
msgstr "構成"

msgid ""
"Godot is scene-based in nature, and uses the filesystem as-is, without "
"metadata or an asset database."
msgstr ""
"Godotは本質的にシーンベースであり、メタデータやアセットデータベースなしで、"
"ファイルシステムをそのまま使用します。"

msgid ""
"Unlike other engines, many resources are contained within the scene itself, "
"so the amount of files in the filesystem is considerably lower."
msgstr ""
"他のエンジンとは異なり、多くのリソースはシーン自体に含まれているため、ファイ"
"ルシステム内のファイルの量はかなり少なくなります。"

msgid ""
"Considering that, the most common approach is to group assets as close to "
"scenes as possible; when a project grows, it makes it more maintainable."
msgstr ""
"それを考慮すると、最も一般的なアプローチは、可能な限りシーンに近いアセットを"
"グループ化することです。そうしておけば、プロジェクトが大きくなった時の保守性"
"が高まります。"

msgid ""
"As an example, one can usually place into a single folder their basic "
"assets, such as sprite images, 3D model meshes, materials, and music, etc. "
"They can then use a separate folder to store built levels that use them."
msgstr ""
"例として、通常は、スプライト画像、3Dモデルメッシュ、マテリアル、音楽などの基"
"本的なアセットを単一のフォルダに配置できます。その後、別のフォルダを使用し"
"て、それらを使用してビルドされたレベルを格納することもできます。"

#, fuzzy
msgid "Style guide"
msgstr "C#スタイルガイド"

msgid ""
"For consistency across projects, we recommend following these guidelines:"
msgstr ""

msgid ""
"Use **snake_case** for folder and file names (with the exception of C# "
"scripts). This sidesteps case sensitivity issues that can crop up after "
"exporting a project on Windows. C# scripts are an exception to this rule, as "
"the convention is to name them after the class name which should be in "
"PascalCase."
msgstr ""

msgid ""
"Use **PascalCase** for node names, as this matches built-in node casing."
msgstr ""

msgid ""
"In general, keep third-party resources in a top-level ``addons/`` folder, "
"even if they aren't editor plugins. This makes it easier to track which "
"files are third-party. There are some exceptions to this rule; for instance, "
"if you use third-party game assets for a character, it makes more sense to "
"include them within the same folder as the character scenes and scripts."
msgstr ""

msgid "Importing"
msgstr "インポート"

msgid ""
"Godot versions prior to 3.0 did the import process from files outside the "
"project. While this can be useful in large projects, it resulted in an "
"organization hassle for most developers."
msgstr ""
"バージョン3.0以前のGodotは、プロジェクト外部のファイルからインポートプロセス"
"を実行しました。これは大規模なプロジェクトでは便利ですが、ほとんどの開発者に"
"とって構成に手間がかかります。"

msgid ""
"Because of this, assets are now transparently imported from within the "
"project folder."
msgstr ""
"このため、アセットはプロジェクトフォルダ内から透過的にインポートされるように"
"なりました。"

msgid "Ignoring specific folders"
msgstr "特定のフォルダを無視する"

msgid ""
"To prevent Godot from importing files contained in a specific folder, create "
"an empty file called ``.gdignore`` in the folder (the leading ``.`` is "
"required). This can be useful to speed up the initial project importing."
msgstr ""
"Godot が特定のフォルダに含まれるファイルをインポートしないようにするには、"
"フォルダ内に ``.gdignore`` という空のファイルを作成します (先頭に ``.`` が必"
"要です)。これは、(既存の構成などからの)初期プロジェクトのインポートを高速化す"
"るのに役立ちます。"

msgid ""
"To create a file whose name starts with a dot on Windows, you can use a text "
"editor such as Notepad++ or use the following command in a command prompt: "
"``type nul > .gdignore``"
msgstr ""
"Windowsでドットで始まる名前のファイルを作成するには、Notepad++などのテキスト"
"エディタを使用するか、コマンドプロンプトで次のコマンドを使用します: ``type "
"nul> .gdignore``"

#, fuzzy
msgid ""
"Once the folder is ignored, resources in that folder can't be loaded anymore "
"using the ``load()`` and ``preload()`` methods. Ignoring a folder will also "
"automatically hide it from the FileSystem dock, which can be useful to "
"reduce clutter."
msgstr ""
"フォルダが無視されると、そのフォルダ内のリソースを ``load()`` および "
"``preload()`` メソッドを使用して読み込むことができなくなります。"

msgid ""
"Note that the ``.gdignore`` file's contents are ignored, which is why the "
"file should be empty. It does not support patterns like ``.gitignore`` files "
"do."
msgstr ""

msgid "Case sensitivity"
msgstr ""

msgid ""
"Windows and recent macOS versions use case-insensitive filesystems by "
"default, whereas Linux distributions use a case-sensitive filesystem by "
"default. This can cause issues after exporting a project, since Godot's PCK "
"virtual filesystem is case-sensitive. To avoid this, it's recommended to "
"stick to ``snake_case`` naming for all files in the project (and lowercase "
"characters in general)."
msgstr ""

msgid ""
"You can break this rule when style guides say otherwise (such as the C# "
"style guide). Still, be consistent to avoid mistakes."
msgstr ""

msgid ""
"On Windows 10, to further avoid mistakes related to case sensitivity, you "
"can also make the project folder case-sensitive. After enabling the Windows "
"Subsystem for Linux feature, run the following command in a PowerShell "
"window::"
msgstr ""

msgid ""
"If you haven't enabled the Windows Subsystem for Linux, you can enter the "
"following line in a PowerShell window *running as Administrator* then reboot "
"when asked::"
msgstr ""

msgid "Translation status"
msgstr "翻訳ステータス"
