# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Introduction to the animation features"
msgstr "2Dアニメーション機能の紹介"

msgid ""
"The :ref:`class_AnimationPlayer` node allows you to create anything from "
"simple to complex animations."
msgstr ""
":ref:`class_AnimationPlayer` ノードを使用すると、単純なアニメーションから複雑"
"なアニメーションまで何でも作成できます。"

msgid "In this guide you learn to:"
msgstr "このガイドでは、次のことを学びます:"

msgid "Work with the Animation Panel"
msgstr "アニメーションパネルを使用する"

msgid "Animate any property of any node"
msgstr "任意のノードのプロパティをアニメーション化する"

msgid "Create a simple animation"
msgstr "シンプルなアニメーションを作成する"

msgid "Call functions with the powerful Call Function Tracks"
msgstr "強力な関数呼び出しトラックで関数を呼び出す"

msgid ""
"In Godot, you can animate anything available in the Inspector, such as Node "
"transforms, sprites, UI elements, particles, visibility and color of "
"materials, and so on. You can also modify values of script variables and "
"call any function."
msgstr ""
"Godotでは、ノードの幾何学変換、スプライト、UI要素、パーティクル、マテリアルの"
"可視性と色など、インスペクタで利用可能なすべての項目をアニメーション化できま"
"す。スクリプト変数の値を変更して、任意の関数を呼び出すこともできます。"

msgid "Create an AnimationPlayer node"
msgstr "AnimationPlayerノードを作成する"

msgid ""
"To use the animation tools we first have to create an :ref:"
"`class_AnimationPlayer` node."
msgstr ""
"アニメーションツールを使用するには、最初に :ref:`class_AnimationPlayer` ノー"
"ドを作成する必要があります。"

msgid ""
"The AnimationPlayer node type is the data container for your animations. One "
"AnimationPlayer node can hold multiple animations, that can automatically "
"transition to one another."
msgstr ""
"AnimationPlayerノード型は、アニメーションのデータコンテナーです。 1つの"
"AnimationPlayerノードは複数のアニメーションを保持でき、自動的に相互に移行でき"
"ます。"

msgid "The AnimationPlayer node"
msgstr "AnimationPlayerノード"

msgid ""
"After creating one click on the AnimationPlayer node in the Node tab to open "
"the Animation Panel at the bottom of the viewport."
msgstr ""
"作成後、[ノード]タブのAnimationPlayerノードをクリックして、ビューポートの下部"
"にあるアニメーションパネルを開きます。"

msgid "The animation panel position"
msgstr "アニメーションパネルの位置"

msgid "It consists of four parts:"
msgstr "次の4つの部分で構成されます:"

msgid "The animation panel"
msgstr "アニメーションパネル"

msgid "Animation controls (i.e. add, load, save, and delete animations)"
msgstr ""
"アニメーションコントロール (アニメーションの追加、読み込み、保存、削除など)"

msgid "The tracks listing"
msgstr "トラックリスト"

msgid "The timeline with keyframes"
msgstr "キーフレーム付きのタイムライン"

msgid ""
"The timeline and track controls, where you can zoom the timeline and edit "
"tracks for example."
msgstr ""
"タイムラインとトラックコントロールでは、タイムラインをズームしたり、トラック"
"を編集したりできます。"

msgid "Computer animation relies on keyframes"
msgstr "コンピューターアニメーションはキーフレームに依存しています"

msgid "A keyframe defines the value of a property at a certain point in time."
msgstr "キーフレームは、特定の時点でのプロパティの値を定義します。"

msgid ""
"Diamond shapes represent keyframes in the timeline. A line between two "
"keyframes indicates that the value hasn't changed."
msgstr ""
"ひし形のシェイプは、タイムラインのキーフレームを表します。2 つのキーフレーム"
"間の線は、値が変更されていないことを示します。"

msgid "Keyframes in Godot"
msgstr "Godotのキーフレーム"

msgid ""
"The engine interpolates values between keyframes, resulting in a gradual "
"change in values over time."
msgstr ""
"エンジンはキーフレーム間で値を補間するため、時間の経過とともに値が徐々に変化"
"します。"

msgid "Two keyframes are all it takes to obtain a smooth motion"
msgstr "滑らかな動きを得るために必要な2つのキーフレーム"

msgid ""
"The timeline lets you insert keyframes and change their timing. It also "
"defines how long the animation is."
msgstr ""
"タイムラインを使用すると、キーフレームを挿入してタイミングを変更できます。ま"
"た、アニメーションの長さも定義します。"

msgid "The timeline in the animation panel"
msgstr "アニメーションパネルのタイムライン"

msgid ""
"Each line of the Animation Panel is an animation track. Normal and Transform "
"tracks reference node properties. Their name or id is a path to the node and "
"the affected property."
msgstr ""
"アニメーションパネルの各行はアニメーショントラックです。[標準]および[幾何学変"
"換]トラックはノードのプロパティを参照します。それらの名前またはIDは、ノードと"
"影響を受けるプロパティへのパスです。"

msgid "Example of Normal animation tracks"
msgstr "標準のアニメーショントラックの例"

msgid ""
"If you animate the wrong property, you can edit a track's path anytime. "
"Double click on it and type the new path. Play the animation using the "
"\"Play from beginning\" button |Play from beginning| (or pressing :kbd:"
"`Shift + D` on keyboard) to see the changes instantly."
msgstr ""
"間違ったプロパティをアニメートした場合は、いつでもトラックのパスを修正できま"
"す。それをダブルクリックして、新しいパスを入力します。[最初から再生]ボタンを"
"使用して(またはキーボードの :kbd:`Shift + D` を押して)アニメーションを再生す"
"ると、変更内容が即座に表示されます。"

#, fuzzy
msgid "Play from beginning"
msgstr "原点から離れて"

msgid "Tutorial: Creating a simple animation"
msgstr "チュートリアル: シンプルなアニメーションの作成"

msgid "Scene setup"
msgstr "シーンの設定"

#, fuzzy
msgid ""
"For this tutorial, we'll create a Sprite node with an AnimationPlayer as its "
"child. We will animate the sprite to move between two points on the screen."
msgstr ""
"このチュートリアルでは、AnimationPlayerノードと、その子としてスプライトノード"
"を作成します。"

msgid "Our scene setup"
msgstr "シーンのセットアップ"

msgid ""
"AnimationPlayer inherits from Node instead of Node2D or Spatial, which means "
"that the child nodes will not inherit the transform from the parent nodes "
"due to a bare Node being present in the hierarchy."
msgstr ""

msgid ""
"Therefore, it is not recommended to add nodes that have a 2D/3D transform as "
"a child of an AnimationPlayer node."
msgstr ""

#, fuzzy
msgid ""
"The sprite holds an image texture. We animate that sprite to move between "
"two points on the screen. For this tutorial, use the default Godot icon as "
"the sprite's texture. As a starting point, move the sprite to a left "
"position on the screen."
msgstr ""
"スプライトは画像テクスチャを保持し、そのスプライトをアニメートして画面上の2つ"
"のポイント間を移動します。このチュートリアルでは、デフォルトのGodotアイコンを"
"スプライトのテクスチャとして使用します。開始点として、スプライトを画面上の左"
"の位置に移動します。"

msgid ""
"Select the AnimationPlayer node, then click the \"Animation\" button in the "
"animation editor. From the list select \"New\" (|Add Animation|) to add a "
"new animation. And Enter a name for the animation in the dialog box."
msgstr ""
"AnimationPlayerノードを選択し、アニメーションエディタの[アニメーション]ボタン"
"をクリックします。リストから[新規] (|Add Animation|)を選択して、新しいアニ"
"メーションを追加します。そして、ダイアログボックスにアニメーションの名前を入"
"力します。"

#, fuzzy
msgid "Add Animation"
msgstr "アニメーション"

msgid "Add a new animation"
msgstr "新しいアニメーションの追加"

msgid "Adding a track"
msgstr "トラックの追加"

msgid ""
"To add a new track for our sprite, select it and take a look in the toolbar:"
msgstr ""
"スプライトに新しいトラックを追加するには、それを選択してツールバーで見てくだ"
"さい:"

msgid "Convenience buttons"
msgstr "便利なボタン"

msgid ""
"These switches and buttons allow you to add keyframes for the selected "
"node's location, rotation, and scale respectively."
msgstr ""
"これらのスイッチとボタンを使用すると、選択したノードの位置、回転、スケールに"
"それぞれキーフレームを追加できます。"

msgid ""
"Deselect rotation, because we are only interested in the location of our "
"sprite for this tutorial and click on the key button."
msgstr ""
"このチュートリアルではスプライトの位置にのみ関心があるため、回転の選択を解除"
"し、キーボタンをクリックします。"

#, fuzzy
msgid ""
"As we don't have a track already set up for the transform/location property, "
"Godot asks whether it should set it up for us. Click **Create**."
msgstr ""
"変形/位置のプロパティにトラックがまだ設定されていないため、Godotはこのトラッ"
"クを設定する必要があるかどうかを尋ねます。 [作成]をクリックします。"

msgid ""
"This creates a new track and our first keyframe at the beginning of the "
"timeline:"
msgstr ""
"これにより、タイムラインの先頭に新しいトラックと最初のキーフレームが作成され"
"ます:"

msgid "The sprite track"
msgstr "スプライトトラック"

msgid "The second keyframe"
msgstr "2番目のキーフレーム"

msgid ""
"Now we need to set the destination where our sprite should be headed and how "
"much time it takes to get there."
msgstr ""
"ここで、スプライトが向かうべき位置と、そこに到達するまでの時間を設定する必要"
"があります。"

msgid ""
"Let's say, we want it to take 2 seconds to go to the other point. By default "
"the animation is set to last only 1 second, so change this in the timeline "
"controls in animation panel's lower panel to 2."
msgstr ""
"たとえば、もう一方のポイントに行くのに2秒かかるとします。既定では、アニメー"
"ションの持続時間は2秒に設定されているので、アニメーションパネルの下部パネルの"
"タイムラインコントロールでこれを2に変更します。"

msgid "Animation length"
msgstr "アニメーションの長さ"

#, fuzzy
msgid ""
"Click on the timeline header near the 2-second mark and move the sprite to "
"the target destination on the right side."
msgstr ""
"2秒のマークの近くのタイムラインヘッダーをクリックし、スプライトを右側のター"
"ゲット位置に移動します。"

msgid ""
"Again, click the key button in the toolbar. This creates our second keyframe."
msgstr ""
"再度、ツールバーのキーボタンをクリックします。これにより、2番目のキーフレーム"
"が作成されます。"

msgid "Run the animation"
msgstr "アニメーションを実行する"

msgid "Click on the \"Play from beginning\" (|Play from beginning|) button."
msgstr "[最初から再生] (|Play from beginning|) ボタンをクリックします。"

msgid "Yay! Our animation runs:"
msgstr "イェーイ！アニメーションが実行されます:"

msgid "The animation"
msgstr "アニメーション"

msgid "Back and forth"
msgstr "行ったり来たり"

msgid ""
"Godot has an additional feature here. Like said before, Godot always "
"calculates the frames between two keyframes. In a loop, the first keyframe "
"is also the last keyframe, if no keyframe is specified at the end."
msgstr ""
"Godot には追加機能があります。前に述べたように、Godotは常に2つのキーフレーム"
"間のフレームを計算します。ループでは、最後にキーフレームが指定されていない場"
"合、最初のキーフレームが最後のキーフレームにもなります。"

msgid "Animation loop"
msgstr "アニメーションループ"

#, fuzzy
msgid ""
"If you set the animation length to 4 seconds now, the animation moves back "
"and forth. You can change this behavior if you change the track's loop mode. "
"This is covered in the next chapter."
msgstr ""
"ここでアニメーションの長さを4秒に設定すると、アニメーションは前後に移動しま"
"す。トラックのループモードを変更すると、この動作を変更できます。これについて"
"は、次の章で説明します。"

msgid "Track settings"
msgstr "トラックの設定"

msgid ""
"Each track has a settings panel at the end, where you can set the update "
"mode, the track interpolation, and the loop mode."
msgstr ""
"各トラックの最後には、更新モード、トラック補間、ループモードを設定できる設定"
"パネルがあります。"

msgid ""
"The update mode of a track tells Godot when to update the property values. "
"This can be:"
msgstr ""
"トラックの更新モードは、プロパティ値を更新するタイミングをGodotに指示します。"
"これには次のものがあります:"

#, fuzzy
msgid "**Continuous:** Update the property on each frame."
msgstr "継続的: 各フレームのプロパティを更新します"

#, fuzzy
msgid "**Discrete:** Only update the property on keyframes."
msgstr "離散: キーフレームのプロパティのみを更新します"

msgid ""
"**Trigger:** Only update the property on keyframes or triggers. Triggers are "
"a type of keyframe used by the ``current_animation`` property of a :ref:"
"`class_AnimationPlayer`, and Animation Playback tracks."
msgstr ""

msgid ""
"**Capture:** If the first keyframe's time is greater than ``0.0``, the "
"current value of the property will be remembered and will be blended with "
"the first animation key. For example, you could use the Capture mode to move "
"a node that's located anywhere to a specific location."
msgstr ""

msgid "Track mode"
msgstr "トラックモード"

msgid ""
"In normal animations, you usually use \"Continuous\". The other types are "
"used to script complex animations."
msgstr ""
"普通のアニメーションでは、通常は「継続的」を使用します。他のタイプは、複雑な"
"アニメーションをスクリプト化するために使用されます。"

msgid ""
"The interpolation tells Godot how to calculate the frame values between the "
"keyframes. These interpolation modes are supported:"
msgstr ""
"補間は、キーフレーム間のフレーム値を計算する方法をGodotに伝えます。次の補間"
"モードがサポートされています:"

msgid "Nearest: Set the nearest keyframe value"
msgstr "近傍: 最も近いキーフレーム値を設定します"

msgid ""
"Linear: Set the value based on a linear function calculation between the two "
"keyframes"
msgstr "リニア: 2つのキーフレーム間の線形関数計算に基づいて値を設定します"

msgid ""
"Cubic: Set the value based on a cubic function calculation between the two "
"keyframes"
msgstr "キュービック: 2つのキーフレーム間の3次関数計算に基づいて値を設定します"

msgid "Track interpolation"
msgstr "トラック補間"

msgid ""
"Cubic interpolation leads to a more natural movement, where the animation is "
"slower at a keyframe and faster between keyframes. This is usually used for "
"character animation. Linear interpolation creates more of a robotic movement."
msgstr ""
"キュービック補間は、より自然な動きをもたらします。アニメーションは、キーフ"
"レームでは遅くなり、キーフレーム間では速くなります。これは通常、キャラクター"
"アニメーションに使用されます。リニア補間は、よりロボット的な動きを作成しま"
"す。"

msgid ""
"Godot supports two loop modes, which affect the animation if it's set to "
"loop:"
msgstr ""
"Godotは 2つのループ モードをサポートしており、ループに設定されている場合、ア"
"ニメーションに影響を与えます:"

msgid "Loop modes"
msgstr "ループモード"

msgid ""
"Clamp loop interpolation: When this is selected, the animation stops after "
"the last keyframe for this track. When the first keyframe is reached again, "
"the animation will reset to its values."
msgstr ""
"クランプループ補間(Clamp): これを選択すると、このトラックの最後のキーフレーム"
"の後にアニメーションが停止します。最初のキーフレームに再び到達すると、アニ"
"メーションはその値にリセットされます。"

msgid ""
"Wrap loop interpolation: When this is selected, Godot calculates the "
"animation after the last keyframe to reach the values of the first keyframe "
"again."
msgstr ""
"ラップループ補間(Wrap): これを選択すると、Godotは最後のキーフレームの後もアニ"
"メーションを計算して、最初のキーフレームの値に再び到達します。"

msgid "Keyframes for other properties"
msgstr "その他のプロパティのキーフレーム"

msgid ""
"Godot doesn't restrict you to only edit transform properties. Every property "
"can be used as a track where you can set keyframes."
msgstr ""
"Godotでは、(位置などの)変換プロパティのみが編集できるように制限されるわけでは"
"ありません。すべてのプロパティは、キーフレームを設定できるトラックとして使用"
"できます。"

#, fuzzy
msgid ""
"If you select your sprite while the animation panel is visible, you get a "
"small keyframe button for all the sprite's properties. Click on this button "
"and Godot automatically adds a track and keyframe to the current animation."
msgstr ""
"アニメーションパネルが表示されているときにスプライトを選択すると、スプライト"
"のすべてのプロパティに小さなキーフレームボタンが表示されます。このボタンをク"
"リックすると、Godotは自動的にトラックとキーフレームを現在のアニメーションに追"
"加します。"

msgid "Edit keyframes"
msgstr "キーフレームの編集"

msgid ""
"For advanced use and to edit keyframes in detail, You can click on them to "
"bring up the keyframe editor in the inspector. You can use this to directly "
"edit its values."
msgstr ""
"高度な使用や詳細な編集のために、キーフレームをクリックすると、インスペクタで"
"キーフレームエディタが表示されます。これを使用して、値を直接編集できます。"

msgid "Keyframe editor editing a key"
msgstr "キーを編集するキーフレームエディタ"

msgid ""
"Additionally, you can also edit the easing value for this keyframe by "
"clicking and dragging the easing setting. This tells Godot, how to change "
"the property values when it reaches this keyframe."
msgstr ""
"また、イージング(Easing)設定をクリックしてドラッグすることにより、このキーフ"
"レームのイージング値を編集することもできます。これは、このキーフレームに到達"
"したときにプロパティ値を変更する方法をGodotに伝えます。"

msgid ""
"You usually tweak your animations this way, when the movement doesn't \"look "
"right\"."
msgstr ""
"通常、動きが「正しく見えない」場合は、この方法でアニメーションを微調整しま"
"す。"

msgid "Advanced: Call Method tracks"
msgstr "高度: メソッド呼出しトラック"

msgid ""
"Godot's animation engine doesn't stop here. If you're already comfortable "
"with Godot's scripting language :ref:`doc_gdscript` and :doc:`/classes/"
"index` you know that each node type is a class and has a bunch of callable "
"methods."
msgstr ""
"Godotのアニメーションエンジンはここで止まりません。既にGodotのスクリプト言"
"語 :ref:`doc_gdscript` および :doc:`/classes/index` に慣れている場合は、各"
"ノードタイプがクラスであり、呼び出し可能なメソッドがたくさんあることがわかり"
"ます。"

msgid ""
"For example, the :ref:`class_AudioStreamPlayer` node type has a method to "
"play an audio stream."
msgstr ""
"たとえば、\\ :ref:`class_AudioStreamPlayer` ノードタイプには、オーディオスト"
"リームを再生するメソッドがあります。"

msgid ""
"Wouldn't it be great to use a method at a specific keyframe in an animation? "
"This is where \"Call Method Tracks\" come in handy. These tracks reference a "
"node again, this time without a reference to a property. Instead, a keyframe "
"holds the name and arguments of a method, that Godot should call when it "
"reaches this keyframe."
msgstr ""
"アニメーションの特定のキーフレームでメソッドを使用するのは素晴らしいことでは"
"ありませんか？これは、「メソッド呼び出しトラック」が役立つ場所です。これらの"
"トラックは、今度はプロパティへの参照なしでノードを再度参照します。代わりに、"
"キーフレームはメソッドの名前と引数を保持し、Godotはこのキーフレームに到達した"
"ときに呼び出しを行います。"

msgid ""
"To demonstrate, we're going to use a call method track to play audio at a "
"specific keyframe. Normally to play audio you should use an audio track, but "
"for the sake of demonstrating methods we're going to do it this way."
msgstr ""
"デモのために、メソッド呼び出しトラックを使用して、特定のキーフレームでオー"
"ディオを再生します。通常、オーディオを再生するにはオーディオトラックを使用す"
"る必要がありますが、手法を示すためにこの方法で行います。"

msgid ""
"Add a :ref:`class_AudioStreamPlayer` to the Scene Tree and setup a stream "
"using an audio file you put in your project."
msgstr ""
"シーンツリーに :ref:`class_AudioStreamPlayer` を追加し、プロジェクトに配置し"
"たオーディオファイルを使用してストリームを設定します。"

msgid ""
"Click on \"Add track\" (|Add track|) on the animation panel's track controls."
msgstr ""
"アニメーションパネルのトラックコントロールで[トラックを追加] (|Add track|) を"
"クリックします。"

#, fuzzy
msgid "Add track"
msgstr "トラックの追加"

msgid "Select \"Add Call Method Track\" from the list of possible track types."
msgstr ""
"可能なトラックタイプのリストから「メソッド呼出しトラック」を選択します。"

msgid "Add Call Method Track"
msgstr "メソッド呼出しトラックの追加"

msgid ""
"Select the :ref:`class_AudioStreamPlayer` node in the selection window. "
"Godot adds the track with the reference to the node."
msgstr ""
"選択ウィンドウで :ref:`class_AudioStreamPlayer` ノードを選択します。 Godot"
"は、ノードへの参照を含むトラックを追加します。"

msgid "Select AudioStreamPlayer"
msgstr "AudioStreamPlayerを選択"

msgid ""
"Right click the timeline where Godot should play the sample and click the "
"\"Insert Key\" option. This will bring up a list of methods that can be "
"called for the AudioStreamPlayer node. Select the first one."
msgstr ""
"Godotがサンプルを再生するタイムラインを右クリックし、[キーを挿入]オプションを"
"クリックします。これにより、AudioStreamPlayerノードに対して呼び出すことができ"
"るメソッドのリストが表示されます。最初のものを選択します。"

msgid ""
"When Godot reaches the keyframe, Godot calls the :ref:"
"`class_AudioStreamPlayer` node's \"play\" function and the stream plays."
msgstr ""
"Godotがキーフレームに到達すると、Godotは :ref:`class_AudioStreamPlayer` ノー"
"ドの \"play\" 関数を呼び出し、ストリームが再生されます。"

msgid ""
"You can change its position by dragging it on the timeline, you can also "
"click on the keyframe and use the keyframe settings in the inspector."
msgstr ""
"タイムライン上でドラッグして位置を変更できます。キーフレームをクリックして、"
"インスペクタのキーフレーム設定を使用することもできます。"

#, fuzzy
msgid "Using RESET tracks"
msgstr "トラックの追加"

msgid ""
"You can set up a special *RESET* animation to contain the \"default pose\". "
"This is used to ensure that the default pose is restored when you save the "
"scene and open it again in the editor."
msgstr ""

msgid ""
"For existing tracks, you can add an animation called \"RESET\" (case-"
"sensitive), then add tracks for each property that you want to reset. The "
"only keyframe should be at time 0, and give it the desired default value for "
"each track."
msgstr ""

msgid ""
"If AnimationPlayer's **Reset On Save** property is set to ``true``, the "
"scene will be saved with the effects of the reset animation applied (as if "
"it had been seeked to time ``0.0``). This only affects the saved file – the "
"property tracks in the editor stay where they were."
msgstr ""

msgid ""
"If you want to reset the tracks in the editor, select the AnimationPlayer "
"node, open the **Animation** bottom panel then choose **Apply Reset** in the "
"animation editor's **Animation** dropdown menu."
msgstr ""

msgid ""
"When adding tracks on new animations, the editor will ask you to "
"automatically create a RESET track when using the keyframe icon next to a "
"property in the inspector. This does not apply on tracks created with Godot "
"versions prior to 3.4, as the animation reset track feature was added in 3.4."
msgstr ""

msgid "Translation status"
msgstr "翻訳ステータス"
