# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cutout animation"
msgstr "カットアウトアニメーション"

msgid "What is it?"
msgstr "それは何ですか？"

msgid ""
"Traditionally, `cutout animation <https://en.wikipedia.org/wiki/"
"Cutout_animation>`__ is a type of `stop motion animation <https://en."
"wikipedia.org/wiki/Stop_motion>`__ in which pieces of paper (or other thin "
"material) are cut into special shapes and arranged in two-dimensional "
"representations of characters and objects. Characters' bodies are usually "
"made out of several pieces. The pieces are arranged and photographed once "
"for each frame of the film. The animator moves and rotates the parts in "
"small increments between each shot to create the illusion of movement when "
"the images are played back quickly in sequence."
msgstr ""
"`カットアウトアニメーション <https://en.wikipedia.org/wiki/"
"Cutout_animation>`__ は `ストップモーションアニメーション <https://en."
"wikipedia.org/wiki/Stop_motion>`__ の一種で、紙片(または他の薄い素材)を特殊な"
"形状にカットし、キャラクターやオブジェクトを2次元に配置します。キャラクターの"
"体は通常、いくつかのピースで構成されています。このピースは、フィルムの各フ"
"レームごとに配置され、撮影されます。アニメーターは、各ショット間でパーツを少"
"しずつ移動および回転させて、イメージを順番にすばやく再生して動いているように"
"見せます。"

msgid ""
"Simulations of cutout animation can now be created using software as seen in "
"`South Park <https://en.wikipedia.org/wiki/South_Park>`__ and `Jake and the "
"Never Land Pirates <https://en.wikipedia.org/wiki/"
"Jake_and_the_Never_Land_Pirates>`__."
msgstr ""
"カットアウトアニメーションのシミュレーションを、\\ `South Park <https://en."
"wikipedia.org/wiki/South_Park>`__ と `Jake and the Never Land Pirates "
"<https://en.wikipedia.org/wiki/Jake_and_the_Never_Land_Pirates>`__ に見られる"
"ように、ソフトウェアを使用して作成できるようになりました。"

msgid ""
"In video games, this technique has also become popular. Examples of this are "
"`Paper Mario <https://en.wikipedia.org/wiki/Super_Paper_Mario>`__ or `Rayman "
"Origins <https://en.wikipedia.org/wiki/Rayman_Origins>`__ ."
msgstr ""
"ビデオゲームでは、このテクニックも人気となっています。その例としては、 `ペー"
"パーマリオ <https://en.wikipedia.org/wiki/Super_Paper_Mario>`__ または「`レイ"
"マン オリジン <https://en.wikipedia.org/wiki/Rayman_Origins>`__ があります。"

msgid "Cutout animation in Godot"
msgstr "Godotのカットアウトアニメーション"

msgid ""
"Godot provides tools for working with cutout rigs, and is ideal for the "
"workflow:"
msgstr ""
"Godotは、カットアウトリグを操作するためのツールを提供し、ワークフローに最適で"
"す:"

msgid ""
"**The animation system is fully integrated with the engine**: This means "
"animations can control much more than just motion of objects. Textures, "
"sprite sizes, pivots, opacity, color modulation, and more, can all be "
"animated and blended."
msgstr ""
"**アニメーションシステムはエンジンと完全に統合されています**: これは、アニ"
"メーションがオブジェクトの動き以上のものを制御できることを意味します。テクス"
"チャ、スプライトサイズ、ピボット、不透明度、色変調などをすべてアニメーション"
"化およびブレンドできます。"

msgid ""
"**Combine animation styles**: AnimatedSprite allows traditional cel "
"animation to be used alongside cutout animation. In cel animation different "
"animation frames use entirely different drawings rather than the same pieces "
"positioned differently. In an otherwise cutout-based animation, cel "
"animation can be used selectively for complex parts such as hands, feet, "
"changing facial expressions, etc."
msgstr ""
"**アニメーションスタイルを組み合わせる**: AnimatedSpriteでは、カットアウトア"
"ニメーションと一緒に従来のセルアニメーションを使用できます。セルアニメーショ"
"ンでは、異なるアニメーションフレームは、同じピースが異なる位置に配置されるの"
"ではなく、まったく異なる図面を使用します。カットアウトベースのアニメーション"
"では、セルアニメーションを手、足、表情の変化などの複雑なパーツに選択的に使用"
"できます。"

msgid ""
"**Custom Shaped Elements**: Custom shapes can be created with :ref:"
"`Polygon2D <class_Polygon2D>` allowing UV animation, deformations, etc."
msgstr ""
"**カスタムシェイプエレメント**: カスタムシェイプは、\\ :ref:`Polygon2D "
"<class_Polygon2D>` で作成でき、UVアニメーション、変形などが可能です。"

#, fuzzy
msgid ""
"**Particle Systems**: A cutout animation rig can be combined with particle "
"systems. This can be useful for magic effects, jetpacks, etc."
msgstr ""
"**パーティクルシステム**: カットアウトアニメーションリグは、パーティクルシス"
"テムと組み合わせることができます。これは魔法の効果、ジェットパックなどに役立"
"ちます。"

msgid ""
"**Custom Colliders**: Set colliders and influence areas in different parts "
"of the skeletons, great for bosses and fighting games."
msgstr ""
"**カスタムコライダー**: スケルトンの異なる部分にコライダー(衝突検知)と影響領"
"域を設定し、ボスや格闘ゲームに最適です。"

msgid ""
"**Animation Tree**: Allows complex combinations and blending between several "
"animations, the same way it works in 3D."
msgstr ""
"**アニメーションツリー**: 3Dでの動作と同じように、複数のアニメーションを複雑"
"に組み合わせたりブレンドしたりできます。"

msgid "And much more!"
msgstr "さらに多くも！"

msgid "Making of GBot"
msgstr "GBotの作成"

msgid ""
"For this tutorial, we will use as demo content the pieces of the `GBot "
"<https://www.youtube.com/watch?"
"v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__ character, created by "
"Andreas Esau."
msgstr ""
"このチュートリアルでは、Andreas Esauが作成した `GBot <https://www.youtube."
"com/watch?v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__ キャラクターの一部"
"をデモコンテンツとして使用します。"

msgid ""
"Get your assets: :download:`gbot_resources.zip <files/gbot_resources.zip>`."
msgstr ""
"アセットを取得します: :download:`gbot_resources.zip <files/gbot_resources."
"zip>`\\ 。"

msgid "Setting up the rig"
msgstr "リグのセットアップ"

msgid "Create an empty Node2D as root of the scene, we will work under it:"
msgstr "空のNode2Dをシーンのルートとして作成し、その下で作業します:"

msgid ""
"The first node of the model is the hip. Generally, both in 2D and 3D, the "
"hip is the root of the skeleton. This makes it easier to animate:"
msgstr ""
"モデルの最初のノードは腰です。一般に、2Dと3Dの両方で、腰はスケルトンのルート"
"です。これにより、アニメーションが簡単になります:"

msgid ""
"Next will be the torso. The torso needs to be a child of the hip, so create "
"a child sprite and load the torso texture, later accommodate it properly:"
msgstr ""
"次は胴体になります。胴体は腰の子である必要があるため、子スプライトを作成して"
"胴体のテクスチャをロードし、後で適切に調整します:"

msgid ""
"This looks good. Let's see if our hierarchy works as a skeleton by rotating "
"the torso. We can do this be pressing :kbd:`E` to enter rotate mode, and "
"dragging with the left mouse button. To exit rotate mode hit :kbd:`ESC`."
msgstr ""
"これはよさそうです。胴体を回転させて、階層がスケルトンとして機能するかどうか"
"を見てみましょう。これを行うには、\\ :kbd`E` を押して回転モードに入り、マウス"
"の左ボタンでドラッグします。回転モードを終了するには、\\ :kbd:`ESC` を押しま"
"す。"

msgid "The rotation pivot is wrong and needs to be adjusted."
msgstr "回転ピボットが間違っているため、調整する必要があります。"

msgid ""
"This small cross in the middle of the :ref:`Sprite <class_Sprite>` is the "
"rotation pivot:"
msgstr ""
":ref:`Sprite <class_Sprite>` の中央にあるこの小さな十字が回転ピボットです:"

msgid "Adjusting the pivot"
msgstr "ピボットの調整"

msgid ""
"The pivot can be adjusted by changing the *offset* property in the Sprite:"
msgstr ""
"ピボットは、スプライトの *offset* プロパティを変更することで調整できます:"

msgid ""
"The pivot can also be adjusted *visually*. While hovering over the desired "
"pivot point,  press :kbd:`V` to move the pivot there for the selected "
"Sprite. There is also a tool in the tool bar that has a similar function."
msgstr ""
"ピボットは *視覚的に* 調整することもできます。目的のピボットポイントにカーソ"
"ルを合わせながら、\\ :kbd:`V` を押して、選択したスプライトのピボットをそこに"
"移動します。ツールバーには、同様の機能を持つツールもあります。"

msgid ""
"Continue adding body pieces, starting with the right arm. Make sure to put "
"each sprite in its correct place in the hierarchy, so its rotations and "
"translations are relative to its parent:"
msgstr ""
"右腕からボディピースを追加していきます。各スプライトを階層内の正しい位置に配"
"置し、その回転と移動が親に対して相対的になるようにしてください:"

msgid ""
"With the left arm there's a problem. In 2D, child nodes appear in front of "
"their parents:"
msgstr "左腕には問題があります。2D では、子ノードは親ノードの前に表示されます:"

#, fuzzy
msgid ""
"We want the left arm to appear *behind* the hip and the torso. We could move "
"the left arm nodes behind the hip (above the hip node in the scene "
"hierarchy), but then the left arm is no longer in its proper place in the "
"hierarchy. This means it wouldn't be affected by the movement of the torso. "
"We'll fix this problem with ``RemoteTransform2D`` nodes."
msgstr ""
"左腕が腰と胴体の\\ *後ろ*\\ に表示されるようにします。左腕のノードを腰の後ろ"
"(シーン階層のヒップノードの上)に移動することはできますが、左腕は階層内の適切"
"な位置にいなくなります。これは、胴体の動きに影響を受けないことを意味しま"
"す。\\ ``RemoteTransform2D`` ノードを使ってこの問題を修正します。"

msgid ""
"You can also fix depth ordering problems by adjusting the Z property of any "
"node inheriting from Node2D."
msgstr ""
"Node2Dから継承するノードのZプロパティを調整することで、深度の順序の問題を修正"
"することもできます。"

msgid "RemoteTransform2D node"
msgstr "RemoteTransform2Dノード"

msgid ""
"The :ref:`RemoteTransform2D <class_RemoteTransform2D>` node transforms nodes "
"somewhere else in the hierarchy. This node applies its own transform "
"(including any transformation it inherits from its parents) to the remote "
"node it targets."
msgstr ""
":ref:`RemoteTransform2D <class_RemoteTransform2D>` ノードは、階層内の別の場所"
"にあるノードを変形します。このノードは、自身の幾何学変換(親から継承した幾何学"
"変換の状態を含む)をターゲットのリモートノードに適用します。"

#, fuzzy
msgid ""
"This allows us to correct the visibility order of our elements, "
"independently of the locations of those parts in the cutout hierarchy."
msgstr ""
"これにより、要素の表示順序を、カットアウト階層内の部品の位置に関係なく独立し"
"て修正することができます。"

msgid ""
"Create a ``RemoteTransform2D`` node as a child of the torso. Call it "
"``remote_arm_l``. Create another RemoteTransform2D node inside the first and "
"call it ``remote_hand_l``. Use the ``Remote Path`` property of the two new "
"nodes to target the ``arm_l`` and ``hand_l`` sprites respectively:"
msgstr ""
"胴体の子として ``RemoteTransform2D`` ノードを作成します。それを "
"``remote_arm_l`` と呼びます。最初のノード内に別のRemoteTransform2Dノードを作"
"成し、\\ ``remote_hand_l`` と呼びます。 2つの新しいノードの ``Remote Path` プ"
"ロパティを使用して、それぞれ ``arm_l`` スプライトと ``hand_l`` スプライトを"
"ターゲットにします。"

msgid ""
"Moving the ``RemoteTransform2D`` nodes now moves the sprites. So we can "
"create animations by adjusting the ``RemoteTransform2D`` transforms:"
msgstr ""
"``RemoteTransform2D`` ノードを移動すると、それに対応するスプライトが移動しま"
"す。\\ ``RemoteTransform2D`` の幾何学変換を調整することでアニメーションを作成"
"できます:"

msgid "Completing the skeleton"
msgstr "スケルトンの完成"

msgid ""
"Complete the skeleton by following the same steps for the rest of the parts. "
"The resulting scene should look similar to this:"
msgstr ""
"残りのパーツについても同じ手順を実行して、スケルトンを完成させます。結果の"
"シーンは次のようになります:"

msgid ""
"The resulting rig will be easy to animate. By selecting the nodes and "
"rotating them you can animate forward kinematics (FK) efficiently."
msgstr ""
"結果として得られるリグは、アニメーション化が容易になります。ノードを選択して"
"回転させると、フォワードキネマティック(FK)が効率的にアニメートされます。"

msgid "For simple objects and rigs this is fine, but there are limitations:"
msgstr ""
"単純なオブジェクトとリグの場合、これは問題ありませんが、制限があります:"

msgid ""
"Selecting sprites in the main viewport can become difficult in complex rigs. "
"The scene tree ends up being used to select parts instead, which can be "
"slower."
msgstr ""
"複雑なリグでは、メイン ビューポートでスプライトを選択するのが難しくなる場合が"
"あります。代わりに、シーンツリーがパーツの選択に使用されることになり、作業が"
"より遅くなる可能性があります。"

msgid ""
"Inverse Kinematics (IK) is useful for animating extremities like hands and "
"feet, and can't be used with our rig in its current state."
msgstr ""
"インバースキネマティクス(IK)は、手や足などの四肢をアニメートするのに便利です"
"が、現在の状態のリグでは使用できません。"

msgid "To solve these problems we'll use Godot's skeletons."
msgstr "これらの問題を解決するために、Godotのスケルトンを使用します。"

msgid "Skeletons"
msgstr "スケルトン"

msgid ""
"In Godot there is a helper to create \"bones\" between nodes. The bone-"
"linked nodes are called skeletons."
msgstr ""
"ゴドーにはノード間に「ボーン」を作成するヘルパーがあります。ボーンにリンクさ"
"れたノードはスケルトンと呼ばれます。"

msgid ""
"As an example, let's turn the right arm into a skeleton. To create a "
"skeleton, a chain of nodes must be selected from top to bottom:"
msgstr ""
"例として、右腕をスケルトンに変えてみましょう。スケルトンを作成するには、ノー"
"ドのチェーンを上から下に選択する必要があります:"

msgid "Then, click on the Skeleton menu and select ``Make Bones``."
msgstr ""
"次に、[スケルトンのオプション]メニューをクリックし、\\ ``Make Bones``\\ "
"(v3.1.2ではMake Custom Bone(s)...です)を選択します。"

msgid "This will add bones covering the arm, but the result may be surprising."
msgstr "これにより、腕を覆う骨が追加されますが、結果に驚くかもしれません。"

msgid ""
"Why does the hand lack a bone? In Godot, a bone connects a node with its "
"parent. And there's currently no child of the hand node. With this knowledge "
"let's try again."
msgstr ""
"手には骨がないのはなぜですか？ Godotでは、ボーンはノードをその親に接続しま"
"す。そして、現在、手のノードに子はありません。この知識を得た上でもう一度試し"
"てみましょう。"

msgid ""
"The first step is creating an endpoint node. Any kind of node will do, but :"
"ref:`Position2D <class_Position2D>` is preferred because it's visible in the "
"editor. The endpoint node will ensure that the last bone has orientation."
msgstr ""
"最初の手順は、終点ノードの作成です。どのような種類のノードでも実行できます"
"が、エディタに表示されるため、\\ :ref:`Position2D <class_Position2D>` が適し"
"ています。終点ノードは、最後のボーンの方向を確定します。"

msgid ""
"Now select the whole chain, from the endpoint to the arm and create bones:"
msgstr "次に、終点から腕までのチェーン全体を選択し、ボーンを作成します:"

msgid ""
"The result resembles a skeleton a lot more, and now the arm and forearm can "
"be selected and animated."
msgstr ""
"結果はスケルトンにとても似ており、腕と前腕を選択してアニメーション化できるよ"
"うになりました。"

msgid ""
"Create endpoints for all important extremities. Generate bones for all "
"articulable parts of the cutout, with the hip as the ultimate connection "
"between all of them."
msgstr ""
"すべての重要な四肢の終点を作成します。カットアウトの関節化が可能なすべての部"
"分で骨を生成し、腰をすべての最終的な接続先として使用します。"

msgid ""
"You may notice that an extra bone is created when connecting the hip and "
"torso. Godot has connected the hip node to the scene root with a bone, and "
"we don't want that. To fix this, select the root and hip node, open the "
"Skeleton menu, click ``clear bones``."
msgstr ""
"腰と胴体を接続すると、余分な骨が作成されることに気付くかもしれません。 Godot"
"は腰ノードをボーンでシーンルートに接続しましたが、これは望ましくありません。"
"これを修正するには、ルートと腰ノードを選択し、スケルトンメニューを開き、\\ ``"
"ボーンをクリア``(v3.1.2ではカスタムボーンをクリア)をクリックします。"

msgid "Your final skeleton should look something like this:"
msgstr "最終的なスケルトンは次のようになります:"

msgid ""
"You might have noticed a second set of endpoints in the hands. This will "
"make sense soon."
msgstr ""
"手の中に2つ目の終点のセットが表示されていることに気付いたかもしれません。これ"
"は少し先で理解できます。"

msgid ""
"Now that the whole figure is rigged, the next step is setting up the IK "
"chains. IK chains allow for more natural control of extremities."
msgstr ""
"フィギュア全体がリギングされたので、次のステップはIKチェーンの設定です。IK"
"チェーンを使用すると、四肢をより自然に制御できます。"

msgid "IK chains"
msgstr "IKチェーン"

msgid ""
"IK stands for inverse kinematics. It's a convenient technique for animating "
"the position of hands, feet and other extremities of rigs like the one we've "
"made. Imagine you want to pose a character's foot in a specific position on "
"the ground. Without IK chains, each motion of the foot would require "
"rotating and positioning several other bones (the shin and the thigh at "
"least). This would be quite complex and lead to imprecise results."
msgstr ""
"IKはンバースキネマティックの略です。これは、手、足、その他のリグの先端の位置"
"をアニメーション化するときに便利な手法です。キャラクターの足を地面の特定の位"
"置にポーズしたいと想像してください。 IKチェーンがなければ、足の各動作には、他"
"のいくつかのボーン(少なくともすねと太もも)を回転させて配置する必要がありま"
"す。これは非常に複雑で、不正確な結果につながります。"

msgid ""
"IK allows us to move directly the foot while the shin and thigh self-adjust."
msgstr ""
"IKを使用すると、すねと太ももを自己調整しながら、足を直接動かすことができま"
"す。"

msgid ""
"To create an IK chain, select a chain of bones from endpoint to the base for "
"the chain. For example, to create an IK chain for the right leg, select the "
"following:"
msgstr ""
"IKチェーンを作成するには、チェーンの終点からベースまでのボーンのチェーンを選"
"択します。たとえば、右脚のIKチェーンを作成するには、次を選択します:"

msgid "Then enable this chain for IK. Go to Edit > Make IK Chain."
msgstr ""
"次に、このチェーンをIKに対して有効にします。 [スケルトンのオプション] -> [IK"
"チェーンを作成]に移動します。"

msgid "As a result, the base of the chain will turn *Yellow*."
msgstr "その結果、チェーンのベースが\\ *黄色*\\ に変わります。"

msgid ""
"Once the IK chain is set-up grab any child or grand-child of the base of the "
"chain (e.g. a foot) and move it. You'll see the rest of the chain adjust as "
"you adjust its position."
msgstr ""
"IKチェーンを設定したら、チェーンのベースの子または孫(足など)をつかんで移動し"
"ます。チェーンの位置を調整すると、チェーンの残りの部分も調整されます。"

msgid "Animation tips"
msgstr "アニメーションのヒント"

#, fuzzy
msgid ""
"The following section will be a collection of tips for creating animation "
"for your cutout rigs. For more information on how the animation system in "
"Godot works, see :ref:`doc_introduction_animation`."
msgstr ""
"次のセクションは、カットアウトリグのアニメーションを作成するためのヒント集で"
"す。Godot のアニメーション システムの動作の詳細については、\\ :ref:"
"`doc_animations` を参照してください。"

msgid "Setting keyframes and excluding properties"
msgstr "キーフレームの設定とプロパティの除外"

msgid ""
"Special contextual elements appear in the top toolbar when the animation "
"editor window is open:"
msgstr ""
"アニメーションエディタウィンドウが開いていると、特別なコンテキスト要素が上部"
"のツールバーに表示されます:"

msgid ""
"The key button inserts location, rotation, and scale keyframes for the "
"selected objects or bones at the current playhead position."
msgstr ""
"キーボタンは、選択したオブジェクトまたはボーンの位置、回転、およびスケールの"
"キーフレームを現在の再生ヘッドの位置に挿入します。"

msgid ""
"The \"loc\", \"rot\", and \"scl\" toggle buttons to the left of the key "
"button modify its function, allowing you to specify which of the three "
"properties keyframes will be created for."
msgstr ""
"キーボタンの左側にある \"loc\"、\"rot\" および \"scl\" トグルボタンはその機能"
"を変更し、3つのプロパティのとれにキーフレームが作成されるかを指定できるように"
"します。"

msgid ""
"Here's an illustration of how this can be useful: Imagine you have a node "
"which already has two keyframes animating its scale only. You want to add an "
"overlapping rotation movement to the same node. The rotation movement should "
"begin and end at different times from the scale change that's already set "
"up. You can use the toggle buttons to have only rotation information added "
"when you add a new keyframe. This way, you can avoid adding unwanted scale "
"keyframes which would disrupt the existing scale animation."
msgstr ""
"これがどのように役立つかを説明します: すでに2つのキーフレームがそのスケールの"
"みをアニメーション化しているノードがあるとします。そして、その同じノードに"
"オーバーラップする回転移動を追加しますが、この回転動作は、既に設定されている"
"スケールの変更とは異なる時間に開始および終了する必要があります。このような場"
"合は、トグルボタンを使用することで、新しいキーフレームを追加するときに回転情"
"報のみを追加できます。これにより、既存のスケールアニメーションを乱すような不"
"要なスケールキーフレームの追加を回避できます。"

msgid "Creating a rest pose"
msgstr "レストポーズの作成"

msgid ""
"Think of a rest pose as a default pose that your cutout rig should be set to "
"when no other pose is active in your game. Create a rest pose as follows:"
msgstr ""
"レストポーズは、ゲーム内で他のポーズがアクティブでないときに、カットアウトリ"
"グを設定する既定のポーズと考えてください。次のように、レストポーズを作成しま"
"す:"

msgid ""
"1. Make sure the rig parts are positioned in what looks like a \"resting\" "
"arrangement."
msgstr "1. リグパーツが「休息」の位置に配置されていることを確認します。"

msgid "Create a new animation, rename it \"rest\"."
msgstr "新しいアニメーションを作成し、\"rest\" に名前を変更します。"

msgid "Select all nodes in your rig (box selection should work fine)."
msgstr ""
"リグ内のすべてのノードを選択します(ボックス選択は正常に機能するはずです)。"

msgid ""
"4. Make sure the \"loc\", \"rot\", and \"scl\" toggle buttons are all active "
"in the toolbar."
msgstr ""
"4. ツールバーで「loc」、「rot」および「scl」のトグルボタンがすべてアクティブ"
"になっていることを確認します。"

msgid ""
"5. Press the key button. Keys will be inserted for all selected parts "
"storing their current arrangement. This pose can now be recalled when "
"necessary in your game by playing the \"rest\" animation you've created."
msgstr ""
"5. キーボタンを押します。現在の配置を保存している選択したすべての部品にキーが"
"挿入されます。このポーズは、作成した \"rest\" アニメーションを再生すること"
"で、ゲームで必要なときに呼び出すことができます。"

msgid "Modifying rotation only"
msgstr "回転のみを修正する"

msgid ""
"When animating a cutout rig, often it's only the rotation of the nodes that "
"needs to change. Location and scale are rarely used."
msgstr ""
"カットアウトリグをアニメーション化する場合、多くの場合、変更する必要があるの"
"はノードの回転だけです。場所と縮尺はほとんど使用されません。"

msgid ""
"So when inserting keys, you might find it convenient to have only the "
"\"rot\" toggle active most of the time:"
msgstr ""
"したがって、キーを挿入する際には、ほとんどの場合、「rot」トグルのみをアクティ"
"ブにすると便利です。"

msgid ""
"This will avoid the creation of unwanted animation tracks for position and "
"scale."
msgstr ""
"これにより、位置と縮尺の不要なアニメーショントラックが作成されることを回避で"
"きます。"

msgid "Keyframing IK chains"
msgstr "IKチェーンのキーフレーム"

msgid ""
"When editing IK chains, it's not necessary to select the whole chain to add "
"keyframes. Selecting the endpoint of the chain and inserting a keyframe will "
"automatically insert keyframes for all other parts of the chain too."
msgstr ""
"IKチェーンを編集する場合、キーフレームを追加するためにチェーン全体を選択する"
"必要はありません。チェーンの終点を選択してキーフレームを挿入すると、チェーン"
"の他のすべての部分にもキーフレームが自動的に挿入されます。"

msgid "Visually move a sprite behind its parent"
msgstr "親の背後にスプライトを視覚的に移動する"

msgid ""
"Sometimes it is necessary to have a node change its visual depth relative to "
"its parent node during an animation. Think of a character facing the camera, "
"who pulls something out from behind his back and holds it out in front of "
"him. During this animation the whole arm and the object in his hand would "
"need to change their visual depth relative to the body of the character."
msgstr ""
"アニメーション中に、親ノードを基準にしてノードの視覚的な深さ(前後関係)を変更"
"する必要がある場合があります。カメラの方を向くキャラクターを考えてみてくださ"
"い。キャラクターが背中の後ろから何かを引き出し、目の前に差し出します。このア"
"ニメーション中に、腕全体と手のオブジェクトは、キャラクターの体に対して視覚的"
"な深さを変更する必要があります。"

msgid ""
"To help with this there's a keyframable \"Behind Parent\" property on all "
"Node2D-inheriting nodes. When planning your rig, think about the movements "
"it will need to perform and give some thought to how you'll use \"Behind "
"Parent\" and/or RemoteTransform2D nodes. They provide overlapping "
"functionality."
msgstr ""
"これを支援するために、すべてのNode2D継承ノードにキーフレーム化が可能な "
"\"Behind Parent\" プロパティがあります。リグを計画するときは、実行する必要の"
"ある動きについて考え、\"Behind Parent\" やRemoteTransform2Dノードをどのように"
"使用するかについて考えてください。これらは、重複する機能を提供しています。"

msgid "Setting easing curves for multiple keys"
msgstr "複数のキーのイージング曲線を設定する"

#, fuzzy
msgid "To apply the same easing curve to multiple keyframes at once:"
msgstr "同じイージング曲線を複数のキーフレームに一度に適用するには:"

msgid "Select the relevant keys."
msgstr "関連するキーを選択します。"

#, fuzzy
msgid ""
"Click on the pencil icon in the bottom right of the animation panel. This "
"will open the transition editor."
msgstr ""
"アニメーションパネルの右下にある鉛筆アイコンをクリックすると、トランジション"
"エディタが開きます。"

#, fuzzy
msgid "In the transition editor, click on the desired curve to apply it."
msgstr "トランジションエディタで、目的のカーブをクリックして適用します。"

msgid "2D Skeletal deform"
msgstr "2Dスケルタル(ボーン)変形"

msgid ""
"Skeletal deform can be used to augment a cutout rig, allowing single pieces "
"to deform organically (e.g. antennae that wobble as an insect character "
"walks)."
msgstr ""
"スケルタル変形を使用して、カットリグを補強し、単一のピースを有機的に変形させ"
"ることができます(たとえば、昆虫のキャラクターが歩くとぐらつく触覚)。"

msgid ""
"This process is described in a :ref:`separate tutorial <doc_2d_skeletons>`."
msgstr ""
"このプロセスは、\\ :ref:`別のチュートリアル <doc_2d_skeletons>` で説明されて"
"います。"

msgid "Translation status"
msgstr "翻訳ステータス"
