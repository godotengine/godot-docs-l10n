# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D lights and shadows"
msgstr "2Dライトとシャドウ"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"This tutorial explains how the 2D lighting works in the `lights and shadows "
"<https://github.com/godotengine/godot-demo-projects/tree/master/2d/"
"lights_and_shadows>`_ demo project. It begins with a brief description of "
"the resources used in the final demo and then describes how to make a scene "
"like the demo step by step."
msgstr ""
"このチュートリアルでは、\\ `lights and shadows <https://github.com/"
"godotengine/godot-demo-projects/tree/master/2d/lights_and_shadows>`_ のデモプ"
"ロジェクトで2Dライティングがどのように機能するかを説明します。最後のデモで使"
"用されるリソースの簡単な説明から始まり、デモのようなシーンを段階的に作成する"
"方法を説明します。"

#, fuzzy
msgid ""
"All the resources for this tutorial can be found in the `official demo "
"repository <https://github.com/godotengine/godot-demo-projects>`_ on GitHub. "
"I suggest you download it before starting. Alternatively, it can be "
"downloaded from the Project Manager. Launch Godot and in the top bar select "
"\"Templates\" and search for \"2D Lights and Shadows Demo\"."
msgstr ""
"このチュートリアルのすべてのリソースは、githubの `official demo repository "
"<https://github.com/godotengine/godot-demo-projects>`_ にあります。始める前に"
"ダウンロードすることをお勧めします。または、プロジェクトマネージャからダウン"
"ロードすることもできます。 Godotを起動し、トップバーで \"Templates\" を選択し"
"て \"2D Lights and Shadows Demo\" を検索してください。"

msgid "Setup"
msgstr "セットアップ"

msgid ""
"For this demo we use four textures: two for the lights, one for the shadow "
"casters, and one for the background. I've included links to them all here if "
"you want to download them separately from the demo."
msgstr ""
"このデモでは、ライトに2つ、シャドウキャスタに1つ、バックグラウンドに1つ、合計"
"4つのテクスチャを使用します。デモとは別にダウンロードしたい人向けにここにリン"
"クを貼っておきます。"

msgid ""
"The first is the background image (`background.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/background.png>`_) used in the demo. You do not "
"necessarily need a background, but we use one for the demo."
msgstr ""
"1つ目は、デモで使用される背景画像(`background.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/background.png>`_)です。背景は必ずしも必要ではありません"
"が、デモでは背景を使用します。"

msgid ""
"The second is a plain black image (`caster.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/caster.png>`_) to use as our shadow caster object. For a "
"top down game this could be a wall or any other object that casts a shadow."
msgstr ""
"二つ目は私たちのシャドーキャスターオブジェクトとして使うための普通の黒いイ"
"メージ (`caster.png <https://raw.githubusercontent.com/godotengine/godot-"
"demo-projects/master/2d/lights_and_shadows/caster.png>`_) です。トップダウン"
"ゲームの場合、これは壁や影を落とすその他のオブジェクトです。"

msgid ""
"Next is the light itself (`light.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/light.png>`_). "
"If you click the link you will notice how large it is. The image you use for "
"a light should cover the area you want your light to cover. This image is "
"1024x1024 pixels, so you should use it to cover 1024x1024 pixels in your "
"game."
msgstr ""
"次はライトそのものです (`light.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/light.png>`_)。 "
"リンクをクリックすると、その大きさがわかります。ライトに使用する画像は、ライ"
"トがカバーする領域をカバーする必要があります。この画像は1024x1024ピクセルです"
"ので、ゲーム内で1024x1024ピクセルをカバーするために使用してください。"

msgid ""
"Lastly, we have the spotlight image (`spot.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/spot.png>`_). The demo uses a blob to show where the "
"light is and the larger light image to show the effect of the light upon the "
"rest of the scene."
msgstr ""
"最後に、スポットライト画像 (`spot.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/spot.png>`_) が"
"あります。 デモは、光がどこにあるかを示すためにブロブを使用し、シーンの残りの"
"部分に対する光の影響を示すためにより大きい光イメージを使用します。"

msgid "Nodes"
msgstr "ノード"

msgid "The demo uses four different nodes:"
msgstr "このデモでは、次の4つの異なるノードを使用します:"

msgid ":ref:`CanvasModulate <class_CanvasModulate>`"
msgstr "\\ :ref:`CanvasModulate <class_CanvasModulate>`"

msgid ":ref:`Sprite <class_Sprite>`"
msgstr "\\ :ref:`Sprite <class_Sprite>`"

msgid ":ref:`Light2D <class_Light2D>`"
msgstr "\\ :ref:`Light2D <class_Light2D>`"

msgid ":ref:`LightOccluder2D <class_LightOccluder2D>`"
msgstr "\\ :ref:`LightOccluder2D <class_LightOccluder2D>`"

msgid ""
":ref:`CanvasModulate<class_CanvasModulate>` is used to darken the scene."
msgstr ""
"\\ :ref:`CanvasModulate<class_CanvasModulate>` は、シーンを暗くするために使用"
"します。"

msgid ""
":ref:`Sprites <class_Sprite>` are used to display the textures for the light "
"blobs, the background, and for the shadow casters."
msgstr ""
"\\ :ref:`Sprites <class_Sprite>` は、ライトブロブ、バックグラウンド、および"
"シャドウキャスタのテクスチャを表示するために使用されます。"

msgid ""
":ref:`Light2Ds <class_Light2D>` are used to light the scene. The way a light "
"typically works is by adding a selected texture over the rest of the scene "
"to simulate lighting. But it can be used in other ways, for example masking "
"out parts of the scene."
msgstr ""
"\\ :ref:`Light2Ds <class_Light2D>` はシーンのライティングに使用されます。ライ"
"トは通常、シーンの残りの部分に選択したテクスチャを追加してライトをシミュレー"
"トします。ただし、シーンの一部をマスキングするなど、他の方法で使用することも"
"できます。"

msgid ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` are used to tell the shader "
"which parts of the scene cast shadows. The shadows appear only on areas "
"covered by the :ref:`Light2D <class_Light2D>` and their direction is based "
"on the center of the :ref:`Light <class_Light2D>`."
msgstr ""
"\\ :ref:`LightOccluder2Ds <class_LightOccluder2D>` は、シーンのどの部分がシャ"
"ドウを投影するかをシェーダに伝えるために使用されます。シャドウは \\ :ref:"
"`Light2D <class_Light2D>` で覆われた領域にのみ表示され、その方向は \\ :ref:"
"`Light <class_Light2D>` の中心に基づいています。"

msgid "Lights"
msgstr "ライト"

msgid ""
":ref:`Lights <class_Light2D>` cover the entire extent of their respective "
"Texture. They use additive blending to add the color of their texture to the "
"scene."
msgstr ""
"\\ :ref:`Lights <class_Light2D>` はそれぞれのテクスチャの全範囲をカバーしま"
"す。加算ブレンドを使用して、シーンにテクスチャのカラーを追加します。"

msgid ""
":ref:`Lights <class_Light2D>` have four ``Modes``: ``Add``, ``Sub``, "
"``Mix``, and ``Mask``."
msgstr ""
":ref:`ライト<class_Light2D>` には次の4つの\\ ``モード``\\ があります: "
"``Add``\\ 、\\ ``Sub``\\ 、\\ ``Mix``\\ 、 および\\ ``Mask``\\ 。"

msgid ""
"``Add`` adds the color of the light texture to the scene. It brightens the "
"area under the light."
msgstr ""
"``Add`` を選択すると、ライトテクスチャのカラーがシーンに追加されます。ライト"
"の下の領域を明るくします。"

msgid ""
"``Sub`` subtracts the color of the light from the scene. It darkens the area "
"under the light."
msgstr ""
"``Sub`` を選択すると、シーンからライトのカラーが差し引かれます。光の下の部分"
"が暗くなります。"

msgid ""
"``Mix`` mixes the color of the light with the underlying scene. The "
"resulting brightness is halfway between the color of the light and the color "
"underneath."
msgstr ""
"``Mix`` は、ライトのカラーと下にあるシーンをミックスします。結果として生じる"
"明るさは、ライトのカラーとその下のカラーの中間になります。"

msgid ""
"``Mask`` is used to mask out areas that are covered by the light. Masked out "
"areas are hidden or revealed based on the color of the light."
msgstr ""
"``Mask`` は、ライトで覆われた領域をマスクするために使用します。マスクされた領"
"域は、ライトのカラーに基づいて非表示または表示されます。"

msgid ""
"For the demo the lights have two components, the :ref:`Light "
"<class_Light2D>` itself (which is the effect of the light), and a :ref:"
"`Sprite <class_Sprite>` blob which is an image showing the location of the "
"light source. A child :ref:`Sprite <class_Sprite>` is not necessary to make "
"a :ref:`Light <class_Light2D>` work."
msgstr ""
"デモでは、ライトには \\ :ref:`Light <class_Light2D>` 自体(ライトの効果)と、光"
"源の位置を示すイメージである \\ :ref:`Sprite <class_Sprite>` ブロブの2つのコ"
"ンポーネントがあります。 \\ :ref:`Light <class_Light2D>` を機能させるのに子"
"の \\ :ref:`Sprite <class_Sprite>` は必要ありません。"

msgid "Shadows"
msgstr "シャドウ"

msgid ""
"Shadows are made by intersecting a :ref:`Light <class_Light2D>` with a :ref:"
"`LightOccluder2D <class_LightOccluder2D>`."
msgstr ""
"影は、 \\ :ref:`Light <class_Light2D>` と \\ :ref:`LightOccluder2D "
"<class_LightOccluder2D>` を交差させることによって作成されます。"

msgid ""
"By default shadows are turned off. To turn them on click on the :ref:`Light "
"<class_Light2D>` and under the Shadows section check ``Enabled``."
msgstr ""
"デフォルトでは影はオフになっています。オンにするには、 \\ :ref:`Light "
"<class_Light2D>` をクリックし、Shadowsセクションの ``Enabled`` をチェックしま"
"す。"

msgid ""
"In the demo we are using a :ref:`Sprite <class_Sprite>` with a Texture on it "
"to make the \"Shadow Casters\", but in reality all you need is a couple of :"
"ref:`LightOccluder2Ds <class_LightOccluder2D>`. By itself the :ref:"
"`LightOccluder2D <class_LightOccluder2D>` looks like a dark spot and in this "
"demo the :ref:`Sprite <class_Sprite>` is just a black square."
msgstr ""
"このデモでは、テクスチャが適用された \\ :ref:`Sprite <class_Sprite>` を使用し"
"て \"シャドウキャスタ\" を作成していますが、実際に必要なのは \\ :ref:"
"`LightOccluder2Ds <class_LightOccluder2D>` をいくつか使用することだけです。 "
"\\ :ref:`LightOccluder2Ds <class_LightOccluder2D>` 自体は暗いスポットのように"
"見えますが、このデモでは \\ :ref:`Sprite <class_Sprite>` はただの黒い四角形で"
"す。"

msgid "Step by step"
msgstr "ステップ・バイ・ステップ"

msgid ""
"Now that we have covered the basics of the nodes being used, we can now walk "
"step by step through the process of making a scene like the one found in the "
"demo."
msgstr ""
"使用するノードの基本について説明したので、デモで使用したようなシーンを作成す"
"るプロセスを、順を追って説明します。"

msgid ""
"First add a :ref:`Sprite <class_Sprite>` and set its texture to the "
"`background image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/background.png>`_. For your game this "
"can be any background you choose. For this style of shadow it is most likely "
"to be a floor texture."
msgstr ""
"最初に \\ :ref:`Sprite <class_Sprite>` を追加し、そのテクスチャを `バックグラ"
"ウンドイメージ https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/background.png>`_ に設定します。あなた"
"が作成するゲームでは、任意の背景を選択できます。このタイプのシャドウでは、床"
"のテクスチャが最も一般的です。"

msgid ""
"Next create three :ref:`Light2D's <class_Light2D>` and set their textures to "
"the `light image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/light.png>`_. You can alter their "
"color in the top section. By default shadows are turned off and the ``mode`` "
"is set to ``add``. This means that each light adds its own color to whatever "
"is underneath."
msgstr ""
"次に、3つの \\ :ref:`Light2D's <class_Light2D>` を作成し、そのテクスチャを `"
"ライトイメージ <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/light.png>`_ に設定します。上部で色を変"
"更できます。既定では、シャドウはオフになっており、 ``mode`` は ``add`` に設定"
"されています。つまり、各ライトはその下にあるものに独自のカラーを追加します。"

msgid ""
"Next add a child :ref:`Sprite <class_Sprite>` to each of the :ref:`Light "
"<class_Light2D>` nodes, and set the :ref:`Sprite's <class_Sprite>` texture "
"to the `blob image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/spot.png>`_. Each of these should stay "
"centered on the :ref:`Light <class_Light2D>` node. The blob is the image of "
"the light itself while the :ref:`Light <class_Light2D>` shows the effect "
"that the light has on the scene. The :ref:`LightOccluder2D's "
"<class_LightOccluder2D>` will treat the position of the light as the center "
"of the :ref:`Light <class_Light2D>` node, which is why we want the blob to "
"be centered on its parent :ref:`Light <class_Light2D>`."
msgstr ""
"次に、各 :ref:`Light <class_Light2D>` ノードに子 :ref:`Sprite "
"<class_Sprite>` を追加し、\\ :ref:`Sprite<class_Sprite>` のテクスチャを "
"`blob image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/spot.png>`_ に設定します。これらはそれ"
"ぞれ :ref:`Light <class_Light2D>` ノードの中心に配置する必要があります。 blob"
"はライト自体の画像であり、\\ :ref:`Light <class_Light2D>` はライトがシーンに"
"与える影響を示します。\\ :ref:`LightOccluder2D <class_LightOccluder2D>`は、ラ"
"イトの位置を :ref:`Light <class_Light2D>` ノードの中心として扱います。そのた"
"め、blobを親 :ref:`Light <class_Light2D> ` の中央に配置する必要があります。"

msgid ""
"The animations in the demo will not be covered here. See :ref:"
"`doc_introduction_animation` for information on creating animations."
msgstr ""

msgid ""
"Right now the scene should look too bright. This is because all three lights "
"are adding color to the scene. This is why the demo uses a :ref:"
"`CanvasModulate <class_CanvasModulate>` in the scene. The :ref:"
"`CanvasModulate <class_CanvasModulate>` multiples the entire viewport by a "
"specific color."
msgstr ""
"現在のシーンは明るすぎるはずです。これは、3つのライトすべてがシーンにカラーを"
"追加しているためです。このため、デモではシーンで \\ :ref:`CanvasModulate "
"<class_CanvasModulate>` を使用します。 \\ :ref:`CanvasModulate "
"<class_CanvasModulate>` は、ビューポート全体を特定のカラーで乗算します。"

msgid ""
"Add a :ref:`CanvasModulate <class_CanvasModulate>` to the scene and set its "
"color to ``rgb(70, 70, 70)``. This will make the scene sufficiently dark to "
"see the effects of the lights distinctly."
msgstr ""
"\\ :ref:`CanvasModulate <class_CanvasModulate>` をシーンに追加し、そのカラー"
"を ``RGB(70, 70, 70)`` に設定します。これにより、シーンが十分暗くなり、ライト"
"の効果がはっきりと見えます。"

msgid "Now we add the shadow casters."
msgstr "次に、シャドウキャスタを追加します。"

msgid ""
"The demo uses a :ref:`Node <class_Node2D>` named \"casters\" to organize the "
"shadow casters. Add a :ref:`Node2D <class_Node2D>` to the scene. It will be "
"used to group all the shadow casters together. This way we can show and hide "
"them all at the same time."
msgstr ""
"このデモでは、 \"casters\" という名前の \\ :ref:`Node <class_Node2D>` を使用"
"してシャドウキャスタを編成します。 \\ :ref:`Node2D <class_Node2D>` をシーンに"
"追加します。すべてのシャドウキャスタをグループ化するために使用されます。この"
"ようにして、すべてを同時に表示/非表示にできます。"

msgid ""
"Each shadow caster is made of a :ref:`Sprite <class_Sprite>`, with a :ref:"
"`LightOccluder2D <class_LightOccluder2D>` child. For the demo the :ref:"
"`Sprite <class_Sprite>` has a texture set to the `caster image <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/caster.png>`_ and nothing else. The child :ref:"
"`LightOccluder2D <class_LightOccluder2D>` is where all the magic happens. In "
"a game the :ref:`Sprite <class_Sprite>` could be more than a black box; it "
"could be an image of whatever object is casting the shadow: a wall, a "
"magical chest, or anything else."
msgstr ""
"各シャドウキャスタは \\ :ref:`Sprite <class_Sprite>` と \\ :ref:"
"`LightOccluder2D <class_LightOccluder2D>` の子で構成されています。デモでは、 "
"\\ :ref:`Sprite <class_Sprite>` には `キャスタイメージ <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/caster.png>` だけにテクスチャが設定されています。すべての"
"マジックが発生するのは、子の \\ :ref:`LightOccluder2D "
"<class_LightOccluder2D>` です。あなたのゲームでは \\ :ref:`Sprite "
"<class_Sprite>` はブラックボックス以上のものになるかもしれません。壁や魔法の"
"箱など、影を落としている物体の画像になるかもしれませんね。"

msgid ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` tell the game what shape the "
"occluder has. They hold an :ref:`OccluderPolygon2D "
"<class_OccluderPolygon2D>`, which is a container for a polygon and some "
"other information. For this demo, since our wall is a square, we set "
"``Polygon`` to a square. The other default settings are fine."
msgstr ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` は、オククルーダーがどのよう"
"な形状を持っているかをゲームに伝えます。それらは :ref:`OccluderPolygon2D "
"<class_OccluderPolygon2D>` を保持します, これは、ポリゴンとその他の情報のコン"
"テナです。このデモでは、壁が正方形であるため、 ``Polygon`` を正方形に設定しま"
"す。その他の既定の設定でも問題ありません。"

msgid ""
"The first setting, ``Closed`` can be either ``on`` or ``off``. A closed "
"polygon occludes light coming from all directions. An open polygon only "
"occludes light from one direction."
msgstr ""
"1番目の設定の ``Closed`` は ``on`` または ``off`` に設定できます。閉じた"
"Polygonは、すべての方向からの光を遮断します。開いたPolygonは1つの方向からの光"
"のみを遮ります。"

msgid ""
"``Cull Mode`` lets you select which direction gets culled. The default is "
"``Disabled``, meaning the occluder will cast a shadow no matter which side "
"the light is on. The other two settings ``Clockwise`` and ``Counter-"
"Clockwise`` refer to the winding order of the vertices of the polygon. The "
"winding order is used to determine which side of the line is inside the "
"polygon. Only outward facing lines cast shadows."
msgstr ""
"``Cull Mode`` では、非表示にする方向を選択できます。既定値は ``Disabled`` "
"で、ライトがどちらの側にあってもオクルダがシャドウを投影します。他の2つの設"
"定 (``Clockwise`` と``Counter-Clockwise`` ) は、polygonの頂点の巻上げ順序を示"
"します。ワインディング順序は、ラインのどちら側がpolygonの内側にあるかを決定す"
"るために使用されます。外向きの線だけが影を落とします。"

msgid ""
"To illustrate the difference, here is an image of a :ref:`LightOccluder2D "
"<class_LightOccluder2D>` with ``Closed`` set to ``off`` in the "
"corresponding :ref:`OccluderPolygon2D <class_OccluderPolygon2D>`, so that "
"the lines of the polygon can be seen:"
msgstr ""
"違いを説明するために、対応する :ref:`OccluderPolygon2D "
"<class_OccluderPolygon2D>` で ``Closed`` が ``off`` に設定された :ref:"
"`LightOccluder2D <class_LightOccluder2D>` のイメージを以下に示します。ポリゴ"
"ンの線が見えます:"

msgid "``Cull Mode`` is set to ``Disabled``. All three lines cast shadows."
msgstr "``Cull Mode`` は ``Disabled`` です。3本の線はすべて影を落とします。"

msgid ""
"``Cull Mode`` is set to ``Clockwise``. Only the top and right lines cast "
"shadows."
msgstr ""
"``Cull Mode`` は ``Clockwise`` (時計回り)上部と右側の線だけが影を落とします。"

msgid ""
"``Cull Mode`` is set to ``Counter-Clockwise``. Only the bottom line casts a "
"shadow. If ``Closed`` was set to ``on`` there would be an additional "
"vertical line on the left which would cast a shadow as well."
msgstr ""
"``Cull Mode`` は ``Counter-Clockwise`` (反時計回り)下の線だけが影を落としま"
"す。 ``Closed`` が ``on`` に設定されている場合、左側に垂直なラインが追加さ"
"れ、シャドウが投影されます。"

msgid ""
"When you have added the :ref:`LightOccluder2Ds <class_LightOccluder2D>` the "
"shadows still won't appear. You need to go back into the :ref:`Light2Ds "
"<class_Light2D>` and under the Shadow section set ``Enable`` to ``on``. This "
"turns on shadows with hard edges like in the image below."
msgstr ""
"\\ :ref:`LightOccluder2Ds <class_LightOccluder2D>` を追加しても、シャドウは表"
"示されません。 \\ :ref:`Light2Ds <class_Light2D>` に戻り、Shadowセクションで"
"``Enable`` を ``on`` に設定します。下のイメージのように、ハードエッジのシャド"
"ウがオンになります。"

msgid ""
"To give the shadows that nice, soft edge look we set the variables "
"``filter``, ``filter smooth``, and ``gradient length``. Godot supports "
"`Percentage Closer Filtering <https://developer.nvidia.com/gpugems/GPUGems/"
"gpugems_ch11.html>`_ (PCF), which takes multiple samples of the shadow map "
"around a pixel and blurs them to create a smooth shadow effect. The higher "
"the number of samples the smoother the shadow will look, but the slower it "
"will run. That is why Godot provides 3-13 samples by default and allows you "
"to choose. The demo uses PCF7."
msgstr ""
"影を美しくソフトなエッジに見せるために、変数 ``filter``\\ 、\\ ``filter "
"smooth``\\ 、および ``gradient length`` を設定します。 Godotは `Percentage "
"Closer Filtering <https://developer.nvidia.com/gpugems/GPUGems/gpugems_ch11."
"html>`_ (PCF)をサポートしています。これは、ピクセルの周りのシャドウマップの複"
"数のサンプルを取得し、それらをぼかして滑らかなシャドウ効果を作成します。サン"
"プル数が多いほど、シャドウは滑らかに見えますが、実行は遅くなります。 速度と品"
"質のトレードオフが、Godotがデフォルトで3〜13個のサンプルを提供し、選択できる"
"ようにしている理由です。デモではPCF7を使用します。"

msgid ""
"This is a shadow rendered with the demo's settings. ``gradient length`` is "
"set to ``1.3``, ``filter smooth`` is set to ``11.1``, and ``filter`` is set "
"to ``PCF7``."
msgstr ""
"これは、デモの設定でレンダリングされた影です。 ``gradient length`` を "
"``1.3`` に、 ``filter smooth`` を ``11.1`` に、 ``filter`` を ``PCF7`` に設定"
"します。"

msgid ""
"``filter`` is set to ``PCF13``. Notice how the shadow becomes wider, this is "
"because the distance between samples is based on the variable ``filter "
"smooth``."
msgstr ""
"``filter`` は ``PCF13`` に設定されています。サンプル間の距離が ``filter "
"smooth`` に基づいてシャドウがどのように広くなるかに確認してください。"

msgid ""
"In order to make use of filtering you need to set the ``filter smooth`` "
"variable. This dictates how far apart the samples are. If you want the soft "
"area to extend quite far, you can increase the size of ``filter smooth``. "
"However, with few samples and a large filter smooth, you can see lines "
"forming between the samples."
msgstr ""
"フィルタリングを利用するには、\\ ``filter smooth`` 変数を設定する必要がありま"
"す。これは、サンプルの間隔を決定します。ソフト領域をかなり遠くまで拡張する場"
"合は、\\ ``filter smooth`` のサイズを大きくすることができます。ただし、サンプ"
"ルが少なく、滑らかにするフィルタの影響範囲が大きい場合は、サンプル間に線(マッ"
"ハバンド)が形成されていることがわかります。"

msgid "``filter smooth`` is set to ``30``."
msgstr "``filter smooth`` を ``30`` に設定しています。"

msgid ""
"The different :ref:`Light <class_Light2D>` nodes in the demo use different "
"values for filter smooth. Play around with it and see what you like."
msgstr ""
"デモのさまざまな \\ :ref:`Light <class_Light2D>` では、filter smoothにさまざ"
"まな値を使用しています。いろいろやってみて、気に入ったものを見つけてくださ"
"い。"

msgid "``filter smooth`` is set to ``0``."
msgstr "``filter smooth`` を ``0`` に設定しています。"

msgid ""
"Lastly, there is the variable ``gradient length``. For some smooth shadows "
"it is preferable not to have the shadow start immediately on the object, as "
"this produces a hard edge. The gradient length variable creates a smooth "
"gradient to begin the shadow to reduce the effect of the hard edge."
msgstr ""
"最後に、変数 ``gradient length`` があります。スムーズシャドウでは、ハード "
"エッジを生成するので、オブジェクト上でシャドウがすぐに開始しないようにするこ"
"とをお勧めします。gradient length変数は、ハード エッジの効果を減らすために影"
"の開始側に滑らかなグラデーションを作成します。"

msgid "``gradient length`` is set to ``0``."
msgstr "``gradient length`` を ``0`` に設定しています。"

msgid "``gradient length`` is set to ``10``."
msgstr "``gradient length`` を ``10`` に設定しています。"

msgid ""
"You will need to play around with the options a bit to find settings that "
"suit your project. There is no right solution for everyone, which is why "
"Godot provides so much flexibility. Just keep in mind that the higher "
"``filter`` set the more expensive the shadows will be."
msgstr ""
"プロジェクトに合った設定を見つけるには、オプションを少し試してみる必要があり"
"ます。。すべての人に適切なソリューションはありません。なので、Godotは非常に柔"
"軟な選択性を提供します。効果の高い ``filter`` セットほど影が(処理コストが)高"
"額になることに注意してください。"

msgid "Translation status"
msgstr "翻訳ステータス"
