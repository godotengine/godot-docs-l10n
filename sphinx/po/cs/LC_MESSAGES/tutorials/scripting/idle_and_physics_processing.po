# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Idle and Physics Processing"
msgstr ""

msgid ""
"Games run in a loop. Each frame, you need to update the state of your game "
"world before drawing it on screen. Godot provides two virtual methods in the "
"Node class to do so: :ref:`Node._process() <class_Node_method__process>` "
"and :ref:`Node._physics_process() <class_Node_method__physics_process>`. If "
"you define either or both in a script, the engine will call them "
"automatically."
msgstr ""

msgid "There are two types of processing available to you:"
msgstr ""

msgid ""
"**Idle processing** allows you to run code that updates a node every frame, "
"as often as possible."
msgstr ""

msgid ""
"**Physics processing** happens at a fixed rate, 60 times per second by "
"default. This is independent of your game's actual framerate, and keeps "
"physics running smoothly. You should use it for anything that involves the "
"physics engine, like moving a body that collides with the environment."
msgstr ""

msgid ""
"You can activate idle processing by defining the ``_process()`` method in a "
"script. You can turn it off and back on by calling :ref:`Node.set_process() "
"<class_Node_method_set_process>`."
msgstr ""
"Zpracování v nečinnosti můžete aktivovat definováním metody ``_process()`` "
"ve skriptu. Můžete ji vypnout a znovu zapnout voláním :ref:`Node."
"set_process() <class_Node_method_set_process>`."

msgid "The engine calls this method every time it draws a frame:"
msgstr ""

msgid ""
"Keep in mind that the frequency at which the engine calls ``_process()`` "
"depends on your application's framerate, which varies over time and across "
"devices."
msgstr ""
"Je důležité mít na paměti, že frekvence, se kterou bude ``_process ()`` "
"vyvolávána, závisí na tom, na jakém FPS (snímky za sekundu) vaše aplikace "
"běží. Tato rychlost může kolísat jak v průběhu času tak vzhledem k "
"rozdílnému výkonu jednotlivých zařízení."

msgid ""
"The function's ``delta`` parameter is the time elapsed in seconds since the "
"previous call to ``_process()``. Use this parameter to make calculations "
"independent of the framerate. For example, you should always multiply a "
"speed value by ``delta`` to animate a moving object."
msgstr ""

msgid ""
"Physics processing works with a similar virtual function: "
"``_physics_process()``. Use it for calculations that must happen before each "
"physics step, like moving a character that collides with the game world. As "
"mentioned above, ``_physics_process()`` runs at fixed time intervals as much "
"as possible to keep the physics interactions stable. You can change the "
"interval between physics steps in the Project Settings, under Physics -> "
"Common -> Physics Fps. By default, it's set to run 60 times per second."
msgstr ""
"Zpracování fyziky pomocí ``_physics_process ()`` je podobné, ale mělo by být "
"použito pro akce, které musí nastat před každým fyzikálním krokem, jako je "
"například ovládání postavy. Vždy běží před zpracováním kroku fyziky a je "
"volán ve fixních časových intervalech: standardně 60krát za sekundu. "
"Interval můžete změnit z Nastavení projektu v části Fyzika -> Společné -> "
"Fyzika Fps."

msgid ""
"The function ``_process()`` is not synchronized with physics. Its rate "
"depends on hardware and game optimization. It also runs after the physics "
"step in single-threaded games."
msgstr ""
"Funkce ``_process ()`` však není synchronizována s fyzikou. Její obnovovací "
"frekvence není konstantní a závisí na hardwaru a optimalizaci hry. U "
"jednovláknových her je spouštěna až po dokončení fyzikálního kroku."

msgid ""
"You can see the ``_process()`` function at work by creating a scene with a "
"single Label node, with the following script attached to it:"
msgstr ""
"Jednoduchý způsob, jak vidět funkci ``_process()`` při práci je vytvořit "
"scénu s jediným Label uzlem s následujícím skriptem:"

msgid "When you run the scene, you should see a counter increasing each frame."
msgstr ""
"Ukáže nám to počítadlo, které se s každým dalším framem (snímkem) zvyšuje."

msgid "Translation status"
msgstr "Stav překladu"
