# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript style guide"
msgstr "Průvodce stylem GDScript"

msgid ""
"This style guide lists conventions to write elegant GDScript. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""
"Tento průvodce stylem uvádí konvence pro psaní elegantního GDScriptu. Cílem "
"je podpořit psaní čistého, čitelného kódu a podporovat konzistenci napříč "
"projekty, diskusemi a kurzy. Doufejme, že to také podpoří vývoj nástrojů "
"automatického formátování."

msgid ""
"Since GDScript is close to Python, this guide is inspired by Python's `PEP 8 "
"<https://www.python.org/dev/peps/pep-0008/>`__ programming style guide."
msgstr ""
"Protože GDScript je blízký jazyku Python, je tato příručka inspirována "
"příručkou `PEP 8 <https://www.python.org/dev/peps/pep-0008/>`__ "
"programovacího stylu jazyka Python."

msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""
"Průvodci stylem nejsou zamýšleny jako striktní pravidla. Občas se může stát, "
"že některé z níže uvedených pokynů nebudete moci použít. V takovém případě "
"se řiďte vlastním úsudkem a požádejte kolegy vývojáře o radu."

msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""
"Obecně platí, že udržování konzistentního kódu v projektech a v týmu je "
"důležitější než dodržování tohoto návodu do puntíku."

msgid ""
"Godot's built-in script editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""
"Vestavěný editor skriptů Godot používá mnoho těchto konvencí ve výchozím "
"nastavení. Nechte si s jím pomoci."

msgid "Here is a complete class example based on these guidelines:"
msgstr "Zde je kompletní příklad třídy založený na těchto pokynech:"

msgid "Formatting"
msgstr "Formátování"

msgid "Encoding and special characters"
msgstr "Kódování a speciální znaky"

msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr ""
"Pro zalomení řádků používejte znaky pro posuv řádku (**LF**), nikoli CRLF "
"nebo CR. *(výchozí nastavení editoru)*"

msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""
"Na konci každého souboru použijte jeden znak posuvu řádku. *(výchozí "
"nastavení editoru)*"

msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""
"Použijte kódování **UTF-8** bez značky pořadí bajtů <https://en.wikipedia."
"org/wiki/Byte_order_mark>`_. *(výchozí nastavení editoru)*"

msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr ""
"Pro odsazení použijte místo mezer **Tabulátory**. *(výchozí nastavení "
"editoru)*"

msgid "Indentation"
msgstr "Odsazení"

msgid "Each indent level should be one greater than the block containing it."
msgstr ""
"Každá úroveň odsazení by měla být o jednu větší než blok, který ji obsahuje."

msgid "**Good**:"
msgstr "**Dobré**:"

msgid "**Bad**:"
msgstr "**Špatné**:"

msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""
"K odlišení pokračovaní řádků od běžných bloků kódu použijte 2 úrovně "
"odsazení."

msgid ""
"Exceptions to this rule are arrays, dictionaries, and enums. Use a single "
"indentation level to distinguish continuation lines:"
msgstr ""
"Výjimkou tvoří pole, slovníky a výčty. Pro odlišení pokračovacích řádků "
"použijte jednu úroveň odsazení:"

msgid "Trailing comma"
msgstr "Koncová čárka"

msgid ""
"Use a trailing comma on the last line in arrays, dictionaries, and enums. "
"This results in easier refactoring and better diffs in version control as "
"the last line doesn't need to be modified when adding new elements."
msgstr ""
"V polích, slovnících a výčtech používejte na posledním řádku čárku. To vede "
"ke snazšímu refaktoringu a lepšímu porovnávání ve správě verzí, protože při "
"přidávání nových prvků není třeba upravovat poslední řádek."

msgid ""
"Trailing commas are unnecessary in single-line lists, so don't add them in "
"this case."
msgstr ""
"Koncové čárky jsou v jednořádkových seznamech zbytečné, proto je v tomto "
"případě nepřidávejte."

msgid "Blank lines"
msgstr "Prázdné řádky"

msgid "Surround functions and class definitions with two blank lines:"
msgstr "Definice funkcí a tříd obklopte dvěma prázdnými řádky:"

msgid "Use one blank line inside functions to separate logical sections."
msgstr ""
"Uvnitř funkcí použijte jeden prázdný řádek pro oddělení logických sekcí."

msgid ""
"We use a single line between classes and function definitions in the class "
"reference and in short code snippets in this documentation."
msgstr ""

msgid "Line length"
msgstr "Délka řádku"

msgid "Keep individual lines of code under 100 characters."
msgstr "Udržujte jednotlivé řádky kódu pod 100 znaků."

msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two scripts opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""
"Pokud můžete, snažte se, aby řádky neměly více než 80 znaků. To usnadňuje "
"čtení kódu na malých displejích a při otevření dvou skriptů vedle sebe v "
"externím textovém editoru. Například při prohlížení rozdílové revize."

msgid "One statement per line"
msgstr "Jeden příkaz na řádek"

msgid ""
"Never combine multiple statements on a single line. No, C programmers, not "
"even with a single line conditional statement."
msgstr ""
"Nikdy nekombinujte více příkazů na jednom řádku. Ne, programátoři v C, ani s "
"jednořádkovým podmíněným příkazem."

msgid "The only exception to that rule is the ternary operator:"
msgstr "Jedinou výjimkou z tohoto pravidla je ternární operátor:"

msgid "Format multiline statements for readability"
msgstr ""

msgid ""
"When you have particularly long ``if`` statements or nested ternary "
"expressions, wrapping them over multiple lines improves readability. Since "
"continuation lines are still part of the same expression, 2 indent levels "
"should be used instead of one."
msgstr ""

msgid ""
"GDScript allows wrapping statements using multiple lines using parentheses "
"or backslashes. Parentheses are favored in this style guide since they make "
"for easier refactoring. With backslashes, you have to ensure that the last "
"line never contains a backslash at the end. With parentheses, you don't have "
"to worry about the last line having a backslash at the end."
msgstr ""

msgid ""
"When wrapping a conditional expression over multiple lines, the ``and``/"
"``or`` keywords should be placed at the beginning of the line continuation, "
"not at the end of the previous line."
msgstr ""

msgid "Avoid unnecessary parentheses"
msgstr "Vyhněte se zbytečným závorkám"

msgid ""
"Avoid parentheses in expressions and conditional statements. Unless "
"necessary for order of operations or wrapping over multiple lines, they only "
"reduce readability."
msgstr ""
"Vyhněte se závorkám ve výrazech a podmíněných příkazech. Pokud to není nutné "
"pro pořadí operací nebo obalení přes více řádků, pouze snižují čitelnost."

msgid "Boolean operators"
msgstr "Logické operátory"

msgid ""
"Prefer the plain English versions of boolean operators, as they are the most "
"accessible:"
msgstr ""
"Dávejte přednost jednoduchým anglickým verzím logických operátorů, protože "
"jsou nejpřístupnější:"

msgid "Use ``and`` instead of ``&&``."
msgstr "Místo ``&&`` použijte ``and``."

msgid "Use ``or`` instead of ``||``."
msgstr "Místo ``||``` použijte ``or``."

msgid ""
"You may also use parentheses around boolean operators to clear any "
"ambiguity. This can make long expressions easier to read."
msgstr ""
"Můžete také použít závorky kolem logických operátorů, abyste odstranili "
"případné nejasnosti. To může usnadnit čtení dlouhých výrazů."

msgid "Comment spacing"
msgstr "Mezery mezi komentáři"

msgid ""
"Regular comments should start with a space, but not code that you comment "
"out. This helps differentiate text comments from disabled code."
msgstr ""
"Běžné komentáře by měly začínat mezerou, nikoli však kód, který "
"zakomentováváte. To pomáhá odlišit textové komentáře od vypnutého kódu."

msgid ""
"In the script editor, to toggle the selected code commented, press :kbd:"
"`Ctrl + K`. This feature adds a single # sign at the start of the selected "
"lines."
msgstr ""
"Chcete-li v editoru skriptů zakomentovat vybraný kód, stiskněte :kbd:`Ctrl + "
"K`. Tato funkce přidá na začátek vybraných řádků jeden znak #."

msgid "Whitespace"
msgstr "Mezery"

msgid ""
"Always use one space around operators and after commas. Also, avoid extra "
"spaces in dictionary references and function calls."
msgstr ""
"Kolem operátorů a za čárkami dělejte vždy jednu mezeru. Vyhněte se také "
"dalším mezerám v odkazech na jednotlivé hodnoty slovníku a ve volání funkcí."

msgid "Don't use spaces to align expressions vertically:"
msgstr "Nepoužívejte mezery k zarovnání výrazů na výšku:"

msgid "Quotes"
msgstr "Uvozovky"

msgid ""
"Use double quotes unless single quotes make it possible to escape fewer "
"characters in a given string. See the examples below:"
msgstr ""
"Použijte dvojité uvozovky, pokud jednoduché uvozovky neumožňují v daném "
"řetězci vynechání escapovaných znaků. Viz příklady níže:"

msgid "Numbers"
msgstr "Čísla"

msgid ""
"Don't omit the leading or trailing zero in floating-point numbers. "
"Otherwise, this makes them less readable and harder to distinguish from "
"integers at a glance."
msgstr ""
"U čísel s pohyblivou řádovou čárkou nevynechávejte počáteční ani koncovou "
"nulu. V opačném případě se stanou hůře čitelnými a na první pohled se hůře "
"odlišují od celých čísel."

msgid "**Good**::"
msgstr "**Dobré**::"

msgid "**Bad**::"
msgstr "**Špatné**::"

msgid ""
"Use lowercase for letters in hexadecimal numbers, as their lower height "
"makes the number easier to read."
msgstr ""
"V hexadecimálních číslech používejte malá písmena, protože jejich menší "
"výška usnadňuje čtení čísla."

msgid ""
"Take advantage of GDScript's underscores in literals to make large numbers "
"more readable."
msgstr ""
"Využijte podtržítka v literálech jazyka GDScript, aby byla velká čísla "
"čitelnější."

msgid "Naming conventions"
msgstr "Konvence pojmenování"

msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code."
msgstr ""
"Tyto konvence pojmenování odpovídají stylu Godot Engine. Jejich porušení "
"způsobí, že váš kód bude v rozporu se zabudovanými konvencemi pro "
"pojmenování, což povede k nekonzistentnímu kódu."

msgid "File names"
msgstr "Názvy souborů"

msgid ""
"Use snake_case for file names. For named classes, convert the PascalCase "
"class name to snake_case::"
msgstr ""
"Pro názvy souborů použijte snake_case. U pojmenovaných tříd převeďte název "
"třídy PascalCase na snake_case::"

msgid ""
"This is consistent with how C++ files are named in Godot's source code. This "
"also avoids case sensitivity issues that can crop up when exporting a "
"project from Windows to other platforms."
msgstr ""
"To je v souladu s tím, jak jsou pojmenovány soubory C++ ve zdrojovém kódu "
"Godotu. Tím se také vyhnete problémům velkých a malých písmen, které mohou "
"nastat při exportu projektu ze systému Windows na jiné platformy."

msgid "Classes and nodes"
msgstr "Třídy a uzly"

msgid "Use PascalCase for class and node names:"
msgstr "Pro názvy tříd a uzlů použijte PascalCase:"

msgid "Also use PascalCase when loading a class into a constant or a variable:"
msgstr ""
"Při načítání třídy do konstanty nebo proměnné použijte také PascalCase:"

msgid "Functions and variables"
msgstr "Funkce a proměnné"

msgid "Use snake\\_case to name functions and variables:"
msgstr "Pro pojmenování funkcí a proměnných použijte snake\\_case:"

msgid ""
"Prepend a single underscore (\\_) to virtual methods functions the user must "
"override, private functions, and private variables:"
msgstr ""
"K virtuálním metodám, které musí uživatel implementovat, soukromým funkcím a "
"soukromým proměnným přidejte jedno podtržítko (\\_):"

msgid "Signals"
msgstr "Signály"

msgid "Use the past tense to name signals:"
msgstr "Pro pojmenování signálů použijte minulý čas:"

msgid "Constants and enums"
msgstr "Konstanty a výčtové typy"

msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr ""
"Zapisujte konstanty pomocí CONSTANT\\_CASE, tj. všemi velkými písmeny s "
"podtržítkem (\\_) pro oddělení slov:"

msgid ""
"Use PascalCase for enum *names* and CONSTANT\\_CASE for their members, as "
"they are constants:"
msgstr ""
"Pro *názvy enumů* použijte PascalCase a pro jejich členy CONSTANT\\_CASE, "
"protože se jedná o konstanty:"

msgid "Code order"
msgstr "Pořadí kódu"

msgid ""
"This first section focuses on code order. For formatting, see :ref:"
"`formatting`. For naming conventions, see :ref:`naming_conventions`."
msgstr ""
"Tato první část se zaměřuje na pořadí kódu. O formátování viz :ref:"
"`formatting`. Konvence pojmenování viz :ref:`naming_conventions`."

msgid "We suggest to organize GDScript code this way:"
msgstr "Doporučujeme uspořádat kód GDScript tímto způsobem:"

msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""
"Pořadí jsme optimalizovali tak, aby bylo snadné číst kód shora dolů, aby "
"vývojáři, kteří čtou kód poprvé, pochopili, jak funguje, a aby se předešlo "
"chybám souvisejícím s pořadím deklarace proměnných."

msgid "This code order follows four rules of thumb:"
msgstr "Toto pořadí kódů se řídí čtyřmi základními pravidly:"

msgid "Properties and signals come first, followed by methods."
msgstr "Nejdříve jsou na řadě vlastnosti a signály a poté metody."

msgid "Public comes before private."
msgstr "Veřejné přijde před soukromé."

msgid "Virtual callbacks come before the class's interface."
msgstr "Virtuální zpětná volání jsou před rozhraním třídy."

msgid ""
"The object's construction and initialization functions, ``_init`` and "
"``_ready``, come before functions that modify the object at runtime."
msgstr ""
"Funkce pro konstrukci a inicializaci objektu, ``_init`` a ``_ready``, "
"předcházejí funkce, které modifikují objekt za běhu."

msgid "Class declaration"
msgstr "Deklarace třídy"

msgid ""
"If the code is meant to run in the editor, place the ``tool`` keyword on the "
"first line of the script."
msgstr ""
"Pokud má být kód spuštěn v editoru, umístěte klíčové slovo ``tool`` na první "
"řádek skriptu."

msgid ""
"Follow with the `class_name` if necessary. You can turn a GDScript file into "
"a global type in your project using this feature. For more information, see :"
"ref:`doc_gdscript`."
msgstr ""
"V případě potřeby doplňte `class_name`. Takto můžete ze souboru GDScript "
"vytvořit globální typ v projektu. Další informace naleznete v části :ref:"
"`doc_gdscript`."

msgid "Then, add the `extends` keyword if the class extends a built-in type."
msgstr ""
"Pak přidejte klíčové slovo `extends`, pokud třída rozšiřuje (dědí) vestavěný "
"typ."

msgid ""
"Following that, you should have the class's optional docstring as comments. "
"You can use that to explain the role of your class to your teammates, how it "
"works, and how other developers should use it, for example."
msgstr ""
"Poté by měl následovat nepovinný docstring třídy jako komentář. Ten můžete "
"použít například k tomu, abyste svým kolegům vysvětlili, jakou roli vaše "
"třída hraje, jak funguje a jak by ji měli používat ostatní vývojáři."

msgid "Signals and properties"
msgstr "Signály a vlastnosti"

msgid ""
"Write signal declarations, followed by properties, that is to say, member "
"variables, after the docstring."
msgstr ""
"Deklarace signálů, za kterými následují vlastnosti, tedy členské proměnné, "
"zapisujte až za docstring."

msgid ""
"Enums should come after signals, as you can use them as export hints for "
"other properties."
msgstr ""
"Enumy by měly být uvedeny až za signály, protože je můžete použít jako "
"nápovědu pro export ostatních vlastností."

msgid ""
"Then, write constants, exported variables, public, private, and onready "
"variables, in that order."
msgstr ""
"Poté napište konstanty, exportované proměnné, veřejné, soukromé proměnné a "
"proměnné onready, a to v tomto pořadí."

msgid ""
"The GDScript compiler evaluates onready variables right before the "
"``_ready`` callback. You can use that to cache node dependencies, that is to "
"say, to get child nodes in the scene that your class relies on. This is what "
"the example above shows."
msgstr ""
"Překladač GDScript vyhodnocuje proměnné onready těsně před zpětným voláním "
"``_ready``. Toho můžete využít k ukládání závislostí uzlů do mezipaměti, tj. "
"k získání podřízených uzlů scény, na které vaše třída spoléhá. Právě to "
"ukazuje výše uvedený příklad."

msgid "Member variables"
msgstr "Členské proměnné"

msgid ""
"Don't declare member variables if they are only used locally in a method, as "
"it makes the code more difficult to follow. Instead, declare them as local "
"variables in the method's body."
msgstr ""
"Nedeklarujte členské proměnné, pokud se používají pouze lokálně v metodě, "
"protože to znesnadňuje orientaci v kódu. Místo toho je deklarujte jako "
"lokální proměnné v těle metody."

msgid "Local variables"
msgstr "Lokální proměnné"

msgid ""
"Declare local variables as close as possible to their first use. This makes "
"it easier to follow the code, without having to scroll too much to find "
"where the variable was declared."
msgstr ""
"Lokální proměnné deklarujte co nejblíže jejich prvnímu použití. To usnadňuje "
"sledování kódu, aniž byste museli příliš rolovat, abyste našli místo, kde "
"byla proměnná deklarována."

msgid "Methods and static functions"
msgstr "Metody a statické funkce"

msgid "After the class's properties come the methods."
msgstr "Po vlastnostech třídy následují metody."

msgid ""
"Start with the ``_init()`` callback method, that the engine will call upon "
"creating the object in memory. Follow with the ``_ready()`` callback, that "
"Godot calls when it adds a node to the scene tree."
msgstr ""
"Začněte zpětnou metodou ``_init()``, kterou engine zavolá při vytvoření "
"objektu v paměti. Následuje zpětné volání ``_ready()``, které Godot zavolá "
"při přidání uzlu do stromu scény."

msgid ""
"These functions should come first because they show how the object is "
"initialized."
msgstr ""
"Tyto funkce by měly být na prvním místě, protože ukazují, jak se objekt "
"inicializuje."

msgid ""
"Other built-in virtual callbacks, like ``_unhandled_input()`` and "
"``_physics_process``, should come next. These control the object's main loop "
"and interactions with the game engine."
msgstr ""
"Další vestavěná virtuální zpětná volání, jako ``_unhandled_input()`` a "
"``_physics_process``, by měly následovat. Ty řídí hlavní smyčku objektu a "
"interakci s herním enginem."

msgid ""
"The rest of the class's interface, public and private methods, come after "
"that, in that order."
msgstr ""
"Zbytek rozhraní třídy, veřejné a soukromé metody, následují v tomto pořadí."

msgid "Static typing"
msgstr "Statické typování"

msgid ""
"Since Godot 3.1, GDScript supports :ref:`optional static "
"typing<doc_gdscript_static_typing>`."
msgstr ""
"Od verze Godot 3.1 podporuje GDScript :ref:`volitelné statické "
"typování<doc_gdscript_static_typing>`."

msgid "Declared types"
msgstr "Deklarované typy"

msgid "To declare a variable's type, use ``<variable>: <type>``:"
msgstr "Chcete-li deklarovat typ proměnné, použijte ``<proměnná>: <typ>``:"

msgid "To declare the return type of a function, use ``-> <type>``:"
msgstr "Chcete-li deklarovat návratový typ funkce, použijte ``-> <type>``:"

msgid "Inferred types"
msgstr "Odvozené typy"

msgid "In most cases you can let the compiler infer the type, using ``:=``:"
msgstr "Ve většině případů můžete nechat překladač odvodit typ pomocí ``:=``:"

msgid ""
"However, in a few cases when context is missing, the compiler falls back to "
"the function's return type. For example, ``get_node()`` cannot infer a type "
"unless the scene or file of the node is loaded in memory. In this case, you "
"should set the type explicitly."
msgstr ""
"V několika případech, kdy kontext chybí, se však překladač uchýlí k "
"návratovému typu funkce. Například funkce ``get_node()`` nemůže odvodit typ, "
"pokud není v paměti načtena scéna nebo soubor uzlu. V takovém případě byste "
"měli typ nastavit explicitně."

msgid ""
"Alternatively, you can use the ``as`` keyword to cast the return type, and "
"that type will be used to infer the type of the var."
msgstr ""

msgid ""
"This option is also considered more :ref:`type-"
"safe<doc_gdscript_static_typing_safe_lines>` than the first."
msgstr ""

msgid "Translation status"
msgstr "Stav překladu"
