# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The main game scene"
msgstr "Hlavní scéna hry"

msgid ""
"Now it's time to bring everything we did together into a playable game scene."
msgstr ""
"Nyní je čas všechno co jsme dosud udělali spojit do jedné hratelné scény."

msgid ""
"Create a new scene and add a :ref:`Node <class_Node>` named ``Main``. (The "
"reason we are using Node instead of Node2D is because this node will be a "
"container for handling game logic. It does not require 2D functionality "
"itself.)"
msgstr ""
"Vytvořte novou scénu a přidejte :ref:`Node <class_Node>` s názvem ``Main``. "
"(Důvod, proč používáme Node místo Node2D, je ten, že tento uzel bude "
"kontejnerem pro zpracování herní logiky. Sám o sobě 2D funkcionalitu "
"nevyžaduje.)"

msgid ""
"Click the **Instance** button (represented by a chain link icon) and select "
"your saved ``Player.tscn``."
msgstr ""

msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"Nyní přidejte následující uzly jako potomky ``Main`` a pojmenujte je podle "
"obrázku (hodnoty jsou v sekundách):"

msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (pojmenovaný ``MobTimer``) - pro ovládání času "
"generování nepřátel"

msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (pojmenovaný ``ScoreTimer``) - pro zvýšení skóre "
"za každou sekundu bez srážky"

msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (pojmenovaný ``StartTimer``) - pro zpoždění před "
"spuštěním"

msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (pojmenovaný ``StartPosition``) - pro "
"označení počáteční pozice hráče"

msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr "Nastavte vlastnost ``Wait Time`` každého z uzlů ``Timer`` takto:"

msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"Dále nastavte vlastnost ``One Shot`` uzlu ``StartTimer`` na \" On \"a "
"nastavte ``Position`` v uzlu ``StartPosition`` na ``(240, 450)``."

msgid "Spawning mobs"
msgstr "Zrození nepřátel"

msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"Main uzel bude vytvářet nové nepřátele a chceme, aby se objevili na náhodné "
"místě při okraji obrazovky. Přidejte a :ref:`Path2D <class_Path2D>` uzel s "
"názvem ``MobPath`` jako potomka ``Main``. Když vyberete ``Path2D``, uvidíte "
"v horní části editoru některá nová tlačítka:"

msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Use Grid Snap\" and \"Use Snap\" are both selected. These options can "
"be found to the left of the \"Lock\" button, appearing as a magnet next to "
"some dots and intersecting lines, respectively."
msgstr ""
"Vyberte prostřední (\"Add point\") a nakreslete křivku přidáním bodů "
"klepnutím v zobrazených rozích. Chcete-li, aby se body přichytíly k mřížce, "
"ujistěte se, že je vybraná možnost \"Use Grid Snap\" mřížky. Tuto možnost "
"lze nalézt nalevo od tlačítka \"Lock\", které se zobrazí jako magnet vedle "
"některých protínajících se čar."

msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"Nakreslete cestu *ve směru hodinových ručiček*, jinak budou vaši nepřátelé "
"natočení *směrem ven* místo *dovnitř*!"

msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"Po umístění bodu ``4`` do obrázku klikněte na tlačítko „Zavřít křivku“ a "
"vaše cesta bude úplná."

msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"Nyní, když je cesta definována, přidejte uzel :ref:`PathFollow2D "
"<class_PathFollow2D>` jako podřízený uzel ``MobPath`` a pojmenujte jej "
"``MobSpawnLocation``. Tento uzel se bude automaticky otáčet a sledovat "
"cestu, jak se pohybuje, takže ji můžeme použít k výběru náhodné polohy a "
"směru podél cesty."

msgid "Your scene should look like this:"
msgstr "Vaše scéna by měla vypadat takto:"

msgid "Main script"
msgstr "Hlavní skript"

msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"Přidejte do ``Main`` skript. V horní části skriptu používáme ``export "
"(PackedScene)``, abychom nám mohli vybrat scénu Mob, pro kterou chceme "
"vytvořit instanci."

msgid ""
"We also add a call to ``randomize()`` here so that the random number "
"generator generates different random numbers each time the game is run:"
msgstr ""

msgid ""
"Click the ``Main`` node and you will see the ``Mob Scene`` property in the "
"Inspector under \"Script Variables\"."
msgstr ""
"Klikněte na uzel ``Main`` a uvidíte vlastnost ``MobScene`` v Inspektoru pod "
"\"Proměnné skriptu\"."

msgid "You can assign this property's value in two ways:"
msgstr "Hodnotu této vlastnosti můžete přiřadit dvěma způsoby:"

#, fuzzy
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" dock and drop it in the **Mob "
"Scene** property."
msgstr "Přetáhněte ``Mob.tscn`` z panelu \"FileSystem\" do vlastnosti ``Mob``."

msgid ""
"Click the down arrow next to \"[empty]\" and choose \"Load\". Select ``Mob."
"tscn``."
msgstr ""
"Klikněte na šipku dolů vedle „[prázdné]“ a vyberte „Načíst“. Vyberte `` Mob."
"tscn``."

msgid ""
"Next, select the ``Player`` node in the Scene dock, and access the Node dock "
"on the sidebar. Make sure to have the Signals tab selected in the Node dock."
msgstr ""
"Vyberte uzel ``Player`` ve stromové struktuře scény a poté zvolte kartu "
"„Uzel“. Dále se ujistěte, že máte vybranou možnost „Signály“."

msgid ""
"You should see a list of the signals for the ``Player`` node. Find and "
"double-click the ``hit`` signal in the list (or right-click it and select "
"\"Connect...\"). This will open the signal connection dialog. We want to "
"make a new function named ``game_over``, which will handle what needs to "
"happen when a game ends. Type \"game_over\" in the \"Receiver Method\" box "
"at the bottom of the signal connection dialog and click \"Connect\". Add the "
"following code to the new function, as well as a ``new_game`` function that "
"will set everything up for a new game:"
msgstr ""
"Měli byste vidět seznam signálů pro uzel ``Player``. Vyhledejte a poklepejte "
"na signál ``hit`` v seznamu (nebo na něj klikněte pravým tlačítkem a vyberte "
"\"Připojit ...\"). Otevře se dialogové okno pro připojení signálu. Chceme "
"vytvořit novou funkci s názvem ``game_over``, která se postará o to, co se "
"musí stát, až hra skončí. Do pole „Metoda příjemce“ ve spodní části "
"dialogového okna pro připojení signálu zadejte „game_over“ a klikněte na "
"„Připojit“. K nové funkci přidejte následující kód a také funkci "
"``new_game``, která nastaví vše pro novou hru:"

msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` , and ``MobTimer``) to the main script. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"Nyní připojte signál ``timeout()`` každého z uzlů časovače ( ``StartTimer``, "
"``ScoreTimer`` a ``MobTimer``) do hlavního skriptu. ``StartTimer`` spustí "
"další dva časovače. ``ScoreTimer`` zvýší skóre o 1."

msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position. When "
"we spawn a mob, we'll pick a random value between ``150.0`` and ``250.0`` "
"for how fast each mob will move (it would be boring if they were all moving "
"at the same speed)."
msgstr ""
"V ``_on_MobTimer_timeout ()`` vytvoříme instanci nepřítele, vybereme náhodné "
"počáteční místo podél ``Path2D`` a dáme nepřítele do pohybu. Uzel "
"``PathFollow2D`` se bude automaticky otáčet, jak následuje cestu, takže ji "
"použijeme k výběru směru a polohy nepřátel. Při vynoření nepřítele "
"vybereme'náhodnou hodnotu mezi ``150.0`` a ``250.0`` pro to, jak rychle se "
"budou jednotliví nepřátelé pohybovat (byla by nuda, kdyby se všichni "
"pohybovali stejnou rychlostí)."

msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr ""
"Všimněte si, že do scény musí být přidána nová instance pomocí "
"``add_child()``."

msgid ""
"Why ``PI``? In functions requiring angles, Godot uses *radians*, not "
"degrees. Pi represents a half turn in radians, about ``3.1415`` (there is "
"also ``TAU`` which is equal to ``2 * PI``). If you're more comfortable "
"working with degrees, you'll need to use the ``deg2rad()`` and ``rad2deg()`` "
"functions to convert between the two."
msgstr ""
"Proč ``PI``? Ve funkcích vyžadujících úhly používá GDScript *radiany*, "
"nikoli stupně. Pí představuje půl otáčky v radiánech, přibližně ``3.1415`` "
"(existuje také ``TAU``, který je roven ``2 * PI``).Pokud se vám pracuje "
"pohodlněji se stupni, budete muset použít převodní funkce ``deg2rad()`` a "
"``rad2deg()``."

msgid "Testing the scene"
msgstr "Testování scény"

msgid ""
"Let's test the scene to make sure everything is working. Add this "
"``new_game`` call to ``_ready()``:"
msgstr ""
"Vyzkoušejte scénu, abychom se ujistili, že vše funguje. Přidejte volání "
"``new_game`` do ``_ready()``:"

msgid ""
"Let's also assign ``Main`` as our \"Main Scene\" - the one that runs "
"automatically when the game launches. Press the \"Play\" button and select "
"``Main.tscn`` when prompted."
msgstr ""
"Pojďme také přiřadit ``Main`` jako „Hlavní scénu“ - ta, která se spustí "
"automaticky při spuštění hry. Stiskněte tlačítko \"Play\" a po zobrazení "
"výzvy vyberte ``Main.tscn``."

msgid ""
"If you had already set another scene as the \"Main Scene\", you can right "
"click ``Main.tscn`` in the FileSystem dock and select \"Set As Main Scene\"."
msgstr ""

msgid ""
"You should be able to move the player around, see mobs spawning, and see the "
"player disappear when hit by a mob."
msgstr ""
"Měli byste být schopni pohybovat hráčem do všech směrů, vidět rozmnožování "
"nepřátek a sledovat, jak hráč zmizí, když je zasažen nepřítelem."

msgid ""
"When you're sure everything is working, remove the call to ``new_game()`` "
"from ``_ready()``."
msgstr ""
"Pokud jste si jisti, že vše funguje, odeberte volání ``new_game()`` z "
"``_ready()``."

msgid ""
"What's our game lacking? Some user interface. In the next lesson, we'll add "
"a title screen and display the player's score."
msgstr ""

msgid "Translation status"
msgstr "Stav překladu"
