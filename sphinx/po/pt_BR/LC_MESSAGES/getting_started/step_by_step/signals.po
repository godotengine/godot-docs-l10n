# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Sinal"

msgid "Using signals"
msgstr "Usando sinais"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"Nesta lição, veremos os sinais. São mensagens que os nós emitem quando algo "
"específico acontece com eles, como um botão sendo pressionado. Outros nós "
"podem se conectar a esse sinal e chamar uma função quando o evento ocorrer."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Os sinais são um mecanismo de delegação embutido no Godot que permite que um "
"objeto do jogo reaja a uma mudança em outro sem que eles façam referência um "
"ao outro. O uso de sinais limita o `acoplamento <https://en.wikipedia.org/"
"wiki/Coupling_(computer_programming)>`_ e mantém seu código flexível."

msgid ""
"For example, you might have a life bar on the screen that represents the "
"player’s health. When the player takes damage or uses a healing potion, you "
"want the bar to reflect the change. To do so, in Godot, you would use "
"signals."
msgstr ""
"Por exemplo, você pode ter uma barra de vida na tela que representa a saúde "
"do jogador. Quando o jogador sofre dano ou usa uma poção de cura, você "
"deseja que a barra reflita a mudança. Para fazer isso, em Godot, você usaria "
"sinais."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it here: https://"
"gameprogrammingpatterns.com/observer.html"
msgstr ""
"Conforme mencionado na introdução, os sinais são a versão de Godot do padrão "
"do observador. Você pode aprender mais sobre isso aqui: https://"
"gameprogrammingpatterns.com/observer.html"

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson (:"
"ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Vamos agora usar um sinal para fazer nosso ícone Godot da lição anterior (:"
"ref:`doc_scripting_player_input`) se mover e parar ao pressionar um botão."

msgid "Scene setup"
msgstr "Configuração da cena"

msgid ""
"To add a button to our game, we will create a new \"main\" scene which will "
"include both a button and the ``Sprite.tscn`` scene that we scripted in "
"previous lessons."
msgstr ""
"Para adicionar um botão ao nosso jogo, criaremos uma nova cena \"principal\" "
"que incluirá um botão e a cena ``Sprite.tscn`` que criamos em lições "
"anteriores."

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr "Crie uma nova cena acessando o menu Cena -> Nova cena."

msgid ""
"In the Scene dock, click the 2D Scene button. This will add a Node2D as our "
"root."
msgstr ""
"No painel Cena, clique no botão Cena 2D. Isso adicionará um Node2D como "
"nossa raiz."

msgid ""
"In the FileSystem dock, click and drag the ``Sprite.tscn`` file you saved "
"previously onto the Node2D to instantiate it."
msgstr ""
"No painel Arquivos, clique e arraste o arquivo ``Sprite.tscn`` que você "
"salvou anteriormente para o Node2D para instanciá-lo."

msgid ""
"We want to add another node as a sibling of the Sprite. To do so, right-"
"click on Node2D and select Add Child Node."
msgstr ""
"Queremos adicionar outro nó como irmão do Sprite. Para fazer isso, clique "
"com o botão direito do mouse em Node2D e selecione Adicionar Nó Filho."

msgid "Search for the Button node type and add it."
msgstr "Pesquise o tipo de nó Button e adicione-o."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"O nó é pequeno por padrão. Clique e arraste a alça inferior direita do "
"Button na viewport para redimensioná-lo."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Se você não vir as alças, verifique se a ferramenta de seleção está ativa na "
"barra de ferramentas."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr "Clique e arraste o botão para aproximá-lo do sprite."

msgid ""
"You can also write a label on the Button by editing its Text property in the "
"Inspector. Enter \"Toggle motion\"."
msgstr ""
"Você também pode escrever um rótulo no Button editando sua propriedade Texto "
"no Inspector. Digite \"Alternar movimento\"."

msgid "Your scene tree and viewport should look like this."
msgstr "Sua árvore da cena e o Viewport devem se parecer com isso."

msgid ""
"Save your newly created scene. You can then run it with :kbd:`F6`. At the "
"moment, the button will be visible, but nothing will happen if you press it."
msgstr ""
"Salve sua cena recém-criada. Você pode executá-lo com :kbd:`F6`. No momento, "
"o botão estará visível, mas nada acontecerá se você pressioná-lo."

msgid "Connecting a signal in the editor"
msgstr "Conectando um sinal no editor"

msgid ""
"Here, we want to connect the Button's \"pressed\" signal to our Sprite, and "
"we want to call a new function that will toggle its motion on and off. We "
"need to have a script attached to the Sprite node, which we do from the "
"previous lesson."
msgstr ""
"Aqui, queremos conectar o sinal \"pressionado\"(pressed) do botão ao nosso "
"Sprite e queremos chamar uma nova função que ativará e desativará seu "
"movimento. Precisamos ter um script anexado ao nó Sprite, o que fizemos na "
"lição anterior."

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Você pode conectar sinais no painel do Nó. Selecione o nó Botão e, no lado "
"direito do editor, clique na aba \"Nó\" ao lado do Inspetor."

msgid "The dock displays a list of signals available on the selected node."
msgstr "O painel exibe uma lista de sinais disponíveis no nó selecionado."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Clique duas vezes no sinal \"pressed\" para abrir a janela de conexão do nó."

msgid ""
"There, you can connect the signal to the Sprite node. The node needs a "
"receiver method, a function that Godot will call when the Button emits the "
"signal. The editor generates one for you. By convention, we name these "
"callback methods \"_on_NodeName_signal_name\". Here, it'll be "
"\"_on_Button_pressed\"."
msgstr ""
"Nela, você pode conectar o sinal ao nó Sprite. O nó precisa de um método "
"receptor, uma função que o Godot chamará quando o Button emitir o sinal. O "
"editor gera um para você. Por convenção, chamamos esses métodos de callback "
"de \"_on_NodeName_signal_name\". Aqui, será \"_on_Button_pressed\"."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Ao conectar sinais por meio do encaixe do nó do editor, você pode usar dois "
"modos. O simples permite apenas conectar-se a nós que possuem um script "
"anexado a eles e cria uma nova função de retorno de chamada neles."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"O avançado permite conectar-se a qualquer nó e qualquer função integrada, "
"adicionar argumentos ao retorno de chamada e definir opções. Você pode "
"alternar o modo no canto inferior esquerdo da janela clicando no botão "
"Avançado."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Clique no botão Conectar para concluir a conexão do sinal e vá para a área "
"de trabalho Script. Você deve ver o novo método com um ícone de conexão na "
"margem esquerda."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Se você clicar no ícone, uma janela aparecerá e exibirá informações sobre a "
"conexão. Este recurso está disponível apenas ao conectar nós no editor."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Vamos substituir a linha com a palavra-chave ``pass`` com o código que "
"alternará o movimento do nó."

msgid ""
"Our Sprite moves thanks to code in the ``_process()`` function. Godot "
"provides a method to toggle processing on and off: :ref:`Node.set_process() "
"<class_Node_method_set_process>`. Another method of the Node class, "
"``is_processing()``, returns ``true`` if idle processing is active. We can "
"use the ``not`` keyword to invert the value."
msgstr ""
"Nosso Sprite se move graças ao código na função ``_process()``. Godot "
"fornece um método para ativar e desativar o processamento: :ref:`Node."
"set_process() <class_Node_method_set_process>`. Outro método da classe Node, "
"``is_processing()``, retorna ``true`` se o processamento ocioso estiver "
"ativo. Podemos usar a palavra-chave ``not`` para inverter o valor."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Esta função alternará o processamento e, por sua vez, o movimento do ícone "
"ligado e desligado ao pressionar o botão."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Antes de testar o jogo, precisamos simplificar nossa função ``_process()`` "
"para mover o nó automaticamente e não esperar pela entrada do usuário. "
"Substitua-o pelo seguinte código, que vimos duas lições atrás:"

msgid "Your complete ``Sprite.gd`` code should look like the following."
msgstr "O seu código ``Sprite.gd``completo deve se parecer com o seguinte."

msgid ""
"Run the scene now and click the button to see the sprite start and stop."
msgstr ""
"Execute a cena agora e clique no botão para ver o sprite andar e parar."

msgid "Connecting a signal via code"
msgstr "Conectando um sinal via código"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Você pode conectar sinais via código em vez de usar o editor. Isso é "
"necessário quando você cria nós ou instancia cenas dentro de um script."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Vamos usar um nó diferente aqui. Godot tem um nó :ref:`Timer <class_Timer>` "
"que é útil para implementar o tempo de resfriamento de habilidades, recarga "
"de armas e muito mais."

msgid ""
"Head back to the 2D workspace. You can either click the \"2D\" text at the "
"top of the window or press :kbd:`Ctrl + F1` (:kbd:`Alt + 1` on macOS)."
msgstr ""
"No **Espaço de Trabalho 3D**, você pode trabalhar com malhas (*meshes*), "
"luzes e projetar níveis para jogos 3D. Pressione :kbd:`Ctrl + F2` (ou :kbd:"
"`Alt + 2` no macOS) para acessá-lo."

msgid ""
"In the Scene dock, right-click on the Sprite node and add a new child node. "
"Search for Timer and add the corresponding node. Your scene should now look "
"like this."
msgstr ""
"No painel da Cena, clique com o botão direito do mouse no nó Sprite e "
"adicione um novo nó filho. Pesquise por Timer e adicione o nó "
"correspondente. Sua cena agora deve ficar assim."

msgid ""
"With the Timer node selected, go to the Inspector and check the "
"**Autostart** property."
msgstr ""
"Com o nó Timer selecionado, vá para o Inspetor e marque a propriedade "
"**Autostart**."

msgid ""
"Click the script icon next to Sprite to jump back to the scripting workspace."
msgstr ""
"Clique no ícone de script ao lado de Sprite para voltar ao espaço de "
"trabalho de script."

msgid "We need to do two operations to connect the nodes via code:"
msgstr "Precisamos fazer duas operações para conectar os nós via código:"

msgid "Get a reference to the Timer from the Sprite."
msgstr "Obter uma referência ao Timer do Sprite."

msgid "Call the Timer's ``connect()`` method."
msgstr "Chamar o método ``connect()`` do Timer."

msgid ""
"To connect to a signal via code, you need to call the ``connect()`` method "
"of the node you want to listen to. In this case, we want to listen to the "
"Timer's \"timeout\" signal."
msgstr ""
"Para se conectar a um sinal via código, você precisa chamar o método "
"``connect()`` do nó que deseja escutar. Neste caso, queremos ouvir o sinal "
"de \"timeout\" do Timer."

msgid ""
"We want to connect the signal when the scene is instantiated, and we can do "
"that using the :ref:`Node._ready() <class_Node_method__ready>` built-in "
"function, which is called automatically by the engine when a node is fully "
"instantiated."
msgstr ""
"Queremos conectar o sinal quando a cena for instanciada, e podemos fazer "
"isso usando a função interna :ref:`Node._ready() "
"<class_Node_method__ready>`, que é chamada automaticamente pelo mecanismo "
"quando um nó é totalmente instanciado ."

msgid ""
"To get a reference to a node relative to the current one, we use the method :"
"ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Para obter uma referência a um nó relativo ao atual, usamos o método :ref:"
"`Node.get_node() <class_Node_method_get_node>`. Podemos armazenar a "
"referência em uma variável."

msgid ""
"The function ``get_node()`` looks at the Sprite's children and gets nodes by "
"their name. For example, if you renamed the Timer node to \"BlinkingTimer\" "
"in the editor, you would have to change the call to "
"``get_node(\"BlinkingTimer\")``."
msgstr ""
"A função ``get_node()`` olha para os filhos do Sprite e obtém os nós pelo "
"nome. Por exemplo, se você renomeou o nó Timer para \"BlinkingTimer\" no "
"editor, você teria que mudar a chamada para ``get_node(\"BlinkingTimer\")``."

msgid ""
"We can now connect the Timer to the Sprite in the ``_ready()`` function."
msgstr "Agora podemos conectar o Timer ao Sprite com a função ``_ready()``."

msgid ""
"The line reads like so: we connect the Timer's \"timeout\" signal to the "
"node to which the script is attached (``self``). When the Timer emits "
"\"timeout\", we want to call the function \"_on_Timer_timeout\", that we "
"need to define. Let's add it at the bottom of our script and use it to "
"toggle our sprite's visibility."
msgstr ""
"A linha fica assim: conectamos o sinal \"timeout\" do Timer ao nó ao qual o "
"script está anexado (``self``). Quando o Timer emitir \"timeout\", queremos "
"chamar a função \"_on_Timer_timeout\", que precisamos definir. Vamos "
"adicioná-lo na parte inferior do nosso script e usá-lo para alternar a "
"visibilidade do nosso sprite."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"A propriedade ``visible`` é um booleano que controla a visibilidade do nosso "
"nó. A linha ``visible = not visible`` alterna o valor. Se ``visible`` for "
"``true``, torna-se ``false``, e vice-versa."

msgid ""
"If you run the scene now, you will see that the sprite blinks on and off, at "
"one second intervals."
msgstr ""
"Se você executar a cena agora, verá que o sprite liga e desliga, em "
"intervalos de um segundo."

msgid "Complete script"
msgstr "Script completo"

msgid ""
"That's it for our little moving and blinking Godot icon demo! Here is the "
"complete ``Sprite.gd`` file for reference."
msgstr ""
"Isso é tudo para a nossa pequena demonstração de ícone do Godot em movimento "
"e piscando! Aqui está o arquivo ``Sprite.gd`` completo para referência."

msgid "Custom signals"
msgstr "Sinais personalizados"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Esta seção é uma referência sobre como definir e usar seus próprios sinais e "
"não se baseia no projeto criado nas lições anteriores."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Você pode definir sinais personalizados em um script. Digamos, por exemplo, "
"que você deseja mostrar uma tela de game over quando a saúde do jogador "
"chegar a zero. Para fazer isso, você pode definir um sinal chamado \"died\" "
"ou \"health_depleted\" quando a saúde chegar a 0."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Como os sinais representam eventos que acabaram de ocorrer, geralmente "
"usamos um verbo de ação no pretérito em seus nomes."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Seus sinais funcionam da mesma forma que os integrados: eles aparecem na "
"guia Nó e você pode se conectar a eles como qualquer outro."

msgid "To emit a signal in your scripts, call ``emit_signal()``."
msgstr "Para emitir um sinal em seus scripts, chame ``emit_signal()``."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Um sinal também pode opcionalmente declarar um ou mais argumentos. "
"Especifique os nomes dos argumentos entre parênteses:"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Os argumentos de sinal aparecem na aba nó do editor e o Godot pode usá-los "
"para gerar funções de retorno de chamada para você. No entanto, você ainda "
"pode emitir qualquer número de argumentos ao emitir sinais. Então cabe a "
"você emitir os valores corretos."

msgid ""
"To emit values along with the signal, add them as extra arguments to the "
"``emit_signal()`` function:"
msgstr ""
"Para emitir valores junto com o sinal, adicione-os como argumentos extras à "
"função ``emit_signal()``:"

msgid "Summary"
msgstr "Resumo"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Qualquer nó em Godot emite sinais quando algo específico acontece com eles, "
"como um botão sendo pressionado. Outros nós podem se conectar a sinais "
"individuais e reagir a eventos selecionados."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Os sinais têm muitos usos. Com eles, você pode reagir a um nó entrando ou "
"saindo do mundo do jogo, a uma colisão, a um personagem entrando ou saindo "
"de uma área, a um elemento da interface que muda de tamanho e muito mais."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Por exemplo, um :ref:`Area2D <class_Area2D>` representando uma moeda emite "
"um sinal ``body_entered`` sempre que o corpo físico do jogador entra em "
"forma de colisão, permitindo que você saiba quando o jogador a coletou."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"Na próxima seção, :ref:`doc_your_first_game`, você criará um jogo completo "
"contendo vários usos de sinais para conectar diferentes componentes do jogo."

msgid "Translation status"
msgstr "Progresso da Tradução"
