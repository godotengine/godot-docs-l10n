# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Physics introduction"
msgstr "Introdução à física"

msgid ""
"In game development, you often need to know when two objects in the game "
"intersect or come into contact. This is known as **collision detection**. "
"When a collision is detected, you typically want something to happen. This "
"is known as **collision response**."
msgstr ""
"É frequente, no desenvolvimento de jogos, precisar saber quando dois objetos "
"se interceptam ou fazem contato durante o jogo. Isso é conhecido como "
"**detecção de colisão**. Quando uma colisão é detectada, você tipicamente "
"quer que alguma coisa aconteça. Isso é chamado de **resposta à colisão**."

msgid ""
"Godot offers a number of collision objects in 2D and 3D to provide both "
"collision detection and response. Trying to decide which one to use for your "
"project can be confusing. You can avoid problems and simplify development if "
"you understand how each works and what their pros and cons are."
msgstr ""
"Godot oferece uma variedade de objetos de colisão em 2D e 3D para prover "
"tanto detecção de quanto resposta a colisões. Tentar decidir qual usar em "
"seu projeto pode ser confuso. Você pode evitar problemas e simplificar o "
"desenvolvimento se entender como cada um funciona e quais são suas vantagens "
"e desvantagens."

msgid "In this guide, you will learn:"
msgstr "Neste guia, você aprenderá:"

msgid "Godot's four collision object types"
msgstr "Os quatro tipos de objeto de colisão do Godot"

msgid "How each collision object works"
msgstr "Como cada objeto de colisão funciona"

msgid "When and why to choose one type over another"
msgstr "Quando e por que escolher um tipo em detrimento de outro"

msgid ""
"This document's examples will use 2D objects. Every 2D physics object and "
"collision shape has a direct equivalent in 3D and in most cases they work in "
"much the same way."
msgstr ""
"Os exemplos deste documento usarão objetos 2D. Todo objeto de física e forma "
"de colisão 2D tem seu equivalente direto em 3D e, na maioria dos casos, "
"funcionam exatamente da mesma forma."

msgid "Collision objects"
msgstr "Objetos de Colisão"

msgid ""
"Godot offers four kinds of physics bodies, extending :ref:`CollisionObject2D "
"<class_CollisionObject2D>`:"
msgstr ""
"Godot oferece quatro tipos de corpos físicos, estendendo :ref:"
"`CollisionObject2D <class_CollisionObject2D>`:"

msgid ":ref:`Area2D <class_Area2D>`"
msgstr ":ref:`Area2D <class_Area2D>`"

msgid ""
"``Area2D`` nodes provide **detection** and **influence**. They can detect "
"when objects overlap and can emit signals when bodies enter or exit. An "
"``Area2D`` can also be used to override physics properties, such as gravity "
"or damping, in a defined area."
msgstr ""
"Os nós ``Area2D`` fornecem **detecção** e **influência**. Eles podem "
"detectar quando os objetos se sobrepõem e podem emitir sinais quando os "
"corpos entram ou saem. Uma ``Area2D`` também pode ser usado para substituir "
"propriedades físicas, como gravidade ou amortecimento, em uma área definida."

msgid ""
"The other three bodies extend :ref:`PhysicsBody2D <class_PhysicsBody2D>`:"
msgstr ""
"Os outros três corpos são extensão de :ref:`PhysicsBody2D "
"<class_PhysicsBody2D>`:"

msgid ":ref:`StaticBody2D <class_StaticBody2D>`"
msgstr ":ref:`StaticBody2D <class_StaticBody2D>`"

msgid ""
"A static body is one that is not moved by the physics engine. It "
"participates in collision detection, but does not move in response to the "
"collision. They are most often used for objects that are part of the "
"environment or that do not need to have any dynamic behavior."
msgstr ""
"Um corpo estático é aquele que não é movido pelo motor de física. Ele "
"participa da detecção de colisão, mas não se move em resposta a uma. É mais "
"comumente usado para objetos que sejam parte do ambiente ou que não "
"necessitam de ter qualquer comportamento dinâmico."

msgid ":ref:`RigidBody2D <class_RigidBody2D>`"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>`"

msgid ""
"This is the node that implements simulated 2D physics. You do not control a "
"``RigidBody2D`` directly, but instead you apply forces to it (gravity, "
"impulses, etc.) and the physics engine calculates the resulting movement. :"
"ref:`Read more about using rigid bodies. <doc_rigid_body>`"
msgstr ""
"Este é o nó que implementa a física 2D simulada. Você não controla um "
"``RigidBody2D`` diretamente, e sim aplica forças nele (gravidade, impulsos, "
"etc.) e o motor de física calcula o movimento resultante. :ref:`Leia mais "
"sobre o uso de corpos rígidos. <doc_rigid_body>`"

msgid ":ref:`KinematicBody2D <class_KinematicBody2D>`"
msgstr ":ref:`KinematicBody2D <class_KinematicBody2D>`"

msgid ""
"A body that provides collision detection, but no physics. All movement and "
"collision response must be implemented in code."
msgstr ""
"Um corpo que provê detecção de colisão, mas nenhuma física. Todos os "
"movimentos e respostas a colisões devem ser implementados em código."

msgid "Physics material"
msgstr "Material físico"

msgid ""
"Static bodies and rigid bodies can be configured to use a :ref:`physics "
"material <class_PhysicsMaterial>`. This allows adjusting the friction and "
"bounce of an object, and set if it's absorbent and/or rough."
msgstr ""

msgid "Collision shapes"
msgstr "Formas de colisão"

msgid ""
"A physics body can hold any number of :ref:`Shape2D <class_Shape2D>` objects "
"as children. These shapes are used to define the object's collision bounds "
"and to detect contact with other objects."
msgstr ""
"Um corpo físico por conter qualquer quantidade de objetos :ref:`Shape2D "
"<class_Shape2D>` como filhos. Essas formas são usadas para definir os "
"limites de colisão do objeto e detectar contato com outros."

msgid ""
"In order to detect collisions, at least one ``Shape2D`` must be assigned to "
"the object."
msgstr ""
"Para detectar colisões, pelo menos um ``Shape2D`` deve ser atribuído ao "
"objeto."

msgid ""
"The most common way to assign a shape is by adding a :ref:`CollisionShape2D "
"<class_CollisionShape2D>` or :ref:`CollisionPolygon2D "
"<class_CollisionPolygon2D>` as a child of the object. These nodes allow you "
"to draw the shape directly in the editor workspace."
msgstr ""
"A maneira mais comum de atribuir uma forma é adicionar um :ref:"
"`CollisionShape2D <class_CollisionShape2D>` ou :ref:`CollisionPolygon2D "
"<class_CollisionPolygon2D>` como filho do objeto. Esses nós lhe permitem "
"desenhar o formato diretamente no espaço de trabalho do editor."

msgid ""
"Be careful to never scale your collision shapes in the editor. The \"Scale\" "
"property in the Inspector should remain ``(1, 1)``. When changing the size "
"of the collision shape, you should always use the size handles, **not** the "
"``Node2D`` scale handles. Scaling a shape can result in unexpected collision "
"behavior."
msgstr ""
"Tenha cuidado para nunca escalar suas formas de colisão no editor. A "
"propriedade \"Escala\" no Inspetor deve permanecer ``(1, 1)``. Ao alterar o "
"tamanho da forma da colisão, você deve sempre utilizar os manipuladores de "
"tamanho, e ** não** os manipuladores de escala ``Node2D``. A escala de uma "
"forma pode resultar em um comportamento de colisão inesperado."

msgid "Physics process callback"
msgstr "Chamadas de retorno do processamento da física"

msgid ""
"The physics engine may spawn multiple threads to improve performance, so it "
"can use up to a full frame to process physics. Because of this, the value of "
"a body's state variables such as ``position`` or ``linear velocity`` may not "
"be accurate for the current frame."
msgstr ""
"O motor da física pode criar múltiplas threads para melhorar seu desempenho, "
"então pode usar todo o tempo de um quadro para processar a física. Por conta "
"disso, o valor das variáveis de estado de um corpo como ``posição`` ou "
"``velocidade linear`` pode não estar preciso para o quadro atual."

msgid ""
"In order to avoid this inaccuracy, any code that needs to access a body's "
"properties should be run in the :ref:`Node._physics_process() "
"<class_Node_method__physics_process>` callback, which is called before each "
"physics step at a constant frame rate (60 times per second by default). This "
"method will be passed a ``delta`` parameter, which is a floating-point "
"number equal to the time passed in *seconds* since the last step. When using "
"the default 60 Hz physics update rate, it will typically be equal to "
"``0.01666...`` (but not always, see below)."
msgstr ""
"Para evitar esta imprecisão, qualquer código que precise acessar as "
"propriedades de um corpo deve ser executado na chamada de retorno :ref:`Node."
"_physics_process() <class_Node_method__physics_process>`, que é chamado "
"antes de cada passo físico a uma taxa de quadros constante (60 vezes por "
"segundo por padrão). Este método será passado um parâmetro ``delta``, que é "
"um número de ponto flutuante igual ao tempo passado em *segundos* desde o "
"último passo. Ao utilizar a taxa de atualização física padrão de 60 Hz, ela "
"será normalmente igual a ``0.01666...`` (mas nem sempre, veja abaixo)."

msgid ""
"It's recommended to always use the ``delta`` parameter when relevant in your "
"physics calculations, so that the game behaves correctly if you change the "
"physics update rate or if the player's device can't keep up."
msgstr ""

msgid "Collision layers and masks"
msgstr "Camadas e Máscaras de colisão"

msgid ""
"One of the most powerful, but frequently misunderstood, collision features "
"is the collision layer system. This system allows you to build up complex "
"interactions between a variety of objects. The key concepts are **layers** "
"and **masks**. Each ``CollisionObject2D`` has 20 different physics layers it "
"can interact with."
msgstr ""
"Um dos recursos mais poderosos porém pouco compreendida é o sistema de "
"camadas de colisão. Esse sistema lhe permite construir interações complexas "
"entre uma variedade de objetos. Os conceitos chaves são **camadas** e "
"**máscaras**. Todo ``CollisionObject2D`` tem 20 camadas de física diferentes "
"com as quais ele pode interagir."

msgid "Let's look at each of the properties in turn:"
msgstr "Vamos olhar cada propriedade por vez:"

msgid "collision_layer"
msgstr "collision_layer"

msgid ""
"This describes the layers that the object appears **in**. By default, all "
"bodies are on layer ``1``."
msgstr ""
"Descreve as camadas que **onde** o objeto aparece. Por padrão, todos os "
"corpos estão na camada ``1``."

msgid "collision_mask"
msgstr "collision_mask"

msgid ""
"This describes what layers the body will **scan** for collisions. If an "
"object isn't in one of the mask layers, the body will ignore it. By default, "
"all bodies scan layer ``1``."
msgstr ""
"Descreve quais camadas o corpo irá **varrer** em busca de colisões. Se um "
"objeto não estiver em uma camada da máscara, o corpo o ignorará. Por padrão, "
"todos corpos varrem a camada ``1``."

msgid ""
"These properties can be configured via code, or by editing them in the "
"Inspector."
msgstr ""
"Essas propriedades podem ser configurada por código ou por edição no "
"Inspetor."

msgid ""
"Keeping track of what you're using each layer for can be difficult, so you "
"may find it useful to assign names to the layers you're using. Names can be "
"assigned in Project Settings -> Layer Names."
msgstr ""
"Manter registro da finalidade que você está dando para cada camada pode ser "
"difícil. Então, pode ser útil atribuir nomes às camadas em uso. Você pode "
"nomeá-las nas Configurações do Projeto -> Nomes das Camadas."

msgid "GUI example"
msgstr "Exemplo de GUI"

msgid ""
"You have four node types in your game: Walls, Player, Enemy, and Coin. Both "
"Player and Enemy should collide with Walls. The Player node should detect "
"collisions with both Enemy and Coin, but Enemy and Coin should ignore each "
"other."
msgstr ""
"Você tem quatro tipos de nós no seu jogo: Muros, Jogador, Inimigo e Moeda. "
"Tanto o Jogador quanto o Inimigo colidem com Muros. O nó Jogador deveria "
"detectar colisões com Inimigo e Moeda, mas Inimigo e Moeda devem se ignorar."

msgid ""
"Start by naming layers 1-4 \"walls\", \"player\", \"enemies\", and \"coins\" "
"and place each node type in its respective layer using the \"Layer\" "
"property. Then set each node's \"Mask\" property by selecting the layers it "
"should interact with. For example, the Player's settings would look like "
"this:"
msgstr ""
"Comece nomeando as camadas 1 a 4 como \"muros\", \"jogador\", \"inimigos\" e "
"\"moedas\" e coloque cada tipo de nó em sua camada respectiva usando a "
"propriedade \"Camada\" (Layer). Então configure a propriedade "
"\"Máscara\" (Mask) de cada nó selecionando as camadas com que ele deveria "
"interagir. Por exemplo, as configurações do Jogador (Player) deveriam se "
"parecer com isto:"

msgid "Code example"
msgstr "Exemplo de código"

msgid ""
"In function calls, layers are specified as a bitmask. Where a function "
"enables all layers by default, the layer mask will be given as "
"``0x7fffffff``. Your code can use binary, hexadecimal, or decimal notation "
"for layer masks, depending on your preference."
msgstr ""

msgid ""
"The code equivalent of the above example where layers 1, 3 and 4 were "
"enabled would be as follows::"
msgstr ""

msgid "Area2D"
msgstr "Area2D"

msgid ""
"Area nodes provide **detection** and **influence**. They can detect when "
"objects overlap and emit signals when bodies enter or exit. Areas can also "
"be used to override physics properties, such as gravity or damping, in a "
"defined area."
msgstr ""
"Os nós de área fornecem **detecção** e **influência**. Eles podem detectar "
"quando os objetos se sobrepõem e emitir sinais quando os corpos entram ou "
"saem. As áreas também podem ser usadas para anular propriedades físicas, "
"tais como gravidade ou amortecimento, em uma área definida."

msgid "There are three main uses for :ref:`Area2D <class_Area2D>`:"
msgstr "Existem três usos principais para :ref:`Area2D <class_Area2D>`:"

msgid "Overriding physics parameters (such as gravity) in a given region."
msgstr ""
"Substituição dos parâmetros físicos (como gravidade) em uma dada região."

msgid ""
"Detecting when other bodies enter or exit a region or what bodies are "
"currently in a region."
msgstr ""
"Detectar quando outros corpos entram em ou saem de uma região ou quais estão "
"atualmente em um região."

msgid "Checking other areas for overlap."
msgstr "Verificar se outras áreas se sobrepõem."

msgid "By default, areas also receive mouse and touchscreen input."
msgstr "Por padrão, áreas também recebem entradas de mouse e tela de toque."

msgid "StaticBody2D"
msgstr "StaticBody2D"

msgid ""
"A static body is one that is not moved by the physics engine. It "
"participates in collision detection, but does not move in response to the "
"collision. However, it can impart motion or rotation to a colliding body "
"**as if** it were moving, using its ``constant_linear_velocity`` and "
"``constant_angular_velocity`` properties."
msgstr ""
"Um corpo estático é aquele que não é movido pelo motor de física. Ele "
"participa da detecção de colisão, mas não se move em resposta à ela. "
"Entretanto, ele pode transmitir movimento e rotação a um corpo rígido **como "
"se** estivesse se movendo, usando suas propriedades "
"``constant_linear_velocity`` e ``constant_angular_velocity`` (velocidades "
"lineares e angulares constantes, respectivamente)."

msgid ""
"``StaticBody2D`` nodes are most often used for objects that are part of the "
"environment or that do not need to have any dynamic behavior."
msgstr ""
"Nós ``StaticBody2D`` são mais comumente usado em objetos que são parte do "
"ambiente ou que não precisam ter um comportamento dinâmico."

msgid "Example uses for ``StaticBody2D``:"
msgstr "Exemplos de uso para ``StaticBody2D``:"

msgid "Platforms (including moving platforms)"
msgstr "Plataformas (inclusive as móveis)"

msgid "Conveyor belts"
msgstr "Esteiras transportadoras"

msgid "Walls and other obstacles"
msgstr "Paredes e outros obstáculos"

msgid "RigidBody2D"
msgstr "RigidBody2D"

msgid ""
"This is the node that implements simulated 2D physics. You do not control a :"
"ref:`RigidBody2D <class_RigidBody2D>` directly. Instead, you apply forces to "
"it and the physics engine calculates the resulting movement, including "
"collisions with other bodies, and collision responses, such as bouncing, "
"rotating, etc."
msgstr ""
"Este é o nó que um implementa física 2D simulada. Você não controla um :ref:"
"`RigidBody2D <class_RigidBody2D>` diretamente. Em vez disso, você lhe aplica "
"forças e o motor da física calcula o movimento resultante, inclusive "
"colisões com outros corpos, além de respostas a colisões como quicar, girar, "
"etc."

msgid ""
"You can modify a rigid body's behavior via properties such as \"Mass\", "
"\"Friction\", or \"Bounce\", which can be set in the Inspector."
msgstr ""
"Você pode modificar o comportamento de um corpo rígido através de "
"propriedades como \"Mass\" (massa), \"Friction\" (atrito) ou "
"\"Bounce\" (restituição/quique), configuráveis no Inspetor."

msgid ""
"The body's behavior is also affected by the world's properties, as set in "
"`Project Settings -> Physics`, or by entering an :ref:`Area2D "
"<class_Area2D>` that is overriding the global physics properties."
msgstr ""
"O comportamento do corpo também é afetado pelas propriedades do mundo, "
"definidas em `Configurações de projeto -> Física`, ou entrando em uma :ref:"
"`Area2D <class_Area2D>` que sobrepõe as propriedades da física global."

msgid ""
"When a rigid body is at rest and hasn't moved for a while, it goes to sleep. "
"A sleeping body acts like a static body, and its forces are not calculated "
"by the physics engine. The body will wake up when forces are applied, either "
"by a collision or via code."
msgstr ""
"Quando um corpo rígido está em repouso e não se move por um tempo, ele "
"adormece. Um corpo adormecido age como um corpo estático, e suas forças não "
"são calculadas pelo motor de física. O corpo acordará quando forças forem "
"aplicadas, seja por colisão ou por código."

msgid "Rigid body modes"
msgstr "Modos do corpo rígido"

msgid "A rigid body can be set to one of four modes:"
msgstr "Um corpo rígido pode ser configurado como um dos quatro modos:"

msgid ""
"**Rigid** - The body behaves as a physical object. It collides with other "
"bodies and responds to forces applied to it. This is the default mode."
msgstr ""
"**Rígido** (`Rigid`) - O corpo se comporta como um objeto físico. Colide com "
"outros corpos e responde a forças que lhe forem aplicadas. Este é o modo "
"padrão."

msgid ""
"**Static** - The body behaves like a :ref:`StaticBody2D "
"<class_StaticBody2D>` and does not move."
msgstr ""
"**Estático** (`Static`) - O corpo se comporta como um ref:`StaticBody2D "
"<class_StaticBody2D>` e não se move."

msgid "**Character** - Similar to \"Rigid\" mode, but the body cannot rotate."
msgstr ""
"**Personagem** (`Character`) - Similar ao modo \"Rigid\", mas o corpo não "
"pode rotacionar."

msgid ""
"**Kinematic** - The body behaves like a :ref:`KinematicBody2D "
"<class_KinematicBody2D>` and must be moved by code."
msgstr ""
"**Cinemático** (`Kinematic`) - O corpo se comporta como um :ref:"
"`KinematicBody2D <class_KinematicBody2D>` e deve ser movido através de "
"código."

msgid "Using RigidBody2D"
msgstr "Usando RigidBody2D"

msgid ""
"One of the benefits of using a rigid body is that a lot of behavior can be "
"had \"for free\" without writing any code. For example, if you were making "
"an \"Angry Birds\"-style game with falling blocks, you would only need to "
"create RigidBody2Ds and adjust their properties. Stacking, falling, and "
"bouncing would automatically be calculated by the physics engine."
msgstr ""
"Um dos benefícios de usar um corpo rígido é que muito do comportamento dele "
"pode ser obtido \"de graça\" sem escrever código algum. Por exemplo, se você "
"está fazendo um jogo no estilo \"Angry Birds\" com blocos caindo, você só "
"precisaria criar RigidBody2Ds e ajustar suas propriedades. Empilhamento, "
"queda e quique seriam calculados automaticamente pelor motor de física."

#, fuzzy
msgid ""
"However, if you do wish to have some control over the body, you should take "
"care - altering the ``position``, ``linear_velocity``, or other physics "
"properties of a rigid body can result in unexpected behavior. If you need to "
"alter any of the physics-related properties, you should use the :ref:"
"`_integrate_forces() <class_RigidBody2D_method__integrate_forces>` callback "
"instead of ``_physics_process()``. In this callback, you have access to the "
"body's :ref:`Physics2DDirectBodyState <class_Physics2DDirectBodyState>`, "
"which allows for safely changing properties and synchronizing them with the "
"physics engine."
msgstr ""
"Entretanto, se você quiser mesmo ter algum controle sobre o corpo, você deve "
"tomar cuidado: alterar a ``posição``, ``velocidade linear`` e outras "
"propriedades físicas de um corpo rígido podem resultar em um comportamento "
"inesperado. Se precisar alterar quaisquer propriedades relacionadas à "
"física, você deveria usar a chamada de retorno :ref:`_integrate_forces() "
"<class_RigidBody2D_method__integrate_forces>` em vez de "
"``_physics_process()``. Nesta função, você tem acesso ao :ref:"
"`Physics2DDirectBodyState <class_Physics2DDirectBodyState>` do corpo, que "
"permite alterar com segurança as propriedade e sincronizá-las com o motor da "
"física."

msgid "For example, here is the code for an \"Asteroids\" style spaceship:"
msgstr ""
"Por exemplo, aqui está o código para uma nave no estilo de \"Asteroids\":"

msgid ""
"Note that we are not setting the ``linear_velocity`` or ``angular_velocity`` "
"properties directly, but rather applying forces (``thrust`` and ``torque``) "
"to the body and letting the physics engine calculate the resulting movement."
msgstr ""
"Note que nós não estamos configurando as propriedades ``linear_velocity`` ou "
"``angular_velocity`` diretamente, mas sim aplicando forças (``thrust`` "
"(impulso) e ``torque``) ao corpo, e deixando o motor de física calcular o "
"movimento resultante."

msgid ""
"When a rigid body goes to sleep, the ``_integrate_forces()`` function will "
"not be called. To override this behavior, you will need to keep the body "
"awake by creating a collision, applying a force to it, or by disabling the :"
"ref:`can_sleep <class_RigidBody2D_property_can_sleep>` property. Be aware "
"that this can have a negative effect on performance."
msgstr ""
"Quando um corpo rígido adormece, a função ``_integrate_forces()`` não será "
"chamada. Para sobrepor este comportamento, você precisará manter o corpo "
"acordado, criando uma colisão, aplicando forças a ele ou desabilitando a "
"propriedade :ref:`can_sleep <class_RigidBody2D_property_can_sleep>`. Fique "
"ciente que isso pode ter um efeito negativo no desempenho."

msgid "Contact reporting"
msgstr "Relato de contato"

#, fuzzy
msgid ""
"By default, rigid bodies do not keep track of contacts, because this can "
"require a huge amount of memory if many bodies are in the scene. To enable "
"contact reporting, set the :ref:`contacts_reported "
"<class_RigidBody2D_property_contacts_reported>` property to a non-zero "
"value. The contacts can then be obtained via :ref:`Physics2DDirectBodyState."
"get_contact_count() "
"<class_Physics2DDirectBodyState_method_get_contact_count>` and related "
"functions."
msgstr ""
"Por padrão, corpos rígidos não mantém um monitoramento dos contatos, porque "
"isso pode exigir uma enorme quantidade de memória se muitos corpos estiverem "
"na cena. Para ativar o relato de contato, defina a propriedade :ref:"
"`contacts_reported <class_RigidBody2D_property_contacts_reported>` (contatos "
"relatados) para um valor diferente de zero. Os contatos podem ser obtidos "
"via :ref:`Physics2DDirectBodyState.get_contact_count() "
"<class_Physics2DDirectBodyState_method_get_contact_count>` e funções "
"relacionadas."

msgid ""
"Contact monitoring via signals can be enabled via the :ref:`contact_monitor "
"<class_RigidBody2D_property_contact_monitor>` property. See :ref:"
"`RigidBody2D <class_RigidBody2D>` for the list of available signals."
msgstr ""
"Monitoramento de contato via sinais pode ser habilitado através da "
"propriedade :ref:`contact_monitor "
"<class_RigidBody2D_property_contact_monitor>`. Veja :ref:`RigidBody2D "
"<class_RigidBody2D>` para a lista de sinais disponíveis."

msgid "KinematicBody2D"
msgstr "KinematicBody2D"

msgid ""
":ref:`KinematicBody2D <class_KinematicBody2D>` bodies detect collisions with "
"other bodies, but are not affected by physics properties like gravity or "
"friction. Instead, they must be controlled by the user via code. The physics "
"engine will not move a kinematic body."
msgstr ""
"Corpos :ref:`KinematicBody2D <class_KinematicBody2D>` detectam colisões com "
"outros corpos, mas não são afetados por propriedades físicas como gravidade "
"e atrito. Em vez disso, eles devem ser controlados pelo usuário via código. "
"O motor de física não moverá um corpo cinemático."

msgid ""
"When moving a kinematic body, you should not set its ``position`` directly. "
"Instead, you use the ``move_and_collide()`` or ``move_and_slide()`` methods. "
"These methods move the body along a given vector, and it will instantly stop "
"if a collision is detected with another body. After the body has collided, "
"any collision response must be coded manually."
msgstr ""
"Ao mover um corpo cinemático, você não deveria definir sua ``posição`` "
"diretamente. Em vez disso, use os métodos ``move_and_collide()`` ou "
"``move_and_slide()``. Eles movem o corpo ao longo de um certo vetor, que irá "
"parar instantaneamente se uma colisão for detectada com outro corpo. Depois "
"de o corpo colidir, quaisquer reações à colisão devem ser programadas "
"manualmente."

msgid "Kinematic collision response"
msgstr ""

msgid ""
"After a collision, you may want the body to bounce, to slide along a wall, "
"or to alter the properties of the object it hit. The way you handle "
"collision response depends on which method you used to move the "
"KinematicBody2D."
msgstr ""

msgid ":ref:`move_and_collide <class_KinematicBody2D_method_move_and_collide>`"
msgstr ""
":ref:`move_and_collide <class_KinematicBody2D_method_move_and_collide>`"

msgid ""
"When using ``move_and_collide()``, the function returns a :ref:"
"`KinematicCollision2D <class_KinematicCollision2D>` object, which contains "
"information about the collision and the colliding body. You can use this "
"information to determine the response."
msgstr ""

msgid ""
"For example, if you want to find the point in space where the collision "
"occurred:"
msgstr ""

msgid "Or to bounce off of the colliding object:"
msgstr ""

msgid ":ref:`move_and_slide <class_KinematicBody2D_method_move_and_slide>`"
msgstr ":ref:`move_and_slide <class_KinematicBody2D_method_move_and_slide>`"

msgid ""
"Sliding is a common collision response; imagine a player moving along walls "
"in a top-down game or running up and down slopes in a platformer. While it's "
"possible to code this response yourself after using ``move_and_collide()``, "
"``move_and_slide()`` provides a convenient way to implement sliding movement "
"without writing much code."
msgstr ""

msgid ""
"``move_and_slide()`` automatically includes the timestep in its calculation, "
"so you should **not** multiply the velocity vector by ``delta``."
msgstr ""

msgid ""
"For example, use the following code to make a character that can walk along "
"the ground (including slopes) and jump when standing on the ground:"
msgstr ""

msgid ""
"See :ref:`doc_kinematic_character_2d` for more details on using "
"``move_and_slide()``, including a demo project with detailed code."
msgstr ""

msgid "Translation status"
msgstr "Progresso da Tradução"
