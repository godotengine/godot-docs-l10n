# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Scene organization"
msgstr "Organização da cena"

msgid ""
"This article covers topics related to the effective organization of scene "
"content. Which nodes should one use? Where should one place them? How should "
"they interact?"
msgstr ""
"Este artigo cobre tópicos relacionados à organização eficaz do conteúdo da "
"cena. Quais nós devemos usar? Onde devemos colocá-los? Como eles devem "
"interagir?"

msgid "How to build relationships effectively"
msgstr "Como construir relações de forma eficaz"

msgid ""
"When Godot users begin crafting their own scenes, they often run into the "
"following problem:"
msgstr ""
"Quando os usuários do Godot começam a criar suas próprias cenas, eles "
"geralmente se deparam com o seguinte problema:"

msgid ""
"They create their first scene and fill it with content only to eventually "
"end up saving branches of their scene into separate scenes as the nagging "
"feeling that they should split things up starts to accumulate. However, they "
"then notice that the hard references they were able to rely on before are no "
"longer possible. Re-using the scene in multiple places creates issues "
"because the node paths do not find their targets and signal connections "
"established in the editor break."
msgstr ""
"Eles criam sua primeira cena e a preenchem com conteúdo apenas para, "
"eventualmente, acabar salvando ramos de sua cena em cenas separadas, à "
"medida que a sensação incômoda de que devem dividir as coisas começa a se "
"acumular. No entanto, eles percebem que as referências concretas nas quais "
"podiam confiar antes não são mais possíveis. Reutilizar a cena em vários "
"lugares cria problemas porque os caminhos dos nós não encontram seus alvos e "
"as conexões de sinal estabelecidas na quebra do editor."

msgid ""
"To fix these problems, one must instantiate the sub-scenes without them "
"requiring details about their environment. One needs to be able to trust "
"that the sub-scene will create itself without being picky about how one uses "
"it."
msgstr ""
"Para resolver estes problemas, é preciso instanciar as subcenas sem que elas "
"exijam detalhes sobre seu ambiente. É preciso ser capaz de confiar que a "
"subcena criará a si mesma sem ser exigente quanto à forma como se a utiliza."

msgid ""
"One of the biggest things to consider in OOP is maintaining focused, "
"singular-purpose classes with `loose coupling <https://en.wikipedia.org/wiki/"
"Loose_coupling>`_ to other parts of the codebase. This keeps the size of "
"objects small (for maintainability) and improves their reusability."
msgstr ""
"Uma das maiores coisas a considerar no POO é manter as classes focadas e de "
"propósito único, com `acoplamento fraco <https://pt.wikipedia.org/wiki/"
"Acoplamento_fraco>`_ para outras partes da base do código. Isto mantém o "
"tamanho dos objetos pequenos (para manutenção) e melhora a sua reusabilidade."

msgid ""
"These OOP best practices have *several* implications for best practices in "
"scene structure and script usage."
msgstr ""
"Essas melhores práticas de POO têm *várias* implicações para as melhores "
"práticas na estrutura da cena e uso de script."

msgid ""
"**If at all possible, one should design scenes to have no dependencies.** "
"That is, one should create scenes that keep everything they need within "
"themselves."
msgstr ""
"**Se possível, deve-se projetar cenas para não ter dependências.** Ou seja, "
"deve-se criar cenas que mantenham tudo o que precisam dentro de si."

msgid ""
"If a scene must interact with an external context, experienced developers "
"recommend the use of `Dependency Injection <https://en.wikipedia.org/wiki/"
"Dependency_injection>`_. This technique involves having a high-level API "
"provide the dependencies of the low-level API. Why do this? Because classes "
"which rely on their external environment can inadvertently trigger bugs and "
"unexpected behavior."
msgstr ""
"Se uma cena deve interagir com um contexto externo, desenvolvedores "
"experientes recomendam o uso de `Injeção de Dependência <https://pt."
"wikipedia.org/wiki/Inje%C3%A7%C3%A3o_de_depend%C3%AAncia>`_. Esta técnica "
"envolve ter uma API de alto nível que fornece as dependências da API de "
"baixo nível. Por que fazer isto? Porque classes que dependem de seu ambiente "
"externo podem inadvertidamente acionar bugs e comportamentos inesperados."

msgid ""
"To do this, one must expose data and then rely on a parent context to "
"initialize it:"
msgstr ""
"Para isto, é necessário expor dados e, em seguida, confiar em um contexto "
"pai para inicializá-los:"

msgid ""
"Connect to a signal. Extremely safe, but should be used only to \"respond\" "
"to behavior, not start it. Note that signal names are usually past-tense "
"verbs like \"entered\", \"skill_activated\", or \"item_collected\"."
msgstr ""
"Conecte a um sinal. Extremamente seguro, mas deve ser usado apenas para "
"\"responder\" ao comportamento, não para o iniciar. Note que os nomes dos "
"sinais são normalmente verbos no past-tense (passado) como \"entered\", "
"\"skill_activated\" ou \"item_collected\"."

msgid "Call a method. Used to start behavior."
msgstr "Chame um método. Usado para iniciar o comportamento."

msgid ""
"Initialize a :ref:`FuncRef <class_FuncRef>` property. Safer than a method as "
"ownership of the method is unnecessary. Used to start behavior."
msgstr ""
"Inicialize uma propriedade :ref:`FuncRef <class_FuncRef>`. Mais seguro do "
"que um método, pois a propriedade do método é desnecessária. Utilizado para "
"iniciar o comportamento."

msgid "Initialize a Node or other Object reference."
msgstr "Inicialize um Nó ou outra referência de Objeto."

msgid "Initialize a NodePath."
msgstr "Inicialize um NodePath."

msgid ""
"These options hide the points of access from the child node. This in turn "
"keeps the child **loosely coupled** to its environment. One can re-use it in "
"another context without any extra changes to its API."
msgstr ""
"Essas opções ocultam os pontos de acesso do nó filho. Isso, por sua vez, "
"mantém o filho **vagamente acoplado** ao ambiente. Pode-se reutilizá-lo em "
"outro contexto sem quaisquer alterações extras em sua API."

msgid ""
"Although the examples above illustrate parent-child relationships, the same "
"principles apply towards all object relations. Nodes which are siblings "
"should only be aware of their hierarchies while an ancestor mediates their "
"communications and references."
msgstr ""
"Embora os exemplos acima ilustrem as relações entre pai-filho, os mesmos "
"princípios se aplicam a todas as relações de objetos. Nós que são irmãos só "
"devem estar cientes de suas hierarquias enquanto um ancestral media suas "
"comunicações e referências."

msgid ""
"The same principles also apply to non-Node objects that maintain "
"dependencies on other objects. Whichever object actually owns the objects "
"should manage the relationships between them."
msgstr ""
"Os mesmos princípios também se aplicam a objetos não-Nó que mantêm "
"dependências em outros objetos. Qualquer objeto que realmente possui os "
"objetos deve gerenciar as relações entre eles."

msgid ""
"One should favor keeping data in-house (internal to a scene) though as "
"placing a dependency on an external context, even a loosely coupled one, "
"still means that the node will expect something in its environment to be "
"true. The project's design philosophies should prevent this from happening. "
"If not, the code's inherent liabilities will force developers to use "
"documentation to keep track of object relations on a microscopic scale; this "
"is otherwise known as development hell. Writing code that relies on external "
"documentation for one to use it safely is error-prone by default."
msgstr ""
"Deve-se favorecer a manutenção dos dados internamente (internos a uma cena), "
"embora colocar uma dependência em um contexto externo, mesmo um vagamente "
"acoplado, ainda signifique que o nó esperará que algo em seu ambiente seja "
"verdadeiro. As filosofias de design do projeto devem evitar que isso "
"aconteça. Do contrário, as responsabilidades inerentes ao código forçarão os "
"desenvolvedores a usar a documentação para controlar as relações de objeto "
"em uma escala microscópica; isso também é conhecido como inferno do "
"desenvolvimento. Escrever código que depende de documentação externa para "
"usá-lo com segurança está sujeito a erros por padrão."

msgid ""
"To avoid creating and maintaining such documentation, one converts the "
"dependent node (\"child\" above) into a tool script that implements :ref:"
"`_get_configuration_warning() "
"<class_Node_method__get_configuration_warning>`. Returning a non-empty "
"string from it will make the Scene dock generate a warning icon with the "
"string as a tooltip by the node. This is the same icon that appears for "
"nodes such as the :ref:`Area2D <class_Area2D>` node when it has no child :"
"ref:`CollisionShape2D <class_CollisionShape2D>` nodes defined. The editor "
"then self-documents the scene through the script code. No content "
"duplication via documentation is necessary."
msgstr ""
"Para evitar a criação e manutenção de tal documentação, converte-se o nó "
"dependente (\"filho\" acima) em um script de ferramenta que implementa :ref:"
"`_get_configuration_warning() "
"<class_Node_method__get_configuration_warning>`. Retornar uma string não "
"vazia fará com que a dock Cena gere um ícone de aviso com a string como uma "
"dica de ferramenta pelo nó. Este é o mesmo ícone que aparece para nós como o "
"nó :ref:`Area2D <class_Area2D>` quando não tem nós filhos :ref:"
"`CollisionShape2D <class_CollisionShape2D>` definidos. O editor então "
"autodocumenta a cena por meio do código do script. Nenhuma duplicação de "
"conteúdo por meio de documentação é necessária."

msgid ""
"A GUI like this can better inform project users of critical information "
"about a Node. Does it have external dependencies? Have those dependencies "
"been satisfied? Other programmers, and especially designers and writers, "
"will need clear instructions in the messages telling them what to do to "
"configure it."
msgstr ""
"Uma GUI como essa pode informar melhor os usuários do projeto sobre "
"informações críticas sobre um Nó.Ele possui dependências externas? Essas "
"dependências foram satisfeitas? Outros programadores, e especialmente "
"designers e escritores, precisarão de instruções claras nas mensagens "
"dizendo-lhes o que fazer para configurá-lo."

msgid ""
"So, why do all this complex switcharoo work? Well, because scenes operate "
"best when they operate alone. If unable to work alone, then working with "
"others anonymously (with minimal hard dependencies, i.e. loose coupling) is "
"the next best thing. Inevitably, changes may need to be made to a class and "
"if these changes cause it to interact with other scenes in unforeseen ways, "
"then things will start to break down. The whole point of all this "
"indirection is to avoid ending up in a situation where changing one class "
"results in adversely effecting other classes."
msgstr ""
"Então, por que toda esta troca complexa funciona? Bem, porque as cenas "
"funcionam melhor quando funcionam sozinhas. Se não conseguir trabalhar "
"sozinho, trabalhar com outras pessoas anonimamente (com dependências rígidas "
"mínimas, ou seja, acoplamento fraco) é a segunda melhor opção. "
"Inevitavelmente, mudanças podem precisar ser feitas em uma classe e se essas "
"mudanças fizerem com que ela interaja com outras cenas de maneiras "
"imprevistas, então as coisas começarão a quebrar. O objetivo de toda essa "
"indireção é evitar acabar em uma situação em que a mudança de uma classe "
"resulte em efeitos adversos em outras classes."

msgid ""
"Scripts and scenes, as extensions of engine classes, should abide by *all* "
"OOP principles. Examples include..."
msgstr ""
"Scripts e cenas, como extensões de classes do motor, devem obedecer a "
"*todos* os princípios de POO. Exemplos incluem..."

msgid "`SOLID <https://en.wikipedia.org/wiki/SOLID>`_"
msgstr "`SOLID <https://pt.wikipedia.org/wiki/SOLID>`_"

msgid "`DRY <https://en.wikipedia.org/wiki/Don%27t_repeat_yourself>`_"
msgstr "`DRY <https://pt.wikipedia.org/wiki/Don%27t_repeat_yourself>`_"

msgid "`KISS <https://en.wikipedia.org/wiki/KISS_principle>`_"
msgstr "`KISS <https://pt.wikipedia.org/wiki/Princ%C3%ADpio_KISS>`_"

msgid "`YAGNI <https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it>`_"
msgstr "`YAGNI <https://pt.wikipedia.org/wiki/YAGNI>`_"

msgid "Choosing a node tree structure"
msgstr "Escolhendo uma estrutura de árvore de nós"

msgid ""
"So, a developer starts work on a game only to stop at the vast possibilities "
"before them. They might know what they want to do, what systems they want to "
"have, but *where* to put them all? Well, how one goes about making their "
"game is always up to them. One can construct node trees in countless ways. "
"But, for those who are unsure, this helpful guide can give them a sample of "
"a decent structure to start with."
msgstr ""
"Então, um desenvolvedor começa a trabalhar em um jogo apenas para parar nas "
"vastas possibilidades à sua frente. Eles podem saber o que querem fazer, que "
"sistemas desejam ter, mas *onde* colocar todos? Bem, como alguém vai fazer "
"seu jogo depende sempre dele. Pode-se construir árvores de nós de uma "
"infinidade de maneiras. Mas, para aqueles que não têm certeza, este guia "
"útil pode dar uma amostra de uma estrutura decente para começar."

msgid ""
"A game should always have a sort of \"entry point\"; somewhere the developer "
"can definitively track where things begin so that they can follow the logic "
"as it continues elsewhere. This place also serves as a bird's eye view of "
"all of the other data and logic in the program. For traditional "
"applications, this would be the \"main\" function. In this case, it would be "
"a Main node."
msgstr ""
"Um jogo deve sempre ter uma espécie de \"ponto de entrada\"; em algum lugar, "
"o desenvolvedor pode rastrear definitivamente onde as coisas começam para "
"que possam seguir a lógica enquanto ela continua em outro lugar. Este local "
"também serve como uma visão geral de todos os outros dados e lógicas do "
"programa. Para aplicações tradicionais, esta seria a função \"main\". Nesse "
"caso, seria um nó Main."

msgid "Node \"Main\" (main.gd)"
msgstr "Node \"Main\" (main.gd)"

msgid ""
"The ``main.gd`` script would then serve as the primary controller of one's "
"game."
msgstr ""
"O script ``main.gd`` então serviria como o controlador principal do jogo."

msgid ""
"Then one has their actual in-game \"World\" (a 2D or 3D one). This can be a "
"child of Main. In addition, one will need a primary GUI for their game that "
"manages the various menus and widgets the project needs."
msgstr ""
"Então, se tem seu \"Mundo\" real no jogo (um 2D ou 3D). Este pode ser um "
"filho de Main. Além disso, será necessária uma GUI principal para o jogo que "
"gerencie os vários menus e widgets de que o projeto precisa."

msgid "Node2D/Spatial \"World\" (game_world.gd)"
msgstr "Node2D/Spatial \"World\" (game_world.gd)"

msgid "Control \"GUI\" (gui.gd)"
msgstr "Control \"GUI\" (gui.gd)"

msgid ""
"When changing levels, one can then swap out the children of the \"World\" "
"node. :ref:`Changing scenes manually <doc_change_scenes_manually>` gives "
"users full control over how their game world transitions."
msgstr ""
"Ao mudar de fase, é possível trocar os filhos do nó \"Mundo\". :ref:`Mudar "
"as cenas manualmente <doc_change_scenes_manually>` dá aos usuários controle "
"total sobre como suas transições de mundo de jogo."

msgid ""
"The next step is to consider what gameplay systems one's project requires. "
"If one has a system that..."
msgstr ""
"O próximo passo é considerar quais sistemas de jogabilidade o projeto "
"requer. Se houver um sistema que..."

msgid "tracks all of its data internally"
msgstr "rastreia todos os seus dados internamente"

msgid "should be globally accessible"
msgstr "deve ser globalmente acessível"

msgid "should exist in isolation"
msgstr "deve existir isoladamente"

msgid ""
"... then one should create an :ref:`autoload 'singleton' node "
"<doc_singletons_autoload>`."
msgstr ""
"... então deve-se criar um nó :ref:`autoload 'singleton' "
"<doc_singletons_autoload>`."

msgid ""
"For smaller games, a simpler alternative with less control would be to have "
"a \"Game\" singleton that simply calls the :ref:`SceneTree.change_scene() "
"<class_SceneTree_method_change_scene>` method to swap out the main scene's "
"content. This structure more or less keeps the \"World\" as the main game "
"node."
msgstr ""
"Para jogos menores, uma alternativa mais simples com menos controle seria "
"ter um singleton \"Game\" que simplesmente chama o método :ref:`SceneTree."
"change_scene() <class_SceneTree_method_change_scene>` para trocar o conteúdo "
"da cena principal. Esta estrutura mantém mais ou menos o \"Mundo\" como o nó "
"principal do jogo."

msgid ""
"Any GUI would need to also be a singleton; be a transitory part of the "
"\"World\"; or be manually added as a direct child of the root. Otherwise, "
"the GUI nodes would also delete themselves during scene transitions."
msgstr ""
"Qualquer GUI também precisaria ser um singleton; ser uma parte transitória "
"do \"Mundo\"; ou ser adicionado manualmente como filho direto da raiz. Caso "
"contrário, os nós da GUI também se excluiriam durante as transições de cena."

msgid ""
"If one has systems that modify other systems' data, one should define those "
"as their own scripts or scenes rather than autoloads. For more information "
"on the reasons, please see the :ref:`Autoloads versus regular nodes "
"<doc_autoloads_versus_internal_nodes>` documentation."
msgstr ""
"Se alguém tem sistemas que modificam os dados de outros sistemas, deve-se "
"defini-los como seus próprios scripts ou cenas, em vez de cargas "
"automáticas. Para obter mais informações sobre os motivos, consulte a "
"documentação :ref:`Autoloads versus regular nodes "
"<doc_autoloads_versus_internal_nodes>`."

msgid ""
"Each subsystem within one's game should have its own section within the "
"SceneTree. One should use parent-child relationships only in cases where "
"nodes are effectively elements of their parents. Does removing the parent "
"reasonably mean that one should also remove the children? If not, then it "
"should have its own place in the hierarchy as a sibling or some other "
"relation."
msgstr ""
"Cada subsistema dentro do jogo deve ter sua própria seção dentro da "
"SceneTree. Deve-se usar relacionamentos pai-filho apenas nos casos em que os "
"nós são efetivamente elementos de seus pais. Remover o pai significa "
"razoavelmente que também se deve remover os filhos? Do contrário, deve ter "
"seu próprio lugar na hierarquia como irmão ou algum outro parente."

msgid ""
"In some cases, one needs these separated nodes to *also* position themselves "
"relative to each other. One can use the :ref:`RemoteTransform "
"<class_RemoteTransform>` / :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>` nodes for this purpose. They will allow a target "
"node to conditionally inherit selected transform elements from the Remote\\* "
"node. To assign the ``target`` :ref:`NodePath <class_NodePath>`, use one of "
"the following:"
msgstr ""
"Em alguns casos, é necessário que esses nós separados *também* se posicionem "
"uns em relação aos outros. É possível usar os nós :ref:`RemoteTransform "
"<class_RemoteTransform>` / :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>` para este propósito. Eles permitirão que um nó de "
"destino herde condicionalmente os elementos de transformação selecionados do "
"nó Remoto*. Para atribuir o :ref: `NodePath <class_NodePath>` ``target``, "
"use um dos seguintes:"

msgid ""
"A reliable third party, likely a parent node, to mediate the assignment."
msgstr ""
"Um terceiro confiável, provavelmente um nó pai, para mediar a atribuição."

msgid ""
"A group, to easily pull a reference to the desired node (assuming there will "
"only ever be one of the targets)."
msgstr ""
"Um grupo, para puxar facilmente uma referência para o nó desejado (assumindo "
"que haverá apenas um dos alvos)."

msgid ""
"When should one do this? Well, this is subjective. The dilemma arises when "
"one must micro-manage when a node must move around the SceneTree to preserve "
"itself. For example..."
msgstr ""
"Quando fazer isto? Bem, isto é subjetivo. O dilema surge quando é necessário "
"microgerenciar quando um nó deve se mover ao redor da SceneTree para se "
"preservar. Por exemplo..."

msgid "Add a \"player\" node to a \"room\"."
msgstr "Adicionar um nó \"jogador\" a uma \"sala\"."

msgid "Need to change rooms, so one must delete the current room."
msgstr "É necessário mudar de sala, portanto, deve-se excluir a sala atual."

msgid ""
"Before the room can be deleted, one must preserve and/or move the player."
msgstr ""
"Antes que a sala possa ser excluída, deve-se preservar e/ou mover o jogador."

msgid "Is memory a concern?"
msgstr "A memória é uma preocupação?"

msgid ""
"If not, one can just create the two rooms, move the player and delete the "
"old one. No problem."
msgstr ""
"Caso não, pode-se simplesmente criar as duas salas, mover o jogador e "
"deletar a antiga. Sem problemas."

msgid "If so, one will need to..."
msgstr "Se sim, será necessário..."

msgid "Move the player somewhere else in the tree."
msgstr "Mover o jogador para outro lugar na árvore."

msgid "Delete the room."
msgstr "Deletar a sala."

msgid "Instantiate and add the new room."
msgstr "Instanciar e adicionar a nova sala."

msgid "Re-add the player."
msgstr "Adicionar novamente o jogador."

msgid ""
"The issue is that the player here is a \"special case\"; one where the "
"developers must *know* that they need to handle the player this way for the "
"project. As such, the only way to reliably share this information as a team "
"is to *document* it. Keeping implementation details in documentation however "
"is dangerous. It's a maintenance burden, strains code readability, and "
"bloats the intellectual content of a project unnecessarily."
msgstr ""
"A questão é que o jogador aqui é um \"caso especial\"; aquele em que os "
"desenvolvedores devem *saber* que precisam lidar com o jogador desta maneira "
"para o projeto. Como tal, a única maneira confiável de compartilhar essas "
"informações em equipe é *documentá-las*. Manter os detalhes da implementação "
"na documentação, entretanto, é perigoso. É um fardo de manutenção, restringe "
"a legibilidade do código e incha o conteúdo intelectual de um projeto "
"desnecessariamente."

msgid ""
"In a more complex game with larger assets, it can be a better idea to simply "
"keep the player somewhere else in the SceneTree entirely. This results in:"
msgstr ""
"Em um jogo mais complexo com assets maiores, pode ser uma ideia melhor "
"simplesmente manter o jogador inteiramente em outro lugar no SceneTree. Isto "
"resulta em:"

msgid "More consistency."
msgstr "Mais consistência."

msgid "No \"special cases\" that must be documented and maintained somewhere."
msgstr ""
"Nenhum \"caso especial\" que deva ser documentado e mantido em algum lugar."

msgid ""
"No opportunity for errors to occur because these details are not accounted "
"for."
msgstr ""
"Nenhuma oportunidade para erros ocorrerem porque estes detalhes não são "
"levados em consideração."

msgid ""
"In contrast, if one ever needs to have a child node that does *not* inherit "
"the transform of their parent, one has the following options:"
msgstr ""
"Em contraste, se alguém precisa ter um nó filho que *não* herda a "
"transformação de seu pai, tem-se as seguintes opções:"

msgid ""
"The **declarative** solution: place a :ref:`Node <class_Node>` in between "
"them. As nodes with no transform, Nodes will not pass along such information "
"to their children."
msgstr ""
"A solução **declarativa**: coloque um :ref:`Node <class_Node>` entre eles. "
"Como nós sem transformação, Nodes não passarão essas informações para seus "
"filhos."

msgid ""
"The **imperative** solution: Use the ``set_as_toplevel`` setter for the :ref:"
"`CanvasItem <class_CanvasItem_method_set_as_toplevel>` or :ref:`Spatial "
"<class_Spatial_method_set_as_toplevel>` node. This will make the node ignore "
"its inherited transform."
msgstr ""
"A solução **imperativa**: Use o setter ``set_as_toplevel`` para o nó :ref:"
"`CanvasItem <class_CanvasItem_method_set_as_toplevel>` ou :ref:`Spatial "
"<class_Spatial_method_set_as_toplevel>`. Isso fará com que o nó ignore sua "
"transformação herdada."

msgid ""
"If building a networked game, keep in mind which nodes and gameplay systems "
"are relevant to all players versus those just pertinent to the authoritative "
"server. For example, users do not all need to have a copy of every players' "
"\"PlayerController\" logic. Instead, they need only their own. As such, "
"keeping these in a separate branch from the \"world\" can help simplify the "
"management of game connections and the like."
msgstr ""
"Se estiver criando um jogo em rede, tenha em mente quais nós e sistemas de "
"jogo são relevantes para todos os jogadores e aqueles apenas pertinentes ao "
"servidor autorizado. Por exemplo, nem todos os usuários precisam ter uma "
"cópia da lógica \"PlayerController\" de todos os jogadores. Em vez disso, "
"eles precisam apenas dos seus próprios. Como tal, mantê-los em um ramo "
"separado do \"mundo\" pode ajudar a simplificar o gerenciamento de conexões "
"de jogos e similares."

msgid ""
"The key to scene organization is to consider the SceneTree in relational "
"terms rather than spatial terms. Are the nodes dependent on their parent's "
"existence? If not, then they can thrive all by themselves somewhere else. If "
"they are dependent, then it stands to reason that they should be children of "
"that parent (and likely part of that parent's scene if they aren't already)."
msgstr ""
"A chave para a organização da cena é considerar a SceneTree em termos "
"relacionais, em vez de termos espaciais. Os nós são dependentes da "
"existência de seus pais? Do contrário, eles podem prosperar sozinhos em "
"outro lugar. Se forem dependentes, é lógico que devam ser filhos desse pai "
"(e provavelmente parte da cena desse pai, se ainda não o forem)."

msgid ""
"Does this mean nodes themselves are components? Not at all. Godot's node "
"trees form an aggregation relationship, not one of composition. But while "
"one still has the flexibility to move nodes around, it is still best when "
"such moves are unnecessary by default."
msgstr ""
"Isso significa que os próprios nós são componentes? De modo algum. As "
"árvores de nós do Godot formam uma relação de agregação, não de composição. "
"Mas, embora ainda se tenha a flexibilidade de mover nós, ainda é melhor "
"quando esses movimentos são desnecessários por padrão."

msgid "Translation status"
msgstr "Progresso da Tradução"
