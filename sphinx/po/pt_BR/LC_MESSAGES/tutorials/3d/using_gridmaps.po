# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using GridMaps"
msgstr "Usando GridMaps"

msgid "Introduction"
msgstr "Introdução"

msgid ""
":ref:`Gridmaps <class_GridMap>` are a tool for creating 3D game levels, "
"similar to the way :ref:`TileMap <doc_using_tilemaps>` works in 2D. You "
"start with a predefined collection of 3D meshes (a :ref:`class_MeshLibrary`) "
"that can be placed on a grid, as if you were building a level with an "
"unlimited amount of Lego blocks."
msgstr ""

msgid ""
"Collisions and navigation can also be added to the meshes, just like you "
"would do with the tiles of a tilemap."
msgstr ""

msgid "Example project"
msgstr "Exemplo de projeto"

msgid ""
"To learn how GridMaps work, start by downloading the sample project: :"
"download:`gridmap_demo.zip <files/gridmap_demo.zip>`."
msgstr ""

msgid ""
"Unzip this project and add it to the Project Manager using the \"Import\" "
"button."
msgstr ""

msgid "Creating a MeshLibrary"
msgstr "Criando uma MeshLibrary"

msgid ""
"To begin, you need a :ref:`class_MeshLibrary`, which is a collection of "
"individual meshes that can be used in the gridmap. Open the "
"\"MeshLibrary_Source.tscn\" scene to see an example of how to set up the "
"mesh library."
msgstr ""

msgid ""
"As you can see, this scene has a :ref:`class_Spatial` node as its root, and "
"a number of :ref:`class_MeshInstance` node children."
msgstr ""

msgid ""
"If you don't need any physics in your scene, then you're done. However, in "
"most cases you'll want to assign collision bodies to the meshes."
msgstr ""

msgid "Collisions"
msgstr "Colisões"

msgid ""
"You can manually assign a :ref:`class_StaticBody` and :ref:"
"`class_CollisionShape` to each mesh. Alternatively, you can use the \"Mesh\" "
"menu to automatically create the collision body based on the mesh data."
msgstr ""

msgid ""
"Note that a \"Convex\" collision body will work better for simple meshes. "
"For more complex shapes, select \"Create Trimesh Static Body\". Once each "
"mesh has a physics body and collision shape assigned, your mesh library is "
"ready to be used."
msgstr ""

msgid "Materials"
msgstr "Materiais"

msgid ""
"Only the materials from within the meshes are used when generating the mesh "
"library. Materials set on the node will be ignored."
msgstr ""

msgid "NavigationMeshes"
msgstr "Malhas de Navegação"

msgid ""
"Like all mesh instances, MeshLibrary items can be assigned a :ref:"
"`class_NavigationMesh` resource, which can be created manually, or baked as "
"described below."
msgstr ""

msgid ""
"To create the NavigationMesh from a MeshLibrary scene export, place a :ref:"
"`class_NavigationMeshInstance` child node below the main MeshInstance for "
"the GridMap item. Add a valid NavigationMesh resource to the "
"NavigationMeshInstance and some source geometry nodes below and bake the "
"NavigationMesh."
msgstr ""

msgid ""
"With small grid cells it is often necessary to reduce the NavigationMesh "
"properties for agent radius and region minimum size."
msgstr ""

msgid ""
"Nodes below the NavigationMeshInstance are ignored for the MeshLibrary scene "
"export, so additional nodes can be added as source geometry just for baking "
"the navmesh."
msgstr ""

msgid ""
"The baked cell size of the NavigationMesh must match the NavigationServer "
"map cell size to properly merge the navigation meshes of different grid "
"cells."
msgstr ""

msgid "Exporting the MeshLibrary"
msgstr ""

msgid ""
"To export the library, click on Scene -> Convert To.. -> MeshLibrary.., and "
"save it as a resource."
msgstr ""

msgid ""
"You can find an already exported MeshLibrary in the project named "
"\"MeshLibrary.tres\"."
msgstr ""

msgid "Using GridMap"
msgstr "Usando GridMap"

msgid ""
"Create a new scene and add a GridMap node. Add the mesh library by dragging "
"the resource file from the FileSystem dock and dropping it in the \"Theme\" "
"property in the Inspector."
msgstr ""

msgid ""
"The \"Cell/Size\" property should be set to the size of your meshes. You can "
"leave it at the default value for the demo. Set the \"Center Y\" property to "
"\"Off\"."
msgstr ""

msgid ""
"Now you can start designing the level by choosing a tile from the palette "
"and placing it with Left-Click in the editor window. To remove a tile, hold :"
"kbd:`Shift` and use Right-click."
msgstr ""

msgid ""
"Click on the \"GridMap\" menu to see options and shortcuts. For example, "
"pressing :kbd:`S` rotates a tile around the y-axis."
msgstr ""

msgid ""
"Holding :kbd:`Shift` and dragging with the left mouse button will draw a "
"selection box. You can duplicate or clear the selected area using the "
"respective menu options."
msgstr ""

msgid ""
"In the menu, you can also change the axis you're drawing on, as well as "
"shift the drawing plane higher or lower on its axis."
msgstr ""

msgid "Using GridMap in code"
msgstr "Usando o GridMap no código"

msgid ""
"See :ref:`class_GridMap` for details on the node's methods and member "
"variables."
msgstr ""

msgid "Translation status"
msgstr "Progresso da Tradução"
