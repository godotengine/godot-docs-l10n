# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom drawing in 2D"
msgstr "Desenho personalizado em 2D"

msgid "Introduction"
msgstr "Introdução"

msgid ""
"Godot has nodes to draw sprites, polygons, particles, and all sorts of "
"stuff. For most cases, this is enough; but not always. Before crying in "
"fear, angst, and rage because a node to draw that specific *something* does "
"not exist... it would be good to know that it is possible to easily make any "
"2D node (be it :ref:`Control <class_Control>` or :ref:`Node2D "
"<class_Node2D>` based) draw custom commands. It is *really* easy to do it, "
"too."
msgstr ""
"Godot tem nós para desenhar sprites, polígonos, partículas e todo tipo de "
"coisa. Para a maioria dos casos, isso é suficiente; Mas não sempre. Antes de "
"chorar de medo, angústia e raiva porque não existe um nó para desenhar esse "
"*algo* específico... seria bom saber que é possível fazer facilmente "
"qualquer nó 2D (seja :ref:`Control < class_Control>` ou :ref:`Node2D baseado "
"em <class_Node2D>`) desenha comandos personalizados. Também é *realmente* "
"fácil de fazer."

msgid ""
"Custom drawing in a 2D node is *really* useful. Here are some use cases:"
msgstr ""
"O desenho personalizado em um nó 2D é *realmente* útil. Aqui estão alguns "
"casos de uso:"

msgid ""
"Drawing shapes or logic that existing nodes can't do, such as an image with "
"trails or a special animated polygon."
msgstr ""
"Desenhar formas ou lógica que os nós existentes não podem fazer, como uma "
"imagem com rastros ou um polígono animado especial."

msgid ""
"Visualizations that are not that compatible with nodes, such as a tetris "
"board. (The tetris example uses a custom draw function to draw the blocks.)"
msgstr ""
"Visualizações que não são compatíveis com nós, como um quadro de tetris. (O "
"exemplo do tetris usa uma função de desenho personalizada para desenhar os "
"blocos.)"

msgid ""
"Drawing a large number of simple objects. Custom drawing avoids the overhead "
"of using a large number of nodes, possibly lowering memory usage and "
"improving performance."
msgstr ""
"Desenhar um grande número de objetos simples. O desenho personalizado evita "
"a sobrecarga de usar um grande número de nós, possivelmente diminuindo o uso "
"de memória e melhorando o desempenho."

msgid ""
"Making a custom UI control. There are plenty of controls available, but when "
"you have unusual needs, you will likely need a custom control."
msgstr ""
"Fazendo um controle de interface do usuário personalizado. Há muitos "
"controles disponíveis, mas quando você tiver necessidades incomuns, "
"provavelmente precisará de um controle personalizado."

msgid "Drawing"
msgstr "Desenhando"

msgid ""
"Add a script to any :ref:`CanvasItem <class_CanvasItem>` derived node, like :"
"ref:`Control <class_Control>` or :ref:`Node2D <class_Node2D>`. Then override "
"the ``_draw()`` function."
msgstr ""
"Adicione um script a qualquer nó derivado de :ref:`CanvasItem "
"<class_CanvasItem>`, como :ref:`Control <class_Control>` ou :ref:`Node2D "
"<class_Node2D>`. Em seguida, sobrescreva a função ``_draw()``."

msgid ""
"Draw commands are described in the :ref:`CanvasItem <class_CanvasItem>` "
"class reference. There are plenty of them."
msgstr ""
"Os comandos de desenho são descritos na referência de classe :ref:"
"`CanvasItem <class_CanvasItem>`. Existem muitos deles."

msgid "Updating"
msgstr "Atualizando"

msgid ""
"The ``_draw()`` function is only called once, and then the draw commands are "
"cached and remembered, so further calls are unnecessary."
msgstr ""
"A função ``_draw()`` é chamada apenas uma vez e, em seguida, os comandos de "
"desenho são armazenados em cache e lembrados, portanto, chamadas adicionais "
"são desnecessárias."

msgid ""
"If re-drawing is required because a state or something else changed, call :"
"ref:`CanvasItem.update() <class_CanvasItem_method_update>` in that same node "
"and a new ``_draw()`` call will happen."
msgstr ""
"Se o redesenho for necessário porque um estado ou outra coisa mudou, chame :"
"ref:`CanvasItem.update() <class_CanvasItem_method_update>` nesse mesmo nó e "
"uma nova chamada ``_draw()`` acontecerá."

msgid ""
"Here is a little more complex example, a texture variable that will be "
"redrawn if modified:"
msgstr ""
"Aqui está um exemplo um pouco mais complexo, uma variável de textura que "
"será redesenhada se modificada:"

msgid ""
"In some cases, it may be desired to draw every frame. For this, just call "
"``update()`` from the ``_process()`` callback, like this:"
msgstr ""
"Em alguns casos, pode ser desejado desenhar em cada quadro. Para isso, basta "
"chamar ``update()`` da chamada de retorno ``_process()``, assim:"

msgid "An example: drawing circular arcs"
msgstr "Um exemplo: desenhando arcos circulares"

msgid ""
"We will now use the custom drawing functionality of the Godot Engine to draw "
"something that Godot doesn't provide functions for. As an example, Godot "
"provides a ``draw_circle()`` function that draws a whole circle. However, "
"what about drawing a portion of a circle? You will have to code a function "
"to perform this and draw it yourself."
msgstr ""
"Agora usaremos a funcionalidade de desenho personalizado do Godot Engine "
"para desenhar algo para o qual Godot não fornece funções. Como exemplo, "
"Godot fornece uma função ``draw_circle()`` que desenha um círculo inteiro. "
"No entanto, que tal desenhar uma parte de um círculo? Você terá que "
"codificar uma função para executar isso e desenhá-la você mesmo."

msgid "Arc function"
msgstr "Função arco"

msgid ""
"An arc is defined by its support circle parameters, that is, the center "
"position and the radius. The arc itself is then defined by the angle it "
"starts from and the angle at which it stops. These are the 4 arguments that "
"we have to provide to our drawing function. We'll also provide the color "
"value, so we can draw the arc in different colors if we wish."
msgstr ""
"Um arco é definido pelos parâmetros do círculo de suporte, ou seja, a "
"posição central e o raio. O próprio arco é então definido pelo ângulo a "
"partir do qual começa e o ângulo em que termina. Estes são os 4 argumentos "
"que temos que fornecer à nossa função de desenho. Também forneceremos o "
"valor da cor, para que possamos desenhar o arco em cores diferentes, se "
"desejarmos."

msgid ""
"Basically, drawing a shape on the screen requires it to be decomposed into a "
"certain number of points linked from one to the next. As you can imagine, "
"the more points your shape is made of, the smoother it will appear, but the "
"heavier it will also be in terms of processing cost. In general, if your "
"shape is huge (or in 3D, close to the camera), it will require more points "
"to be drawn without it being angular-looking. On the contrary, if your shape "
"is small (or in 3D, far from the camera), you may decrease its number of "
"points to save processing costs; this is known as *Level of Detail (LOD)*. "
"In our example, we will simply use a fixed number of points, no matter the "
"radius."
msgstr ""
"Basicamente, desenhar uma forma na tela requer que ela seja decomposta em um "
"certo número de pontos vinculados de um para o outro. Como você pode "
"imaginar, quanto mais pontos sua forma for feita, mais lisa ela aparecerá, "
"mas mais pesada também será em termos de custo de processamento. Em geral, "
"se sua forma for enorme (ou em 3D, perto da câmera), será necessário que "
"mais pontos sejam desenhados sem ter uma aparência angular. Ao contrário, se "
"o seu formato for pequeno (ou em 3D, longe da câmera), você pode diminuir o "
"número de pontos para economizar custos de processamento; isso é conhecido "
"como *Nível de Detalhe (LOD)*. Em nosso exemplo, vamos simplesmente usar um "
"número fixo de pontos, não importa o raio."

msgid ""
"Remember the number of points our shape has to be decomposed into? We fixed "
"this number in the ``nb_points`` variable to a value of ``32``. Then, we "
"initialize an empty ``PoolVector2Array``, which is simply an array of "
"``Vector2``\\ s."
msgstr ""
"Lembra do número de pontos em que nossa forma deve ser decomposta? Fixamos "
"este número na variável ``nb_points`` para um valor de ``32``. Em seguida, "
"inicializamos um ``PoolVector2Array`` vazio, que é simplesmente uma matriz "
"de ``Vector2``."

msgid ""
"The next step consists of computing the actual positions of these 32 points "
"that compose an arc. This is done in the first for-loop: we iterate over the "
"number of points for which we want to compute the positions, plus one to "
"include the last point. We first determine the angle of each point, between "
"the starting and ending angles."
msgstr ""
"O próximo passo consiste em computar as posições reais desses 32 pontos que "
"compõem um arco. Isso é feito no primeiro loop-for: iteramos sobre o número "
"de pontos para os quais queremos calcular as posições, mais um para incluir "
"o último ponto. Primeiro determinamos o ângulo de cada ponto, entre os "
"ângulos inicial e final."

msgid ""
"The reason why each angle is decreased by 90° is that we will compute 2D "
"positions out of each angle using trigonometry (you know, cosine and sine "
"stuff...). However, to be simple, ``cos()`` and ``sin()`` use radians, not "
"degrees. The angle of 0° (0 radian) starts at 3 o'clock, although we want to "
"start counting at 12 o'clock. So we decrease each angle by 90° in order to "
"start counting from 12 o'clock."
msgstr ""
"A razão pela qual cada ângulo é diminuído em 90° é que calcularemos as "
"posições 2D de cada ângulo usando trigonometria (você sabe, cosseno e "
"seno...). No entanto, para ser simples, ``cos()`` e ``sin()`` usam radianos, "
"não graus. O ângulo de 0° (0 radiano) começa às 3 horas, embora desejemos "
"começar a contar às 12 horas. Então diminuímos cada ângulo em 90° para "
"começar a contar a partir das 12 horas."

msgid ""
"The actual position of a point located on a circle at angle ``angle`` (in "
"radians) is given by ``Vector2(cos(angle), sin(angle))``. Since ``cos()`` "
"and ``sin()`` return values between -1 and 1, the position is located on a "
"circle of radius 1. To have this position on our support circle, which has a "
"radius of ``radius``, we simply need to multiply the position by ``radius``. "
"Finally, we need to position our support circle at the ``center`` position, "
"which is performed by adding it to our ``Vector2`` value. Finally, we insert "
"the point in the ``PoolVector2Array`` which was previously defined."
msgstr ""
"A posição real de um ponto localizado em um círculo no ângulo ``ângulo`` (em "
"radianos) é dada por ``Vetor2(cos(ângulo), sen(ângulo))``. Como ``cos()`` e "
"``sin()`` retornam valores entre -1 e 1, a posição está localizada em um "
"círculo de raio 1. Para ter esta posição em nosso círculo de suporte, que "
"tem um raio de ` ``radius``, nós simplesmente precisamos multiplicar a "
"posição por ``radius``. Finalmente, precisamos posicionar nosso círculo de "
"suporte na posição ``center``, que é realizada adicionando-o ao nosso valor "
"``Vector2``. Por fim, inserimos o ponto no ``PoolVector2Array`` que foi "
"definido anteriormente."

msgid ""
"Now, we need to actually draw our points. As you can imagine, we will not "
"simply draw our 32 points: we need to draw everything that is between each "
"of them. We could have computed every point ourselves using the previous "
"method, and drew it one by one. But this is too complicated and inefficient "
"(except if explicitly needed), so we simply draw lines between each pair of "
"points. Unless the radius of our support circle is big, the length of each "
"line between a pair of points will never be long enough to see them. If that "
"were to happen, we would simply need to increase the number of points."
msgstr ""
"Agora, precisamos realmente desenhar nossos pontos. Como você pode imaginar, "
"não iremos simplesmente sortear nossos 32 pontos: precisamos sortear tudo o "
"que está entre cada um deles. Poderíamos ter calculado todos os pontos "
"usando o método anterior e desenhado um por um. Mas isso é muito complicado "
"e ineficiente (exceto se explicitamente necessário), então simplesmente "
"desenhamos linhas entre cada par de pontos. A menos que o raio do nosso "
"círculo de suporte seja grande, o comprimento de cada linha entre um par de "
"pontos nunca será longo o suficiente para vê-los. Se isso acontecesse, "
"simplesmente precisaríamos aumentar o número de pontos."

msgid "Draw the arc on the screen"
msgstr "Desenhe o arco na tela"

msgid ""
"We now have a function that draws stuff on the screen; it is time to call it "
"inside the ``_draw()`` function:"
msgstr ""
"Agora temos uma função que desenha coisas na tela; é hora de chamá-lo dentro "
"da função ``_draw()``:"

msgid "Result:"
msgstr "Resultado:"

msgid "Arc polygon function"
msgstr "Função de polígono de arco"

msgid ""
"We can take this a step further and not only write a function that draws the "
"plain portion of the disc defined by the arc, but also its shape. The method "
"is exactly the same as before, except that we draw a polygon instead of "
"lines:"
msgstr ""
"Podemos dar um passo adiante e não apenas escrever uma função que desenha a "
"parte plana do disco definida pelo arco, mas também sua forma. O método é "
"exatamente o mesmo de antes, exceto que desenhamos um polígono em vez de "
"linhas:"

msgid "Dynamic custom drawing"
msgstr "Desenho personalizado dinâmico"

msgid ""
"All right, we are now able to draw custom stuff on the screen. However, it "
"is static; let's make this shape turn around the center. The solution to do "
"this is simply to change the angle_from and angle_to values over time. For "
"our example, we will simply increment them by 50. This increment value has "
"to remain constant or else the rotation speed will change accordingly."
msgstr ""
"Tudo bem, agora podemos desenhar coisas personalizadas na tela. No entanto, "
"é estático; vamos fazer essa forma girar em torno do centro. A solução para "
"fazer isso é simplesmente alterar os valores angle_from e angle_to ao longo "
"do tempo. Para o nosso exemplo, iremos simplesmente incrementá-los em 50. "
"Este valor de incremento deve permanecer constante ou então a velocidade de "
"rotação mudará de acordo."

msgid ""
"First, we have to make both angle_from and angle_to variables global at the "
"top of our script. Also note that you can store them in other nodes and "
"access them using ``get_node()``."
msgstr ""
"Primeiro, temos que tornar as variáveis angle_from e angle_to globais no "
"topo do nosso script. Observe também que você pode armazená-los em outros "
"nós e acessá-los usando ``get_node()``."

msgid "We make these values change in the _process(delta) function."
msgstr "Fazemos a alteração desses valores na função _process(delta)."

msgid ""
"We also increment our angle_from and angle_to values here. However, we must "
"not forget to ``wrap()`` the resulting values between 0 and 360°! That is, "
"if the angle is 361°, then it is actually 1°. If you don't wrap these "
"values, the script will work correctly, but the angle values will grow "
"bigger and bigger over time until they reach the maximum integer value Godot "
"can manage (``2^31 - 1``). When this happens, Godot may crash or produce "
"unexpected behavior."
msgstr ""
"Também incrementamos nossos valores de angle_from e angle_to aqui. No "
"entanto, não devemos esquecer de usar o ``wrap()`` nos valores resultantes "
"entre 0 e 360°! Ou seja, se o ângulo é 361°, então na verdade é 1°. Se você "
"não agrupar esses valores, o script funcionará corretamente, mas os valores "
"dos ângulos crescerão cada vez mais com o tempo até atingirem o valor "
"inteiro máximo que Godot pode gerenciar (``2^31 - 1``). Quando isso "
"acontece, o Godot pode travar ou produzir um comportamento inesperado."

msgid ""
"Finally, we must not forget to call the ``update()`` function, which "
"automatically calls ``_draw()``. This way, you can control when you want to "
"refresh the frame."
msgstr ""
"Finalmente, não devemos esquecer de chamar a função ``update()``, que chama "
"automaticamente ``_draw()``. Dessa forma, você pode controlar quando deseja "
"atualizar o quadro."

msgid ""
"Also, don't forget to modify the ``_draw()`` function to make use of these "
"variables:"
msgstr ""
"Além disso, não se esqueça de modificar a função ``_draw()`` para fazer uso "
"dessas variáveis:"

msgid ""
"Let's run! It works, but the arc is rotating insanely fast! What's wrong?"
msgstr ""
"Vamos executá-la! Funciona, mas o arco está girando incrivelmente rápido! O "
"que está errado?"

msgid ""
"The reason is that your GPU is actually displaying the frames as fast as it "
"can. We need to \"normalize\" the drawing by this speed; to achieve that, we "
"have to make use of the ``delta`` parameter of the ``_process()`` function. "
"``delta`` contains the time elapsed between the two last rendered frames. It "
"is generally small (about 0.0003 seconds, but this depends on your "
"hardware), so using ``delta`` to control your drawing ensures that your "
"program runs at the same speed on everybody's hardware."
msgstr ""
"O motivo é que sua GPU está realmente exibindo os quadros o mais rápido "
"possível. Precisamos \"normalizar\" o desenho nessa velocidade; para "
"conseguir isso, temos que fazer uso do parâmetro ``delta`` da função "
"``_process()``. ``delta`` contém o tempo decorrido entre os dois últimos "
"quadros renderizados. Geralmente é pequeno (cerca de 0,0003 segundos, mas "
"isso depende do seu hardware), portanto, usar ``delta`` para controlar seu "
"desenho garante que seu programa seja executado na mesma velocidade no "
"hardware de todos."

msgid ""
"In our case, we simply need to multiply our ``rotation_angle`` variable by "
"``delta`` in the ``_process()`` function. This way, our 2 angles will be "
"increased by a much smaller value, which directly depends on the rendering "
"speed."
msgstr ""
"No nosso caso, simplesmente precisamos multiplicar nossa variável "
"``rotation_angle`` por ``delta`` na função ``_process()``. Dessa forma, "
"nossos 2 ângulos serão aumentados em um valor bem menor, que depende "
"diretamente da velocidade de renderização."

msgid "Let's run again! This time, the rotation displays fine!"
msgstr "Vamos executar de novo! Desta vez, a rotação parece boa!"

msgid "Antialiased drawing"
msgstr "Desenho com suavização de serrilhado"

msgid ""
"Godot offers method parameters in :ref:"
"`draw_line<class_CanvasItem_method_draw_line>` to enable antialiasing, but "
"it doesn't work reliably in all situations (for instance, on mobile/web "
"platforms, or when HDR is enabled). There is also no ``antialiased`` "
"parameter available in :ref:"
"`draw_polygon<class_CanvasItem_method_draw_polygon>`."
msgstr ""
"Godot oferece parâmetros de método em :ref:"
"`draw_line<class_CanvasItem_method_draw_line>` para ativar o antialiasing, "
"mas não funciona de forma confiável em todas as situações (por exemplo, em "
"plataformas móveis/web ou quando o HDR está ativado). Também não há "
"parâmetro ``antialiased`` disponível em :ref:"
"`draw_polygon<class_CanvasItem_method_draw_polygon>`."

msgid ""
"As a workaround, install and use the `Antialiased Line2D add-on <https://"
"github.com/godot-extended-libraries/godot-antialiased-line2d>`__ (which also "
"supports antialiased Polygon2D drawing). Note that this add-on relies on "
"high-level nodes, rather than low-level ``_draw()`` functions."
msgstr ""
"Como solução alternativa, instale e use o complemento `Antialiased Line2D "
"<https://github.com/godot-extended-libraries/godot-antialiased-line2d>`__ "
"(que também suporta desenho Polygon2D antialiased). Observe que este "
"complemento depende de nós de alto nível, em vez de funções ``_draw()`` de "
"baixo nível."

msgid "Tools"
msgstr "Ferramentas"

msgid ""
"Drawing your own nodes might also be desired while running them in the "
"editor. This can be used as a preview or visualization of some feature or "
"behavior. See :ref:`doc_running_code_in_the_editor` for more information."
msgstr ""
"Desenhar seus próprios nós também pode ser desejado ao executá-los no "
"editor. Isso pode ser usado como uma prévia ou visualização de algum recurso "
"ou comportamento. Veja :ref:`doc_running_code_in_the_editor` para mais "
"informações."

msgid "Translation status"
msgstr "Progresso da Tradução"
