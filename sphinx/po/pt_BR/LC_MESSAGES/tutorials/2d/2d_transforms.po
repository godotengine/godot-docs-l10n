# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Viewport and canvas transforms"
msgstr "Transformações de janela de exibição e tela"

msgid "Introduction"
msgstr "Introdução"

msgid ""
"This is an overview of the 2D transforms going on for nodes from the moment "
"they draw their content locally to the time they are drawn onto the screen. "
"This overview discusses very low level details of the engine."
msgstr ""
"Esta é uma visão geral das transformações 2D que ocorrem para os nós desde o "
"momento em que eles desenham seu conteúdo localmente até o momento em que "
"são desenhados na tela. Esta visão geral discute detalhes de nível muito "
"baixo do mecanismo."

msgid "Canvas transform"
msgstr "Transformação de tela"

msgid ""
"As mentioned in the previous tutorial, :ref:`doc_canvas_layers`, every "
"CanvasItem node (remember that Node2D and Control based nodes use CanvasItem "
"as their common root) will reside in a *Canvas Layer*. Every canvas layer "
"has a transform (translation, rotation, scale, etc.) that can be accessed as "
"a :ref:`Transform2D <class_Transform2D>`."
msgstr ""
"Como mencionado no tutorial anterior, :ref:`doc_canvas_layers`, cada nó "
"CanvasItem (lembre-se que os nós baseados em Node2D e Control usam "
"CanvasItem como sua raiz comum) residirão em uma *Canvas Layer*. Cada camada "
"de canvas tem uma transformação (translação, rotação, escala, etc.) que pode "
"ser acessada como :ref:`Transform2D <class_Transform2D>`."

msgid ""
"Also covered in the previous tutorial, nodes are drawn by default in Layer "
"0, in the built-in canvas. To put nodes in a different layer, a :ref:"
"`CanvasLayer <class_CanvasLayer>` node can be used."
msgstr ""
"Também abordado no tutorial anterior, os nós são desenhados por padrão na "
"Camada 0, na tela embutida. Para colocar nós em uma camada diferente, um nó :"
"ref:`CanvasLayer <class_CanvasLayer>` pode ser usado."

msgid "Global canvas transform"
msgstr "Transformação global de canvas"

msgid ""
"Viewports also have a Global Canvas transform (also a :ref:`Transform2D "
"<class_Transform2D>`). This is the master transform and affects all "
"individual *Canvas Layer* transforms. Generally, this transform is not of "
"much use, but is used in the CanvasItem Editor in Godot's editor."
msgstr ""
"Viewports também possuem uma transformação Global Canvas (também uma :ref:"
"`Transform2D <class_Transform2D>`). Esta é a transformação principal e afeta "
"todas as transformações individuais de *Canvas Layer*. Geralmente, essa "
"transformação não é muito útil, mas é usada no CanvasItem Editor no editor "
"do Godot."

msgid "Stretch transform"
msgstr "Transformação de alongamento"

msgid ""
"Finally, viewports have a *Stretch Transform*, which is used when resizing "
"or stretching the screen. This transform is used internally (as described "
"in :ref:`doc_multiple_resolutions`), but can also be manually set on each "
"viewport."
msgstr ""
"Finalmente, as viewports possuem uma *Stretch Transform*, que é usada ao "
"redimensionar ou esticar a tela. Esta transformação é usada internamente "
"(conforme descrito em :ref:`doc_multiple_resolutions`), mas também pode ser "
"configurada manualmente em cada viewport."

msgid ""
"Input events received in the :ref:`MainLoop._input_event() "
"<class_MainLoop_method__input_event>` callback are multiplied by this "
"transform but lack the ones above. To convert InputEvent coordinates to "
"local CanvasItem coordinates, the :ref:`CanvasItem.make_input_local() "
"<class_CanvasItem_method_make_input_local>` function was added for "
"convenience."
msgstr ""
"Os eventos de entrada recebidos na chamada de retorno :ref:`MainLoop."
"_input_event() <class_MainLoop_method__input_event>` são multiplicados por "
"esta transformação, mas faltam os anteriores. Para converter as coordenadas "
"InputEvent em coordenadas CanvasItem locais, a função :ref:`CanvasItem."
"make_input_local() <class_CanvasItem_method_make_input_local>` foi "
"adicionada por conveniência."

msgid "Transform order"
msgstr "Ordem de transformação"

msgid ""
"For a coordinate in CanvasItem local properties to become an actual screen "
"coordinate, the following chain of transforms must be applied:"
msgstr ""
"Para que uma coordenada nas propriedades locais do CanvasItem se torne uma "
"coordenada de tela real, a seguinte cadeia de transformações deve ser "
"aplicada:"

msgid "Transform functions"
msgstr "Funções de transformação"

msgid "Obtaining each transform can be achieved with the following functions:"
msgstr "Cada transformação pode ser obtida com as seguintes funções:"

msgid "Type"
msgstr "Tipo"

msgid "Transform"
msgstr "Transformar"

msgid "CanvasItem"
msgstr "CanvasItem"

msgid ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_method_get_global_transform>`"
msgstr ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_method_get_global_transform>`"

msgid "CanvasLayer"
msgstr "CanvasLayer"

msgid ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_method_get_canvas_transform>`"
msgstr ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_method_get_canvas_transform>`"

msgid "CanvasLayer+GlobalCanvas+Stretch"
msgstr "CanvasLayer+GlobalCanvas+Stretch"

msgid ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_method_get_viewport_transform>`"
msgstr ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_method_get_viewport_transform>`"

msgid ""
"Finally, then, to convert a CanvasItem local coordinates to screen "
"coordinates, just multiply in the following order:"
msgstr ""
"Finalmente, para converter as coordenadas locais de um CanvasItem em "
"coordenadas de tela, basta multiplicar na seguinte ordem:"

msgid ""
"Keep in mind, however, that it is generally not desired to work with screen "
"coordinates. The recommended approach is to simply work in Canvas "
"coordinates (``CanvasItem.get_global_transform()``), to allow automatic "
"screen resolution resizing to work properly."
msgstr ""
"Tenha em mente, no entanto, que geralmente não é desejável trabalhar com "
"coordenadas de tela. A abordagem recomendada é simplesmente trabalhar nas "
"coordenadas do Canvas (``CanvasItem.get_global_transform()``), para permitir "
"que o redimensionamento automático da resolução da tela funcione "
"corretamente."

msgid "Feeding custom input events"
msgstr "Alimentando eventos de entrada personalizados"

msgid ""
"It is often desired to feed custom input events to the scene tree. With the "
"above knowledge, to correctly do this, it must be done the following way:"
msgstr ""
"Muitas vezes, é desejado alimentar eventos de entrada personalizados para a "
"árvore de cena. Com o conhecimento acima, para fazer isso corretamente, deve "
"ser feito da seguinte maneira:"

msgid "Translation status"
msgstr "Progresso da Tradução"
