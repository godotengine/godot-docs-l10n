# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Spatial shaders"
msgstr "Shaders espaciais"

msgid ""
"Spatial shaders are used for shading 3D objects. They are the most complex "
"type of shader Godot offers. Spatial shaders are highly configurable with "
"different render modes and different rendering options (e.g. Subsurface "
"Scattering, Transmission, Ambient Occlusion, Rim lighting etc). Users can "
"optionally write vertex, fragment, and light processor functions to affect "
"how objects are drawn."
msgstr ""

msgid "Render modes"
msgstr "Modos de renderização"

msgid "Render mode"
msgstr "Modo de renderização"

msgid "Description"
msgstr "Descrição"

msgid "**blend_mix**"
msgstr "**blend_mix**"

msgid "Mix blend mode (alpha is transparency), default."
msgstr ""

msgid "**blend_add**"
msgstr "**blend_add**"

msgid "Additive blend mode."
msgstr ""

msgid "**blend_sub**"
msgstr "**blend_sub**"

msgid "Subtractive blend mode."
msgstr ""

msgid "**blend_mul**"
msgstr "**blend_mul**"

msgid "Multiplicative blend mode."
msgstr ""

msgid "**depth_draw_opaque**"
msgstr "**depth_draw_opaque**"

msgid "Only draw depth for opaque geometry (not transparent)."
msgstr ""

msgid "**depth_draw_always**"
msgstr "**depth_draw_always**"

msgid "Always draw depth (opaque and transparent)."
msgstr ""

msgid "**depth_draw_never**"
msgstr "**depth_draw_never**"

msgid "Never draw depth."
msgstr ""

msgid "**depth_draw_alpha_prepass**"
msgstr "**depth_draw_alpha_prepass**"

msgid "Do opaque depth pre-pass for transparent geometry."
msgstr ""

msgid "**depth_test_disable**"
msgstr "**depth_test_disable**"

msgid "Disable depth testing."
msgstr ""

msgid "**cull_front**"
msgstr "**cull_front**"

#, fuzzy
msgid "Cull front-faces."
msgstr "Cull faces frontais."

msgid "**cull_back**"
msgstr "**cull_back**"

msgid "Cull back-faces (default)."
msgstr ""

msgid "**cull_disabled**"
msgstr "**cull_disabled**"

msgid "Culling disabled (double sided)."
msgstr ""

msgid "**unshaded**"
msgstr "**unshaded**"

msgid "Result is just albedo. No lighting/shading happens in material."
msgstr ""

msgid "**diffuse_lambert**"
msgstr "**diffuse_lambert**"

msgid "Lambert shading for diffuse (default)."
msgstr ""

msgid "**diffuse_lambert_wrap**"
msgstr "**diffuse_lambert_wrap**"

msgid "Lambert wrapping (roughness dependent) for diffuse."
msgstr ""

msgid "**diffuse_oren_nayar**"
msgstr "**diffuse_oren_nayar**"

msgid "Oren Nayar for diffuse."
msgstr ""

msgid "**diffuse_burley**"
msgstr "**diffuse_burley**"

msgid "Burley (Disney PBS) for diffuse."
msgstr ""

msgid "**diffuse_toon**"
msgstr "**diffuse_toon**"

msgid "Toon shading for diffuse."
msgstr ""

msgid "**specular_schlick_ggx**"
msgstr "**specular_schlick_ggx**"

msgid "Schlick-GGX for specular (default)."
msgstr ""

msgid "**specular_blinn**"
msgstr "**specular_blinn**"

msgid "Blinn for specular (compatibility)."
msgstr ""

msgid "**specular_phong**"
msgstr "**specular_phong**"

msgid "Phong for specular (compatibility)."
msgstr ""

msgid "**specular_toon**"
msgstr "**specular_toon**"

msgid "Toon for specular."
msgstr ""

msgid "**specular_disabled**"
msgstr "**specular_disabled**"

msgid "Disable specular."
msgstr "Desativar especular."

msgid "**skip_vertex_transform**"
msgstr "**skip_vertex_transform**"

msgid "VERTEX/NORMAL/etc. need to be transformed manually in vertex function."
msgstr ""

msgid "**world_vertex_coords**"
msgstr "**world_vertex_coords**"

msgid "VERTEX/NORMAL/etc. are modified in world coordinates instead of local."
msgstr ""

msgid "**ensure_correct_normals**"
msgstr "**ensure_correct_normals**"

msgid "Use when non-uniform scale is applied to mesh."
msgstr ""

msgid "**vertex_lighting**"
msgstr "**vertex_lighting**"

msgid "Use vertex-based lighting."
msgstr ""

msgid "**shadows_disabled**"
msgstr "**shadows_disabled**"

msgid "Disable computing shadows in shader."
msgstr ""

msgid "**ambient_light_disabled**"
msgstr "**ambient_light_disabled**"

msgid "Disable contribution from ambient light and radiance map."
msgstr ""

msgid "**shadow_to_opacity**"
msgstr "**shadow_to_opacity**"

msgid ""
"Lighting modifies the alpha so shadowed areas are opaque and non-shadowed "
"areas are transparent. Useful for overlaying shadows onto a camera feed in "
"AR."
msgstr ""
"A iluminação modifica o alfa para que as áreas sombreadas sejam opacas e as "
"áreas não sombreadas sejam transparentes. Útil para sobrepor sombras em "
"câmera de RA."

msgid "Built-ins"
msgstr "Embutidos"

msgid ""
"Values marked as \"in\" are read-only. Values marked as \"out\" are for "
"optional writing and will not necessarily contain sensible values. Values "
"marked as \"inout\" provide a sensible default value, and can optionally be "
"written to. Samplers are not subjects of writing and they are not marked."
msgstr ""

msgid "Global built-ins"
msgstr "Built-ins globais"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

msgid "Built-in"
msgstr "Embutido"

msgid "in float **TIME**"
msgstr ""

msgid "Global time, in seconds."
msgstr ""

msgid "Vertex built-ins"
msgstr "Vertex embutidos"

msgid ""
"Vertex data (``VERTEX``, ``NORMAL``, ``TANGENT``, ``BITANGENT``) are "
"presented in local model space. If not written to, these values will not be "
"modified and be passed through as they came."
msgstr ""

msgid ""
"They can optionally be presented in world space by using the "
"*world_vertex_coords* render mode."
msgstr ""

msgid ""
"Users can disable the built-in modelview transform (projection will still "
"happen later) and do it manually with the following code:"
msgstr ""

msgid ""
"Other built-ins, such as UV, UV2 and COLOR, are also passed through to the "
"fragment function if not modified."
msgstr ""

msgid ""
"Users can override the modelview and projection transforms using the "
"``POSITION`` built-in. When ``POSITION`` is used, the value from ``VERTEX`` "
"is ignored and projection does not happen. However, the value passed to the "
"fragment shader still comes from ``VERTEX``."
msgstr ""

msgid ""
"For instancing, the INSTANCE_CUSTOM variable contains the instance custom "
"data. When using particles, this information is usually:"
msgstr ""

msgid "**x**: Rotation angle in radians."
msgstr ""

msgid "**y**: Phase during lifetime (0 to 1)."
msgstr ""

msgid "**z**: Animation frame."
msgstr ""

msgid ""
"This allows you to easily adjust the shader to a particle system using "
"default particles material. When writing a custom particle shader, this "
"value can be used as desired."
msgstr ""

msgid "in vec2 **VIEWPORT_SIZE**"
msgstr ""

msgid "Size of viewport (in pixels)."
msgstr ""

msgid "inout mat4 **WORLD_MATRIX**"
msgstr ""

msgid "Model space to world space transform."
msgstr ""

msgid "in mat4 **INV_CAMERA_MATRIX**"
msgstr ""

msgid "World space to view space transform."
msgstr ""

msgid "inout mat4 **PROJECTION_MATRIX**"
msgstr ""

msgid "View space to clip space transform."
msgstr ""

msgid "in mat4 **CAMERA_MATRIX**"
msgstr ""

msgid "View space to world space transform."
msgstr ""

msgid "inout mat4 **MODELVIEW_MATRIX**"
msgstr ""

msgid "Model space to view space transform (use if possible)."
msgstr ""

msgid "inout mat4 **INV_PROJECTION_MATRIX**"
msgstr ""

msgid "Clip space to view space transform."
msgstr ""

msgid "inout vec3 **VERTEX**"
msgstr ""

msgid "Vertex in local coordinates."
msgstr ""

msgid "out vec4  **POSITION**"
msgstr ""

msgid "If written to, overrides final vertex position."
msgstr ""

msgid "inout vec3 **NORMAL**"
msgstr ""

msgid "Normal in local coordinates."
msgstr ""

msgid "inout vec3 **TANGENT**"
msgstr ""

msgid "Tangent in local coordinates."
msgstr ""

msgid "inout vec3 **BINORMAL**"
msgstr ""

msgid "Binormal in local coordinates."
msgstr ""

msgid "out float **ROUGHNESS**"
msgstr ""

msgid "Roughness for vertex lighting."
msgstr ""

msgid "inout vec2 **UV**"
msgstr ""

msgid "UV main channel."
msgstr ""

msgid "inout vec2 **UV2**"
msgstr ""

msgid "UV secondary channel."
msgstr ""

msgid "in bool **OUTPUT_IS_SRGB**"
msgstr ""

msgid ""
"``true`` when calculations happen in sRGB color space (``true`` in GLES2, "
"``false`` in GLES3)."
msgstr ""

msgid "inout vec4 **COLOR**"
msgstr ""

msgid "Color from vertices."
msgstr ""

msgid "inout float **POINT_SIZE**"
msgstr ""

msgid "Point size for point rendering."
msgstr ""

msgid "in int **INSTANCE_ID**"
msgstr ""

msgid "Instance ID for instancing."
msgstr ""

msgid "in vec4 **INSTANCE_CUSTOM**"
msgstr ""

msgid "Instance custom data (for particles, mostly)."
msgstr ""

msgid ""
"``MODELVIEW_MATRIX`` combines both the ``WORLD_MATRIX`` and "
"``INV_CAMERA_MATRIX`` and is better suited when floating point issues may "
"arise. For example, if the object is very far away from the world origin, "
"you may run into floating point issues when using the seperated "
"``WORLD_MATRIX`` and ``INV_CAMERA_MATRIX``."
msgstr ""

msgid "Fragment built-ins"
msgstr "Fragmentos embutidos"

msgid ""
"The default use of a Godot fragment processor function is to set up the "
"material properties of your object and to let the built-in renderer handle "
"the final shading. However, you are not required to use all these "
"properties, and if you don't write to them, Godot will optimize away the "
"corresponding functionality."
msgstr ""

msgid "Below are examples of common variables calculated using the built-ins:"
msgstr ""

msgid ""
"A commonly used alternative to ``WORLD_MATRIX[3].xyz`` is to use ``vec3 "
"origin = (WORLD_MATRIX * vec4(0,0,0,1)).xyz``. It is more efficient to use "
"``WORLD_MATRIX[3].xyz`` as it avoids the matrix multiplication."
msgstr ""

msgid "in vec4 **FRAGCOORD**"
msgstr ""

msgid ""
"Coordinate of pixel center in screen space. ``xy`` specifies  position in "
"window, ``z`` specifies fragment depth if ``DEPTH`` is not used. Origin is "
"lower-left."
msgstr ""

msgid "in mat4 **WORLD_MATRIX**"
msgstr ""

msgid "in mat4 **PROJECTION_MATRIX**"
msgstr ""

msgid "in mat4 **INV_PROJECTION_MATRIX**"
msgstr ""

msgid "in vec3 **VERTEX**"
msgstr ""

msgid "Vertex that comes from vertex function (default, in view space)."
msgstr ""

msgid "in vec3 **VIEW**"
msgstr ""

msgid "Vector from camera to fragment position (in view space)."
msgstr ""

msgid "in bool **FRONT_FACING**"
msgstr ""

msgid "``true`` if current face is front face."
msgstr ""

msgid "Normal that comes from vertex function (default, in view space)."
msgstr ""

msgid "Tangent that comes from vertex function."
msgstr ""

msgid "Binormal that comes from vertex function."
msgstr ""

msgid "out vec3 **NORMALMAP**"
msgstr ""

msgid "Set normal here if reading normal from a texture instead of NORMAL."
msgstr ""

msgid "out float **NORMALMAP_DEPTH**"
msgstr ""

msgid "Depth from variable above. Defaults to 1.0."
msgstr ""

msgid "in vec2 **UV**"
msgstr ""

msgid "UV that comes from vertex function."
msgstr ""

msgid "in vec2 **UV2**"
msgstr ""

msgid "UV2 that comes from vertex function."
msgstr ""

msgid "in vec4 **COLOR**"
msgstr ""

msgid "COLOR that comes from vertex function."
msgstr ""

msgid "out vec3 **ALBEDO**"
msgstr ""

msgid "Albedo (default white)."
msgstr ""

msgid "out float **ALPHA**"
msgstr ""

msgid ""
"Alpha (0..1); if written to, the material will go to the transparent "
"pipeline."
msgstr ""

msgid "out float **ALPHA_SCISSOR**"
msgstr ""

msgid "If written to, values below a certain amount of alpha are discarded."
msgstr ""

msgid "out float **METALLIC**"
msgstr ""

msgid "Metallic (0..1)."
msgstr "Metálico (0..1)."

msgid "out float **SPECULAR**"
msgstr ""

msgid ""
"Specular. Defaults to 0.5, best not to modify unless you want to change IOR."
msgstr ""

msgid "Roughness (0..1)."
msgstr "Rugosidade (0..1)."

msgid "out float **RIM**"
msgstr ""

msgid "Rim (0..1). If used, Godot calculates rim lighting."
msgstr ""

msgid "out float **RIM_TINT**"
msgstr ""

msgid ""
"Rim Tint, goes from 0 (white) to 1 (albedo). If used, Godot calculates rim "
"lighting."
msgstr ""

msgid "out float **CLEARCOAT**"
msgstr ""

msgid "Small added specular blob. If used, Godot calculates Clearcoat."
msgstr ""

msgid "out float **CLEARCOAT_GLOSS**"
msgstr ""

msgid "Gloss of Clearcoat. If used, Godot calculates Clearcoat."
msgstr ""

msgid "out float **ANISOTROPY**"
msgstr ""

msgid "For distorting the specular blob according to tangent space."
msgstr ""

msgid "out vec2 **ANISOTROPY_FLOW**"
msgstr ""

msgid "Distortion direction, use with flowmaps."
msgstr ""

msgid "out float **SSS_STRENGTH**"
msgstr ""

msgid ""
"Strength of Subsurface Scattering. If used, Subsurface Scattering will be "
"applied to object."
msgstr ""

msgid "out vec3 **TRANSMISSION**"
msgstr ""

msgid ""
"Transmission mask (default 0,0,0). Allows light to pass through object. Only "
"applied if used."
msgstr ""

msgid "out vec3 **EMISSION**"
msgstr ""

msgid "Emission color (can go over 1,1,1 for HDR)."
msgstr ""

msgid "out float **AO**"
msgstr ""

msgid "Strength of Ambient Occlusion. For use with pre-baked AO."
msgstr ""

msgid "out float **AO_LIGHT_AFFECT**"
msgstr ""

msgid "How much AO affects lights (0..1; default 0)."
msgstr ""

msgid "sampler2D **SCREEN_TEXTURE**"
msgstr "sampler2D **SCREEN_TEXTURE**"

msgid ""
"Built-in Texture for reading from the screen. Mipmaps contain increasingly "
"blurred copies."
msgstr ""

msgid "sampler2D **DEPTH_TEXTURE**"
msgstr "sampler2D **DEPTH_TEXTURE**"

msgid ""
"Built-in Texture for reading depth from the screen. Must convert to linear "
"using INV_PROJECTION."
msgstr ""

msgid "out float **DEPTH**"
msgstr ""

msgid ""
"Custom depth value (0..1). If ``DEPTH`` is being written to in any shader "
"branch, then you are responsible for setting the ``DEPTH`` for **all** other "
"branches. Otherwise, the graphics API will leave them uninitialized."
msgstr ""

msgid "in vec2 **SCREEN_UV**"
msgstr ""

msgid "Screen UV coordinate for current pixel."
msgstr ""

msgid "in vec2 **POINT_COORD**"
msgstr ""

msgid "Point Coordinate for drawing points with POINT_SIZE."
msgstr ""

msgid ""
"Shaders going through the transparent pipeline when ``ALPHA`` is written to "
"may exhibit transparency sorting issues. Read the :ref:`transparency sorting "
"section in the 3D rendering limitations page "
"<doc_3d_rendering_limitations_transparency_sorting>` for more information "
"and ways to avoid issues."
msgstr ""

msgid "Light built-ins"
msgstr "Built-ins de iluminação"

msgid ""
"Writing light processor functions is completely optional. You can skip the "
"light function by setting render_mode to ``unshaded``. If no light function "
"is written, Godot will use the material properties written to in the "
"fragment function to calculate the lighting for you (subject to the "
"render_mode)."
msgstr ""

msgid ""
"To write a light function, assign something to ``DIFFUSE_LIGHT`` or "
"``SPECULAR_LIGHT``. Assigning nothing means no light is processed."
msgstr ""

msgid ""
"The light function is called for every light in every pixel. It is called "
"within a loop for each light type."
msgstr ""

msgid ""
"Below is an example of a custom light function using a Lambertian lighting "
"model:"
msgstr ""

msgid ""
"If you want the lights to add together, add the light contribution to "
"``DIFFUSE_LIGHT`` using ``+=``, rather than overwriting it."
msgstr ""

msgid ""
"In GLES2, lights will always be added together even if you override "
"``DIFFUSE_LIGHT`` using ``=``. This is due to lighting being computed in "
"multiple passes (one for each light), unlike GLES3."
msgstr ""

msgid ""
"The ``light()`` function won't be run if the ``vertex_lighting`` render mode "
"is enabled, or if **Rendering > Quality > Shading > Force Vertex Shading** "
"is enabled in the Project Settings. (It's enabled by default on mobile "
"platforms.)"
msgstr ""

msgid "Elapsed total time in seconds."
msgstr ""

msgid ""
"Coordinate of pixel center in screen space. ``xy`` specifies position in "
"window, ``z`` specifies fragment depth if ``DEPTH`` is not used. Origin is "
"lower-left."
msgstr ""
"Coordenada do centro do pixel no espaço da tela. ``xy`` especifica a posição "
"na janela, ``z`` especifica a profundidade do fragmento se ``DEPTH`` não for "
"usado. A origem está no canto inferior esquerdo."

msgid "in vec3 **NORMAL**"
msgstr "in vec3 **NORMAL**"

msgid "Normal vector, in view space."
msgstr "Vetor normal, no espaço de exibição."

msgid "View vector, in view space."
msgstr ""

msgid "in vec3 **LIGHT**"
msgstr "in vec3 **LIGHT**"

msgid "Light Vector, in view space."
msgstr ""

msgid "in vec3 **ATTENUATION**"
msgstr ""

msgid "Attenuation based on distance or shadow."
msgstr ""

msgid "in vec3 **ALBEDO**"
msgstr ""

msgid "Base albedo."
msgstr ""

msgid "in vec3 **LIGHT_COLOR**"
msgstr ""

msgid "Color of light multiplied by energy."
msgstr ""

msgid "in float **ROUGHNESS**"
msgstr ""

msgid "Roughness."
msgstr "Rugosidade."

msgid "in vec3 **TRANSMISSION**"
msgstr ""

msgid "Transmission mask from fragment function."
msgstr "Máscara de transmissão da função de fragmento."

msgid "out vec3 **DIFFUSE_LIGHT**"
msgstr ""

msgid "Diffuse light result."
msgstr ""

msgid "out vec3 **SPECULAR_LIGHT**"
msgstr ""

msgid "Specular light result."
msgstr ""

msgid "Translation status"
msgstr "Progresso da Tradução"
