# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript: An introduction to dynamic languages"
msgstr "GDScript: Uma introdução às linguagens dinâmicas"

msgid "About"
msgstr "Sobre"

msgid ""
"This tutorial aims to be a quick reference for how to use GDScript more "
"efficiently. It focuses on common cases specific to the language, but also "
"covers a lot of information on dynamically typed languages."
msgstr ""
"Este tutorial pretende ser uma referência rápida de como usar GDScript de "
"forma mais eficiente. Focando, assim, em casos mais comuns específicos da "
"linguagem, mas também contém informações sobre linguagens dinâmicamente "
"tipadas."

msgid ""
"It's meant to be especially useful for programmers with little or no "
"previous experience with dynamically typed languages."
msgstr ""
"É destinado a ser especialmente útil para programadores com pouca ou nenhuma "
"experiência com linguagens dinâmicamente tipadas."

msgid "Dynamic nature"
msgstr "Natureza dinâmica"

msgid "Pros & cons of dynamic typing"
msgstr "Prós e contras da tipagem dinâmica"

msgid ""
"GDScript is a Dynamically Typed language. As such, its main advantages are "
"that:"
msgstr ""
"GDScript é uma linguagem Dinamicamente Tipada. Como tal, suas maiores "
"vantagens são:"

msgid "The language is simple and easy to learn."
msgstr "A linguagem é muito simples de aprender."

msgid "Most code can be written and changed quickly and without hassle."
msgstr ""
"A maioria do código pode ser escrito e modificado rapidamente sem "
"complicações."

msgid "Less code written means less errors & mistakes to fix."
msgstr ""
"Menos código escrito significa menos erros e enganos a serem corrigidos."

msgid "Easier to read the code (less clutter)."
msgstr "Mais fácil de ler o código (menos bagunça)."

msgid "No compilation is required to test."
msgstr "Nenhuma compilação é necessária para testar."

msgid "Runtime is tiny."
msgstr "Tempo de execução é bem pequeno."

msgid "Duck-typing and polymorphism by nature."
msgstr "Polimorfismo e tipagem pato naturalmente."

msgid "While the main disadvantages are:"
msgstr "Enquanto as maiores desvantagens são:"

msgid "Less performance than statically typed languages."
msgstr "Menor performance que linguagens com tipagem estática."

msgid "More difficult to refactor (symbols can't be traced)"
msgstr "Mais difícil de refatorar (símbolos não podem ser rastreados)"

msgid ""
"Some errors that would typically be detected at compile time in statically "
"typed languages only appear while running the code (because expression "
"parsing is more strict)."
msgstr ""
"Alguns erros que, tipicamente, seriam detectados em tempo de compilação em "
"linguagens tipadas estaticamente aparecem apenas rodando o código (porque a "
"análise de expressões é mais estrita)."

msgid ""
"Less flexibility for code-completion (some variable types are only known at "
"run-time)."
msgstr ""
"Menos flexibilidade para preenchimento de código (alguns tipos de variáveis "
"só são reconhecidos na execução)."

msgid ""
"This, translated to reality, means that Godot+GDScript are a combination "
"designed to create games quickly and efficiently. For games that are very "
"computationally intensive and can't benefit from the engine built-in tools "
"(such as the Vector types, Physics Engine, Math library, etc), the "
"possibility of using C++ is present too. This allows you to still create "
"most of the game in GDScript and add small bits of C++ in the areas that "
"need a performance boost."
msgstr ""
"Isso, traduzido para a realidade, significa que Godot+GDScript é uma "
"combinação projetada para criar jogos de forma rápida e eficiente. Para "
"jogos que são muito intensivos em computação e não podem se beneficiar das "
"ferramentas internas do mecanismo (como os tipos Vector, Engine de Física, "
"biblioteca de Matemática, etc), a possibilidade de usar o C++ também está "
"presente. Isso permite ainda criar o jogo inteiro em GDScript e adicionar "
"pequenos pedaços de C++ nas áreas que precisam de um desempenho maior."

msgid "Variables & assignment"
msgstr "Variáveis & atribuição"

msgid ""
"All variables in a dynamically typed language are \"variant\"-like. This "
"means that their type is not fixed, and is only modified through assignment. "
"Example:"
msgstr ""
"Todas as variáveis em uma linguagem dinamicamente tipada são tipo-"
"\"variante\". Isto significa que seus tipos não são fixos, e é modificado "
"apenas na atribuição. Exemplos:"

msgid "Static:"
msgstr "Estático:"

msgid "Dynamic:"
msgstr "Dinâmico:"

msgid "As function arguments:"
msgstr "Como argumentos da função:"

msgid ""
"Functions are of dynamic nature too, which means they can be called with "
"different arguments, for example:"
msgstr ""
"Funções também têm natureza dinâmica, o que significa que elas podem ser "
"invocadas com argumentos diferentes, por exemplo:"

msgid "Pointers & referencing:"
msgstr "Ponteiros & referência:"

msgid ""
"In static languages, such as C or C++ (and to some extent Java and C#), "
"there is a distinction between a variable and a pointer/reference to a "
"variable. The latter allows the object to be modified by other functions by "
"passing a reference to the original one."
msgstr ""
"Em linguagens estáticas como C ou C++ (e de certa medida Java e C#), existe "
"uma distinção entre uma variável e um ponteiro/referência a uma variável. "
"Esse último deixa o objeto ser modificado por outras funções através da "
"passagem de uma referência ao original."

msgid ""
"In C# or Java, everything not a built-in type (int, float, sometimes String) "
"is always a pointer or a reference. References are also garbage-collected "
"automatically, which means they are erased when no longer used. Dynamically "
"typed languages tend to use this memory model, too. Some Examples:"
msgstr ""
"Em C# ou Java, tudo que não é um tipo embutido (int, float ou, às vezes "
"string) é sempre um ponteiro ou uma referência. Referências são coletadas "
"pelo coletor de lixo automaticamente, o que significa que são apagadas "
"quando não mais usadas. Linguagens tipadas dinamicamente tendem a usar esse "
"modelo de memória também. Alguns exemplos:"

msgid "C++:"
msgstr "C++:"

msgid "Java:"
msgstr "Java:"

msgid "GDScript:"
msgstr "GDScript:"

#, fuzzy
msgid ""
"In GDScript, only base types (int, float, String and PoolArray types) are "
"passed by value to functions (value is copied). Everything else (instances, "
"Arrays, Dictionaries, etc) is passed as reference. Classes that inherit :ref:"
"`class_Reference` (the default if nothing is specified) will be freed when "
"not used, but manual memory management is allowed too if inheriting manually "
"from :ref:`class_Object`."
msgstr ""
"No GDScript, somente os tipos básicos (int, float, string e os tipos "
"vetores) são passados por valor para funções (o valor é copiado). Todo o "
"resto (instâncias, arrays, dicionários, etc) é passado como referência. As "
"classes que herdam :ref:`class_Reference` (o padrão se nada for "
"especificado) serão liberadas quando não usadas, mas o gerenciamento de "
"memória manual também é permitido se herdar manualmente de :ref:"
"`class_Object`."

msgid ""
"A value is **passed by value** when it is copied every time it's specified "
"as a function parameter. One consequence of this is that the function cannot "
"modify the parameter in a way that is visible from outside the function::"
msgstr ""
"Um valor é **passado por valor** quando é copiado toda vez que é "
"especificado como um parâmetro de função. Uma consequência disso é que a "
"função não pode modificar o parâmetro de forma visível de fora da função:"

msgid ""
"A value is **passed by reference** when it is *not* copied every time it's "
"specified as a function parameter. This allows modifying a function "
"parameter within a function body (and having the modified value accessible "
"outside the function). The downside is that the data passed as a function "
"parameter is no longer guaranteed to be immutable, which can cause difficult-"
"to-track bugs if not done carefully::"
msgstr ""

msgid ""
"Compared to passing by value, passing by reference can perform better when "
"using large objects since copying large objects in memory can be slow."
msgstr ""

msgid ""
"Additionally, in Godot, base types such as String are **immutable**. This "
"means that modifying them will *always* return a copy of the original value, "
"rather than modifying the value in-place."
msgstr ""

msgid "Arrays"
msgstr "Arrays"

msgid ""
"Arrays in dynamically typed languages can contain many different mixed "
"datatypes inside and are always dynamic (can be resized at any time). "
"Compare for example arrays in statically typed languages:"
msgstr ""
"Arrays em linguagens dinamicamente tipadas podem conter muitos tipos de "
"dados mistos diferentes e são sempre dinâmicos (podem ser redimensionados a "
"qualquer momento). Compare, por exemplo, arrays em linguagens estaticamente "
"tipadas:"

msgid "And in GDScript:"
msgstr "E no GDScript:"

msgid ""
"In dynamically typed languages, arrays can also double as other datatypes, "
"such as lists:"
msgstr ""
"Em linguagens dinamicamente tipadas, os arrays também podem ser usados como "
"outros tipos de dados, como listas:"

msgid "Or unordered sets:"
msgstr "Ou conjuntos não ordenados:"

msgid "Dictionaries"
msgstr "Dictionaries"

msgid ""
"Dictionaries are a powerful tool in dynamically typed languages. Most "
"programmers that come from statically typed languages (such as C++ or C#) "
"ignore their existence and make their life unnecessarily more difficult. "
"This datatype is generally not present in such languages (or only in limited "
"form)."
msgstr ""
"Os dicionários são uma ferramenta poderosa em linguagens dinamicamente "
"tipadas. A maioria dos programadores que vêm de linguagens estaticamente "
"tipadas (como C++ ou C#) ignoram sua existência e tornam sua vida "
"desnecessariamente mais difícil. Esse tipo de dados geralmente não está "
"presente nessas linguagens (ou apenas em formato limitado)."

msgid ""
"Dictionaries can map any value to any other value with complete disregard "
"for the datatype used as either key or value. Contrary to popular belief, "
"they are efficient because they can be implemented with hash tables. They "
"are, in fact, so efficient that some languages will go as far as "
"implementing arrays as dictionaries."
msgstr ""
"Os dicionários podem mapear qualquer valor para qualquer outro valor com "
"total desconsideração do tipo de dados usado como chave ou valor. Ao "
"contrário da crença popular, eles são eficientes porque podem ser "
"implementados com tabelas de hash. Eles são, de fato, tão eficientes que "
"algumas linguagens vão tão longe quanto implementar matrizes como "
"dicionários."

msgid "Example of Dictionary:"
msgstr "Exemplo de Dictionary:"

msgid ""
"Dictionaries are also dynamic, keys can be added or removed at any point at "
"little cost:"
msgstr ""
"Dictionaries também são dinâmicos, as chaves podem ser adicionadas ou "
"removidas a qualquer momento a baixo custo:"

msgid ""
"In most cases, two-dimensional arrays can often be implemented more easily "
"with dictionaries. Here's a simple battleship game example:"
msgstr ""
"Na maioria dos casos, arrays bidimensionais, muitas vezes podem ser "
"implementados mais facilmente com dictionaries. Aqui está um exemplo de jogo "
"de batalha naval simples:"

msgid ""
"Dictionaries can also be used as data markup or quick structures. While "
"GDScript's dictionaries resemble python dictionaries, it also supports Lua "
"style syntax and indexing, which makes it useful for writing initial states "
"and quick structs:"
msgstr ""
"Dicionários também podem ser usados como marcação de dados ou estruturas "
"rápidas. Enquanto dicionários em GDScript lembram dicionários do Python, ele "
"também suporta sintaxe e indexação no estilo Lua, o que o torna útil para "
"escrever estados iniciais e estruturas rápidas:"

msgid "For & while"
msgstr "For e while"

msgid "Iterating in some statically typed languages can be quite complex:"
msgstr ""
"Iterar em algumas linguagens estaticamente tipadas pode ser bastante "
"complexo:"

msgid "This is usually greatly simplified in dynamically typed languages:"
msgstr ""
"Isto é geralmente bastante simplificado em linguagens tipificadas "
"dinamicamente:"

msgid ""
"Container datatypes (arrays and dictionaries) are iterable. Dictionaries "
"allow iterating the keys:"
msgstr ""
"Tipos de dados container (arrays e dictionaries) são iteráveis. Dictionaries "
"permitem a iteração das chaves:"

msgid "Iterating with indices is also possible:"
msgstr "Também é possível iterar com índices:"

msgid "The range() function can take 3 arguments:"
msgstr "A função range() pode ter 3 argumentos:"

msgid "Some statically typed programming language examples:"
msgstr "Alguns exemplos em linguagens estaticamente tipadas:"

msgid "Translate to:"
msgstr "Traduzir para:"

msgid "And backwards looping is done through a negative counter:"
msgstr "E a repetição inversa é feita através de um contador negativo:"

msgid "Becomes:"
msgstr "Torna-se:"

msgid "While"
msgstr "Enquanto"

msgid "while() loops are the same everywhere:"
msgstr "Loops while() são os mesmos em todos os lugares:"

msgid "Custom iterators"
msgstr "Iteradores personalizados"

msgid ""
"You can create custom iterators in case the default ones don't quite meet "
"your needs by overriding the Variant class's ``_iter_init``, ``_iter_next``, "
"and ``_iter_get`` functions in your script. An example implementation of a "
"forward iterator follows:"
msgstr ""
"Você pode criar iteradores personalizados caso os existentes não satisfaçam "
"suas necessidades, sobrescrevendo as funções ``_iter_init``, ``_iter_next`` "
"e ``_iter_get`` da classe Variant em seu script. Aqui está um exemplo de "
"implementação de um iterador avançado:"

msgid "And it can be used like any other iterator:"
msgstr "E pode ser usado como qualquer outro iterador:"

msgid ""
"Make sure to reset the state of the iterator in ``_iter_init``, otherwise "
"nested for-loops that use custom iterators will not work as expected."
msgstr ""
"Certifique-se de redefinir o estado do iterador em ``_iter_init``, caso "
"contrário, loops for aninhados que usam iteradores personalizados não "
"funcionarão como esperado."

msgid "Duck typing"
msgstr "Duck typing"

msgid ""
"One of the most difficult concepts to grasp when moving from a statically "
"typed language to a dynamic one is duck typing. Duck typing makes overall "
"code design much simpler and straightforward to write, but it's not obvious "
"how it works."
msgstr ""
"Um dos conceitos mais difíceis de entender quando passa de uma linguagem "
"estaticamente tipada para uma dinâmica é duck typing. Duck typing faz com "
"que o design geral do código seja mais simples e direto de escrever, mas não "
"é óbvio como ele funciona."

msgid ""
"As an example, imagine a situation where a big rock is falling down a "
"tunnel, smashing everything on its way. The code for the rock, in a "
"statically typed language would be something like:"
msgstr ""
"Como exemplo, imagine uma situação onde uma grande rocha está caindo de um "
"túnel, esmagando tudo em seu caminho. O código para a rocha, em uma "
"linguagem estaticamente tipada seria algo como:"

msgid ""
"This way, everything that can be smashed by a rock would have to inherit "
"Smashable. If a character, enemy, piece of furniture, small rock were all "
"smashable, they would need to inherit from the class Smashable, possibly "
"requiring multiple inheritance. If multiple inheritance was undesired, then "
"they would have to inherit a common class like Entity. Yet, it would not be "
"very elegant to add a virtual method ``smash()`` to Entity only if a few of "
"them can be smashed."
msgstr ""
"Desta forma, tudo o que pode ser esmagado por uma rocha teria que herdar "
"Smashable. Se um personagem, um inimigo, uma peça de mobília, uma pequena "
"pedra fossem todos quebráveis, eles precisariam herdar da classe Smashable, "
"possivelmente exigindo herança múltipla. Se herança múltipla fosse "
"indesejada, eles teriam que herdar uma classe comum como Entity. No entanto, "
"não seria muito elegante adicionar um método virtual ``smash()`` à Entity "
"apenas se alguns deles puderem ser destruídos."

msgid ""
"With dynamically typed languages, this is not a problem. Duck typing makes "
"sure you only have to define a ``smash()`` function where required and "
"that's it. No need to consider inheritance, base classes, etc."
msgstr ""
"Com linguagens dinamicamente tipadas, isso não é um problema. Duck typing "
"garante que você só precisa definir uma função ``smash()`` onde for "
"necessário e pronto. Não há necessidade de considerar herança, classes base, "
"etc."

msgid ""
"And that's it. If the object that hit the big rock has a smash() method, it "
"will be called. No need for inheritance or polymorphism. Dynamically typed "
"languages only care about the instance having the desired method or member, "
"not what it inherits or the class type. The definition of Duck Typing should "
"make this clearer:"
msgstr ""
"E é isso. Se o objeto que atingiu a pedra grande tiver um método smash (), "
"ele será chamado. Não há necessidade de herança ou polimorfismo. Linguagens "
"dinamicamente tipadas só se preocupam com a instância que possui o método ou "
"membro desejado, não o que ele herda ou o tipo de classe. A definição de "
"Duck Typing deve tornar isso mais claro:"

msgid ""
"*\"When I see a bird that walks like a duck and swims like a duck and quacks "
"like a duck, I call that bird a duck\"*"
msgstr ""
"*\"Quando eu vejo um pássaro que anda como um pato e nada como um pato e "
"grasna como um pato, eu chamo esse pássaro de pato\"*"

msgid "In this case, it translates to:"
msgstr "Neste caso, traduz para:"

msgid ""
"*\"If the object can be smashed, don't care what it is, just smash it.\"*"
msgstr ""
"*\"Se o objeto pode ser esmagado, não importa o que seja, apenas esmague-o."
"\"*"

msgid "Yes, we should call it Hulk typing instead."
msgstr "Sim, nós deveríamos chamar isso de tipo Hulk ao invés disso."

#, fuzzy
msgid ""
"It's possible that the object being hit doesn't have a smash() function. "
"Some dynamically typed languages simply ignore a method call when it doesn't "
"exist, but GDScript is stricter, so checking if the function exists is "
"desirable:"
msgstr ""
"É possível que o objeto que está sendo atingido não tenha uma função "
"smash(). Algumas linguagens tipadas dinamicamente simplesmente ignoram uma "
"chamada de método quando ela não existe (como o Objective C), mas o GDScript "
"é mais rígido, então verificar se a função existe é desejável:"

msgid ""
"Then, simply define that method and anything the rock touches can be smashed."
msgstr ""
"Então, simplesmente defina esse método e qualquer coisa que a rocha tocar "
"pode ser destruída."

msgid "Translation status"
msgstr "Progresso da Tradução"
