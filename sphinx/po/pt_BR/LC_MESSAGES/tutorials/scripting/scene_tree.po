# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using SceneTree"
msgstr "Usando Árvore de cena"

msgid "Introduction"
msgstr "Introdução"

msgid ""
"In previous tutorials, everything revolved around the concept of nodes. "
"Scenes are collections of nodes. They become active once they enter the "
"*scene tree*."
msgstr ""
"Nos tutoriais anteriores, tudo girava em torno do conceito de nós. Cenas são "
"simplesmente uma coleção de nós. Elas se tornam ativos quando entram na "
"*árvore de cena*."

msgid "MainLoop"
msgstr "Loop principal"

msgid ""
"The way Godot works internally is as follows. There is the :ref:`OS "
"<class_OS>` class, which is the only instance that runs at the beginning. "
"Afterwards, all drivers, servers, scripting languages, scene system, etc are "
"loaded."
msgstr ""
"A maneira como o Godot trabalha internamente é a seguinte. Há a classe :ref:"
"`OS <class_OS>`, que é a única instância que é executada no início. Depois, "
"todos os drivers, servidores, linguagens de script, sistema de cena, etc. "
"são carregados."

msgid ""
"When initialization is complete, :ref:`OS <class_OS>` needs to be supplied "
"a :ref:`MainLoop <class_MainLoop>` to run. Up to this point, all this is "
"internals working (you can check main/main.cpp file in the source code if "
"you are ever interested to see how this works internally)."
msgstr ""
"Quando a inicialização estiver completa, :ref:`OS <class_OS>` precisa de um :"
"ref:`MainLoop <class_MainLoop>` para ser executado. Até este ponto, tudo "
"isso é funcionamento interno (você pode verificar o arquivo main/main.cpp no "
"código-fonte, se você estiver interessado em ver como isso funciona "
"internamente)."

msgid ""
"The user program, or game, starts in the MainLoop. This class has a few "
"methods, for initialization, idle (frame-synchronized callback), fixed "
"(physics-synchronized callback), and input. Again, this is low level and "
"when making games in Godot, writing your own MainLoop seldom makes sense."
msgstr ""
"O programa do usuário, ou jogo, inicia no MainLoop. Essa classe tem alguns "
"métodos, para inicialização, ocioso (retorno de chamada com sincronia de "
"quadros), fixo (retorno de chamada com sincronização física) e entrada. "
"Novamente, isso é de baixo nível e ao fazer jogos no Godot, escrever seu "
"próprio MainLoop raramente faz sentido."

msgid "SceneTree"
msgstr "SceneTree"

msgid ""
"One of the ways to explain how Godot works is that it's a high level game "
"engine over a low level middleware."
msgstr ""
"Uma das maneiras de explicar como Godot funciona é que é um mecanismo de "
"jogo de alto nível sobre um middleware de baixo nível."

msgid ""
"The scene system is the game engine, while the :ref:`OS <class_OS>` and "
"servers are the low level API."
msgstr ""
"O sistema de cena é o mecanismo do jogo, enquanto o :ref:`OS <class_OS>` e "
"os servidores são a API de baixo nível."

msgid ""
"The scene system provides its own main loop to OS, :ref:`SceneTree "
"<class_SceneTree>`. This is automatically instanced and set when running a "
"scene, no need to do any extra work."
msgstr ""
"O sistema de cena fornece seu próprio loop principal para o SO, :ref:"
"`SceneTree <class_SceneTree>`. Isso é automaticamente instanciado e definido "
"ao executar uma cena, sem necessidade de qualquer trabalho extra."

msgid ""
"It's important to know that this class exists because it has a few important "
"uses:"
msgstr ""
"É importante saber que essa classe existe porque tem alguns usos importantes:"

msgid ""
"It contains the root :ref:`Viewport <class_Viewport>`, to which a scene is "
"added as a child when it's first opened to become part of the *Scene Tree* "
"(more on that next)."
msgstr ""
"Ele contém o :ref:`Viewport <class_Viewport>` raiz, para o qual uma cena é "
"adicionada como filha quando é aberta pela primeira vez, para se tornar "
"parte da *Árvore da Cena* (mais sobre isso a seguir)."

msgid ""
"It contains information about the groups and has the means to call all nodes "
"in a group or get a list of them."
msgstr ""
"Ele contém informações sobre os grupos e tem meios para chamar todos os nós "
"de um grupo ou obter uma lista deles."

msgid ""
"It contains some global state functionality, such as setting pause mode or "
"quitting the process."
msgstr ""
"Ela contém alguma funcionalidade de estado global, como configurar o modo de "
"pausa ou encerrar o processo."

msgid ""
"When a node is part of the Scene Tree, the :ref:`SceneTree "
"<class_SceneTree>` singleton can be obtained by calling :ref:`Node."
"get_tree() <class_Node_method_get_tree>`."
msgstr ""
"Quando um nó é parte da Scene Tree, o singleton :ref:`SceneTree "
"<class_SceneTree>` pode ser obtido chamando :ref:`Node.get_tree() "
"<class_Node_method_get_tree>`."

msgid "Root viewport"
msgstr "Viewport raiz"

msgid ""
"The root :ref:`Viewport <class_Viewport>` is always at the top of the scene. "
"From a node, it can be obtained in two different ways:"
msgstr ""
"A raiz :ref:`Viewport <class_Viewport>` está sempre no topo da cena. De um "
"nó, ela pode ser obtida de duas maneiras diferentes:"

msgid ""
"This node contains the main viewport. Anything that is a child of a :ref:"
"`Viewport <class_Viewport>` is drawn inside of it by default, so it makes "
"sense that the top of all nodes is always a node of this type otherwise "
"nothing would be seen."
msgstr ""
"Este nó contém a janela de exibição principal. Qualquer coisa que é filho de "
"uma :ref:`Viewport <class_Viewport>` é desenhada dentro dele por padrão, "
"então faz sentido que o topo de todos os nós seja sempre um nó deste tipo, "
"caso contrário nada seria visto."

msgid ""
"While other viewports can be created in the scene (for split-screen effects "
"and such), this one is the only one that is never created by the user. It's "
"created automatically inside SceneTree."
msgstr ""
"Enquanto outras viewports podem ser criadas na cena (para efeitos de tela "
"dividida e tal), esta é a única que nunca é criada pelo usuário. É criado "
"automaticamente dentro do SceneTree."

msgid "Scene tree"
msgstr "Árvore de cena"

msgid ""
"When a node is connected, directly or indirectly, to the root viewport, it "
"becomes part of the *scene tree*."
msgstr ""
"Quando um nó é conectado, direta ou indiretamente, à viewport raiz, ele se "
"torna parte da *árvore de cena*."

msgid ""
"This means that as explained in previous tutorials, it will get the "
"``_enter_tree()`` and ``_ready()`` callbacks (as well as ``_exit_tree()``)."
msgstr ""
"Isto significa que, como explicado em tutoriais anteriores, receberá as "
"ligações ``_enter_tree()`` e ``_ready()`` (assim como ``_exit_tree()``)."

msgid ""
"When nodes enter the *Scene Tree*, they become active. They get access to "
"everything they need to process, get input, display 2D and 3D visuals, "
"receive and send notifications, play sounds, etc. When they are removed from "
"the *scene tree*, they lose these abilities."
msgstr ""
"Quando os nós entram na *Scene Tree*, eles se tornam ativos. Eles têm acesso "
"a tudo o que precisam para processar, obter entrada, exibir visuais em 2D e "
"3D, enviar e receber notificações, reproduzir sons, etc. Quando são "
"removidos da *árvore de cena*, eles perdem essas habilidades."

msgid "Tree order"
msgstr "Ordem da árvore"

msgid ""
"Most node operations in Godot, such as drawing 2D, processing, or getting "
"notifications are done in tree order. This means that parents and siblings "
"with a lower rank in the tree order will get notified before the current "
"node."
msgstr ""
"A maioria das operações de nó no Godot, como desenhar 2D, processar, ou "
"obter notificações, é feita em ordem de árvore. Isso significa que pais e "
"irmãos com uma classificação menor na ordem de árvore serão notificados "
"antes do nó atual."

msgid "\"Becoming active\" by entering the *Scene Tree*"
msgstr "\"Tornando-se ativo\" entrando na * Scene Tree *"

msgid "A scene is loaded from disk or created by scripting."
msgstr "Uma cena é carregada do disco ou criada pelo script."

msgid ""
"The root node of that scene (only one root, remember?) is added as either a "
"child of the \"root\" Viewport (from SceneTree), or to any child or "
"grandchild of it."
msgstr ""
"O nó raiz dessa cena (apenas uma raiz, lembra?) É adicionado como um filho "
"da viewport \"root\" (de SceneTree), ou para qualquer filho ou neto dela."

msgid ""
"Every node of the newly added scene, will receive the \"enter_tree\" "
"notification ( _enter_tree() callback in GDScript) in top-to-bottom order."
msgstr ""
"Cada nó da cena recém-adicionada receberá a notificação "
"\"enter_tree\" (callback _enter_tree() em GDScript) na ordem de cima para "
"baixo."

msgid ""
"An extra notification, \"ready\" ( _ready() callback in GDScript) is "
"provided for convenience, when a node and all its children are inside the "
"active scene."
msgstr ""
"Uma notificação extra, \"ready\" (retorno de chamada _ready() em GDScript) é "
"fornecida por conveniência, quando um nó e todos os seus filhos estão dentro "
"da cena ativa."

msgid ""
"When a scene (or part of it) is removed, they receive the \"exit scene\" "
"notification ( _exit_tree() callback in GDScript) in bottom-to-top order"
msgstr ""
"Quando uma cena (ou parte dela) é removida, eles recebem a notificação "
"\"exit scene\" (retorno de chamada _exit_tree() em GDScript) na ordem de "
"baixo para cima"

msgid "Changing current scene"
msgstr "Alterando a cena atual"

msgid ""
"After a scene is loaded, it is often desired to change this scene for "
"another one. The simple way to do this is to use the :ref:`SceneTree."
"change_scene() <class_SceneTree_method_change_scene>` function:"
msgstr ""
"Depois que uma cena é carregada, muitas vezes é desejado mudar essa cena "
"para outra. A maneira simples de fazer isso é usar a função :ref:`SceneTree."
"change_scene() <class_SceneTree_method_change_scene>`:"

msgid ""
"Rather than using file paths, one can also use ready-made :ref:`PackedScene "
"<class_PackedScene>` resources using the equivalent function :ref:`SceneTree."
"change_scene_to(PackedScene scene) <class_SceneTree_method_change_scene_to>`:"
msgstr ""
"Em vez de usar caminhos de arquivo, também é possível utilizar recursos "
"prontos :ref:`PackedScene <class_PackedScene>` usando a função equivalente :"
"ref:`SceneTree.change_scene_to(cena PackedScene) "
"<class_SceneTree_method_change_scene_to>`:"

msgid ""
"These are quick and useful ways to switch scenes but have the drawback that "
"the game will stall until the new scene is loaded and running. At some point "
"in the development of your game, it may be preferable to create proper "
"loading screens with progress bar, animated indicators or thread "
"(background) loading. This must be done manually using autoloads (see next "
"chapter) and :ref:`doc_background_loading`."
msgstr ""
"Estas são maneiras rápidas e úteis de trocar de cena, mas têm a desvantagem "
"de o jogo travar até que a nova cena seja carregada e executada. Em algum "
"momento do seu jogo, pode ser necessário criar telas de carregamento "
"adequadas com barra de progresso, indicadores animados ou carregamento de "
"thread (no fundo). Isso deve ser feito manualmente usando autoloads (veja o "
"próximo capítulo) e :ref:`doc_background_loading`."

msgid "Translation status"
msgstr "Progresso da Tradução"
