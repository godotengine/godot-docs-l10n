# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Coding the player"
msgstr "Pelaajan liikuttaminen"

msgid ""
"In this lesson, we'll add player movement, animation, and set it up to "
"detect collisions."
msgstr ""

#, fuzzy
msgid ""
"To do so, we need to add some functionality that we can't get from a built-"
"in node, so we'll add a script. Click the ``Player`` node and click the "
"\"Attach Script\" button:"
msgstr ""
"Nyt meidän täytyy lisätä hiukan toiminnallisuutta, jota emme voi saada "
"valmiilta solmulta, joten lisäämme skriptin. Napsauta ``Player`` solmua ja "
"\"Lisää skripti\" painiketta:"

msgid ""
"In the script settings window, you can leave the default settings alone. "
"Just click \"Create\":"
msgstr ""
"Skriptin asetukset -ikkunassa voit antaa oletusasetuksien olla sellaisenaan. "
"Napsauta vain \"Luo\":"

msgid ""
"If you're creating a C# script or other languages, select the language from "
"the `language` drop down menu before hitting create."
msgstr ""
"Jos olet luomassa C#-skriptiä tai muun kielistä skriptiä, valitse kieli "
"`kieli`-pudotusvalikosta ennen kuin huitaiset luontinappia."

msgid ""
"If this is your first time encountering GDScript, please read :ref:"
"`doc_scripting` before continuing."
msgstr ""

msgid "Start by declaring the member variables this object will need:"
msgstr ""
"Aloita luomalla ne jäsenmuuttujat, jotka tämä objekti tulee tarvitsemaan:"

msgid ""
"Using the ``export`` keyword on the first variable ``speed`` allows us to "
"set its value in the Inspector. This can be handy for values that you want "
"to be able to adjust just like a node's built-in properties. Click on the "
"``Player`` node and you'll see the property now appears in the \"Script "
"Variables\" section of the Inspector. Remember, if you change the value "
"here, it will override the value written in the script."
msgstr ""
"Käyttäen ``export`` avainsanaa ensimmäiselle muuttujalle ``speed`` antaa "
"meidän asettaa sen arvon Tarkastelijassa. Se voi olla kätevää arvoille, "
"joita haluat säätää kuin ne olisivat solmun valmiita ominaisuuksia. Napsauta "
"``Player`` solmua ja aseta nopeusominaisuudeksi ``400``."

msgid ""
"If you're using C#, you need to (re)build the project assemblies whenever "
"you want to see new export variables or signals. This build can be manually "
"triggered by clicking the word \"Mono\" at the bottom of the editor window "
"to reveal the Mono Panel, then clicking the \"Build Project\" button."
msgstr ""

msgid ""
"The ``_ready()`` function is called when a node enters the scene tree, which "
"is a good time to find the size of the game window:"
msgstr ""
"``_ready()`` funktiota kutsutaan, kun solmu lisätään skenepuuhun, mikä on "
"hyvä hetki hakea peli-ikkunan koko:"

msgid ""
"Now we can use the ``_process()`` function to define what the player will "
"do. ``_process()`` is called every frame, so we'll use it to update elements "
"of our game, which we expect will change often. For the player, we need to "
"do the following:"
msgstr ""
"Nyt voimme käyttää ``_process()`` funktiota määrittelemään mitä pelaaja "
"tekee. ``_process()`` funktiota kutsutaan jokaisella ruudunpäivityksellä, "
"joten käytämme sitä päivittämään pelimme niitä osasia joiden odotamme "
"muuttuvan usein. Pelaajan osalta teemme siinä seuraavaa:"

msgid "Check for input."
msgstr "Tarkista syöte."

msgid "Move in the given direction."
msgstr "Liiku annettuun suuntaan."

msgid "Play the appropriate animation."
msgstr "Toista asiaankuuluva animaatio."

#, fuzzy
msgid ""
"First, we need to check for input - is the player pressing a key? For this "
"game, we have 4 direction inputs to check. Input actions are defined in the "
"Project Settings under \"Input Map\". Here, you can define custom events and "
"assign different keys, mouse events, or other inputs to them. For this game, "
"we will map the arrow keys to the four directions."
msgstr ""
"Ensin meidän täytyy tarkistaa syöte - painaako pelaaja jotain näppäintä? "
"Tässä pelissä meillä on neljän suunnan syötteet tarkistettavana. "
"Syötetoiminnot on määritelty Projektin asetuksissa kohdassa \"Input Map\". "
"Voit määritellä omia tapahtumia ja asettaa niille eri näppäimiä, "
"hiiritapahtumia ja muita syötteitä. Tässä esimerkissä käytämme "
"oletustapahtumia, jotka on asetettu näppäimistön nuolinäppäimille."

msgid ""
"Click on *Project -> Project Settings* to open the project settings window "
"and click on the *Input Map* tab at the top. Type \"move_right\" in the top "
"bar and click the \"Add\" button to add the ``move_right`` action."
msgstr ""

msgid ""
"We need to assign a key to this action. Click the \"+\" icon on the right, "
"then click the \"Key\" option in the drop-down menu. A dialog asks you to "
"type in the desired key. Press the right arrow on your keyboard and click "
"\"Ok\"."
msgstr ""

msgid "Repeat these steps to add three more mappings:"
msgstr ""

msgid "``move_left`` mapped to the left arrow key."
msgstr ""

msgid "``move_up`` mapped to the up arrow key."
msgstr ""

msgid "And ``move_down`` mapped to the down arrow key."
msgstr ""

#, fuzzy
msgid "Your input map tab should look like this:"
msgstr "Skenepuusi pitäisi näyttää tältä:"

msgid "Click the \"Close\" button to close the project settings."
msgstr ""

msgid ""
"We only mapped one key to each input action, but you can map multiple keys, "
"joystick buttons, or mouse buttons to the same input action."
msgstr ""

#, fuzzy
msgid ""
"You can detect whether a key is pressed using ``Input.is_action_pressed()``, "
"which returns ``true`` if it's pressed or ``false`` if it isn't."
msgstr ""
"Voit tunnistaa onko näppäintä painettu käyttämällä ``Input."
"is_action_pressed()`` funktiota, joka palauttaa ``true``, jos sitä on "
"painettu ja ``false`` jos ei ole."

#, fuzzy
msgid ""
"We start by setting the ``velocity`` to ``(0, 0)`` - by default, the player "
"should not be moving. Then we check each input and add/subtract from the "
"``velocity`` to obtain a total direction. For example, if you hold ``right`` "
"and ``down`` at the same time, the resulting ``velocity`` vector will be "
"``(1, 1)``. In this case, since we're adding a horizontal and a vertical "
"movement, the player would move *faster* diagonally than if it just moved "
"horizontally."
msgstr ""
"Aloitamme asettamalla ``velocity`` arvoksi ``(0, 0)`` – lähtökohtaisesti "
"pelihahmon ei pitäisi olla liikkeessä. Tarkistamme sitten kunkin syötteen ja "
"kasvatamme/vähennämme ``velocity`` arvoa saadaksemme lopullisen suunnan. Jos "
"esimerkiksi painat ``oikealle`` ja ``alas`` samanaikasesti, lopputuloksena "
"oleva ``velocity`` vektori on ``(1, 1)``. Tässä tapauksessa, koska "
"kasvatamme sekä vaaka- että pystyliikettä, pelihahmo liikkuisi *nopeammin* "
"kuin jos se liikkuisi vain vaakasuuntaisesti."

#, fuzzy
msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, then multiply by the desired speed. This means no more "
"fast diagonal movement."
msgstr ""
"Voimme estää sen, jos *normalisoimme* nopeusvektorin, mikä tarkoittaa että "
"asetamme sen *pituudeksi* ``1`` ja kerromme sen halutulla nopeudella. Tämän "
"seurauksena vinottainen liike ei ole enää nopeampaa."

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`. It's good to "
"know but won't be necessary for the rest of this tutorial."
msgstr ""
"Jos et ole koskaan käyttänyt vektorimatematiikkaa, tai tarvitset kertausta, "
"voit katsoa selityksen Godotin vektorien käytöstä: :ref:`doc_vector_math`. "
"Se on hyvä osata, mutta ei ole välttämätön oppaan loppuosan kannalta."

#, fuzzy
msgid ""
"We also check whether the player is moving so we can call ``play()`` or "
"``stop()`` on the AnimatedSprite."
msgstr ""
"Tarkistamme myös liikkuuko pelaaja, jotta voimme aloittaa tai lopettaa "
"AnimatedSprite animaation."

#, fuzzy
msgid ""
"``$`` is shorthand for ``get_node()``. So in the code above, "
"``$AnimatedSprite.play()`` is the same as ``get_node(\"AnimatedSprite\")."
"play()``."
msgstr ""
"``$`` on lyhenne ``get_node()`` syntaksille. Toisin sanoen, yllä olevassa "
"koodissa ``$AnimatedSprite.play()`` on sama kuin "
"``get_node(\"AnimatedSprite\").play()``."

#, fuzzy
msgid ""
"In GDScript, ``$`` returns the node at the relative path from the current "
"node, or returns ``null`` if the node is not found. Since AnimatedSprite is "
"a child of the current node, we can use ``$AnimatedSprite``."
msgstr ""
"GDScriptissä, ``$`` palauttaa solmun, joka löytyy suhteellisesta polusta "
"nykyiseen solmuun nähden, tai palauttaa ``null`` jos solmua ei löydy. Koska "
"AnimatedSprite on nykyisen solmun alisolmu, voimme käyttää "
"``$AnimatedSprite`` syntaksia."

#, fuzzy
msgid ""
"Now that we have a movement direction, we can update the player's position. "
"We can also use ``clamp()`` to prevent it from leaving the screen. "
"*Clamping* a value means restricting it to a given range. Add the following "
"to the bottom of the ``_process`` function (make sure it's not indented "
"under the `else`):"
msgstr ""
"Nyt kun meillä on liikkumisen suunta, voimme päivittää pelaajan sijainnin ja "
"käyttää ``clamp()`` funktiota estämään sitä poistumasta ruudulta lisäämällä "
"seuraavan ``_process`` funktion loppuun:"

msgid ""
"The `delta` parameter in the `_process()` function refers to the *frame "
"length* - the amount of time that the previous frame took to complete. Using "
"this value ensures that your movement will remain consistent even if the "
"frame rate changes."
msgstr ""
"`delta`parametri `_process()` funktiossa viittaa *ruudun (animaatiossa) "
"pituuteen* -aikaan joka kului edellisen ruudun suorittamiseen. Tätä arvoa "
"käyttämällä varmistutaan että liike on säännönmukainen vaikka ruudun "
"päivitysnopeus muuttuisi."

#, fuzzy
msgid ""
"Click \"Play Scene\" (:kbd:`F6`, :kbd:`Cmd + R` on macOS) and confirm you "
"can move the player around the screen in all directions."
msgstr ""
"Napsauta \"Pelaa skeneä\" (``F6``) ja varmista, että voit liikuttaa pelaajaa "
"ympäri ruutua kaikkiin suuntiin."

msgid "If you get an error in the \"Debugger\" panel that says"
msgstr ""

msgid ""
"``Attempt to call function 'play' in base 'null instance' on a null "
"instance``"
msgstr ""

#, fuzzy
msgid ""
"this likely means you spelled the name of the AnimatedSprite node wrong. "
"Node names are case-sensitive and ``$NodeName`` must match the name you see "
"in the scene tree."
msgstr ""
"Jos saat \"Debuggeri\" paneeliin virheen, jossa mainitaan \"null instance\", "
"se johtuu todennäköisesti siitä, että kirjoitit nimen väärin. Solmujen nimet "
"ovat kirjainkoosta riippuvaisia ja ``$SolmunNimi`` tai "
"``get_node(\"SolmunNimi\")`` täytyy vastata skenepuussa näkyvää nimeä."

msgid "Choosing animations"
msgstr "Animaatioiden valinta"

#, fuzzy
msgid ""
"Now that the player can move, we need to change which animation the "
"AnimatedSprite is playing based on its direction. We have the \"walk\" "
"animation, which shows the player walking to the right. This animation "
"should be flipped horizontally using the ``flip_h`` property for left "
"movement. We also have the \"up\" animation, which should be flipped "
"vertically with ``flip_v`` for downward movement. Let's place this code at "
"the end of the ``_process()`` function:"
msgstr ""
"Nyt kun pelaaja voi liikkua, meidän täytyy vaihtaa AnimatedSprite solmun "
"toistama animaatio suuntaan perustuen. Meillä on \"oikealle\" animaatio, "
"joka pitäisi vasenta animaatiota varten kääntää vaakasuunnassa toisinpäin "
"käyttäen ``flip_h`` ominaisuutta, sekä \"ylös\" animaatio, joka pitäisi "
"alaspäin animaatiota varten kääntää pystysuunnassa toisinpäin ``flip_v`` "
"ominaisuudella. Lisätään tämä koodinpätkä ``_process()`` funktiomme loppuun:"

#, fuzzy
msgid ""
"The boolean assignments in the code above are a common shorthand for "
"programmers. Since we're doing a comparison test (boolean) and also "
"*assigning* a boolean value, we can do both at the same time. Consider this "
"code versus the one-line boolean assignment above:"
msgstr ""
"Boolean-sijoitukset ylläolevassa koodissa ovat yleisiä pikakirjoitustapoja "
"ohjelmoijille. Tarkastele tätä koodia yllä oleviin lyhennettyihin boolean-"
"sijoituksiin verrattuna:"

msgid ""
"Play the scene again and check that the animations are correct in each of "
"the directions."
msgstr ""

msgid ""
"A common mistake here is to type the names of the animations wrong. The "
"animation names in the SpriteFrames panel must match what you type in the "
"code. If you named the animation ``\"Walk\"``, you must also use a capital "
"\"W\" in the code."
msgstr ""

#, fuzzy
msgid ""
"When you're sure the movement is working correctly, add this line to "
"``_ready()``, so the player will be hidden when the game starts:"
msgstr ""
"Pelaa skene uudelleen ja tarkista, että animaatiot toimivat oikein kuhunkin "
"suuntaan. Kun olet varma, että liikkuminen toimii oikein, lisää tämä rivi "
"``_ready()`` funktioon, jotta pelihahmo on piilotettu pelin alkaessa:"

msgid "Preparing for collisions"
msgstr "Törmäyksiin valmistautuminen"

msgid ""
"We want ``Player`` to detect when it's hit by an enemy, but we haven't made "
"any enemies yet! That's OK, because we're going to use Godot's *signal* "
"functionality to make it work."
msgstr ""
"Haluamme, että ``Player`` havaitsee milloin vihollinen on törmännyt siihen, "
"mutta emme ole tehneet vielä vihollisia! Se on OK, koska aiomme laittaa sen "
"toimimaan Godotin *signal* toiminnallisuudella."

#, fuzzy
msgid "Add the following at the top of the script, after ``extends Area2D``:"
msgstr "Lisää seuraava skriptin alkuun, ``extends Area2d`` jälkeen:"

msgid ""
"This defines a custom signal called \"hit\" that we will have our player "
"emit (send out) when it collides with an enemy. We will use ``Area2D`` to "
"detect the collision. Select the ``Player`` node and click the \"Node\" tab "
"next to the Inspector tab to see the list of signals the player can emit:"
msgstr ""
"Tämä määrittelee mukautetun signaalin nimeltä \"hit\", jonka laitamme "
"pelaajamme lähettämään, kun se törmää viholliseen. Käytämme ``Area2D`` "
"solmua tunnistamaan törmäyksen. Valitse ``Player`` solmu ja napsauta "
"\"Solmu\" välilehteä Tarkastelijan vieressä nähdäksesi listan signaaleista, "
"joita pelaaja voi lähettää:"

#, fuzzy
msgid ""
"Notice our custom \"hit\" signal is there as well! Since our enemies are "
"going to be ``RigidBody2D`` nodes, we want the ``body_entered(body: Node)`` "
"signal. This signal will be emitted when a body contacts the player. Click "
"\"Connect..\" and the \"Connect a Signal\" window appears. We don't need to "
"change any of these settings so click \"Connect\" again. Godot will "
"automatically create a function in your player's script."
msgstr ""
"Huomaa, että oma \"hit\" signaalimme on myös siellä! Koska viholliset "
"tulevat olemaan ``RigidBody2D`` solmuja, haluamme ``body_entered( Object "
"body )`` signaalin; se lähetetään kappaleen osuessa pelaajaan. Napsauta "
"\"Yhdistä...\" ja sen jälkeen \"Yhdistä\" uudelleen \"Yhdistetään "
"signaalia\" ikkunassa. Meidän ei tarvitse muuttaa mitään näistä asetuksista "
"– Godot luo automaattisesti funktion pelaajasi skriptiin. Tätä funktiota "
"kutsutaan aina, kun signaali lähetetään – se *käsittelee* signaalin."

msgid ""
"Note the green icon indicating that a signal is connected to this function. "
"Add this code to the function:"
msgstr ""

msgid ""
"Each time an enemy hits the player, the signal is going to be emitted. We "
"need to disable the player's collision so that we don't trigger the ``hit`` "
"signal more than once."
msgstr ""
"Joka kerta kun vihollinen osuu pelaajaan, signaali välitetään. Meidän täytyy "
"poistaa käytöstä pelaajan törmäys ettei se laukaise enää ``hit`` signaalia "
"enempää kuin kerran."

#, fuzzy
msgid ""
"Disabling the area's collision shape can cause an error if it happens in the "
"middle of the engine's collision processing. Using ``set_deferred()`` tells "
"Godot to wait to disable the shape until it's safe to do so."
msgstr ""
"Poistamalla käytöstä alueen törmäys muodon voi aiheuttaa virheen mikäli se "
"tapahtuu kesken pelimoottorin törmäyksen prosessoinnin. Käyttämällä "
"``set_deferred()`` funktiota sallii Godotin odottaa käytöstä poistoa, kunnes "
"se on turvallista."

#, fuzzy
msgid ""
"The last piece is to add a function we can call to reset the player when "
"starting a new game."
msgstr ""
"Viimeinen palanen pelaajallemme on lisätä funktio, jota voimme kutsua "
"alustamaan pelaajan pelin alkaessa."

msgid "With the player working, we'll work on the enemy in the next lesson."
msgstr ""

msgid "Translation status"
msgstr "Käännöksen tila"
