# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "The main game scene"
msgstr "Skenen pystytys"

msgid ""
"Now it's time to bring everything we did together into a playable game scene."
msgstr ""

#, fuzzy
msgid ""
"Create a new scene and add a :ref:`Node <class_Node>` named ``Main``. (The "
"reason we are using Node instead of Node2D is because this node will be a "
"container for handling game logic. It does not require 2D functionality "
"itself.)"
msgstr ""
"Nyt on aika saattaa kaikki yhteen. Luo uusi skene ja lisää siihen :ref:`Node "
"<class_Node>` solmu nimeltä ``Main``. Napsauta \"Ilmentymä\" painiketta ja "
"valitse tallentamasi ``Player.tscn``."

msgid ""
"Click the **Instance** button (represented by a chain link icon) and select "
"your saved ``Player.tscn``."
msgstr ""

msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"Lisää nyt seuraavat solmut ``Main`` solmun alisolmuiksi ja nimeä ne kuten "
"esitetty (arvot ovat sekunteina):"

msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (nimeltään ``MobTimer``) - ohjaamaan kuinka usein "
"vihulaiset ilmestyvät"

msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (nimeltään ``ScoreTimer``) - kasvattamaan "
"pistelaskuria joka sekunti"

msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (nimeltään ``StartTimer``) - antamaan viive ennen "
"aloittamista"

msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (nimeltään ``StartPosition``) - "
"merkkaamaan pelaajan aloituspaikkaa"

msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr "Aseta kunkin ``Timer`` solmun ``Wait Time`` ominaisuus seuraavasti:"

msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"Lisäksi, aseta ``StartTimer`` solmun ``One Shot`` ominaisuus arvoon \"On\", "
"ja aseta ``StartPosition`` solmun ``Position`` ominaisuudeksi ``(240, 450)``."

msgid "Spawning mobs"
msgstr "Vihollisten lisääminen"

msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"Main solmu tuottaa uusia vihollisia ja haluamme niiden ilmestyvän "
"satunnaiseen paikkaan ruudun reunalla. Lisää ``Main`` solmun alisolmuksi :"
"ref:`Path2D <class_Path2D>` solmu nimeltä ``MobPath``. Kun valitset "
"``Path2D`` solmun, näet joitakin uusia painikkeita editorin ylälaidassa:"

#, fuzzy
msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Use Grid Snap\" and \"Use Snap\" are both selected. These options can "
"be found to the left of the \"Lock\" button, appearing as a magnet next to "
"some dots and intersecting lines, respectively."
msgstr ""
"Valitse keskimmäinen (\"Lisää piste\") ja piirrä polku napsauttelemalla "
"lisätäksesi pisteet kuvattuihin kulmiin. Jotta pisteet kiinnittyisivät "
"ruudukkoon, varmista että \"Tartu ruudukkoon\" on valittuna. Tämä valinta "
"löytyy \"Tarttumisen asetukset\" painikkeen alta \"Lukko\"-painikkeen "
"vasemmalta puolelta, näyttäen kolmelta pystysuorassa rivissä olevalta "
"pisteeltä."

msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"Piirrä polku *myötäpäiväisessä* järjestyksessä, tai vihulaisesi lisääntyvät "
"suunnaten *ulospäin* eikä *sisäänpäin*!"

msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"Kuvan pisteen ``4`` lisäyksen jälkeen, napsauta \"Sulje käyrä\" painiketta "
"ja käyrästäsi tulee täysi."

msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"Nyt kun polku on määritetty, lisää :ref:`PathFollow2D <class_PathFollow2D>` "
"solmu ``MobPath`` solmun alle ja nimeä se ``MobSpawnLocation``. Tämä solmu "
"kiertyy ja seuraa polkua automaattisesti edetessään, joten voimme käyttää "
"sitä valitsemaan satunnaisen sijainnin ja suunnan polulta."

#, fuzzy
msgid "Your scene should look like this:"
msgstr "Skenepuusi pitäisi näyttää tältä:"

msgid "Main script"
msgstr "Pääskripti"

msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"Lisää skripti ``Main`` solmulle. Skriptin alussa käytämme ``export "
"(PackedScene)`` koodia, jotta voimme valita mistä Mob skenestä haluamme "
"luoda ilmentymän."

msgid ""
"We also add a call to ``randomize()`` here so that the random number "
"generator generates different random numbers each time the game is run:"
msgstr ""

msgid ""
"Click the ``Main`` node and you will see the ``Mob Scene`` property in the "
"Inspector under \"Script Variables\"."
msgstr ""

msgid "You can assign this property's value in two ways:"
msgstr ""

#, fuzzy
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" dock and drop it in the **Mob "
"Scene** property."
msgstr ""
"Vedä ``Mob.tscn`` \"Tiedostojärjestelmä\" paneelista ja pudota se ``Mob`` "
"ominaisuuteen ``Main`` solmun Skriptimuuttujien alle."

msgid ""
"Click the down arrow next to \"[empty]\" and choose \"Load\". Select ``Mob."
"tscn``."
msgstr ""

#, fuzzy
msgid ""
"Next, select the ``Player`` node in the Scene dock, and access the Node dock "
"on the sidebar. Make sure to have the Signals tab selected in the Node dock."
msgstr ""
"Valitse Button solmu skenepuusta ja valitse sitten \"Solmu\"-välilehti. "
"Varmista seuraavaksi, että \"Signaalit\" on valittuna."

#, fuzzy
msgid ""
"You should see a list of the signals for the ``Player`` node. Find and "
"double-click the ``hit`` signal in the list (or right-click it and select "
"\"Connect...\"). This will open the signal connection dialog. We want to "
"make a new function named ``game_over``, which will handle what needs to "
"happen when a game ends. Type \"game_over\" in the \"Receiver Method\" box "
"at the bottom of the signal connection dialog and click \"Connect\". Add the "
"following code to the new function, as well as a ``new_game`` function that "
"will set everything up for a new game:"
msgstr ""
"Seuraavaksi, napsauta Player solmua ja yhdistä ``hit`` signaali. Haluamme "
"luoda uuden funktion nimeltä ``game_over``, joka käsittelee sen mitä täytyy "
"tapahtua kun peli loppuu. Kirjoita \"game_over\" \"Yhdistetään signaalia\" "
"ikkunan alalaidassa olevaan \"Method In Node\"-laatikkoon. Lisää seuraava "
"koodi, samoin kuin ``new_game`` funktio asettamaan kaikki valmiiksi uutta "
"peliä varten:"

#, fuzzy
msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` , and ``MobTimer``) to the main script. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"Yhdistä nyt kunkin Timer solmun (``StartTimer``, ``ScoreTimer`` ja "
"``MobTimer``) ``timeout()`` signaali pääskriptiin. ``StartTimer`` käynnistää "
"kaksi muuta ajastinta. ``ScoreTimer`` kasvattaa pistelaskuria yhdellä."

#, fuzzy
msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position. When "
"we spawn a mob, we'll pick a random value between ``150.0`` and ``250.0`` "
"for how fast each mob will move (it would be boring if they were all moving "
"at the same speed)."
msgstr ""
"``_on_MobTimer_timeout()`` funktiossa luomme vihollisilmentymän, valitsemme "
"satunnaisen aloituspaikan ``Path2D`` varrelta, ja sysäämme vihollisen "
"liikkeelle. ``PathFollow2D`` solmu kiertyy automaattisesti seuratessaan "
"polkua, joten hyödynnämme sitä valitsemaan sekä vihollisen suunnan että "
"sijainnin."

msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr ""
"Huomaa, että uusi ilmentymä täytyy lisätä skeneen käyttämällä "
"``add_child()`` funktiota."

#, fuzzy
msgid ""
"Why ``PI``? In functions requiring angles, Godot uses *radians*, not "
"degrees. Pi represents a half turn in radians, about ``3.1415`` (there is "
"also ``TAU`` which is equal to ``2 * PI``). If you're more comfortable "
"working with degrees, you'll need to use the ``deg2rad()`` and ``rad2deg()`` "
"functions to convert between the two."
msgstr ""
"GDScript käyttää kulmia tarvitsevissa funktioissa *radiaaneja*, ei asteita. "
"Jos työskentelet mieluummin asteilla, sinun täytyy käyttää ``deg2rad()`` ja "
"``rad2deg()`` funktioita tehdäksesi muunnos niiden välillä."

#, fuzzy
msgid "Testing the scene"
msgstr "Skenen pystytys"

msgid ""
"Let's test the scene to make sure everything is working. Add this "
"``new_game`` call to ``_ready()``:"
msgstr ""

msgid ""
"Let's also assign ``Main`` as our \"Main Scene\" - the one that runs "
"automatically when the game launches. Press the \"Play\" button and select "
"``Main.tscn`` when prompted."
msgstr ""

msgid ""
"If you had already set another scene as the \"Main Scene\", you can right "
"click ``Main.tscn`` in the FileSystem dock and select \"Set As Main Scene\"."
msgstr ""

msgid ""
"You should be able to move the player around, see mobs spawning, and see the "
"player disappear when hit by a mob."
msgstr ""

msgid ""
"When you're sure everything is working, remove the call to ``new_game()`` "
"from ``_ready()``."
msgstr ""

msgid ""
"What's our game lacking? Some user interface. In the next lesson, we'll add "
"a title screen and display the player's score."
msgstr ""

msgid "Translation status"
msgstr "Käännöksen tila"
