# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Heads up display"
msgstr ""

msgid ""
"The final piece our game needs is a User Interface (UI) to display things "
"like score, a \"game over\" message, and a restart button."
msgstr ""

#, fuzzy
msgid ""
"Create a new scene, and add a :ref:`CanvasLayer <class_CanvasLayer>` node "
"named ``HUD``. \"HUD\" stands for \"heads-up display\", an informational "
"display that appears as an overlay on top of the game view."
msgstr ""
"Pelimme tarvitsema viimeinen osa on käyttöliittymä: sillä esitetään "
"sellaisia juttuja kuten pistemäärä, \"game over\"-viesti ja \"aloita "
"alusta\"-painike. Luo uusi skene ja lisää :ref:`CanvasLayer "
"<class_CanvasLayer>` solmu nimeltä ``HUD``. \"HUD\" tulee sanoista \"heads-"
"up display\" (*suom*. heijastusnäyttö). Se on informaatiota sisältävä "
"näyttö, joka piirretään osittaiseksi peitteeksi pelinäkymän päälle."

msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
":ref:`CanvasLayer <class_CanvasLayer>` solmu antaa meidän piirtää "
"käyttöliittymäelementtimme muun pelin yläpuolella olevalle kerrokselle, niin "
"että sen esittämä tieto ei jää pelielementtien, kuten pelaaja ja vihollinen, "
"alle."

#, fuzzy
msgid "The HUD needs to display the following information:"
msgstr "Heijastusnäyttö näyttää seuraavat tiedot:"

msgid "Score, changed by ``ScoreTimer``."
msgstr "Pistemäärä, joka muuttuu ``ScoreTimer`` solmun toimesta."

msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "Viesti, kuten \"Game Over\" tai \"Get Ready!\""

msgid "A \"Start\" button to begin the game."
msgstr "\"Start\"-painike pelin aloittamiseksi."

msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"Pohjasolmu käyttöliittymäelementeille on :ref:`Control <class_Control>`. "
"Luodaksemme käyttöliittymämme käytämme kahdentyyppisiä :ref:`Control "
"<class_Control>` solmuja: :ref:`Label <class_Label>` ja :ref:`Button "
"<class_Button>`."

msgid "Create the following as children of the ``HUD`` node:"
msgstr "Luo seuraavat ``HUD`` solmun alle:"

msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ":ref:`Label <class_Label>` nimeltä ``ScoreLabel``."

#, fuzzy
msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr ":ref:`Label <class_Label>` nimeltä ``MessageLabel``."

msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr ":ref:`Button <class_Button>` nimeltä ``StartButton``."

msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ":ref:`Timer <class_Timer>` nimeltä ``MessageTimer``."

#, fuzzy
msgid ""
"Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the "
"Inspector. The default font for ``Control`` nodes is small and doesn't scale "
"well. There is a font file included in the game assets called \"Xolonium-"
"Regular.ttf\". To use this font, do the following:"
msgstr ""
"Napsauta ``ScoreLabel`` solmua ja kirjoita Tarkastelijassa *Text* kenttään "
"jokin numero. ``Control`` solmujen oletuskirjasin on pieni, eikä skaalaudu "
"hyvin. Pelin asseteissa on mukana kirjasintiedosto nimeltään \"Xolonium-"
"Regular.ttf\". Käyttääksesi tätä kirjasintyyppiä, tee kullekin kolmelle "
"``Control`` solmulle seuraava:"

#, fuzzy
msgid ""
"Under **Theme overrides > Fonts** click on the empty box and select \"New "
"DynamicFont\""
msgstr "\"Custom Fonts\" alla, valitse \"New DynamicFont\""

#, fuzzy
msgid ""
"Click on the \"DynamicFont\" you added, and under **Font > FontData**, "
"choose \"Load\" and select the \"Xolonium-Regular.ttf\" file."
msgstr ""
"Napsauta lisäämääsi \"DynamicFont\" kirjasinta, valitse \"Font Data\" alta "
"\"Load\" ja valitse \"Xolonium-Regular.ttf\" tiedosto. Sinun täytyy myös "
"asettaa kirjasimen koko ``Size`` ominaisuudesta. Asetus ``64`` toimii hyvin."

msgid "Set the \"Size\" property under ``Settings``, ``64`` works well."
msgstr ""

msgid ""
"Once you've done this on the ``ScoreLabel``, you can click the down arrow "
"next to the Font property and choose \"Copy\", then \"Paste\" it in the same "
"place on the other two Control nodes."
msgstr ""

#, fuzzy
msgid ""
"**Anchors and Margins:** ``Control`` nodes have a position and size, but "
"they also have anchors and margins. Anchors define the origin - the "
"reference point for the edges of the node. Margins update automatically when "
"you move or resize a control node. They represent the distance from the "
"control node's edges to its anchor."
msgstr ""
"**Ankkurit ja marginaalit:** ``Control`` solmuilla täytyy olla sijainti ja "
"koko, mutta niillä on myös ankkurit ja marginaalit. Ankkurit määrittävät "
"alkupisteen – viitepisteen solmun reunoille. Marginaalit päivittyvät "
"automaattisesti, kun liikutat Control-solmua tai muutat sen kokoa. Ne "
"edustavat etäisyyttä Control-solmun reunoista sen ankkuriin. Katso :ref:"
"`doc_design_interfaces_with_the_control_nodes` tarkempia tietoja varten."

#, fuzzy
msgid ""
"Arrange the nodes as shown below. Click the \"Layout\" button to set a "
"Control node's layout:"
msgstr ""
"Järjestä solmut alla esitetyllä tavalla. Napsauta \"Anchor\" painiketta "
"asettaaksesi Control solmun ankkurin:"

msgid ""
"You can drag the nodes to place them manually, or for more precise "
"placement, use the following settings:"
msgstr ""
"Voit kiskoa solmuja asettaaksesi ne manuaalisesti, tai tarkempaa sijoittelua "
"varten, voit käyttää seuraavia asetuksia:"

msgid "ScoreLabel"
msgstr "ScoreLabel"

msgid "*Layout* : \"Top Wide\""
msgstr ""

msgid "*Text* : ``0``"
msgstr "*Text* : ``0``"

msgid "*Align* : \"Center\""
msgstr ""

#, fuzzy
msgid "Message"
msgstr "MessageLabel"

msgid "*Layout* : \"HCenter Wide\""
msgstr "*Layout* : \"HCenter Wide\""

msgid "*Text* : ``Dodge the Creeps!``"
msgstr "*Text* : ``Dodge the Creeps!``"

msgid "*Autowrap* : \"On\""
msgstr ""

msgid "StartButton"
msgstr "StartButton"

msgid "*Text* : ``Start``"
msgstr "*Text* : ``Start``"

msgid "*Layout* : \"Center Bottom\""
msgstr "*Layout* : \"Center Bottom\""

msgid "*Margin* :"
msgstr "*Margin* :"

msgid "Top: ``-200``"
msgstr "Top: ``-200``"

msgid "Bottom: ``-100``"
msgstr "Bottom: ``-100``"

#, fuzzy
msgid ""
"On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One "
"Shot`` property to \"On\"."
msgstr ""
"Tätä funktiota kutsutaan, kun haluamme näyttää väliaikaisen viestin, kuten "
"\"Get Ready\". Aseta ``MessageTimer`` solmussa ``Wait Time`` arvoksi ``2`` "
"ja aseta ``One Shot`` ominaisuudeksi \"On\"."

msgid "Now add this script to ``HUD``:"
msgstr "Lisää nyt tämä skripti ``HUD`` solmulle:"

msgid ""
"The ``start_game`` signal tells the ``Main`` node that the button has been "
"pressed."
msgstr ""
"``start_game`` signaali kertoo ``Main`` solmulle, että painiketta on "
"painettu."

#, fuzzy
msgid ""
"This function is called when we want to display a message temporarily, such "
"as \"Get Ready\"."
msgstr ""
"Tätä funktiota kutsutaan, kun haluamme näyttää väliaikaisen viestin, kuten "
"\"Get Ready\". Aseta ``MessageTimer`` solmussa ``Wait Time`` arvoksi ``2`` "
"ja aseta ``One Shot`` ominaisuudeksi \"On\"."

msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and, after a brief pause, "
"show the \"Start\" button."
msgstr ""
"Tätä funktiota kutsutaan kun pelaaja häviää. Se näyttää \"Game Over\" kahden "
"sekunnin ajan, ja palaa sitten alkuruutuun ja näyttää \"Start\" painikkeen "
"lyhyen tauon jälkeen."

msgid ""
"When you need to pause for a brief time, an alternative to using a Timer "
"node is to use the SceneTree's ``create_timer()`` function. This can be very "
"useful to add delays such as in the above code, where we want to wait some "
"time before showing the \"Start\" button."
msgstr ""
"Kun sinun täytyy pysäyttää koodi hetkeksi vaihtoehto ajastimelle on käyttää "
"skenepuun ``create_timer()`` funktiota. Tämä voi olla todella hyödyllistä "
"luomaan viiveitä kuten ylläolevassa koodissa, missä me haluamme odottaa "
"hetken ennenkuin näytämme \"Start\" painikkeen."

msgid "This function is called by ``Main`` whenever the score changes."
msgstr ""
"Tätä funktiota kutsutaan ``Main`` solmussa aina kun pistemäärä muuttuu."

msgid ""
"Connect the ``timeout()`` signal of ``MessageTimer`` and the ``pressed()`` "
"signal of ``StartButton`` and add the following code to the new functions:"
msgstr ""
"Yhdistä ``MessageTimer`` solmun ``timeout()`` signaali ja ``StartButton`` "
"solmun ``pressed()`` signaali, ja lisää seuraava koodi uusiin funktioihin:"

msgid "Connecting HUD to Main"
msgstr "HUD- ja Main-skenejen liittäminen"

#, fuzzy
msgid ""
"Now that we're done creating the ``HUD`` scene, go back to ``Main``. "
"Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. "
"The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""
"Nyt kun olemme saaneet ``HUD`` skenen valmiiksi, tallenna se ja mene "
"takaisin ``Main`` skeneen. Luo ``HUD`` skenestä ilmentymä ``Main`` skeneen, "
"samoin kuin teit ``Player`` skenen kanssa, ja sijoita se alimmaksi puussa. "
"Koko puun pitäisi näyttää tältä, joten varmista ettei mitään jäänyt "
"huomaamatta:"

msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"Nyt meidän täytyy liittää ``HUD`` toiminnallisuus ``Main`` skriptiimme. Tämä "
"edellyttää muutamia lisäyksiä ``Main`` skeneen:"

msgid ""
"In the Node tab, connect the HUD's ``start_game`` signal to the "
"``new_game()`` function of the Main node by typing \"new_game\" in the "
"\"Receiver Method\" in the \"Connect a Signal\" window. Verify that the "
"green connection icon now appears next to ``func new_game()`` in the script."
msgstr ""

msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"``new_game()`` funktiossa, päivitä pistenäyttö ja näytä \"Get Ready\" viesti:"

msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr ""
"``game_over()`` funktiossa meidän täytyy kutsua vastaavaa ``HUD`` funktiota:"

msgid ""
"Finally, add this to ``_on_ScoreTimer_timeout()`` to keep the display in "
"sync with the changing score:"
msgstr ""
"Lopuksi, lisää tämä ``_on_ScoreTimer_timeout()`` funktioon pitääksesi näytön "
"synkassa muuttuvan pistemäärän kanssa:"

msgid ""
"Now you're ready to play! Click the \"Play the Project\" button. You will be "
"asked to select a main scene, so choose ``Main.tscn``."
msgstr ""
"Nyt olet valmis pelaamaan! Napsauta \"Pelaa\" painiketta. Sinua pyydetään "
"valitsemaan pääskene, joten valitse ``Main.tscn``."

msgid "Removing old creeps"
msgstr "Vanhojen creepsien poisto"

#, fuzzy
msgid ""
"If you play until \"Game Over\" and then start a new game right away, the "
"creeps from the previous game may still be on the screen. It would be better "
"if they all disappeared at the start of a new game. We just need a way to "
"tell *all* the mobs to remove themselves. We can do this with the \"group\" "
"feature."
msgstr ""
"Jos pelaat \"Game Over\":iin asti ja aloitat uuden pelin. Vanhat creepsit "
"ovat yhä edelleen ruudulla. Olisi parasta jos ne kaikki katoaisivat uuden "
"pelin aloituksessa."

msgid ""
"In the ``Mob`` scene, select the root node and click the \"Node\" tab next "
"to the Inspector (the same place where you find the node's signals). Next to "
"\"Signals\", click \"Groups\" and you can type a new group name and click "
"\"Add\"."
msgstr ""

msgid ""
"Now all mobs will be in the \"mobs\" group. We can then add the following "
"line to the ``new_game()`` function in ``Main``:"
msgstr ""

msgid ""
"The ``call_group()`` function calls the named function on every node in a "
"group - in this case we are telling every mob to delete itself."
msgstr ""

msgid ""
"The game's mostly done at this point. In the next and last part, we'll "
"polish it a bit by adding a background, looping music, and some keyboard "
"shortcuts."
msgstr ""

msgid "Translation status"
msgstr "Käännöksen tila"
