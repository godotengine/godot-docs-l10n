# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Signaali"

msgid "Instancing with signals"
msgstr "Ilmentymien luonti signaaleilla"

msgid ""
"Signals provide a way to decouple game objects, allowing you to avoid "
"forcing a fixed arrangement of nodes. One sign that a signal might be called "
"for is when you find yourself using ``get_parent()``. Referring directly to "
"a node's parent means that you can't easily move that node to another "
"location in the scene tree. This can be especially problematic when you are "
"instancing objects at runtime and may want to place them in an arbitrary "
"location in the running scene tree."
msgstr ""

msgid "Below we'll consider an example of such a situation: firing bullets."
msgstr ""

msgid "Shooting example"
msgstr "Ammuskeluesimerkki"

#, fuzzy
msgid ""
"Consider a player character that can rotate and shoot towards the mouse. "
"Every time the mouse button is clicked, we create an instance of the bullet "
"at the player's location. See :ref:`doc_instancing` for details."
msgstr ""
"Toinen esimerkkimme signaalien käytöstä on pelihahmo, joka voi kääntyä ja "
"ampua hiiren osoitinta kohti. Joka kerta kun hiiren painiketta napsautetaan, "
"pelaajan kohdalle luodaan ilmentymä luodista. Lisää tietoa ilmentymistä "
"löytyy :ref:`doc_instancing`."

msgid ""
"We'll use an ``Area2D`` for the bullet, which moves in a straight line at a "
"given velocity:"
msgstr ""

msgid ""
"However, if the bullets are added as children of the player, then they will "
"remain \"attached\" to the player as it rotates:"
msgstr ""
"Jos lisäisimme luodit pelaajan alisolmuiksi, pysyisivät ne hahmossa ”kiinni” "
"sen pyöriessä:"

msgid ""
"Instead, we need the bullets to be independent of the player's movement - "
"once fired, they should continue traveling in a straight line and the player "
"can no longer affect them. Instead of being added to the scene tree as a "
"child of the player, it makes more sense to add the bullet as a child of the "
"\"main\" game scene, which may be the player's parent or even further up the "
"tree."
msgstr ""
"Luodin pitäisikin olla pelihahmon liikkeistä riippumattomia – kun luoteja "
"ammutaan, tulisi niiden kulkea suorassa linjassa ja pelaajan ei pitäisi enää "
"vaikuttaa niihin. Sen sijaan, että luodit lisätään skenepuussa pelaajan "
"alisolmuksi, olisi järkevämpää lisätä ne alisolmuiksi \"pääskeneen\", joka "
"saattaa olla pelaajan isäntä tai jopa korkeammalla skenepuussa."

#, fuzzy
msgid "You could do this by adding the bullet to the main scene directly:"
msgstr "Luoti voitaisiin lisätä suoraan:"

#, fuzzy
msgid ""
"However, this will lead to a different problem. Now if you try to test your "
"\"Player\" scene independently, it will crash on shooting, because there is "
"no parent node to access. This makes it a lot harder to test your player "
"code independently and also means that if you decide to change your main "
"scene's node structure, the player's parent may no longer be the appropriate "
"node to receive the bullets."
msgstr ""
"Mutta nyt edessä onkin toinen ongelma. Jos koetat testata \"Pelihahmo\"-"
"skeneä itsenäisesti, se kaatuu luoteja ammuttaessa, koska luodin yläsolmuun "
"ei päästä käsiksi. Tämä tekee pelihahmon koodin itsenäisestä testaamisesta "
"paljon vaikeampaa ja jos pääskenen solmurakennetta muutetaan, pelihahmon "
"isäntä ei välttämättä ole enää luodeille oikea solmu."

msgid ""
"The solution to this is to use a signal to \"emit\" the bullets from the "
"player. The player then has no need to \"know\" what happens to the bullets "
"after that - whatever node is connected to the signal can \"receive\" the "
"bullets and take the appropriate action to spawn them."
msgstr ""
"Ratkaisu ongelmaan löytyy käyttämällä signaalia, joka ”lähettää” luodit "
"pelaajasta. Pelaajan ei tarvitse enää tietää mitä luodeille tämän jälkeen "
"tapahtuu – Se solmu, joka signaaliin on kiinnitetty, voi ottaa luodit "
"”vastuulleen” ja suorittaa tarvittavat toimenpiteet niiden luomiseksi."

msgid "Here is the code for the player using signals to emit the bullet:"
msgstr "Tässä pelihahmon koodi, jolla luoteja voidaan lähettää signaaleilla:"

msgid ""
"In the main scene, we then connect the player's signal (it will appear in "
"the \"Node\" tab)."
msgstr ""
"Pelihahmon signaali yhdistetään seuraavaksi pääskenessä (signaali löytyy "
"\"Node\"-välilehdestä)."

msgid ""
"Now the bullets will maintain their own movement independent of the player's "
"rotation:"
msgstr "Nyt luotien oma liike säilyy riippumattomana pelihahmon kääntymisestä:"

msgid "Translation status"
msgstr "Käännöksen tila"
