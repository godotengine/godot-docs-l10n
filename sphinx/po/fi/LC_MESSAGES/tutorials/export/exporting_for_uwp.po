# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Exporting for Universal Windows Platform"
msgstr ""

msgid ""
"This page describes how to export a Godot project to UWP. If you're looking "
"to compile export template binaries from source instead, read :ref:"
"`doc_compiling_for_uwp`."
msgstr ""

msgid ""
"There's no extra requirement to export an ``.appx`` package that can be "
"installed as a Windows App or submitted to the Windows Store. Exporting UWP "
"packages also works from any platform, not only from Windows."
msgstr ""

msgid ""
"However, if you want to install and run the app, you need to sign it with a "
"trusted signature. Godot supports automatic signing of packages with "
"external tools."
msgstr ""

msgid ""
"Also, make sure the Publisher Name you set when exporting the package "
"matches the name used on the certificate."
msgstr ""

msgid "Limitations on Xbox One"
msgstr ""

msgid ""
"As described in the `UWP documentation <https://docs.microsoft.com/en-us/"
"windows/uwp/xbox-apps/system-resource-allocation>`__:"
msgstr ""

msgid "Submitted as an \"App\""
msgstr ""

msgid "available memory is 1GB"
msgstr ""

msgid "share of 2-4 CPU cores"
msgstr ""

msgid "shared access of GPU power (45%)"
msgstr ""

msgid ""
"Submitted as a \"Game\" (through `Xbox Live Creators Program <https://www."
"xbox.com/en-US/developers/creators-program>`__)"
msgstr ""

msgid "available memory is 5GB"
msgstr ""

msgid "4 exclusive CPU cores and 2 shared CPU cores"
msgstr ""

msgid "exclusive access to GPU power (100%)"
msgstr ""

msgid ""
"Exceeding these memory limitations will cause allocation failures and the "
"application will crash."
msgstr ""

msgid "Creating a signing certificate"
msgstr ""

msgid ""
"This requires the ``MakeCert.exe`` and ``Pvk2Pfx.exe`` tools, which come "
"with the Windows SDK. If you use Visual Studio, you can open one of its "
"Developer Prompts, since it comes with these tools and they can be located "
"in the path."
msgstr ""

msgid ""
"You can get more detailed instructions from `Microsoft's documentation "
"<https://msdn.microsoft.com/en-us/library/windows/desktop/jj835832(v=vs.85)."
"aspx>`__."
msgstr ""

msgid "First, run ``MakeCert`` to create a private key::"
msgstr ""

msgid ""
"Where ``publisherName`` matches the Publisher Name of your package and "
"``expirationDate`` is in the ``mm/dd/yyyy`` format."
msgstr ""

msgid ""
"Next, create a Personal Information Exchange (.pfx) file using ``Pvk2Pfx."
"exe``::"
msgstr ""

msgid ""
"If you don't specify a password with ``/po`` argument, the PFX will have the "
"same password as the private key."
msgstr ""

msgid ""
"You will also need to trust this certificate in order to be able to install "
"your app. Open the Command Prompt as Administrator and run the following "
"command::"
msgstr ""

#, fuzzy
msgid "Setting up automatic signing"
msgstr "Skenen pystytys"

msgid ""
"To setup automatic signing on export you need to go to Editor Settings > "
"Export > Uwp. From there you need to click on the folder for ``Signtool``, "
"and navigate to the ``SignTool.exe`` file on your computer."
msgstr ""

msgid ""
"After setting that up close the editor settings, go to Project > Export, and "
"select the UWP preset. Under the ``Signing`` options click on the folder "
"next to ``Certificate`` and go to the certificate file. Then enter the "
"pfxPassword in the password field."
msgstr ""

msgid "Your project will now be automatically signed on export."
msgstr ""

msgid ""
"If you want to sign an exported app manually run ``SignTool.exe`` and use "
"the following command."
msgstr ""

msgid "SignTool sign /fd SHA256 /a /f MyKey.pfx /p pfxPassword package.appx"
msgstr ""

msgid "Installing the package"
msgstr ""

msgid ""
"As of the Windows 10 Anniversary Update, you are able to install packages "
"simply by double clicking the ``.appx`` file from Windows Explorer."
msgstr ""

msgid ""
"It's also possible to install by using the ``Add-AppxPackage`` PowerShell "
"cmdlet."
msgstr ""

msgid ""
"If you want to update your already installed app, you must update the "
"version number on the new package or first uninstall the previous package."
msgstr ""

msgid "Translation status"
msgstr "Käännöksen tila"
