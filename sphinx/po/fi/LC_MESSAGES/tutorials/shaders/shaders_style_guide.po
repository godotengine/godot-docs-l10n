# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Shaders style guide"
msgstr "Editorin ikonit"

msgid ""
"This style guide lists conventions to write elegant shaders. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""

msgid ""
"Since the Godot shader language is close to C-style languages and GLSL, this "
"guide is inspired by Godot's own GLSL formatting. You can view an example of "
"a GLSL file in Godot's source code `here <https://github.com/godotengine/"
"godot/blob/master/drivers/gles2/shaders/copy.glsl>`__."
msgstr ""

msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""

msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""

msgid ""
"Godot's built-in shader editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""

msgid "Here is a complete shader example based on these guidelines:"
msgstr ""

#, fuzzy
msgid "Formatting"
msgstr "Muoto"

#, fuzzy
msgid "Encoding and special characters"
msgstr "Kuvasuhteiden käsittely"

msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr ""

msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""

msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""

msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr ""

msgid "Indentation"
msgstr ""

msgid ""
"Each indent level should be one tab greater than the block containing it."
msgstr ""

msgid "**Good**:"
msgstr ""

msgid "**Bad**:"
msgstr ""

msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""

msgid "Line breaks and blank lines"
msgstr ""

msgid ""
"For a general indentation rule, follow `the \"1TBS Style\" <https://en."
"wikipedia.org/wiki/Indentation_style#Variant:_1TBS_(OTBS)>`_ which "
"recommends placing the brace associated with a control statement on the same "
"line. Always use braces for statements, even if they only span one line. "
"This makes them easier to refactor and avoids mistakes when adding more "
"lines to an ``if`` statement or similar."
msgstr ""

msgid "Blank lines"
msgstr ""

msgid "Surround function definitions with one (and only one) blank line:"
msgstr ""

msgid ""
"Use one (and only one) blank line inside functions to separate logical "
"sections."
msgstr ""

#, fuzzy
msgid "Line length"
msgstr "length"

msgid "Keep individual lines of code under 100 characters."
msgstr ""

msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two shaders opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""

msgid "One statement per line"
msgstr ""

msgid "Never combine multiple statements on a single line."
msgstr ""

msgid "The only exception to that rule is the ternary operator:"
msgstr ""

msgid "Comment spacing"
msgstr ""

msgid ""
"Regular comments should start with a space, but not code that you comment "
"out. This helps differentiate text comments from disabled code."
msgstr ""

msgid ""
"Don't use multiline comment syntax if your comment can fit on a single line:"
msgstr ""

msgid ""
"In the shader editor, to make the selected code a comment (or uncomment it), "
"press :kbd:`Ctrl + K`. This feature adds or removes ``//`` at the start of "
"the selected lines."
msgstr ""

msgid "Whitespace"
msgstr ""

msgid ""
"Always use one space around operators and after commas. Also, avoid "
"extraneous spaces in function calls."
msgstr ""

msgid "Don't use spaces to align expressions vertically:"
msgstr ""

msgid "Floating-point numbers"
msgstr ""

msgid ""
"Always specify at least one digit for both the integer and fractional part. "
"This makes it easier to distinguish floating-point numbers from integers, as "
"well as distinguishing numbers greater than 1 from those lower than 1."
msgstr ""

#, fuzzy
msgid "Accessing vector members"
msgstr "Käsittelyjärjestys"

msgid ""
"Use ``r``, ``g``, ``b``, and ``a`` when accessing a vector's members if it "
"contains a color. If the vector contains anything else than a color, use "
"``x``, ``y``, ``z``, and ``w``. This allows those reading your code to "
"better understand what the underlying data represents."
msgstr ""

msgid "Naming conventions"
msgstr ""

msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code."
msgstr ""

msgid "Functions and variables"
msgstr ""

msgid "Use snake\\_case to name functions and variables:"
msgstr ""

msgid "Constants"
msgstr "Vakiot"

msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr ""

#, fuzzy
msgid "Code order"
msgstr "Käsittelyjärjestys"

msgid "We suggest to organize shader code this way:"
msgstr ""

msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""

msgid "This code order follows two rules of thumb:"
msgstr ""

msgid "Metadata and properties first, followed by methods."
msgstr ""

msgid ""
"\"Public\" comes before \"private\". In a shader language's context, "
"\"public\" refers to what's easily adjustable by the user (uniforms)."
msgstr ""

#, fuzzy
msgid "Local variables"
msgstr "Paikalliset taulukot"

msgid ""
"Declare local variables as close as possible to their first use. This makes "
"it easier to follow the code, without having to scroll too much to find "
"where the variable was declared."
msgstr ""

msgid "Translation status"
msgstr "Käännöksen tila"
