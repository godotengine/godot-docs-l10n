# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Best practices for engine contributors"
msgstr "引擎贡献者的最佳实践"

msgid "Introduction"
msgstr "前言"

msgid ""
"Godot has a large amount of users who have the ability to contribute, given "
"the project itself is aimed mainly at users with the ability to do "
"programming. Despite this, not all of them have the same level of experience "
"working in large projects or in software engineering, which can lead to "
"common misunderstandings and bad practices during the process of "
"contributing code to the project."
msgstr ""
"由于项目本身主要针对具有编程能力的用户, 因此Godot拥有大量具有贡献能力的用户. "
"尽管如此, 并非所有人都具有在大型项目或软件工程中工作的相同水平的经验, 这可能"
"会在为项目贡献代码的过程中导致常见的误解和不良做法."

msgid "Language"
msgstr "语言"

msgid ""
"The scope of this document is to be a list of best practices for "
"contributors to follow, as well as to create a language they can use to "
"refer to common situations that arise in the process of submitting their "
"contributions."
msgstr ""
"本文档的范围是罗列让贡献者遵循的最佳实践，并且创建一种语言，供他们用来指代提"
"交贡献过程中出现的常见情况。"

msgid ""
"While some may find it useful to extend this to general software "
"development, our intention is to just restrict to situations that are most "
"common in our project."
msgstr ""
"尽管有些人可能认为将其扩展到通用软件开发很有用, 但我们的意图是仅将其限制在项"
"目中最常见的情况下."

msgid ""
"Contributions are most of the time categorized as bug fixes, enhancements or "
"new features. To abstract this idea, we will call them *Solutions*, because "
"they always seek to solve something that can be described as a *Problem*."
msgstr ""
"贡献大部分时间都归类为错误修复, 增强功能或新功能. 为了抽象化这个想法, 我们将"
"它们称为 *解决方案*, 因为它们总是寻求解决可以描述为 *问题* 的问题."

msgid "Best Practices"
msgstr "最佳实践"

msgid "#1: The problem always comes first"
msgstr "#1: 这问题总是第一个"

msgid ""
"Many contributors are extremely creative and just enjoy the process of "
"designing abstract data structures, creating nice user interfaces, or simply "
"love programming. Whatever the case may be, they come up with cool ideas, "
"which may or may not be solving any real problems."
msgstr ""
"许多贡献者非常有创造力，他们只是享受设计抽象数据结构、创建漂亮的用户界面，或"
"者纯粹喜欢编程。不管是什么情况，他们都会想出很酷的想法，但这些想法可能并不能"
"真正解决任何实际问题。"

msgid ""
"These are usually called *Solutions in search of a problem*. In an ideal "
"world, they would not be harmful but, in reality, code takes time to write, "
"takes space as source and binary and requires maintenance once it exists. "
"Avoiding the addition of anything unnecessary is always considered a good "
"practice in software development."
msgstr ""
"这些通常称为 *寻找问题的解决方案*. 在理想的情况下, 它们并不会有害, 但是实际"
"上, 代码需要花费一些时间来编写, 占用空间作为源代码和二进制文件, 并且一旦存在"
"就需要维护. 在软件开发中, 始终避免避免添加不必要的内容."

msgid "#2: To solve the problem, it has to exist in the first place"
msgstr "#2: 为了解决这个问题, 它必须放在开始位置"

msgid ""
"This is a variation of the previous practice. Adding anything unnecessary is "
"not a good idea, but what constitutes what is necessary and what isn't?"
msgstr ""
"以前有过类似的尝试. 添加任何不必要的东西不是一个好主意, 但什么是必要的, 什么"
"不是?"

msgid ""
"The answer to this question is that the problem needs to *exist* before it "
"can be actually solved. It must not be speculation or a belief. The user "
"must be using the software as intended to create something they *need*. In "
"this process, the user may stumble into a problem that requires a solution "
"to proceed, or in order to achieve greater productivity. In this case, *a "
"solution is needed*."
msgstr ""
"这个问题的答案是, 问题需要确实存在, 才能真正解决. 不应该只是推测或认为问题存"
"在. 用户使用软件的意图必须是创造一些他们 \"需要\" 的东西. 在这个过程中, 用户"
"可能会遇到需要解决了才能继续进行的问题, 或者为了实现更高的生产率. 在这种情况"
"下,*需要一个解决方案*."

msgid ""
"Believing that problems may arise in the future and that the software needs "
"to be ready to solve them by the time they appear is called *\"Future "
"proofing\"* and its characterized by lines of thought such as:"
msgstr ""
"坚信将来可能会出现问题，并且软件需要在问题出现时就已准备好解决它们，这被称为"
"\\ *“保护未来”*\\ ，其特点是思路如下："

msgid "I think it would be useful for users to..."
msgstr "我想这对于用户来说是有用的...."

msgid "I think users will eventually need to..."
msgstr "我认为用户最终需要..."

msgid ""
"This is generally considered a bad habit because trying to solve problems "
"that *don't actually exist* in the present will often lead to code that will "
"be written but never used, or that is considerably more complex to use and "
"maintain than it needs to be."
msgstr ""
"这通常被认为是一个坏习惯, 因为试图解决当前不存在的问题往往会导致代码被编写但"
"从未使用, 或者使用和维护起来比需要的复杂得多."

msgid "#3: The problem has to be complex or frequent"
msgstr "#3: 这问题有点复杂或频繁"

msgid ""
"Software is designed to solve problems, but we can't expect it to solve "
"*every problem that exists under the sun*. As a game engine, Godot will "
"solve problems for you, so it helps you to make games better and faster, but "
"it won't make the *entire game* for you. A line must be drawn somewhere."
msgstr ""
"软件是为解决问题而设计的, 但我们不能指望它能解决太阳底下存在的所有问题. 作为"
"一个游戏引擎,Godot会为你解决问题, 所以它可以帮助你把游戏做得更好更快, 但它不"
"会让整个游戏为你服务. 必须在某处划一条线."

msgid ""
"Whether a problem is worth solving is determined by the difficulty the user "
"has to work around it. This difficulty can be expressed as:"
msgstr "一个问题是否值得解决取决于用户解决问题的难度. 这种困难可以表示为:"

msgid "The complexity of the problem"
msgstr "问题的复杂性"

msgid "The frequency the problem"
msgstr "问题发生的频率"

msgid ""
"If the problem is *too complex* for most users to solve, the software must "
"offer a ready-made solution for it. Likewise, if the problem is easy for the "
"user to work around, offering such a solution is unnecessary and it's up to "
"the user to do it."
msgstr ""
"如果问题对于大多数用户来说\\ *太复杂*\\ 了，那么软件必须提供一个现成的解决方"
"案。同样，如果问题很容易被用户变通，那么提供这样的解决方案是不必要的，应该让"
"用户来做。"

msgid ""
"The exception, however, is when the user stumbles into this problem "
"*frequently enough* that having to do the simple solution every time becomes "
"an annoyance. In this case, the software must offer a solution to simplify "
"this use case."
msgstr ""
"然而, 例外情况是, 当用户频繁地遇到这个问题时, 每次都要做简单的解决方案就成了"
"一件麻烦事. 在这种情况下, 软件必须提供一个解决方案来简化这个用例."

msgid ""
"In our experience, in most cases it's usually obvious to tell when a problem "
"is complex or frequent, but cases may arise where drawing this line is "
"difficult. This is why discussing with other developers (next point) is "
"always advised."
msgstr ""
"根据我们的经验, 在大多数情况下, 当一个问题是复杂的或频繁的, 通常是显而易见"
"的, 但可能出现的情况下, 绘制这条线是困难的. 这就是为什么总是建议与其他开发人"
"员讨论(下一点)."

msgid "#4: The solution must be discussed with others"
msgstr "#4: 这个解决方案必须与其他人讨论"

msgid ""
"It is often the case that when users stumble upon problems, they are only "
"immersed in their project, so they will naturally try to solve the problem "
"from their perspective, thinking only about their use case."
msgstr ""
"经常发生的情况是，用户偶然发现问题时，他们只是沉浸在自己的项目中，所以他们自"
"然会从自己的角度来解决问题，只考虑自己的用例。"

msgid ""
"Because of this, user proposed solutions don't always contemplate other use "
"cases that developers are often aware of, so they are often biased towards "
"their own requirements."
msgstr ""
"正因为如此，用户提出的解决方案并不总是考虑开发人员经常意识到的其他用例，因此"
"他们常常偏向于自己的需求。"

msgid ""
"For developers, the perspective is different. They may find the user's "
"problem too unique to justify a solution (instead of a user workaround), or "
"maybe they will suggest a partial (usually simpler or lower level) solution "
"that applies to a wider range of known problems, and leave the rest of the "
"solution up to the user."
msgstr ""
"对于开发者来说, 视角是不同的. 他们可能会发现用户的问题过于独特, 无法证明解决"
"方案的合理性(而不是用户的变通方法), 或者他们可能会建议一个适用于更广泛的已知"
"问题的部分(通常更简单或更低级别)解决方案, 并将解决方案的其余部分留给用户."

msgid ""
"In any case, before attempting a contribution, it is important to discuss "
"the actual problems with the other developers or contributors, so a better "
"agreement on implementation can be reached."
msgstr ""
"无论如何, 在尝试贡献之前, 与其他开发人员或贡献者讨论实际问题是很重要的, 这样"
"就可以在实现上达成更好的协议."

msgid ""
"The only exception, in this case, is when an area of code has a clear owner "
"(agreed by the other contributors), who talks to users directly and has the "
"most knowledge to implement a solution directly."
msgstr ""
"在这种情况下, 唯一的例外是当一个代码区域有一个明确的所有者(得到其他贡献者的同"
"意)时, 该所有者直接与用户交谈, 并且最了解如何直接实现解决方案."

msgid ""
"Also, Godot's philosophy is to favor ease of use and maintenance over "
"absolute performance. Performance optimizations will be considered, but they "
"may not be accepted if they make something too difficult to use or if they "
"add too much complexity to the codebase."
msgstr ""
"另外,Godot的理念是支持易用性和维护性, 而不是绝对性能. 性能优化将被考虑, 但是"
"如果它们使得某些东西太难使用或者给代码库增加了太多的复杂性, 那么它们可能不会"
"被接受."

msgid "#5: To each problem, its own solution"
msgstr "#5: 针对每个问题, 都有自己的解决方案"

msgid ""
"For programmers, it is always a most enjoyable challenge to find the most "
"optimal solutions to problems. Things, however, may go overboard sometimes "
"and programmers will try to come up with solutions that solve as many "
"problems as possible."
msgstr ""
"对于程序员来说, 找到问题的最佳解决方案总是一个最令人愉快的挑战. 然而, 有时事"
"情可能会过火, 程序员会试图想出解决尽可能多问题的解决方案."

msgid ""
"The situation will often take a turn for the worse when, in order to make "
"this solution appear even more fantastic and flexible, the pure speculation-"
"based problems (as described in #2) also make their appearance on stage."
msgstr ""
"当为了使这个解决方案显得更加奇妙和灵活, 纯粹的基于推测的问题(如#2所述)也出现"
"在舞台上时, 情况往往会变得更糟."

msgid ""
"The main problem is that, in reality, it rarely works this way. Most of the "
"time, writing an individual solution to each problem results in code that is "
"simpler and more maintainable."
msgstr ""
"主要问题是，在现实中，它很少以这种方式工作。大多数情况下，只要为每个问题编写"
"一个单独的解决方案，代码就会变得更简单，更易于维护。"

msgid ""
"Additionally, solutions that target individual problems are better for the "
"users, as they find something that does exactly what they need, without "
"having to learn and remember a more complex system they will only need for "
"simple tasks."
msgstr ""
"此外, 针对个别问题的解决方案对用户来说更好, 因为他们找到的东西正是他们所需要"
"的, 而不必学习和记忆一个更复杂的系统, 他们只需要简单的任务."

msgid ""
"Big and flexible solutions also have an additional drawback which is that, "
"over time, they are rarely flexible enough for all users, who keep "
"requesting more functions added (and making the API and codebase more and "
"more complex)."
msgstr ""
"大而灵活的解决方案还有一个额外的缺点，那就是，随着时间的推移，它们很少对所有"
"用户都有足够的灵活性，他们就会不断请求添加更多的函数（并使 API 和代码库变得越"
"来越复杂）。"

msgid "#6: Cater to common use cases, leave the door open for the rare ones"
msgstr "#6: 迎合常见的用例, 为罕见的用例敞开大门"

msgid ""
"This is a continuation of the previous point, which further explains why "
"this way of thinking and designing software is preferred."
msgstr "这是前一点的延续, 这进一步解释了为什么这种思维方式和设计软件是首选."

msgid ""
"As mentioned before (in point #2), it is very difficult for us (as human "
"beings who design software) to actually understand all future user needs. "
"Trying to write very flexible structures that cater to many use cases at "
"once is often a mistake."
msgstr ""
"如前所述(第2点), 我们(作为设计软件的人)很难真正理解所有未来的用户需求. 试图同"
"时编写满足许多用例的非常灵活的结构常常是一个错误."

msgid ""
"We may come up with something we believe is brilliant, but when it's "
"actually used, we will find that users will never even use half of it, or "
"that they will require features that don't quite accommodate our original "
"design, forcing us to either throw it away or make it even more complex."
msgstr ""
"我们可能会想出一些我们认为很出色的东西, 但当它被实际使用时, 我们会发现用户甚"
"至永远不会使用它的一半, 或者他们会要求一些不太符合我们最初设计的功能, 迫使我"
"们要么扔掉它, 要么让它变得更复杂."

msgid ""
"The question is then, how to design software that gives users what *we know "
"they need*, but that is flexible enough to allow them to do *what we don't "
"know they might need* in the future?"
msgstr ""
"现在的问题是, 如何设计软件, 让用户得到我们知道他们需要的东西, 但又足够灵活, "
"让他们在将来做我们不知道他们可能需要的事情？"

msgid ""
"The answer to this question is that, to ensure users still can do what they "
"want to do, we need to give them access to a *low level API* that they can "
"use to achieve what they want, even if it's more work for them because it "
"means reimplementing some logic that already exists."
msgstr ""
"这个问题的答案是, 为了确保用户仍然可以做他们想做的事情, 我们需要让他们访问一"
"个 \"低级API\", 他们可以用它来实现他们想要的, 即使这对他们来说是更大的工作, "
"因为这意味着重新实现一些已经存在的逻辑."

msgid ""
"In real-life scenarios, these use cases will be at most rare and uncommon "
"anyway, so it makes sense a custom solution needs to be written. This is why "
"it's important to still provide users the basic building blocks to do it."
msgstr ""
"在现实场景中, 这些用例无论如何都是非常罕见的, 所以需要编写一个定制的解决方案"
"是有意义的. 这就是为什么仍然要为用户提供基本的构建块来实现这一点很重要."

msgid "#7: Prefer local solutions"
msgstr "#7：偏好局部解决方案"

msgid ""
"When looking for a solution to a problem, be it implementing a new feature "
"or fixing a bug, sometimes the easiest path is to add data or a new function "
"in the core layers of code."
msgstr ""
"当寻找一个问题的解决方法时, 例如实现新特性或者修复一个BUG, 有时最简单的方式是"
"在核心代码层中, 添加数据或是一个新的代码函数."

msgid ""
"The main problem here is, adding something to the core layers that will only "
"be used from a single location far away will not only make the code more "
"difficult to follow (split in two), but also make the core API larger, more "
"complex, more difficult to understand in general."
msgstr ""
"这里的主要问题是, 在核心层中添加一些只在很远的地方使用的东西, 不仅会使代码更"
"难理解(一分为二), 而且还会使核心API更大, 更复杂, 更难理解."

msgid ""
"This is bad, because readability and cleanness of core APIs is always of "
"extreme importance given how much code relies on it, and because it's key "
"for new contributors as a starting point to learning the codebase."
msgstr ""
"这是不好的, 因为核心api的可读性和干净性总是非常重要的, 因为它是新贡献者学习代"
"码库的一个起点."

msgid ""
"The common reasoning for wanting to do this is that it's usually less code "
"to simply add a hack in the core layers."
msgstr ""
"想要做到这一点的常见理由是, 只需在核心层中添加一个hack, 通常代码就更少了."

msgid ""
"Despite this, this practice is not advised. Generally, the code for a "
"solution should be closer to where the problem originates, even if it "
"involves more code, duplicated, more complex or is less efficient. More "
"creativity might be needed, but this path is always the advised one."
msgstr ""
"尽管如此, 不建议这种做法. 通常, 解决方案的代码应更接近问题的根源, 即使它涉及"
"更多的代码, 重复的代码, 更复杂的代码或效率较低的代码也是如此. 可能需要更多的"
"创造力, 但这始终是建议之路."

msgid "#8: Don't use complex canned solutions for simple problems"
msgstr "#8: 不要用复杂的解决方案来处理简单的问题"

msgid ""
"Not every problem has a simple solution and, many times, the right choice is "
"to use a third party library to solve the problem."
msgstr ""
"并非每个问题都有一个简单的解决方案, 很多时候, 正确的选择是使用第三方库来解决"
"问题."

msgid ""
"As Godot requires to be shipped in a large amount of platforms, we can't "
"link libraries dynamically. Instead, we bundle them in our source tree."
msgstr ""
"由于 Godot 需要在大量的平台上发布，我们无法对库进行动态链接。相反，我们将它们"
"捆绑在我们的源代码树中。"

msgid ""
"As a result, we are very picky with what goes in, and we tend to prefer "
"smaller libraries (in fact, single header ones are our favorite). Only in "
"cases where there is no other choice we end up bundling something larger."
msgstr ""
"结果, 我们对所输入的内容非常挑剔, 并且倾向于使用较小的库(实际上, 单头库是我们"
"的最爱). 只有在别无选择的情况下, 我们最终将更大的东西捆绑在一起."

msgid ""
"Also, libraries must use a permissive enough license to be included into "
"Godot. Some examples of acceptable licenses are Apache 2.0, BSD, MIT, ISC, "
"and MPL 2.0. In particular, we cannot accept libraries licensed under the "
"GPL or LGPL since these licenses effectively disallow static linking in "
"proprietary software (which Godot is distributed as in most exported "
"projects). This requirement also applies to the editor, since we may want to "
"run it on iOS in the long term. Since iOS doesn't support dynamic linking, "
"static linking the only option on that platform."
msgstr ""
"此外, 库必须使用足够的许可证才能包含在Godot中. 可接受的许可证的一些例子有"
"Apache2.0, BSD, MIT, ISC和MPL2.0. 特别是, 我们不能接受GPL或LGPL下许可的库, 因"
"为这些许可有效地禁止专有软件中的静态链接(Godot在大多数导出项目中都是这样分发"
"的). 这个要求也适用于编辑器, 因为我们可能希望长期在iOS上运行它. 由于iOS不支持"
"动态链接, 因此静态链接是该平台上的唯一选项."

msgid "Translation status"
msgstr "翻译状态"
