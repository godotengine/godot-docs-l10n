# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C++ usage guidelines"
msgstr "C++ 使用规范"

msgid "Rationale"
msgstr "解释"

msgid ""
"Since Godot 4.0, the C++ standard used throughout the codebase is a subset "
"of **C++17**. While modern C++ brings a lot of opportunities to write "
"faster, more readable code, we chose to restrict our usage of C++ to a "
"subset for a few reasons:"
msgstr ""
"从 Godot 4.0 开始，代码库中所使用的 C++ 标准是 **C++17** 的子集。现代 C++ 带"
"来了许多机会，让我们能够编写更快、更易读的代码，但我们选择将我们对 C++ 的使用"
"限制在一个子集中，原因有这么几点："

msgid ""
"It makes it easier to review code in online editors. This is because engine "
"contributors don't always have access to a full-featured IDE while reviewing "
"code."
msgstr ""
"易于使用在线编辑器审核代码。这是因为引擎的贡献者在审核代码时并不总是可以使用"
"完整的 IDE。"

msgid ""
"It makes the code easier to grasp for beginner contributors (who may not be "
"professional C++ programmers). Godot's codebase is known to be easy to learn "
"from, and we'd like to keep it that way."
msgstr ""
"易于让新手贡献者掌握代码（他们可能不是专业的 C++ 程序员）。Godot 的代码库是公"
"认的易于学习，我们希望继续保持。"

msgid ""
"To get your pull request merged, it needs to follow the C++ usage guidelines "
"outlined here. Of course, you can use features not allowed here in your own "
"C++ modules or GDNative scripts."
msgstr ""
"要让你的拉取请求被合并，就需要遵守这里描述的 C++ 使用规范。当然，在你自己的 "
"C++ 模块或 GDNative 脚本中是可以使用此处禁止的特性的。"

msgid ""
"Prior to Godot 4.0, the C++ standard used throughout the codebase was C++03, "
"with a handful of C++14 extensions. If you are contributing a pull request "
"to the `3.x` branch rather than `master`, your code can't use C++17 "
"features. Instead, your code must be able to be built with a C++14 compiler."
msgstr ""
"在 Godot 4.0 之前的版本中，代码库所使用的 C++ 标准曾是 C++03，外加一些 C++14 "
"扩展。如果你是在为 `3.x` 分支提交拉取请求而不是 `master`\\ ，就不能使用 C+"
"+17 的特性。请确保你的代码能够使用 C++14 编译器构建。"

msgid ""
"The guidelines below don't apply to third-party dependencies, although we "
"generally favor small libraries instead of larger solutions. See also :ref:"
"`doc_best_practices_for_engine_contributors`."
msgstr ""
"以下规范并不适用于第三方依赖，虽然我们一般倾向于使用小型的库而不是大型的解决"
"方案。另请参阅 :ref:`doc_best_practices_for_engine_contributors`\\ 。"

msgid "See :ref:`doc_code_style_guidelines` for formatting guidelines."
msgstr "格式化规范请参阅 :ref:`doc_code_style_guidelines`\\ 。"

msgid "Disallowed features"
msgstr "禁用的特性"

msgid ""
"**Any feature not listed below is allowed.** Using features like "
"``constexpr`` variables and ``nullptr`` is encouraged when possible. Still, "
"try to keep your use of modern C++ features conservative. Their use needs to "
"serve a real purpose, such as improving code readability or performance."
msgstr ""
"**未在下方列出的特性都是允许的。**\\ 鼓励尽可能使用 ``constexpr`` 变量和 "
"``nullptr`` 等特性。不过请您在使用现代 C++ 特性时保持保守。使用时应当为实际的"
"目的服务，例如提升代码可读性或性能。"

msgid "Standard Template Library"
msgstr "标准模板库"

msgid ""
"We don't allow using the `STL <https://en.wikipedia.org/wiki/"
"Standard_Template_Library>`__ as Godot provides its own data types (among "
"other things). See :ref:`doc_faq_why_not_stl` for more information."
msgstr ""
"我们不允许使用 `STL <https://en.wikipedia.org/wiki/"
"Standard_Template_Library>`__\\ ，因为 Godot 提供了自有的数据类型（及其他工"
"具）。详情请参阅 :ref:`doc_faq_why_not_stl`\\ 。"

msgid ""
"This means that pull requests should **not** use ``std::string``, ``std::"
"vector`` and the like. Instead, use Godot's datatypes as described below:"
msgstr ""
"这意味着拉取请求中\\ **不应该**\\ 使用 ``std::string``\\ 、\\ ``std::"
"vector`` 等工具。请使用如下所述的 Godot 数据类型代替："

msgid "Use ``String`` instead of ``std::string``."
msgstr "使用 ``String`` 代替 ``std::string``\\ 。"

msgid ""
"Use ``Vector`` instead of ``std::vector``. In some cases, ``LocalVector`` "
"can be used as an alternative (ask core developers first)."
msgstr ""
"使用 ``Vector`` 代替 ``std::vector``\\ 。某些情况下也可以用 ``LocalVector`` "
"代替（请先咨询核心开发者）。"

msgid "Use ``Array`` instead of ``std::array``."
msgstr "使用 ``Array`` 代替 ``std::array``\\ 。"

msgid ""
"Godot also has a List datatype (which is a linked list). While List is "
"already used in the codebase, it typically performs worse than other "
"datatypes like Vector and Array. Therefore, List should be avoided in new "
"code unless necessary."
msgstr ""
"Godot 还有一个 List 数据类型（是个链表）。虽然 List 在代码库中有所使用，但一"
"般性能都比 Vector 和 Array 等数据类型要差。因此，除非必要，否则应该避免在新代"
"码中使用 List。"

msgid "``auto`` keyword"
msgstr "``auto`` 关键字"

msgid ""
"Please don't use the ``auto`` keyword for type inference. While it can avoid "
"repetition, it can also lead to confusing code:"
msgstr ""
"请勿使用 ``auto`` 关键字进行类型推导。虽然可以避免重复，但也可能导致令人费解"
"的代码："

msgid ""
"Keep in mind hover documentation often isn't readily available for pull "
"request reviewers. Most of the time, reviewers will use GitHub's online "
"viewer to review pull requests."
msgstr ""
"请记住，拉取请求的审核者一般是没有悬停文档的。大多数情况下，审核者是用 "
"GitHub 的在线查看器审核拉取请求的。"

msgid ""
"We chose to forbid ``auto`` instead of allowing it on a case-by-case basis "
"to avoid having to decide on difficult edge cases. Thank you for your "
"understanding."
msgstr ""
"为了避免需要在难以抉择的极端情况上下定论的情况发生，我们选择禁止 "
"``auto``\\ ，不允许特事特办。感谢您的理解。"

msgid "Lambdas"
msgstr "Lambda"

msgid ""
"Lambdas should be used conservatively when they make code effectively faster "
"or simpler, and do not impede readability. Please ask before using lambdas "
"in a pull request."
msgstr ""
"应该保守地使用 lambda，需要在能让代码更快或者更简单的同时，不妨碍可读性。请在"
"拉取请求中使用 lambda 前先询问。"

msgid "``#pragma once`` directive"
msgstr "``#pragma once`` 指令"

msgid ""
"To follow the existing style, please use standard ``#ifdef``-based include "
"guards instead of ``#pragma once`` in new files."
msgstr ""
"为了遵循现有风格，请在新文件中使用标准的基于 ``#ifdef`` 的包含保护，不要使用 "
"``#pragma once``\\ 。"

msgid ""
"See :ref:`doc_code_style_guidelines_header_includes` for guidelines on "
"sorting includes in C++ and Objective-C files."
msgstr ""
"C++ 和 Objective-C 文件中 include 的排序规范请参阅 :ref:"
"`doc_code_style_guidelines_header_includes`\\ 。"

msgid "Translation status"
msgstr "翻译状态"
