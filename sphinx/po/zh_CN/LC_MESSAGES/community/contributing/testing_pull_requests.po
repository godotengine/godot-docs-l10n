# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Testing pull requests"
msgstr "测试拉取请求"

msgid ""
"Many people are developing new features or fixing bugs on GitHub. To help "
"with engine development, you may be asked to test those pull requests with a "
"Godot build that includes code from the pull request in question."
msgstr ""
"许多人正在GitHub上开发新功能或修复错误。为了帮助引擎开发，你可能会被要求用"
"Godot构建来测试这些拉取请求，该构建包括有关拉取请求中的代码。"

msgid ""
"Thanks to GitHub Actions, all `pull requests <https://github.com/godotengine/"
"godot/pulls>`__ have continuous builds available. These builds let you try "
"out pull requests without having to compile anything from source."
msgstr ""
"感谢GitHub Actions，所有的 `拉取请求pull requests <https://github.com/"
"godotengine/godot/pulls>`__ 都有持续构建。这些构建可以让你尝试拉取请求，而不"
"需要从源代码编译任何东西。"

msgid "Downloading a compiled build"
msgstr "下载编译后的版本"

msgid ""
"You can download pull request builds from GitHub Actions. Since only signed "
"in users may download builds directly from GitHub Actions, the procedure "
"varies depending on whether you have a GitHub account or not."
msgstr ""
"你可以从GitHub Actions中下载拉取请求构建。由于只有已登录的用户可以直接从"
"GitHub Actions下载构建，因此根据你是否有GitHub账户，程序会有所不同。"

msgid ""
"Due to a GitHub Actions limitation, builds are only available for 90 days "
"after the pull request was last updated. If you still wish to try a pull "
"request locally, you can :ref:`compile the pull request branch from source "
"<doc_testing_pull_requests_compile>` instead."
msgstr ""
"由于GitHub Actions的限制，构建只在拉取请求最后更新后的90天内可用。如果你仍然"
"希望在本地尝试拉取请求，你可以 :ref:`从源代码编译拉取请求 "
"<doc_testing_pull_requests_compile>` 分支来代替。"

msgid "If you have a GitHub account"
msgstr "如果你有一个GitHub账户"

msgid ""
"Open the pull request page. Click the **Checks** tab near the top of the "
"page:"
msgstr "打开拉取请求页面。点击页面顶部附近的 **检查Checks** 标签:"

msgid ""
"In the list of platforms that appears on the left, select your platform by "
"clicking it then choose the type of build you need (editor or export "
"template). If in doubt, select an editor build:"
msgstr ""
"在左边出现的平台列表中，通过点击选择你的平台，然后选择你需要的构建类型，编辑"
"器或导出模板。如果有疑虑，请选择一个编辑器构建:"

msgid ""
"Click the **Artifacts** dropdown on the right of the page then click the "
"artifact's name to download it:"
msgstr "点击页面右侧的 **工件Artifacts** 下拉菜单，然后点击工件的名称来下载它:"

msgid ""
"Extract the ZIP archive then run the executable. Note that Windows and macOS "
"binaries are not code signed. This means you may have to bypass a security "
"warning before you can run the executable. If you frequently test pull "
"request builds, it may be better to disable Windows SmartScreen or `disable "
"macOS Gatekeeper <https://disable-gatekeeper.github.io/>`__ permanently."
msgstr ""
"提取ZIP档案，然后运行可执行文件。注意，Windows和macOS的二进制文件是没有代码签"
"名的。这意味着你可能必须在运行可执行文件之前绕过安全警告。如果你经常测试拉取"
"请求的构建，可能最好永久地禁用Windows SmartScreen或 `禁用macOS Gatekeeper "
"<https://disable-gatekeeper.github.io/>`__ 。"

msgid "If you don't have a GitHub account"
msgstr "如果你没有GitHub账户"

msgid ""
"If you don't have a GitHub account and can't sign up for one, you can use "
"the third-party `nightly.link <https://nightly.link>`__ service to generate "
"a universal download link."
msgstr ""
"如果你没有GitHub账户，也无法注册，你可以使用第三方的 `nightly.link <https://"
"nightly.link>`__ 服务来生成一个通用的下载链接。"

msgid ""
"Open the pull request page. Click the *fork*'s branch name near the top of "
"the page:"
msgstr "打开拉取请求页面。点击页面顶部附近的 *fork* 分支名称:"

msgid ""
"Now that you are on the fork's branch page, click the ``.github`` folder at "
"the top of the file list. Then, click on the ``workflows`` folder (whicb is "
"inside the ``.github`` folder). Click the workflow file for the platform you "
"wish to download artifacts for. *After* clicking on the file (which opens "
"the file view), copy the page URL from your browser's address bar."
msgstr ""
"现在你在 fork 的分支页面上，点击文件列表顶部的 ``.github`` 文件夹。然后，点"
"击 ``workflows`` 文件夹（位于 ``.github`` 文件夹内）。点击你想下载工件的平台"
"的工作流程文件。在点击文件（打开文件视图）\\ *之后*\\ ，从浏览器的地址栏复制"
"页面 URL。"

msgid ""
"Open the `nightly.link <https://nightly.link>`__ website and paste the URL "
"you just copied into the text field located below the heading **Paste a "
"GitHub link, get a nightly.link!**. After pasting the URL, click **Get "
"links** on the right. If the the format of the URL you pasted is correct, "
"you should be presented with a page like this:"
msgstr ""
"打开 `nightly.link <https://nightly.link>`__ 网站，将刚才复制的 URL 粘贴到 "
"**Paste a GitHub link, get a nightly.link!** 标题下的文本字段。粘贴完 URL "
"后，点击右侧的 **Get Links** 。如果你粘贴的 URL 格式正确，你应该看到一个像这"
"样的页面："

msgid "Click the URL of the artifact you wish to download."
msgstr "点击你想下载的工件的URL。"

msgid "Compiling a pull request branch from source"
msgstr "从源编译拉取请求分支"

msgid ""
"This approach may be needed for pull requests that were last updated more "
"than 90 days ago, or to test on platforms and configurations that are not "
"supported by Godot's GitHub Actions setup."
msgstr ""
"对于最后一次更新超过90天的拉取请求，或者在Godot的GitHub Actions设置不支持的平"
"台和配置上进行测试，可能需要采用这种方法。"

msgid ""
"Now that you are on the fork's branch page, click the green **Code** button "
"on the right of the page then choose **Download ZIP** in the dropdown:"
msgstr ""
"现在你在fork的分支页面上，点击页面右侧的绿色 **Code** 按钮，然后在下拉菜单中"
"选择 **下载ZIP** :"

msgid ""
"Extract the ZIP archive and follow the :ref:`compiling <toc-devel-"
"compiling>` instructions for your operating system."
msgstr ""
"提取ZIP压缩包，并按照你的操作系统的 :ref:`编译compiling <toc-devel-"
"compiling>` 说明。"

msgid "Translation status"
msgstr "翻译状态"
