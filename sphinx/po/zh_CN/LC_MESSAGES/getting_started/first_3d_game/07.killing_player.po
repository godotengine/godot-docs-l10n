# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Killing the player"
msgstr "杀死玩家"

msgid ""
"We can kill enemies by jumping on them, but the player still can't die. "
"Let's fix this."
msgstr ""
"我们可以通过跳到敌人身上来杀死他们，但玩家仍然不能死亡。让我们来解决这个问"
"题。"

msgid ""
"We want to detect being hit by an enemy differently from squashing them. We "
"want the player to die when they're moving on the floor, but not if they're "
"in the air. We could use vector math to distinguish the two kinds of "
"collisions. Instead, though, we will use an *Area* node, which works well "
"for hitboxes."
msgstr ""
"我们希望检测到被敌人击中与压扁敌人时的不同。我们希望玩家在地板上移动时死亡，"
"但如果他们在空中，则不会死亡。我们可以使用向量数学来区分这两种碰撞。但是，我"
"们将使用 *Area* 节点，该节点适用于命中框。"

msgid "Hitbox with the Area node"
msgstr "使用 Area 节点制作攻击框"

msgid ""
"Head back to the *Player* scene and add a new *Area* node. Name it "
"*MobDetector*. Add a *CollisionShape* node as a child of it."
msgstr ""
"回到 *Player* 场景，添加一个新的 *Area* 节点。把它命名为 *MobDetector*\\ （小"
"怪检测器）。添加一个 *CollisionShape* 节点作为它的一个子节点。"

msgid "|image0|"
msgstr "|image0|"

msgid "image0"
msgstr "image0"

msgid "In the *Inspector*, assign a cylinder shape to it."
msgstr "在\\ *检查器*\\ 中，给它指定一个圆柱体形状。"

msgid "|image1|"
msgstr "|image1|"

msgid "image1"
msgstr "image1"

msgid ""
"Here is a trick you can use to make the collisions only happen when the "
"player is on the ground or close to it. You can reduce the cylinder's height "
"and move it up to the top of the character. This way, when the player jumps, "
"the shape will be too high up for the enemies to collide with it."
msgstr ""
"这里有一个技巧，你可以用它来使碰撞只发生在玩家在地面上或靠近地面时。您可以降"
"低圆柱体的高度并将其向上移动到角色的顶部。这样，当玩家跳跃时，形状会太高，敌"
"人无法与之碰撞。"

msgid "|image2|"
msgstr "|image2|"

msgid "image2"
msgstr "image2"

msgid ""
"You also want the cylinder to be wider than the sphere. This way, the player "
"gets hit before colliding and being pushed on top of the monster's collision "
"box."
msgstr ""
"你还希望圆柱体比球体更宽。这样一来，玩家在碰撞之前就会被击中，并被推到怪物的"
"碰撞盒之上。"

msgid "The wider the cylinder, the more easily the player will get killed."
msgstr "圆柱体越宽，玩家就越容易被杀死。"

msgid ""
"Next, select the *MobDetector* node again, and in the *Inspector*, turn off "
"its *Monitorable* property. This makes it so other physics nodes cannot "
"detect the area. The complementary *Monitoring* property allows it to detect "
"collisions. Then, remove the *Collision -> Layer* and set the mask to the "
"\"enemies\" layer."
msgstr ""
"接下来，再次选择 *MobDetector* 节点，并在\\ *检查器*\\ 中，关闭其 "
"*Monitorable* 属性。这使得其他物理节点无法检测到这个区域。补充的 "
"*Monitoring* 属性允许它检测碰撞。然后，清除 *Collision -> Layer*\\ ，并将掩码"
"设置为“enemies”层。"

msgid "|image3|"
msgstr "|image3|"

msgid "image3"
msgstr "image3"

msgid ""
"When areas detect a collision, they emit signals. We're going to connect one "
"to the *Player* node. In the *Node* tab, double-click the ``body_entered`` "
"signal and connect it to the *Player*."
msgstr ""
"当区域检测到碰撞时，它们会发出信号。我们要将一个信号连接到 *Player* 节点。在"
"\\ *节点*\\ 选项卡中，双击 ``body_entered`` 信号并将其连接到 *Player*\\ 。"

msgid "|image4|"
msgstr "|image4|"

msgid "image4"
msgstr "image4"

msgid ""
"The *MobDetector* will emit ``body_entered`` when a *KinematicBody* or a "
"*RigidBody* node enters it. As it only masks the \"enemies\" physics layers, "
"it will only detect the *Mob* nodes."
msgstr ""
"当一个 *KinematicBody* 或 *RigidBody* 节点进入它时，\\ *MobDetector* 将发出 "
"``body_entered`` 信号。由于它只掩盖了“enemies”物理层，它将只检测 *Mob* 节点。"

msgid ""
"Code-wise, we're going to do two things: emit a signal we'll later use to "
"end the game and destroy the player. We can wrap these operations in a "
"``die()`` function that helps us put a descriptive label on the code."
msgstr ""
"从代码上看，我们要做两件事：发出一个信号，我们以后会用来结束游戏，并销毁玩"
"家。我们可以用 ``die()`` 函数来包装这些操作，帮助我们给代码贴上描述性标签。"

msgid ""
"Try the game again by pressing :kbd:`F5`. If everything is set up correctly, "
"the character should die when an enemy runs into it."
msgstr ""
"按 :kbd:`F5` 再试一下游戏。如果一切设置正确，角色在被敌人碰到时应该会死亡。"

msgid ""
"However, note that this depends entirely on the size and position of the "
"*Player* and the *Mob*\\ 's collision shapes. You may need to move them and "
"resize them to achieve a tight game feel."
msgstr ""
"然而，请注意，这完全取决于 *Player* 和 *Mob* 的碰撞形状的大小和位置。你可能需"
"要移动它们，调整它们的大小，以达到紧凑的游戏感觉。"

msgid "Ending the game"
msgstr "结束游戏"

msgid ""
"We can use the *Player*\\ 's ``hit`` signal to end the game. All we need to "
"do is connect it to the *Main* node and stop the *MobTimer* in reaction."
msgstr ""
"我们可以利用 *Player* 的 ``hit`` 信号来结束游戏。我们所要做的就是将它连接到 "
"*Main* 节点上，在处理时停止 *MobTimer*\\ 。"

msgid ""
"Open ``Main.tscn``, select the *Player* node, and in the *Node* dock, "
"connect its ``hit`` signal to the *Main* node."
msgstr ""
"打开 ``Main.tscn`` 场景，选中 *Player* 节点，然后在\\ *节点*\\ 面板中把 "
"``hit`` 信号连接到 *Main* 节点。"

msgid "|image5|"
msgstr "|image5|"

msgid "image5"
msgstr "image5"

msgid "Get and stop the timer in the ``_on_Player_hit()`` function."
msgstr "在 ``_on_Player_hit()`` 函数中获取并停止计时器。"

msgid ""
"If you try the game now, the monsters will stop spawning when you die, and "
"the remaining ones will leave the screen."
msgstr "如果你现在试玩游戏，你死亡后就会停止刷怪，现有的怪物会离开屏幕。"

msgid ""
"You can pat yourself in the back: you prototyped a complete 3D game, even if "
"it's still a bit rough."
msgstr "你可以鼓励鼓励自己了：你做出了完整 3D 游戏的原型，虽说还有点粗糙。"

msgid ""
"From there, we'll add a score, the option to retry the game, and you'll see "
"how you can make the game feel much more alive with minimalistic animations."
msgstr ""
"在此基础上，我们将会添加计分、重启游戏的选项，你还会看到如何使用简单的动画让"
"游戏变得更加活灵活现。"

msgid "Code checkpoint"
msgstr "代码检查点"

msgid ""
"Here are the complete scripts for the *Main*, *Mob*, and *Player* nodes, for "
"reference. You can use them to compare and check your code."
msgstr ""
"这些事 *Main*\\ 、\\ *Mob*\\ 、\\ *Player* 节点的完整脚本，仅供参考。你可以把"
"它们和你的代码进行对比检查。"

msgid "Starting with ``Main.gd``."
msgstr "首先是 ``Main.gd``\\ 。"

msgid "Next is ``Mob.gd``."
msgstr "然后是 ``Mob.gd``\\ 。"

msgid "Finally, the longest script, ``Player.gd``."
msgstr "最后是最长的脚本 ``Player.gd``\\ 。"

msgid "See you in the next lesson to add the score and the retry option."
msgstr "在下一节课中我们会添加计分和重试选项，再见。"

msgid "Translation status"
msgstr "翻译状态"
