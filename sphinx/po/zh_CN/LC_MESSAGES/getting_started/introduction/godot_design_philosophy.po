# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot's design philosophy"
msgstr "Godot 的设计理念"

msgid "Now that you've gotten your feet wet, let's talk about Godot's design."
msgstr "既然你已经小试身手，让我们谈谈 Godot 的设计。"

msgid ""
"**Every game engine is different and fits different needs.** Not only do "
"they offer a range of features, but the design of each engine is unique. "
"This leads to different workflows and different ways to form your games' "
"structures. This all stems from their respective design philosophies."
msgstr ""
"**游戏引擎各不相同，以满足不同的需求。**\\ 它们不仅提供一系列功能，而且每个引"
"擎的设计都是独一无二的。这将导致不同工作流程和项目组织结构。这一切都源于它们"
"各自的设计理念。"

msgid ""
"This page is here to help you understand how Godot works, starting with some "
"of its core pillars. It is not a list of available features, nor is it an "
"engine comparison. To know if any engine can be a good fit for your project, "
"you need to try it out for yourself and understand its design and "
"limitations."
msgstr ""
"这个页面是为了帮助你通过godot的一些核心功能来理解它的工作原理. 这个页面既不是"
"godot特性的介绍列表, 也不会对各个引擎做比较. 要知道哪一种引擎更适合你的项目, "
"你需要自己尝试一下并了解各个引擎对设计和局限性."

msgid ""
"Please watch `Godot explained in 5 minutes <https://www.youtube.com/watch?"
"v=KjX5llYZ5eQ>`_ if you're looking for an overview of the engine's features."
msgstr ""
"如果你在寻找引擎特性的概览，请观看 `Godot explained in 5 minutes <https://"
"www.youtube.com/watch?v=KjX5llYZ5eQ>`_\\ 。"

msgid "Object-oriented design and composition"
msgstr "面向对象的设计与组合"

msgid ""
"Godot embraces object-oriented design at its core with its flexible scene "
"system and Node hierarchy. It tries to stay away from strict programming "
"patterns to offer an intuitive way to structure your game."
msgstr ""
"Godot凭借其灵活的场景系统和节点层次结构, 将面向对象设计作为其核心. 它试图远离"
"严格的编程模式, 以提供直观的方式来构建游戏."

msgid ""
"For one, Godot lets you **compose or aggregate** scenes. It's like nested "
"prefabs: you can create a BlinkingLight scene and a BrokenLantern scene that "
"uses the BlinkingLight. Then, create a city filled with BrokenLanterns. "
"Change the BlinkingLight's color, save, and all the BrokenLanterns in the "
"city will update instantly."
msgstr ""
"首先，Godot 可以让你把场景\\ **组合或聚合**\\ 起来。这和嵌套的预制件是类似"
"的：你可以创建 BlinkingLight 场景，并创建使用 BlinkingLight 的 BrokenLantern "
"场景。然后，创建一个充满 BrokenLantern 的城市。更改 BlinkingLight 的颜色、保"
"存，城市中的所有 BrokenLantern 都会立即更新。"

msgid "On top of that, you can **inherit** from any scene."
msgstr "更重要的是，你可以从任何场景\\ **继承**\\ 。"

msgid ""
"A Godot scene could be a Weapon, a Character, an Item, a Door, a Level, part "
"of a level… anything you'd like. It works like a class in pure code, except "
"you're free to design it by using the editor, using only the code, or mixing "
"and matching the two."
msgstr ""
"Godot 场景可以是武器、角色、物品、门、关卡、关卡的一部分……任何你能想象的东"
"西。它就像类一样，但也可以使用编辑器，纯代码或同时使用两者来编辑场景。"

msgid ""
"It's different from prefabs you find in several 3D engines, as you can then "
"inherit from and extend those scenes. You may create a Magician that extends "
"your Character. Modify the Character in the editor and the Magician will "
"update as well. It helps you build your projects so that their structure "
"matches the game's design."
msgstr ""
"和其他几个 3D 引擎的 Prefab（预制体）不同，场景可以通过继承来扩展。你可以创建"
"一个 Magician（魔术师）来扩展您的 Character（角色）。在编辑器中修改 "
"Character 后 Magician 也会更新。这样的设计可以帮你保持项目结构与设计的一致"
"性。"

msgid "|image0|"
msgstr "|image0|"

msgid "image0"
msgstr "image0"

msgid ""
"Also note that Godot offers many different types of objects called nodes, "
"each with a specific purpose. Nodes are part of a tree and always inherit "
"from their parents up to the Node class. Although the engine does feature "
"some nodes like collision shapes that a parent physics body will use, most "
"nodes work independently from one another."
msgstr ""
"Godot 还提供了不同类型的对象，称作节点，每种节点都有特定的用途。节点是场景树"
"的一部分，最终继承自 Node 类。尽管引擎提供的碰撞形状等节点确实会被父节点物理"
"实体所使用，但大多数节点都可以独立使用。"

msgid ""
"In other words, Godot's nodes do not work like components in some other game "
"engines."
msgstr "换句话说，Godot的节点并不像其他一些游戏引擎中的组件那样工作。"

msgid "|image1|"
msgstr "|image1|"

msgid "image1"
msgstr "image1"

msgid ""
"Sprite is a Node2D, a CanvasItem and a Node. It has all the properties and "
"features of its three parent classes, like transforms or the ability to draw "
"custom shapes and render with a custom shader."
msgstr ""
"Sprite 属于 Node2D、CanvasItem、Node 类型。它具有三个父类的所有属性和功能，比"
"如变换或者绘制自定义形状和使用自定义着色器渲染的能力。"

msgid "All-inclusive package"
msgstr "完善的工具集"

msgid ""
"Godot tries to provide its own tools to answer most common needs. It has a "
"dedicated scripting workspace, an animation editor, a tilemap editor, a "
"shader editor, a debugger, a profiler, the ability to hot-reload locally and "
"on remote devices, etc."
msgstr ""
"Godot尝试提供自己的工具来满足最常见的需求. 它具有专用的脚本工作区, 动画编辑"
"器, tilemap编辑器, 着色器编辑器, 调试器, 分析器, 能够在本地和远程等设备上热重"
"载的功能."

msgid "|image2|"
msgstr "|image2|"

msgid "image2"
msgstr "image2"

msgid ""
"The goal is to offer a full package to create games and a continuous user "
"experience. You can still work with external programs as long as there is an "
"import plugin for it. Or you can create one, like the `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`__."
msgstr ""
"我们的目标是提供一个完整的软件包来创建游戏以及持续的用户体验。只要有对应的导"
"入插件，你就仍然可以使用外部程序。或者你可以自己创建一个，比如 `Tiled Map 导"
"入器 <https://github.com/vnen/godot-tiled-importer>`__\\ 。"

msgid ""
"That is also partly why Godot offers its own programming languages GDScript "
"and VisualScript, along with C#. They're designed for the needs of game "
"developers and game designers, and they're tightly integrated in the engine "
"and the editor."
msgstr ""
"这也是为什么 Godot 会提供自己的编程语言 GDScript 和 VisualScript 以及 C# 的部"
"分原因。它们是为满足游戏开发人员和游戏设计师的需求而设计的，并且被紧密集成在"
"引擎和编辑器中。"

msgid ""
"GDScript lets you write code using an indentation-based syntax, yet it "
"detects types and offers a static language's quality of auto-completion. It "
"is also optimized for gameplay code with built-in types like Vectors and "
"Colors."
msgstr ""
"GDScript 使您可以使用基于缩进的语法编写代码，但是它可以检测类型，提供质量接近"
"静态语言的自动补全。它还针对使用 Vector、Color 等内置类型的游戏代码进行了优"
"化。"

msgid ""
"Note that with GDNative, you can write high-performance code using compiled "
"languages like C, C++, Rust, or Python (using the Cython compiler) without "
"recompiling the engine."
msgstr ""
"请注意，使用GDNative，你可以编写出使用类似 C、C++、Rust、Python（使用 Cython "
"编译器）这类的编译语言编写的高性能代码，无需重新编译引擎。"

msgid "|image3|"
msgstr "|image3|"

msgid "image3"
msgstr "image3"

msgid ""
"*VisualScript is a node-based programming language that integrates well in "
"the editor. You can drag and drop nodes or resources into the graph to "
"create new code blocks.*"
msgstr ""
"*VisualScript 是一种基于节点的编程语言，可以很好地集成到编辑器中。你可以将节"
"点或资源拖放到图中以创建新的代码块。*"

msgid ""
"Note that the 3D workspace doesn't feature as many tools as the 2D "
"workspace. You'll need external programs or add-ons to edit terrains, "
"animate complex characters, and so on. Godot provides a complete API to "
"extend the editor's functionality using game code. See `The Godot editor is "
"a Godot game`_ below."
msgstr ""
"请注意，3D 工作区不像 2D 工作区那样有那么多工具。你将需要使用外部的程序或插件"
"来编辑地形，给复杂的角色模型制作动画等。Godot 提供了完整的 API，可以直接使用"
"编写游戏的代码来扩展编辑器的功能。参见下面的 `Godot 编辑器是一个 Godot 游戏"
"`_\\ 。"

msgid "|image4|"
msgstr "|image4|"

msgid "image4"
msgstr "image4"

msgid ""
"*A State Machine editor plugin in Godot 2 by kubecz3k. It lets you manage "
"states and transitions visually.*"
msgstr ""
"*Godot 2 的状态机编辑器插件，由 kubecz3k 开发。它使您可以直观地管理状态和转"
"换。*"

msgid ""
"`Godot 4.0 will remove VisualScript from core entirely. <https://godotengine."
"org/article/godot-4-will-discontinue-visual-scripting>`__ As a result, "
"creating new projects using visual scripting in Godot is not recommended. "
"Future Godot 4.x releases may have VisualScript reimplemented as an "
"extension."
msgstr ""
"`Godot 4.0 将会把 VisualScript 从核心中完全移除。 <https://godotengine.org/"
"article/godot-4-will-discontinue-visual-scripting>`__\\ 因此，不推荐在新的 "
"Godot 项目中使用可视化脚本。后续的 Godot 4.x 版本可能会将 VisualScript 重新实"
"现为扩展。"

msgid ""
"While Godot 3.x will keep VisualScript supported, we recommend :ref:`trying "
"out GDScript <toc-learn-scripting-gdscript>` instead, especially if you "
"intend to migrate your project to Godot 4."
msgstr ""
"Godot 3.x 仍会支持 VisualScript，我们建议你先\\ :ref:`试一试 GDScript <toc-"
"learn-scripting-gdscript>`\\ ，尤其是你想要把项目移植到 Godot 4 的话。"

msgid "Open source"
msgstr "开源"

msgid ""
"Godot offers a fully open source codebase under the **MIT license**. This "
"means all the technologies that ship with it have to be Free (as in freedom) "
"as well. For the most part, they're developed from the ground up by "
"contributors."
msgstr ""
"Godot 源代码采用了 **MIT 许可证**\\ 。这意味着它附带的所有技术也必须是自由的"
"（自由使用、修改等）。大部分代码都是由贡献者从头开始开发的。"

msgid ""
"Anyone can plug in proprietary tools for the needs of their projects — they "
"just won't ship with the engine. This may include Google AdMob, or FMOD. Any "
"of these can come as third-party plugins instead."
msgstr ""
"任何人都可以根据各自需求添加专有软件——当然它们是不会通过引擎一起提供. 包括"
"Google AdMob或FMOD等, 如果需要可以作为第三方插件来提供."

msgid ""
"On the other hand, an open codebase means you can **learn from and extend "
"the engine** to your heart's content. You can also debug games easily, as "
"Godot will print errors with a stack trace, even if they come from the "
"engine itself."
msgstr ""
"另一方面，开放源代码意味着你可以\\ **学习并扩展引擎**\\ 。你也可以很容易地调"
"试游戏，因为 Godot 会使用堆栈跟踪打印所有错误，即使这些错误来自引擎本身。"

msgid ""
"This **does not affect the work you do with Godot** in any way: there's no "
"strings attached to the engine or anything you make with it."
msgstr ""
"**开放源码的协议不会以任何方式影响您用Godot所创作的作品** : 不会有附加条件影"
"响Godot引擎与您用Godot制作的东西."

msgid "Community-driven"
msgstr "社区驱动"

msgid ""
"**Godot is made by its community, for the community, and for all game "
"creators out there.** It's the needs of the users and open discussions that "
"drive the core updates. New features from the core developers often focus on "
"what will benefit the most users first."
msgstr ""
"**Godot开发自社区, 为其社区内外所有游戏开发者创造的.** 由用户需求及公开讨论驱"
"动核心更新. 核心开发人员的新功能通常将重点放在首先让大多数用户受益的方面."

msgid ""
"That said, although a handful of core developers work on it full-time, the "
"project has over 600 contributors at the time of writing. Benevolent "
"programmers work on features they may need themselves, so you'll see "
"improvements in all corners of the engine at the same time in every major "
"release."
msgstr ""
"就是说, 尽管只有少数全职的核心开发者, 但在撰写本文时, 该项目已有超过600位贡献"
"者. 仁慈的程序员致力于完善他们可能需要的功能, 因此在每个主要版本中都能看到引"
"擎各个方面的改进."

msgid "The Godot editor is a Godot game"
msgstr "Godot 编辑器是 Godot 游戏"

msgid ""
"The Godot editor runs on the game engine. It uses the engine's own UI "
"system, it can hot-reload code and scenes when you test your projects, or "
"run game code in the editor. This means you can **use the same code** and "
"scenes for your games, or **build plugins and extend the editor.**"
msgstr ""
"Godot 编辑器是使用游戏引擎运行的，使用的是引擎自己的 UI 系统，可以在测试项目"
"时热重载代码和场景，也可以在编辑器中运行游戏代码。这意味着\\ **相同的代码"
"**\\ 既可以用来构建游戏中的场景，又可以用来\\ **构建插件对编辑器进行扩展。**"

msgid ""
"This leads to a reliable and flexible UI system, as it powers the editor "
"itself. With the ``tool`` keyword, you can run any game code in the editor."
msgstr ""
"因此，UI 系统非常稳定、灵活，因为编辑器本身就是由它驱动的。使用 ``tool`` 关键"
"字，你就可以在编辑器中运行任何游戏代码。"

msgid "|image5|"
msgstr "|image5|"

msgid "image5"
msgstr "image5"

msgid ""
"*RPG in a Box is a voxel RPG editor made with Godot 2. It uses Godot's UI "
"tools for its node-based programming system and for the rest of the "
"interface.*"
msgstr ""
"*RPG in a Box 是一个用 Godot 2 制作的 RPG 体素编辑器。它使用 Godot 的 UI 工具"
"制作了其基于节点的编程系统和界面的其余部分。*"

msgid ""
"Put the ``tool`` keyword at the top of any GDScript file and it will run in "
"the editor. This lets you import and export plugins, create plugins like "
"custom level editors, or create scripts with the same nodes and API you use "
"in your projects."
msgstr ""
"将 ``tool`` 关键字放在任何GDScript文件的顶部, 它将在编辑器中运行. 这使您可以"
"导入和导出插件, 创建自定义级别编辑器之类的插件, 或使用与项目中使用的相同的节"
"点和API来创建脚本."

msgid ""
"The editor is fully written in C++ and is statically compiled into the "
"binary. This means you can't import it as a typical project that would have "
"a ``project.godot`` file."
msgstr ""
"编辑器完全使用 C++ 编写并且静态地编译为二进制文件。这意味着你不能像导入一个拥"
"有 ``project.godot`` 文件的普通项目一样导入它。"

msgid "Separate 2D and 3D engines"
msgstr "独立的 2D 和 3D 引擎"

msgid ""
"Godot offers dedicated 2D and 3D rendering engines. As a result, **the base "
"unit for 2D scenes is pixels.** Even though the engines are separate, you "
"can render 2D in 3D, 3D in 2D, and overlay 2D sprites and interfaces over "
"your 3D world."
msgstr ""
"Godot分别提供了独立的2D和3D渲染引擎. **2D场景的基本单位使用的是像素.** 即使引"
"擎是分开的, 您依然可以在3D中渲染2D, 在2D中渲染3D, 也能在您的3D世界上叠加2D图"
"片与界面."

msgid "Translation status"
msgstr "翻译状态"
