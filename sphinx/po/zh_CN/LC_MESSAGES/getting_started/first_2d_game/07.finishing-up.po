# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Finishing up"
msgstr "完成了"

msgid ""
"We have now completed all the functionality for our game. Below are some "
"remaining steps to add a bit more \"juice\" to improve the game experience."
msgstr ""
"现在，我们已经完成了游戏的所有功能。以下是一些剩余的步骤，为游戏加点“料”，改"
"善游戏体验。"

msgid "Feel free to expand the gameplay with your own ideas."
msgstr "随意用你自己的想法扩展游戏玩法。"

msgid "Background"
msgstr "背景"

msgid ""
"The default gray background is not very appealing, so let's change its "
"color. One way to do this is to use a :ref:`ColorRect <class_ColorRect>` "
"node. Make it the first node under ``Main`` so that it will be drawn behind "
"the other nodes. ``ColorRect`` only has one property: ``Color``. Choose a "
"color you like and select \"Layout\" -> \"Full Rect\" so that it covers the "
"screen."
msgstr ""
"默认的灰色背景不是很吸引人，因此让我们更改其颜色。一种方法是使用 :ref:"
"`ColorRect <class_ColorRect>` 节点。将其设为 ``Main`` 下的第一个节点，以便将"
"其绘制在其他节点之后。 ``ColorRect`` 只有一个属性：\\ ``Color``\\ 。选择您喜"
"欢的颜色，然后选择“布局”->“整个矩形”（位于主窗口上方工具条），使其覆盖屏幕。"

msgid ""
"You could also add a background image, if you have one, by using a "
"``TextureRect`` node instead."
msgstr "如果您有背景图片, 您也可以通过使用 ``TextureRect`` 节点来添加背景图片."

msgid "Sound effects"
msgstr "音效"

msgid ""
"Sound and music can be the single most effective way to add appeal to the "
"game experience. In your game assets folder, you have two sound files: "
"\"House In a Forest Loop.ogg\" for background music, and \"gameover.wav\" "
"for when the player loses."
msgstr ""
"声音和音乐可能是增强游戏沉浸的最有效方法。在游戏资产包中，你有两个声音文"
"件：“House in a Forest Loop.ogg”用于背景音乐，而“gameover.wav”用于当玩家失败"
"时。"

msgid ""
"Add two :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` nodes as children "
"of ``Main``. Name one of them ``Music`` and the other ``DeathSound``. On "
"each one, click on the ``Stream`` property, select \"Load\", and choose the "
"corresponding audio file."
msgstr ""
"添加两个 :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` 节点作为 "
"``Main`` 的子节点。将其中一个命名为 ``Music``\\ ，将另一个命名为 "
"``DeathSound``\\ 。 在每个节点选项上，点击 ``Stream`` 属性，选择 ``加载"
"``\\ ，然后选择相应的音频文件。"

msgid ""
"To play the music, add ``$Music.play()`` in the ``new_game()`` function and "
"``$Music.stop()`` in the ``game_over()`` function."
msgstr ""
"要播放音乐, 在 ``new_game()`` 函数中添加 ``$Music.play()``, 在 "
"``game_over()`` 函数中添加 ``$Music.stop()`` ."

msgid "Finally, add ``$DeathSound.play()`` in the ``game_over()`` function."
msgstr "最后, 在 ``game_over()`` 函数中添加 ``$DeathSound.play()`` ."

msgid "Keyboard shortcut"
msgstr "键盘快捷键"

msgid ""
"Since the game is played with keyboard controls, it would be convenient if "
"we could also start the game by pressing a key on the keyboard. We can do "
"this with the \"Shortcut\" property of the ``Button`` node."
msgstr ""
"当游戏使用键盘控制，可以方便地按键盘上的键来启动游戏。一种方法是使用 "
"``Button`` 节点的 “Shortcut”（快捷键）属性。"

msgid ""
"In a previous lesson, we created four input actions to move the character. "
"We will create a similar input action to map to the start button."
msgstr ""
"在上一课中，我们创建了四个输入动作来移动角色。我们将创建一个类似的输入动作来"
"映射到开始按钮。"

msgid ""
"Select \"Project\" -> \"Project Settings\" and then click on the \"Input "
"Map\" tab. In the same way you created the movement input actions, create a "
"new input action called ``start_game`` and add a key mapping for the :kbd:"
"`Enter` key."
msgstr ""
"选择“项目 -> 项目设置”，然后单击“输入映射”选项卡。与创建移动输入动作的方式相"
"同，创建一个名为 ``start_game`` 的新输入操作，并为 :kbd:`Enter` 添加按键映"
"射。"

msgid ""
"In the ``HUD`` scene, select the ``StartButton`` and find its *Shortcut* "
"property in the Inspector. Select \"New Shortcut\" and click on the "
"\"Shortcut\" item. A second *Shortcut* property will appear. Select \"New "
"InputEventAction\" and click the new \"InputEventAction\". Finally, in the "
"*Action* property, type the name ``start_game``."
msgstr ""
"在 ``HUD`` 场景中，请选中 ``StartButton``\\ ，然后在检查器中找到其 "
"*Shortcut* 属性。选择“新建 Shortcut”，然后单击 Shortcut 项。将出现第二个 "
"*Shortcut* 属性。选择“新建 InputEventAction”，然后点击刚创建"
"的“InputEventAction”。最后，在其 *Action* 属性中键入名称 ``start_game``\\ 。"

msgid ""
"Now when the start button appears, you can either click it or press :kbd:"
"`Enter` to start the game."
msgstr "这样，开始按钮出现时，您就可以点击它或按 :kbd:`Enter` 来启动游戏。"

msgid "And with that, you completed your first 2D game in Godot."
msgstr "就这样，你在 Godot 中完成了你的第一个 2D 游戏。"

msgid ""
"You got to make a player-controlled character, enemies that spawn randomly "
"around the game board, count the score, implement a game over and replay, "
"user interface, sounds, and more. Congratulations!"
msgstr ""
"你已经能够制作由玩家控制的角色、在游戏区域内随机产生的敌人、计算分数、实现游"
"戏结束和重玩、用户界面、声音，以及更多内容。祝贺！"

msgid ""
"There's still much to learn, but you can take a moment to appreciate what "
"you achieved."
msgstr "还有很多东西需要学习，但你可以花点时间来欣赏你所取得的成就。"

msgid ""
"And when you're ready, you can move on to :ref:`doc_your_first_3d_game` to "
"learn to create a complete 3D game from scratch, in Godot."
msgstr ""
"当你准备好了，你可以继续学习 :ref:`doc_your_first_3d_game`\\ ，学习在 Godot "
"中从头开始创建一个完整的 3D 游戏。"

msgid "Translation status"
msgstr "翻译状态"
