# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the enemy"
msgstr "创建敌人"

msgid ""
"Now it's time to make the enemies our player will have to dodge. Their "
"behavior will not be very complex: mobs will spawn randomly at the edges of "
"the screen, choose a random direction, and move in a straight line."
msgstr ""
"是时候去做一些玩家必须躲避的敌人了. 它们的行为很简单: 怪物将随机生成在屏幕的"
"边缘, 沿着随机的方向直线移动."

msgid ""
"We'll create a ``Mob`` scene, which we can then *instance* to create any "
"number of independent mobs in the game."
msgstr ""
"我们将创建一个 ``Mob`` 的怪物场景，以便在游戏中独立\\ *实例化*\\ 出任意数量的"
"怪物。"

msgid "Node setup"
msgstr "节点设置"

msgid "Click Scene -> New Scene and add the following nodes:"
msgstr "点击“场景 -> 新建场景”，然后添加以下节点："

msgid ":ref:`RigidBody2D <class_RigidBody2D>` (named ``Mob``)"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>`\\ （名为 ``Mob``\\ ）"

msgid ":ref:`AnimatedSprite <class_AnimatedSprite>`"
msgstr ":ref:`AnimatedSprite <class_AnimatedSprite>`"

msgid ":ref:`CollisionShape2D <class_CollisionShape2D>`"
msgstr ":ref:`CollisionShape2D <class_CollisionShape2D>`"

msgid ":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>`"
msgstr ":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>`"

msgid ""
"Don't forget to set the children so they can't be selected, like you did "
"with the Player scene."
msgstr "别忘了设置子项，使其无法被选中，就像你对 Player 场景所做的那样。"

msgid ""
"In the :ref:`RigidBody2D <class_RigidBody2D>` properties, set ``Gravity "
"Scale`` to ``0``, so the mob will not fall downward. In addition, under the :"
"ref:`CollisionObject2D <class_CollisionObject2D>` section, click the "
"``Mask`` property and uncheck the first box. This will ensure the mobs do "
"not collide with each other."
msgstr ""
"在 :ref:`RigidBody2D <class_RigidBody2D>` 属性中，将 ``Gravity Scale`` 设置"
"为 ``0``\\ ，这样怪物就不会下坠。此外，在 :ref:`CollisionObject2D "
"<class_CollisionObject2D>` 部分下，点击 ``Mask`` 属性并去除第一个复选框的勾"
"选。这会确保怪物就不会彼此碰撞。"

msgid ""
"Set up the :ref:`AnimatedSprite <class_AnimatedSprite>` like you did for the "
"player. This time, we have 3 animations: ``fly``, ``swim``, and ``walk``. "
"There are two images for each animation in the art folder."
msgstr ""
"像设置玩家一样设置 :ref:`AnimatedSprite <class_AnimatedSprite>`\\ 。这一次，"
"我们有3个动画：\\ ``fly``\\ 、\\ ``swim``\\ 、\\ ``walk``\\ ，每个动画在 art "
"文件夹中都有 2 张图片。"

msgid "Adjust the \"Speed (FPS)\" to ``3`` for all animations."
msgstr "对于所有动画，将“速度（FPS）”调整为 ``3``\\ 。"

msgid "Set the ``Playing`` property in the Inspector to \"On\"."
msgstr "将“检查器”中的 ``Playing`` 属性设置为“启用”。"

msgid ""
"We'll select one of these animations randomly so that the mobs will have "
"some variety."
msgstr "我们将随机选择其中一个动画，以便小怪有一些变化。"

msgid ""
"Like the player images, these mob images need to be scaled down. Set the "
"``AnimatedSprite``'s ``Scale`` property to ``(0.75, 0.75)``."
msgstr ""
"像玩家的图像一样，这些小怪的图像也要缩小。请将 ``AnimatedSprite`` 的 "
"``Scale`` 属性设为 ``(0.75, 0.75)``\\ 。"

msgid ""
"As in the ``Player`` scene, add a ``CapsuleShape2D`` for the collision. To "
"align the shape with the image, you'll need to set the ``Rotation Degrees`` "
"property to ``90`` (under \"Transform\" in the Inspector)."
msgstr ""
"像在 ``Player`` 场景中一样，为碰撞添加一个 ``CapsuleShape2D``\\ 。为了使形状"
"与图像对齐，您需要将 ``Rotation Degrees`` 属性设为 ``90``\\ （在“检查"
"器”的“Transorm”下）。"

msgid "Save the scene."
msgstr "保存该场景。"

msgid "Enemy script"
msgstr "敌人的脚本"

msgid "Add a script to the ``Mob`` like this:"
msgstr "像这样将脚本添加到 ``Mob`` 上："

msgid ""
"Now let's look at the rest of the script. In ``_ready()`` we play the "
"animation and randomly choose one of the three animation types:"
msgstr ""
"现在让我们看一下脚本的其余部分。在 ``_ready()`` 中，我们从三个动画类型中随机"
"选择一个播放："

msgid ""
"First, we get the list of animation names from the AnimatedSprite's "
"``frames`` property. This returns an Array containing all three animation "
"names: ``[\"walk\", \"swim\", \"fly\"]``."
msgstr ""
"首先，我们从 AnimatedSprite 的 ``frames`` 属性中获取动画名称的列表。返回的是"
"一个数组，该数组包含三个动画名称：\\ ``[\"walk\", \"swim\", \"fly\"]``\\ 。"

msgid ""
"We then need to pick a random number between ``0`` and ``2`` to select one "
"of these names from the list (array indices start at ``0``). ``randi() % n`` "
"selects a random integer between ``0`` and ``n-1``."
msgstr ""
"然后我们需要在 ``0`` 和 ``2`` 之间选取一个随机的数字, 以在列表中选择一个名称"
"(数组索引以 ``0`` 起始). ``randi() % n`` 会在 ``0`` and ``n-1`` 之中选择一个"
"随机整数."

msgid ""
"You must use ``randomize()`` if you want your sequence of \"random\" numbers "
"to be different every time you run the scene. We're going to use "
"``randomize()`` in our ``Main`` scene, so we won't need it here."
msgstr ""
"如果希望每次运行场景时生成的“随机数”都不同，则必须使用 ``randomize()``\\ 。我"
"们将在 ``Main`` 场景中使用 ``randomize()``\\ ，因此在这里不需要添加。"

msgid ""
"The last piece is to make the mobs delete themselves when they leave the "
"screen. Connect the ``screen_exited()`` signal of the "
"``VisibilityNotifier2D`` node and add this code:"
msgstr ""
"最后一步是让怪物在超出屏幕时删除自己. 连接 ``VisibilityNotifier2D`` 节点的 "
"``screen_exited()`` 信号并添加以下代码:"

msgid "This completes the `Mob` scene."
msgstr "这样就完成了 `Mob` 场景。"

msgid ""
"With the player and enemies ready, in the next part, we'll bring them "
"together in a new scene. We'll make enemies spawn randomly around the game "
"board and move forward, turning our project into a playable game."
msgstr ""
"玩家和敌人已经准备就绪，接下来，我们将在一个新的场景中把他们放到一起。我们将"
"使敌人在游戏板上随机生成并前进，我们的项目将变成一个能玩的游戏。"

msgid "Translation status"
msgstr "翻译状态"
