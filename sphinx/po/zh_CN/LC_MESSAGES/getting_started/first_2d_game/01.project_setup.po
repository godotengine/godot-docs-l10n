# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up the project"
msgstr "设置项目"

msgid "In this short first part, we'll set up and organize the project."
msgstr "在这个简短的第一部分中，我们将设置和组织项目。"

msgid "Launch Godot and create a new project."
msgstr "启动 Godot 然后新建一个项目。"

msgid "GDScript"
msgstr "GDScript"

msgid ""
"Download :download:`dodge_assets.zip <files/dodge_assets.zip>`. The archive "
"contains the images and sounds you'll be using to make the game. Extract the "
"archive and move the ``art/`` and ``fonts/`` directories to your project's "
"directory."
msgstr ""
"下载 :download:`dodge_assets.zip <files/dodge_assets.zip>`\\ 。归档文件中包含"
"你会在制作游戏过程中使用到的图片和声音。请解压归档文件，将 ``art/`` 和 "
"``fonts/`` 目录移动到你的项目目录。"

msgid "C#"
msgstr "C#"

msgid ""
"Ensure that you have the required dependencies to use C# in Godot. You need "
"the .NET Core 3.1 SDK, and an editor such as VS Code. See :ref:"
"`doc_c_sharp_setup`."
msgstr ""
"确保你拥有在Godot中使用C#所需的依赖性。你需要 .NET Core 3.1 SDK 和一个编辑"
"器，如VS Code。参见 :ref:`doc_c_sharp_setup` 。"

msgid "GDNative C++"
msgstr "GDNative C++"

msgid ""
"Download :download:`dodge_assets_with_gdnative.zip <files/"
"dodge_assets_with_gdnative.zip>`. The archive contains the images and sounds "
"you'll be using to make the game. It also contains a starter GDNative "
"project including a ``SConstruct`` file, a ``dodge_the_creeps.gdnlib`` file, "
"a ``player.gdns`` file, and an ``entry.cpp`` file."
msgstr ""
"下载： :download:`dodge_assets_with_gdnative.zip <files/"
"dodge_assets_with_gdnative.zip>` 。存档包含您将用于制作游戏的图像和声音。它还"
"包含一个初学者GDNative项目，包括一个 ``SConstruct`` 文件，一个 "
"``dodge_the_creeps.gdnlib`` 文件，一个 ``player.gdns`` 文件和一个 ``entry."
"cpp`` 文件。"

msgid ""
"Ensure that you have the required dependencies to use GDNative C++. You need "
"a C++ compiler such as GCC or Clang or MSVC that supports C++14. On Windows "
"you can download Visual Studio 2019 and select the C++ workload. You also "
"need SCons to use the build system (the SConstruct file). Then you need to "
"`download the Godot C++ bindings <https://github.com/godotengine/godot-"
"cpp>`_ and place them in your project."
msgstr ""
"确保你拥有使用 GDNative C++ 所需的依赖性。你需要一个支持 C++14 的 C++ 编译"
"器，如 GCC 或 Clang 或 MSVC。在 Windows 上，你可以下载 Visual Studio 2019 并"
"选择 C++ 工作负载。你还需要 SCons 来使用构建系统（SConstruct 文件）。然后你需"
"要\\ `下载 Godot C++ 绑定 <https://github.com/godotengine/godot-cpp>`_\\ 并把"
"它们放在你的项目中。"

msgid "Your project folder should look like this."
msgstr "您的项目文件夹应如下所示。"

msgid ""
"This game is designed for portrait mode, so we need to adjust the size of "
"the game window. Click on *Project -> Project Settings* to open the project "
"settings window and in the left column, open the *Display -> Window* tab. "
"There, set \"Width\" to ``480`` and \"Height\" to ``720``."
msgstr ""
"这个游戏是针对竖屏模式设计的，所以我们需要调整游戏窗口的大小。点击\\ *项目 -"
"> 项目设置*\\ 打开项目设置窗口，然后在左栏中打开 *Display -> Window*\\ （显"
"示 -> 窗口）选项卡，将“Width”设置为 ``480``\\ ，并将“Height”设置为 "
"``720``\\ 。"

msgid ""
"Also, scroll down to the bottom of the section and, under the \"Stretch\" "
"options, set ``Mode`` to \"2d\" and ``Aspect`` to \"keep\". This ensures "
"that the game scales consistently on different sized screens."
msgstr ""
"另外，滚动到该小节的底部，在“Stretch”（拉伸）选项中，将 ``Mode`` 设置"
"为“2d”、\\ ``Aspect`` 设置为“keep”。这样就可以保证在不同大小的屏幕上，游戏都"
"能够进行一致的比例缩放。"

msgid "Organizing the project"
msgstr "组织项目"

msgid ""
"In this project, we will make 3 independent scenes: ``Player``, ``Mob``, and "
"``HUD``, which we will combine into the game's ``Main`` scene."
msgstr ""
"在这个项目中，我们将制作3个独立的场景。 ``Player``, ``Mob``, 以及 ``HUD``, 我"
"们将把这些场景合并成游戏的 ``Main`` 场景。"

msgid ""
"In a larger project, it might be useful to create folders to hold the "
"various scenes and their scripts, but for this relatively small game, you "
"can save your scenes and scripts in the project's root folder, identified by "
"``res://``. You can see your project folders in the FileSystem dock in the "
"lower left corner:"
msgstr ""
"在更大的项目中，为各个场景及对应的脚本创建各自的文件夹会比较好。而这是一个相"
"对小型的游戏，你可以把场景和脚本放在项目的根文件夹里，根文件夹用 ``res://`` "
"表示。可以在左下角的“文件系统”面板中查看项目文件夹："

msgid ""
"With the project in place, we're ready to design the player scene in the "
"next lesson."
msgstr "项目准备就绪后，我们已准备好在下一课中设计玩家场景。"

msgid "Translation status"
msgstr "翻译状态"
