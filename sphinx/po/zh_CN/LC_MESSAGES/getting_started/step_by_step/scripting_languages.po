# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Scripting languages"
msgstr "脚本语言"

msgid ""
"This lesson will give you an overview of the available scripting languages "
"in Godot. You will learn the pros and cons of each option. In the next part, "
"you will write your first script using GDScript."
msgstr ""
"本课将向你介绍 Godot 中可用的脚本语言。你将了解每个选项的优点和缺点。在下一部"
"分，你将使用 GDScript 编写你的第一个脚本。"

msgid ""
"**Scripts attach to a node and extend its behavior**. This means that "
"scripts inherit all functions and properties of the node they attach to."
msgstr ""
"**脚本附加到节点并扩展其行为**\\ 。这意味着脚本继承所附加节点的全部函数和属"
"性。"

msgid ""
"For example, take a game where a Camera2D node follows a ship. The Camera2D "
"node follows its parent by default. Imagine you want the camera to shake "
"when the player takes damage. As this feature is not built into Godot, you "
"would attach a script to the Camera2D node and code the shake."
msgstr ""
"例如，以一个 Camera2D 节点跟随一艘船的游戏为例。Camera2D 节点默认跟随其父节"
"点。想象一下，当玩家受到伤害时，您希望相机震动。由于此功能未内置在 Godot 中，"
"因此您可以在该 Camera2D 节点上附加脚本并对抖动进行编程。"

msgid "Available scripting languages"
msgstr "可用的脚本语言"

msgid ""
"Godot offers **five gameplay programming languages**: GDScript, C#, "
"VisualScript, and, via its GDNative technology, C and C++. There are more :"
"ref:`community-supported languages "
"<doc_what_is_gdnative_third_party_bindings>`, but these are the official "
"ones."
msgstr ""
"Godot 提供了\\ **五种游戏编程语言**\\ ：GDScript、C#、VisualScript 以及通过 "
"GDNative 技术提供的 C++ 和 C。还有更多\\ :ref:`社区支持的语言"
"<doc_what_is_gdnative_third_party_bindings>`\\ ，但这些是官方语言。"

msgid ""
"You can use multiple languages in a single project. For instance, in a team, "
"you could code gameplay logic in GDScript as it's fast to write, let level "
"designers script quests in the graphical language VisualScript, and use C# "
"or C++ to implement complex algorithms and maximize their performance. Or "
"you can write everything in GDScript or C#. It's your call."
msgstr ""
"您可以在一个项目中使用多种语言。例如，在团队中，您可以在 GDScript 中编写游戏"
"逻辑，因为它编写起来很快，让关卡设计师使用图形语言 VisualScript 编写任务脚"
"本，并使用 C# 或 C++ 来实现复杂的算法并最大限度地提高其性能。或者您可以使用 "
"GDScript 或 C# 编写所有内容。由您决定。"

msgid ""
"We provide this flexibility to answer the needs of different game projects "
"and developers."
msgstr "我们提供这种灵活性以满足不同游戏项目和开发者的需求。"

msgid ""
"`Godot 4.0 will remove VisualScript from core entirely. <https://godotengine."
"org/article/godot-4-will-discontinue-visual-scripting>`__ As a result, "
"creating new projects using visual scripting in Godot is not recommended. "
"Future Godot 4.x releases may have VisualScript reimplemented as an "
"extension."
msgstr ""
"`Godot 4.0 将会把 VisualScript 从核心中完全移除。 <https://godotengine.org/"
"article/godot-4-will-discontinue-visual-scripting>`__\\ 因此，不推荐在新的 "
"Godot 项目中使用可视化脚本。后续的 Godot 4.x 版本可能会将 VisualScript 重新实"
"现为扩展。"

msgid ""
"While Godot 3.x will keep VisualScript supported, we recommend :ref:`trying "
"out GDScript <toc-learn-scripting-gdscript>` instead, especially if you "
"intend to migrate your project to Godot 4."
msgstr ""
"Godot 3.x 仍会支持 VisualScript，我们建议你先\\ :ref:`试一试 GDScript <toc-"
"learn-scripting-gdscript>`\\ ，尤其是你想要把项目移植到 Godot 4 的话。"

msgid "Which language should I use?"
msgstr "我应该使用哪种语言？"

msgid ""
"If you're a beginner, we recommend to **start with GDScript**. We made this "
"language specifically for Godot and the needs of game developers. It has a "
"lightweight and straightforward syntax and provides the tightest integration "
"with Godot."
msgstr ""
"如果你是初学者，我们推荐\\ **从 GDScript 入手**\\ 。这门语言是我们针对 Godot "
"和游戏开发者的需求制作的。语法简单直白，与 Godot 结合得最为紧密。"

msgid ""
"For C#, you will need an external code editor like `VSCode <https://code."
"visualstudio.com/>`_ or Visual Studio. While C# support is now mature, you "
"will find fewer learning resources for it compared to GDScript. That's why "
"we recommend C# mainly to users who already have experience with the "
"language."
msgstr ""
"使用 C# 时，你需要使用 `VSCode <https://code.visualstudio.com/>`_ 或 Visual "
"Studio 等外部编辑器。虽然对 C# 支持目前已经成熟，但相对 GDScript 而言，能找到"
"的学习资源会比较少。因此，我们主要推荐已经熟悉 C# 语言的用户去使用 C#。"

msgid "Let's look at each language's features, as well as its pros and cons."
msgstr "让我们来看看各个语言的特性，以及优缺点。"

msgid "GDScript"
msgstr "GDScript"

msgid ""
":ref:`GDScript<doc_gdscript>` is an `object-oriented <https://en.wikipedia."
"org/wiki/Object-oriented_programming>`_ and `imperative <https://en."
"wikipedia.org/wiki/Imperative_programming>`_ programming language built for "
"Godot. It's made by and for game developers to save you time coding games. "
"Its features include:"
msgstr ""
":ref:`GDScript<doc_gdscript>` 是一门\\ `面向对象 <https://zh.wikipedia.org/"
"wiki/"
"%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1>`_\\ "
"的\\ `指令式 <https://zh.wikipedia.org/wiki/"
"%E6%8C%87%E4%BB%A4%E5%BC%8F%E7%B7%A8%E7%A8%8B>`_\\ 编程语言，专为 Godot 构"
"建。是游戏开发者为游戏开发者制作的，目的是节省编写游戏代码的时间。它的特性包"
"括："

msgid "A simple syntax that leads to short files."
msgstr "简单的语法，让文件更短。"

msgid "Blazing fast compilation and loading times."
msgstr "极快的编译和加载速度。"

msgid ""
"Tight editor integration, with code completion for nodes, signals, and more "
"information from the scene it's attached to."
msgstr "紧密的编辑器集成，包括节点、信号、所附加场景更多信息的代码补全。"

msgid ""
"Built-in vector and transform types, making it efficient for heavy use of "
"linear algebra, a must for games."
msgstr "内置向量和变换类型，让海量线性代数计算更高效，游戏必备。"

msgid "Supports multiple threads as efficiently as statically typed languages."
msgstr "支持多线程，与静态类型的语言一样高效。"

msgid ""
"No `garbage collection <https://en.wikipedia.org/wiki/"
"Garbage_collection_(computer_science)>`_, as this feature eventually gets in "
"the way when creating games. The engine counts references and manages the "
"memory for you in most cases by default, but you can also control memory if "
"you need to."
msgstr ""
"没有\\ `垃圾回收 <https://zh.wikipedia.org/wiki/"
"%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)>`_\\ ，"
"因为最终会影响游戏的开发。引擎会默认进行引用计数，在大多数情况下为你管理内"
"存，但你也可以在需要时自行控制内存。"

msgid ""
"`Gradual typing <https://en.wikipedia.org/wiki/Gradual_typing>`_. Variables "
"have dynamic types by default, but you also can use type hints for strong "
"type checks."
msgstr ""
"`缓类型 <https://en.wikipedia.org/wiki/Gradual_typing>`_\\ 。变量默认是动态类"
"型，但你也可以使用类型提示来做强类型检查。"

msgid ""
"GDScript looks like Python as you structure your code blocks using "
"indentations, but it doesn't work the same way in practice. It's inspired by "
"multiple languages, including Squirrel, Lua, and Python."
msgstr ""
"因为 GDScript 用缩进来做代码块的结构化，所以它看上去像 Python，不过实际上这两"
"者的原理截然不同。GDScript 是从 Squirrel、Lua、Python 等诸多语言中得到的灵"
"感。"

msgid "Why don't we use Python or Lua directly?"
msgstr "我们为什么不直接使用 Python 或者 Lua？"

msgid ""
"Years ago, Godot used Python, then Lua. Both languages' integration took a "
"lot of work and had severe limitations. For example, threading support was a "
"big challenge with Python."
msgstr ""
"很多年前，Godot 使用过 Python，后来也用过 Lua。这两个语言的集成花费了大量精"
"力，并且还存在局限性。例如，在 Python 中做多线程支持是非常大的挑战。"

msgid ""
"Developing a dedicated language doesn't take us more work and we can tailor "
"it to game developers' needs. We're now working on performance optimizations "
"and features that would've been difficult to offer with third-party "
"languages."
msgstr ""
"开发专属语言不会花费更多的时间，我们还能针对游戏开发者的需求去量体裁衣。我们"
"现在在做性能优化工作，以及用第三方语言难以实现的特性。"

msgid ".NET / C#"
msgstr ".NET / C#"

msgid ""
"As Microsoft's `C# <https://en.wikipedia.org/wiki/"
"C_Sharp_(programming_language)>`_ is a favorite amongst game developers, we "
"officially support it. C# is a mature and flexible language with tons of "
"libraries written for it. We could add support for it thanks to a generous "
"donation from Microsoft."
msgstr ""
"因为微软的 `C# <https://en.wikipedia.org/wiki/"
"C_Sharp_(programming_language)>`_ 深受游戏开发者的喜爱，我们对其有官方支持。"
"C# 是一门成熟灵活的语言，拥有大量的库。感谢微软大方的捐助，才使得对其的支持成"
"为可能。"

msgid ""
"C# offers a good tradeoff between performance and ease of use, although you "
"should be aware of its garbage collector."
msgstr "C# 在性能和易用性之间提供了不错的权衡，不过你应该了解它的垃圾回收器。"

msgid ""
"You must use the Mono edition of the Godot editor to script in C#. You can "
"download it on the Godot website's `download <https://godotengine.org/"
"download/>`_ page."
msgstr ""
"你必须使用 Mono 版本的 Godot 编辑器才能在项目中使用 C# 进行编程。你可以在 "
"Godot 网站的\\ `下载 <https://godotengine.org/download/>`_\\ 页面进行下载。"

msgid ""
"Since Godot uses the `Mono <https://mono-project.com>`_ .NET runtime, in "
"theory, you can use any third-party .NET library or framework in Godot, as "
"well as any Common Language Infrastructure-compliant programming language, "
"such as F#, Boo, or ClojureCLR. However, C# is the only officially "
"supported .NET option."
msgstr ""
"由于 Godot 使用 `Mono <https://mono-project.com>`_ .NET 运行时，因此理论上任"
"何第三方 .NET 库或框架都可用于编写 Godot 脚本，包括任何符合通用语言标准架构的"
"语言，如 F#、Boo、ClojureCLR。然而，C# 是唯一官方支持的 .NET 选项。"

msgid ""
"GDScript code itself doesn't execute as fast as compiled C# or C++. However, "
"most script code calls functions written with fast algorithms in C++ code "
"inside the engine. In many cases, writing gameplay logic in GDScript, C#, or "
"C++ won't have a significant impact on performance."
msgstr ""
"GDScript 代码本身的执行是没有 C# 或 C++ 等编译型语言快的。然而，大多数脚本代"
"码都是在调用引擎中的 C++ 代码快速算法。在许多情况下，使用 GDScript、C#、C++ "
"编写游戏逻辑并不会有显著的性能区别。"

msgid "VisualScript"
msgstr "VisualScript"

msgid ""
":ref:`Visual Scripting<doc_what_is_visual_script>` is a graph-based visual "
"programming language where you connect blocks. It can be a great tool for "
"non-programmers like game designers and artists."
msgstr ""
":ref:`Visual Scripting<doc_what_is_visual_script>` 是一种基于图的可视化编程语"
"言，你可以将其中的代码块连接起来以进行编程。对于非程序员（如游戏设计人员和艺"
"术家）来说，它可能是一个很好的工具。"

msgid ""
"You can use other languages to create custom blocks that are specific to "
"your game, for example, to script AIs, quests, or dialogues. That's where "
"the strength of VisualScript lies."
msgstr ""
"你可以使用其他语言来创建特定于你的游戏的自定义块。例如，为 AI、任务或对话编写"
"脚本。这就是 VisualScript 的优势所在。"

msgid ""
"While it provides all the basic building blocks you need to code complete "
"games, we do not recommend to use VisualScript this way. Programming "
"everything with it is slow compared to using other programming languages."
msgstr ""
"虽然它提供了编写完整游戏代码所需的所有基本构建块，但我们不建议以这种方式使用 "
"VisualScript。与使用其他编程语言相比，用它来编程所有内容很慢。"

msgid ""
"For more information, see :ref:`Getting started with VisualScript "
"<doc_getting_started_visual_script>`."
msgstr ""
"更多信息请参阅 :ref:`VisualScript 入门 "
"<doc_getting_started_visual_script>`\\ 。"

msgid "C and C++ via GDNative"
msgstr "通过 GDNative 使用 C 和 C++"

msgid ""
"GDNative allows you to write game code in C or C++ without needing to "
"recompile or even restart Godot."
msgstr "GDNative 允许使用 C 或 C++ 编写游戏代码，无需重新编译或重启 Godot。"

msgid ""
"You can use any version of the language or mix compiler brands and versions "
"for the generated shared libraries, thanks to our use of an internal C API "
"Bridge."
msgstr ""
"我们在内部使用 C API 桥接，得益于此，你可以使用任意版本的语言，也可以混用由不"
"同厂牌、不同版本的编译器所生成的共享库。"

msgid ""
"GDNative is the best choice for performance. You don't need to use it "
"throughout an entire game, as you can write other parts in GDScript, C#, or "
"VisualScript."
msgstr ""
"GDNative 是性能上的最佳选择。它不需要在整个游戏中都使用，因为其他部分你可以"
"用 GDScript、C#、VisualScript 编写。"

msgid ""
"When working with GDNative, the available types, functions, and properties "
"closely resemble Godot's actual C++ API."
msgstr ""
"当使用 GDNative 时，可用的类型、函数和属性与 Godot 的实际 C++ API 非常相似。"

msgid "Summary"
msgstr "总结"

msgid ""
"Scripts are files containing code that you attach to a node to extend its "
"functionality."
msgstr "脚本是包含附加到节点以扩展其功能的代码文件。"

msgid ""
"Godot supports five official scripting languages, offering you flexibility "
"between performance and ease of use."
msgstr "Godot支持五种官方脚本语言，在性能和易用性之间为你提供灵活性。"

msgid ""
"You can mix languages, for instance, to implement demanding algorithms with "
"C or C++ and write most of the game logic with GDScript or C#."
msgstr ""
"你可以混合语言，例如，用 C 或 C++ 实现高要求的算法，用 GDScript 或 C# 编写大"
"部分的游戏逻辑。"

msgid "Translation status"
msgstr "翻译状态"
