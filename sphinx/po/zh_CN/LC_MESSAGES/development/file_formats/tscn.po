# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "TSCN file format"
msgstr "TSCN 文件格式"

msgid ""
"The TSCN (text scene) file format represents a single scene tree inside "
"Godot. Unlike binary SCN files, TSCN files have the advantage of being "
"mostly human-readable and easy for version control systems to manage."
msgstr ""
"TSCN（文本场景）文件格式表示 Godot 内部的单个场景树。与二进制的 SCN 文件不"
"同，TSCN 具有易于人类阅读、便于使用版本控制系统进行管理的优点。"

msgid ""
"The ESCN (exported scene) file format is identical to the TSCN file format, "
"but is used to indicate to Godot that the file has been exported from "
"another program and should not be edited by the user from within Godot. "
"Unlike SCN and TSCN files, during import, ESCN files are compiled to binary "
"SCN files stored inside the ``.import/`` folder. This reduces the data size "
"and speeds up loading, as binary formats are faster to load compared to text-"
"based formats."
msgstr ""
"ESCN（导出场景）文件格式与 TSCN 文件格式相同，但是用于向 Godot 表明该文件是从"
"另一个程序导出的，不应由用户在 Godot 内部进行编辑。与 SCN 和 TSCN 文件不同，"
"导入时，ESCN 文件会被编译为二进制的 SCN 文件存储到 ``.import/`` 文件夹中。这"
"样可以减小数据体积、提高加载速度，因为相较于基于文本的格式，二进制格式的加载"
"更快。"

msgid ""
"For those looking for a complete description, the parsing is handled in the "
"file `resource_format_text.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/resources/resource_format_text.cpp>`_ in the "
"``ResourceFormatLoaderText`` class."
msgstr ""
"如果想要完整的描述，对这些文件格式的解析是在 `resource_format_text.cpp "
"<https://github.com/godotengine/godot/blob/master/scene/resources/"
"resource_format_text.cpp>`_ 的 ``ResourceFormatLoaderText`` 类中进行处理的。"

msgid "File structure"
msgstr "文件结构"

msgid "There are five main sections inside the TSCN file:"
msgstr "TSCN 文件分为五个主要部分："

msgid "File Descriptor"
msgstr "文件描述符"

msgid "External resources"
msgstr "外部资源"

msgid "Internal resources"
msgstr "内部资源"

msgid "Nodes"
msgstr "节点"

msgid "Connections"
msgstr "连接"

msgid ""
"The file descriptor looks like ``[gd_scene load_steps=3 format=2]`` and "
"should be the first entry in the file. The ``load_steps`` parameter is equal "
"to the total amount of resources (internal and external) plus one (for the "
"file itself). If the file has no resources, ``load_steps`` is omitted. The "
"engine will still load the file correctly if ``load_steps`` is incorrect, "
"but this will affect loading bars and any other piece of code relying on "
"that value."
msgstr ""
"类似 ``[gd_scene load_steps=3 format=2]`` 的就是文件描述符，应该是文件的第一"
"条记录。这里的 ``load_steps`` 参数等于资源总数（包括内部和外部）加一（文件本"
"身）。文件中不包含资源时 ``load_steps`` 会被省略。即便 ``load_steps`` 不正"
"确，引擎仍然能够正确加载文件，但是加载进度条和其它一些使用该值的代码会受影"
"响。"

msgid ""
"These sections should appear in order, but it can be hard to distinguish "
"them. The only difference between them is the first element in the heading "
"for all of the items in the section. For example, the heading of all "
"external resources should start with ``[ext_resource .....]``."
msgstr ""
"这些部分应按顺序显示, 但是可能很难区分它们. 它们之间的唯一区别是该部分中所有"
"项目的标题中的第一个元素. 例如, 所有外部资源的标题都应以 "
"``[ext_resource .....]`` 开头."

msgid ""
"A TSCN file may contain single-line comments starting with a semicolon (``;"
"``). However, comments will be discarded when saving the file using the "
"Godot editor."
msgstr ""
"TSCN文件可能包含以分号(``;``)开头的单行注释. 但是, 使用Godot编辑器保存文件"
"时, 注释将被丢弃."

msgid "Entries inside the file"
msgstr "文件中的条目"

msgid ""
"A heading looks like ``[<resource_type> key=value key=value key=value ...]`` "
"where resource_type is one of:"
msgstr ""
"标题看起来像 ``[<resource_type> key=value key=value key=value ...]`` , 其中 "
"``resource_type`` 是以下之一:"

msgid "``ext_resource``"
msgstr "``ext_resource``"

msgid "``sub_resource``"
msgstr "``sub_resource``"

msgid "``node``"
msgstr "``node``"

msgid "``connection``"
msgstr "``connection``"

msgid ""
"Below every heading comes zero or more ``key = value`` pairs. The values can "
"be complex datatypes such as Arrays, Transforms, Colors, and so on. For "
"example, a spatial node looks like:"
msgstr ""
"在每个标题下方都有零个或多个 ``key = value`` 对. 值可以是复杂的数据类型, 例如"
"Arrays, Transforms, Colors等. 例如, 一个Spatial节点如下所示:"

msgid "The scene tree"
msgstr "场景树"

msgid ""
"The scene tree is made up of… nodes! The heading of each node consists of "
"its name, parent and (most of the time) a type. For example ``[node "
"type=\"Camera\" name=\"PlayerCamera\" parent=\"Player/Head\"]``"
msgstr ""
"场景树由……节点组成！每个节点的标题由其名称, 父级和(大多数情况下)一种类型组"
"成. 例如 ``[node type=\"Camera\" name=\"PlayerCamera\" parent=\"Player/"
"Head\"]``"

msgid "Other valid keywords include:"
msgstr "其他有效的关键字包括:"

msgid "``instance``"
msgstr "``instance``"

msgid "``instance_placeholder``"
msgstr "``instance_placeholder``"

msgid "``owner``"
msgstr "``owner``"

msgid ""
"``index`` (sets the order of appearance in the tree. If absent, inherited "
"nodes will take precedence over plain ones)"
msgstr ""
"``index``\\ （设置在树中的出现顺序。不存在的话，继承节点优先于普通节点）"

msgid "``groups``"
msgstr "``groups``"

msgid ""
"The first node in the file, which is also the scene root, must not have a "
"``parent=Path/To/Node`` entry in its heading. All scene files should have "
"exactly *one* scene root. If it doesn't, Godot will fail to import the file. "
"The parent path of other nodes should be absolute, but shouldn't contain the "
"scene root's name. If the node is a direct child of the scene root, the path "
"should be ``\".\"``. Here is an example scene tree (but without any node "
"content):"
msgstr ""
"文件中的第一个节点(也是场景根)的标题中不得包含 ``parent=Path/To/Node`` 条目. "
"所有场景文件应完全具有 *一个* 场景根. 否则,Godot将无法导入文件. 其他节点的父"
"路径应为绝对路径, 但不应包含场景根名称. 如果节点是场景根的直接子代, 则路径应"
"为 ``\".\"``. 这是一个示例场景树(但没有任何节点内容):"

msgid ""
"Similar to the internal resource, the document for each node is currently "
"incomplete. Fortunately, it is easy to find out because you can simply save "
"a file with that node in it. Some example nodes are:"
msgstr ""
"与内部资源类似, 每个节点的文档当前不完整. 幸运的是, 可以很容易地找到, 因为您"
"可以简单地保存文件并将该节点包含其中. 一些示例节点是:"

msgid "NodePath"
msgstr "节点路径"

msgid ""
"A tree structure is not enough to represent the whole scene. Godot uses a "
"``NodePath(Path/To/Node)`` structure to refer to another node or attribute "
"of the node anywhere in the scene tree. For instance, MeshInstance uses "
"``NodePath()`` to point to its skeleton. Likewise, Animation tracks use "
"``NodePath()`` to point to node properties to animate."
msgstr ""
"树形结构不足以代表整个场景。Godot 使用 ``NodePath(Path/To/Node)`` 结构来引用"
"该节点的属性或场景树中任何位置的另一个节点。例如，MeshInstance 使用 "
"``NodePath()`` 指向其骨架。同样，动画轨迹使用 ``NodePath()`` 指向要动画的节点"
"属性。"

msgid "Skeleton"
msgstr "骨架"

msgid ""
"The Skeleton node inherits the Spatial node, but also may have a list of "
"bones described in key-value pairs in the format ``bones/Id/"
"Attribute=Value``. The bone attributes consist of:"
msgstr ""
"Skeleton 节点继承了 Spatial 节点，但也可能具有以 ``bones/Id/"
"Attribute=Value`` 格式在键值对中描述的骨骼列表。骨骼的属性有："

msgid "``name``"
msgstr "``name``"

msgid "``parent``"
msgstr "``parent``"

msgid "``rest``"
msgstr "``rest``"

msgid "``pose``"
msgstr "``pose``"

msgid "``enabled``"
msgstr "``enabled``"

msgid "``bound_children``"
msgstr "``bound_children``"

msgid "``name`` must be the first attribute of each bone."
msgstr "``name`` 必须是每个骨骼的第一个属性."

msgid ""
"``parent`` is the index of parent bone in the bone list, with parent index, "
"the bone list is built to a bone tree."
msgstr ""
"``parent`` 是骨骼列表中父骨骼的索引, 使用父索引, 骨骼列表将构建到骨骼树中."

msgid "``rest`` is the transform matrix of bone in its \"resting\" position."
msgstr "``rest`` 是处于其“放松”位置的骨骼的变换矩阵。"

msgid "``pose`` is the pose matrix; use ``rest`` as the basis."
msgstr "``pose`` 是姿势矩阵；以 ``rest`` 为基础。"

msgid ""
"``bound_children`` is a list of ``NodePath()`` which point to "
"BoneAttachments belonging to this bone."
msgstr ""
"``bound_children`` 是 ``NodePath()`` 的列表，该列表指向该骨骼的 "
"BoneAttachment。"

msgid "Here's an example of a skeleton node with two bones:"
msgstr "具有两个骨骼的骨架节点的示例："

msgid "BoneAttachment"
msgstr "BoneAttachment"

msgid ""
"BoneAttachment node is an intermediate node to describe some node being "
"parented to a single bone in a Skeleton node. The BoneAttachment has a "
"``bone_name=NameOfBone`` attribute, and the corresponding bone being the "
"parent has the BoneAttachment node in its ``bound_children`` list."
msgstr ""
"BoneAttachment 节点是一个中间节点，用于描述在 Skeleton 节点中以单根骨骼为父节"
"点的某些节点。BoneAttachment 具有 ``bone_name=NameOfBone`` 属性，并且作为父级"
"的相应骨骼在其 ``bound_children`` 列表中具有 BoneAttachment 节点。"

msgid "An example of one MeshInstance parented to a bone in Skeleton:"
msgstr "在以 Skeleton 中的某根骨骼为父级的 MeshInstance 的示例："

msgid "AnimationPlayer"
msgstr "AnimationPlayer"

msgid ""
"AnimationPlayer works as an animation library. It stores animations listed "
"in the format ``anim/Name=SubResource(ResourceId)``; each line refers to an "
"Animation resource. All the animation resources use the root node of "
"AnimationPlayer. The root node is stored as ``root_node=NodePath(Path/To/"
"Node)``."
msgstr ""
"AnimationPlayer用作动画库. 它以 ``anim/Name=SubResource(ResourceId)`` 格式存"
"储动画；每行都引用一个Animation资源. 所有动画资源都使用AnimationPlayer的根节"
"点. 根节点存储为 ``root_node=NodePath(Path/To/Node)``."

msgid "Resources"
msgstr "资源"

msgid ""
"Resources are components that make up the nodes. For example, a MeshInstance "
"node will have an accompanying ArrayMesh resource. The ArrayMesh resource "
"may be either internal or external to the TSCN file."
msgstr ""
"资源是组成节点的组件. 例如,MeshInstance节点将具有附带的ArrayMesh资源. "
"ArrayMesh资源可以是TSCN文件的内部或外部资源."

msgid ""
"References to the resources are handled by ``id`` numbers in the resource's "
"heading. External resources and internal resources are referred to with "
"``ExtResource(id)`` and ``SubResource(id)``, respectively. Because there "
"have different methods to refer to internal and external resources, you can "
"have the same ID for both an internal and external resource."
msgstr ""
"对资源的引用由资源标题中的 ``id`` 数字处理. 外部资源和内部资源分别以 "
"``ExtResource(id)`` 和 ``SubResource(id)`` 引用. 因为引用内部和外部资源的方法"
"不同, 所以内部和外部资源的ID可以相同."

msgid ""
"For example, to refer to the resource ``[ext_resource id=3 "
"type=\"PackedScene\" path=....]``, you would use ``ExtResource(3)``."
msgstr ""
"例如, 要引用资源 ``[ext_resource id=3 type=\"PackedScene\" path=....]``, 则应"
"使用 ``ExtResource(3)``."

msgid ""
"External resources are links to resources not contained within the TSCN file "
"itself. An external resource consists of a path, a type and an ID."
msgstr ""
"外部资源是指向TSCN文件本身未包含的资源的链接. 外部资源由路径, 类型和ID组成."

msgid ""
"Godot always generates absolute paths relative to the resource directory and "
"thus prefixed with ``res://``, but paths relative to the TSCN file's "
"location are also valid."
msgstr ""
"Godot总是生成相对于资源目录的绝对路径, 因此以 ``res://`` 为前缀, 但是相对于"
"TSCN文件位置的路径也有效."

msgid "Some example external resources are:"
msgstr "一些示例外部资源是:"

msgid ""
"Like TSCN files, a TRES file may contain single-line comments starting with "
"a semicolon (``;``). However, comments will be discarded when saving the "
"resource using the Godot editor."
msgstr ""
"像TSCN文件一样,TRES文件可能包含以分号(``;``)开头的单行注释. 但是, 使用Godot编"
"辑器保存资源时, 注释将被丢弃."

msgid ""
"A TSCN file can contain meshes, materials and other data. These are "
"contained in the *internal resources* section of the file. The heading for "
"an internal resource looks similar to those of external resources, except "
"that it doesn't have a path. Internal resources also have ``key=value`` "
"pairs under each heading. For example, a capsule collision shape looks like:"
msgstr ""
"TSCN文件可以包含网格, 材质和其他数据. 这些包含在文件的 *内部资源* 部分中. 内"
"部资源的标题与外部资源的标题相似, 不同之处在于它没有路径. 内部资源在每个标题"
"下还具有 ``键=值`` 对. 例如, 胶囊碰撞形状如下所示:"

msgid ""
"Some internal resources contain links to other internal resources (such as a "
"mesh having a material). In this case, the referring resource must appear "
"*before* the reference to it. This means that order matters in the file's "
"internal resources section."
msgstr ""
"一些内部资源包含到其他内部资源的链接(例如具有材质的网格). 在这种情况下, 引用"
"的资源必须在对其的引用 *之前* 出现. 这意味着顺序在文件的内部资源部分中很重要."

msgid ""
"Unfortunately, documentation on the formats for these subresources isn't "
"complete. Some examples can be found by inspecting saved resource files, but "
"others can only be found by looking through Godot's source."
msgstr ""
"遗憾的是, 关于这些子资源的格式的文档并不完整, 通过检查已保存的资源文件可以找"
"到一些示例, 但是只有通过查看Godot的源码才能找到其他示例."

msgid "ArrayMesh"
msgstr "ArrayMesh"

msgid ""
"ArrayMesh consists of several surfaces, each in the format "
"``surface\\Index={}``. Each surface is a set of vertices and a material."
msgstr ""
"ArrayMesh由多个表面组成, 每个表面的格式为 ``surface\\Index={}``. 每个表面都是"
"一组顶点和一种材质."

msgid "TSCN files support two surface formats:"
msgstr "TSCN文件支持两种表面格式:"

msgid "For the old format, each surface has three essential keys:"
msgstr "对于旧格式, 每个表面都有三个基本键:"

msgid "``primitive``"
msgstr "``primitive``"

msgid "``arrays``"
msgstr "``arrays``"

msgid "``morph_arrays``"
msgstr "``morph_arrays``"

msgid ""
"``primitive`` is an enumerate variable, ``primitive=4`` which is "
"``PRIMITIVE_TRIANGLES`` is frequently used."
msgstr ""
"``primitive`` 是一个枚举变量, ``primitive=4`` 是被频繁使用的 "
"``PRIMITIVE_TRIANGLES``."

msgid "``arrays`` is a two-dimensional array, it contains:"
msgstr "``arrays`` 是一个二维数组，它包含："

msgid "Vertex positions array"
msgstr "顶点位置数组"

msgid "Normals array"
msgstr "法线数组"

msgid "Tangents array"
msgstr "切线数组"

msgid "Vertex colors array"
msgstr "顶点颜色数组"

msgid "UV array 1"
msgstr "UV数组1"

msgid "UV array 2"
msgstr "UV数组2"

msgid "Bone indexes array"
msgstr "骨骼索引数组"

msgid "Bone weights array"
msgstr "骨骼权重数组"

msgid "Vertex indexes array"
msgstr "顶点索引数组"

msgid ""
"``morph_arrays`` is an array of morphs. Each morph is exactly an ``arrays`` "
"without the vertex indexes array."
msgstr ""
"``morph_arrays`` 是一个morph数组. 每个morph恰好一个没有顶点索引数组的 "
"``arrays``."

msgid "An example of ArrayMesh:"
msgstr "ArrayMesh的一个示例:"

msgid "Animation"
msgstr "动画"

msgid ""
"An animation resource consists of tracks. Besides, it has ``length``, "
"``loop`` and ``step`` applied to all the tracks."
msgstr ""
"动画资源由轨道组成. 此外, 它还有 ``length``, ``loop`` 和 ``step`` 应用于所有"
"轨道."

msgid "``length`` and ``step`` are both durations in seconds."
msgstr "``length`` 和 ``step`` 都是以秒为单位的持续时间."

msgid ""
"Each track is described by a list of key-value pairs in the format ``tracks/"
"Id/Attribute``. Each track includes:"
msgstr ""
"每个轨道由格式为 ``tracks/Id/Attribute`` 的键值对列表描述. 每个轨道包括:"

msgid "``type``"
msgstr "``type``"

msgid "``path``"
msgstr "``path``"

msgid "``interp``"
msgstr "``interp``"

msgid "``keys``"
msgstr "``keys``"

msgid "``loop_wrap``"
msgstr "``loop_wrap``"

msgid "``imported``"
msgstr "``imported``"

msgid ""
"The ``type`` must be the first attribute of each track. The value of "
"``type`` can be:"
msgstr "``type`` 必须是每个轨道的第一个属性. ``type`` 的值可以是:"

msgid "``transform``"
msgstr "``transform``"

msgid "``value``"
msgstr "``value``"

msgid "``method``"
msgstr "``method``"

msgid ""
"The ``path`` has the format ``NodePath(Path/To/Node:attribute)``. It's the "
"path to the animated node or attribute, relative to the root node defined in "
"the AnimationPlayer."
msgstr ""
"``path`` 的格式为 ``NodePath(Path/To/Node:attribute)``. 它是动画化节点或属性"
"的路径, 相对于AnimationPlayer中定义的根节点."

msgid ""
"The ``interp`` is the method to interpolate frames from the keyframes. It is "
"an enum variable with one of the following values:"
msgstr "``interp`` 是对关键帧进行插值的方法. 它是一个枚举变量, 有以下值之一:"

msgid "``0`` (constant)"
msgstr "``0`` (常数)"

msgid "``1`` (linear)"
msgstr "``1`` (线性)"

msgid "``2`` (cubic)"
msgstr "``2`` (立方)"

msgid ""
"The ``keys`` correspond to the keyframes. It appears as a "
"``PoolRealArray()``, but may have a different structure for tracks with "
"different types."
msgstr ""
"``keys`` 对应于关键帧. 它显示为 ``PoolRealArray()``, 但对于具有不同类型的轨道"
"可能具有不同的结构."

msgid ""
"A Transform track uses every 12 real numbers in the ``keys`` to describe a "
"keyframe. The first number is the timestamp. The second number is the "
"transition followed by a 3-number translation vector, followed by a 4-number "
"rotation quaternion (X, Y, Z, W) and finally a 3-number scale vector. The "
"default transition in a Transform track is 1.0."
msgstr ""
"变换轨道使用 ``keys`` 中的每 12 个实数来描述关键帧。第一个数字是时间戳，第二"
"个数字是转换，后跟的三个数字是平移向量，再跟的四数字是旋转四元数（X、Y、Z、"
"W），最后是三数字缩放向量。变换轨道中的默认转换为 1.0。"

msgid "Translation status"
msgstr "翻译状态"
