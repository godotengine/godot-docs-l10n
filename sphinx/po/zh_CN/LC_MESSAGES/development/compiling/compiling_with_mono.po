# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling with Mono"
msgstr "使用 Mono 编译"

msgid "Requirements"
msgstr "需求"

msgid "Mono 6.12.0 or greater"
msgstr "Mono 6.12.0或更高版本"

msgid "MSBuild"
msgstr "MSBuild"

msgid "NuGet"
msgstr "NuGet"

msgid "**On Linux/macOS only:** pkg-config"
msgstr "**仅在Linux/macOS :** pkg-config"

msgid ""
"You may need to import necessary certificates for NuGet to perform HTTPS "
"requests."
msgstr "您可能需要导入必要的证书, 以使NuGet执行HTTPS请求."

msgid ""
"The recommended method is to use **curl**'s CA (Certificate Authorities) "
"certificate bundle."
msgstr "推荐的方法是使用 **curl** 的 CA（证书颁发机构）证书绑定。"

msgid ""
"Run the following commands to download and import it. On Windows, you can "
"run it from the Mono command line prompt (or the regular prompt if you added "
"Mono's ``bin`` directory to your ``PATH`` environment variable)::"
msgstr ""
"运行以下命令来下载和导入它。在 Windows 上，你可以在 Mono 命令行提示符下运行它"
"（如果你将 Mono 的 ``bin`` 目录添加到你的 ``PATH`` 环境变量中，则在普通提示符"
"下运行）： ::"

msgid ""
"Alternatively, you can use the following command, though it's deprecated and "
"may not work correctly::"
msgstr "或者，您可以使用以下命令，尽管该命令被弃用，可能无法正常工作： ::"

msgid "Environment variables"
msgstr "环境变量"

msgid ""
"By default, SCons will try to find Mono in the Windows Registry on Windows "
"or via ``pkg-config`` on other platforms. You can specify a different "
"installation directory by passing the ``mono_prefix`` command-line option to "
"SCons; e.g. ``scons [...] mono_prefix=%ProgramFiles%/Mono``."
msgstr ""
"默认情况下,SCons会尝试在Windows上的Windows注册表中或通过其他平台上的 ``pkg-"
"config`` 找到Mono. 您可以通过将 ``mono_prefix`` 命令行选项传递给SCons来指定其"
"他安装目录. 如, ``scons [...] mono_prefix=%ProgramFiles%/Mono``."

msgid ""
"This is the directory that contains the subdirectories ``include`` and "
"``lib``."
msgstr "这是包含子目录 ``include`` 和 ``lib`` 的目录."

msgid "Enable the Mono module"
msgstr "启用 Mono 模块"

msgid ""
"By default, the Mono module is disabled when building. To enable it, add the "
"option ``module_mono_enabled=yes`` to the SCons command line."
msgstr ""
"默认情况下, 构建时禁用Mono模块. 要启用它, 请将选项 "
"``module_mono_enabled=yes`` 添加到SCons命令行."

msgid "Generate the glue"
msgstr "生成胶水代码"

msgid ""
"Glue sources are the wrapper functions that will be called by managed "
"methods. These source files must be generated before building your final "
"binaries. In order to generate them, first, you must build a temporary Godot "
"binary with the options ``tools=yes`` and ``mono_glue=no``::"
msgstr ""
"胶水源码是包装函数，将被管理的方法调用。必须在构建最终二进制文件之前生成这些"
"源文件。要生成它们，首先，您必须使用选项 ``tools=yes`` 和 ``mono_glue=no`` 构"
"建一个临时的 Godot 二进制文件： ::"

msgid ""
"After the build finishes, you need to run the compiled executable with the "
"parameter ``--generate-mono-glue`` followed by the path to an output "
"directory. This path must be ``modules/mono/glue`` in the Godot directory::"
msgstr ""
"构建完成后，您需要运行带有参数 ``--generate-mono-glue`` 的编译后的可执行文"
"件，后跟输出目录的路径。在 Godot 目录中，此路径必须是 ``modules/mono/"
"glue``\\ ： ::"

msgid ""
"This command will tell Godot to generate the file ``modules/mono/glue/"
"mono_glue.gen.cpp``, the C# solution for the Godot API at ``modules/mono/"
"glue/GodotSharp/GodotSharp/Generated``, and the C# solution for the editor "
"tools at ``modules/mono/glue/GodotSharp/GodotSharpEditor/Generated``. Once "
"these files are generated, you can build Godot for all the desired targets "
"without having to repeat this process."
msgstr ""
"这个命令会让 Godot 生成 ``modules/mono/glue/mono_glue.gen.cpp`` 文件、在 "
"``modules/mono/glue/GodotSharp/GodotSharp/Generated`` 生成 Godot API 的 C# 解"
"决方案、并在 ``modules/mono/glue/GodotSharp/GodotSharpEditor/Generated`` 生成"
"编辑器工具的 C# 解决方案。这些文件生成后，为任何所需的目标构建 Godot 都是无需"
"重复这一过程的。"

msgid ""
"``<godot_binary>`` refers to the tools binary you compiled above with the "
"Mono module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.tools.<bits>."
"mono``, e.g. ``bin/godot.x11.tools.64.mono`` or ``bin/godot.windows.tools.64."
"mono.exe``. Be especially aware of the **.mono** suffix! If you've "
"previously compiled Godot without Mono support, you might have similarly "
"named binaries without this suffix. These binaries can't be used to generate "
"the Mono glue."
msgstr ""
"``<godot_binary>`` 是指你在上面编译时启用Mono模块的工具可执行文件. 它的确切名"
"称将根据你的系统和配置而不同, 但应该是 ``bin/godot.<platform>.tools.<bits>."
"mono`` 的形式, 例如 ``bin/godot.x11.tools.64.mono`` 或 ``bin/godot.windows."
"tools.64.mono.exe`` . 要特别注意 **.mono** 的后缀!如果你以前编译的Godot不支持"
"Mono, 你可能会有类似的没有这个后缀的二进制. 这些二进制文件不能用来生成Mono胶"
"水."

msgid "Notes"
msgstr "注意"

msgid ""
"**Do not build your final binaries with** ``mono_glue=no``. This disables C# "
"scripting. This option must be used only for the temporary binary that will "
"generate the glue. Godot will print a warning at startup if it was built "
"without the glue sources."
msgstr ""
"**不要使用** ``mono_glue=no`` **来构建您的发布版 Godot** . 此选项会禁用C#脚"
"本, 它仅用于控制生成胶水代码的临时二进制文件. 如果Godot是在没有胶水源码的情况"
"下构建的, 它将在启动时打印一条警告."

msgid ""
"The glue sources must be regenerated every time the ClassDB-registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameters of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""
"每次ClassDB注册的API更改时, 都必须重新生成胶水源码. 即, 例如, 当将新方法注册"
"到脚本API时, 或该方法的参数之一发生更改时. 如果ClassDB和胶水源码之间的API不匹"
"配,Godot将在启动时打印一条错误."

msgid "Rebuild with Mono glue"
msgstr "用 Mono 胶水代码重新构建"

msgid ""
"Once you have generated the Mono glue, you can build the final binary with "
"``mono_glue=yes``. This is the default value for ``mono_glue``, so you can "
"also omit it. To build a Mono-enabled editor::"
msgstr ""
"一旦您生成了 Mono 胶水代码，就可以使用 ``mono_glue=yes`` 构建最终的二进制文"
"件。这是 ``mono_glue`` 的默认值，所以您也可以将其省略。您可以构建启用 Mono 的"
"编辑器： ::"

msgid "And Mono-enabled export templates::"
msgstr "启用 Mono 的导出模板： ::"

msgid ""
"If everything went well, apart from the normal output, SCons should have "
"created the following files in the ``bin`` directory:"
msgstr "如果一切正常, 除了正常的输出,SCons应该在 ``bin`` 目录中创建了以下文件:"

msgid ""
"If you're not linking the Mono runtime statically, the build script will "
"place the Mono runtime shared library (``monosgen-2.0``) next to the Godot "
"binary in the output directory. Make sure to include this library when "
"distributing Godot. When targeting Android, no extra steps are required as "
"this library is automatically copied to ``#platform/android/java/libs`` and "
"Gradle takes care of the rest."
msgstr ""
"如果您不是静态链接Mono运行时, 则构建脚本会将Mono运行时共享库"
"(``monosgen-2.0``)放置在输出目录中的Godot二进制文件旁边. 分发Godot时, 请确保"
"包括此库. 以Android为目标平台时, 不需要任何额外的步骤, 因为该库会自动复制到 "
"``#platform/android/java/libs``, 而Gradle会处理其余的工作."

msgid ""
"Unlike \"classical\" Godot builds, when building with the Mono module "
"enabled (and depending on the target platform), a data directory may be "
"created both for the editor and for export templates. This directory is "
"important for proper functioning and must be distributed together with "
"Godot. More details about this directory in :ref:`Data "
"directory<compiling_with_mono_data_directory>`."
msgstr ""
"与 \"经典\"Godot构建不同, 在启用Mono模块(取决于目标平台)的情况下构建时, 将为"
"编辑器和导出模板两者一块创建数据目录. 该目录对于正常运行很重要, 必须与Godot一"
"起分发. 有关此目录的更多详细信息, 参见 :ref:`Data directory "
"<compiling_with_mono_data_directory>` ."

msgid "Examples"
msgstr "示例"

msgid "Example (Windows)"
msgstr "示例（Windows）"

msgid "Example (X11)"
msgstr "示例（X11）"

msgid "Data directory"
msgstr "数据目录"

msgid ""
"The data directory is a dependency for Godot binaries built with the Mono "
"module enabled. It contains important files for the correct functioning of "
"Godot. It must be distributed together with the Godot executable."
msgstr ""
"数据目录是启用了Mono模块的Godot二进制文件的依赖项. 它包含对Godot正确运行的重"
"要文件. 它必须与Godot可执行文件一起分发."

msgid ""
"The information below doesn't apply for Android, iOS and WASM, as there is "
"no data directory for these platforms."
msgstr "下面的信息不适用于Android, iOS和WASM, 因为这些平台没有数据目录."

msgid "Export templates"
msgstr "导出模板"

msgid ""
"The name of the data directory for an export template differs based on the "
"configuration it was built with. The format is ``data.mono.<platform>.<bits>."
"<target>``, e.g. ``data.mono.x11.32.release_debug`` or ``data.mono."
"windows.64.release``."
msgstr ""
"导出模板的数据目录名称根据构建时的配置不同而不同. 格式是 ``data.mono."
"<platform>.<bits>.<target>`` , 例如 ``data.mono.x11.32.release_debug`` 或 "
"``data.mono.windows.64.release`` ."

msgid ""
"This directory must be placed with its original name next to the Godot "
"export templates. When exporting a project, Godot will also copy this "
"directory with the game executable but the name will be changed to "
"``data_<APPNAME>``, where ``<APPNAME>`` is the application name as specified "
"in the project setting ``application/config/name``."
msgstr ""
"必须以其原始名称将该目录放置在Godot导出模板旁边. 导出项目时,Godot还会将此目录"
"与游戏可执行文件一起复制, 但名称将更改为 ``data_<APPNAME>`` , 其中 "
"``<APPNAME>`` 是项目设置 ``application/config/name`` 中指定的应用程序名称."

msgid ""
"In the case of macOS, where the export template is compressed as a ZIP "
"archive, the contents of the data directory can be placed in the following "
"locations inside the ZIP archive:"
msgstr ""
"对于macOS, 将导出模板压缩为ZIP存档, 则数据目录的内容可以放置在ZIP存档内的以下"
"位置:"

msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/lib``"
msgstr "``bin/data.mono.<platform>.<bits>.<target>/Mono/lib``"

msgid "``/osx_template.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr "``/osx_template.app/Contents/Frameworks/GodotSharp/Mono/lib``"

msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/etc``"
msgstr "``bin/data.mono.<platform>.<bits>.<target>/Mono/etc``"

msgid "``/osx_template.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr "``/osx_template.app/Contents/Resources/GodotSharp/Mono/etc``"

msgid "Editor"
msgstr "编辑器"

msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. The contents of this directory are the following:"
msgstr "Godot编辑器的数据目录名称将始终为 ``GodotSharp``. 该目录的内容如下:"

msgid "``Api``"
msgstr "``Api``"

msgid "``Mono`` (optional)"
msgstr "``Mono`` (可选)"

msgid "``Tools``"
msgstr "``Tools``"

msgid ""
"The ``Api`` subdirectory contains the Godot API assemblies. On macOS, if the "
"Godot editor is distributed as a bundle, the contents of the data directory "
"may be placed in the following locations:"
msgstr ""
"``Api`` 子目录包含Godot API程序集. 在macOS上, 如果Godot编辑器作为捆绑分发, 则"
"数据目录的内容可能位于以下位置:"

msgid "``bin/data.mono.<platform>.<bits>.<target>/Api``"
msgstr "``bin/data.mono.<platform>.<bits>.<target>/Api``"

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Api``"
msgstr "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Api``"

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Mono/lib``"

msgid "``<bundle_name>.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr "``<bundle_name>.app/Contents/Resources/GodotSharp/Mono/etc``"

msgid "``bin/data.mono.<platform>.<bits>.<target>/Tools``"
msgstr "``bin/data.mono.<platform>.<bits>.<target>/Tools``"

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Tools``"
msgstr "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Tools``"

msgid ""
"The ``Mono`` subdirectory is optional. It will be needed when distributing "
"the editor, as issues can arise when the user-installed Mono version isn't "
"identical to the one the Godot editor was built with. Pass "
"``copy_mono_root=yes`` to SCons when building the editor in order to create "
"this folder and its contents."
msgstr ""
"``Mono`` 子目录是可选的. 分发编辑器时将需要它, 因为当用户安装的Mono版本与构建"
"Godot编辑器的版本不同时会出现问题. 生成编辑器时, 将 ``copy_mono_root=yes`` 传"
"递给SCons以便创建此文件夹及其内容."

msgid ""
"The ``Tools`` subdirectory contains tools required by the editor, like the "
"``GodotTools`` assemblies and its dependencies."
msgstr ""
"``Tools`` 子目录包含编辑器所需的工具, 如 ``GodotTools`` 程序集及其依赖项."

msgid "Building the Mono runtime"
msgstr "构建 Mono 运行时"

msgid ""
"When building Godot for the desktop, you will likely use the pre-built Mono "
"runtime that is installed on your system. This likely won't be the case when "
"targeting other platforms like Android, iOS and WebAssembly. You will have "
"to build the Mono runtime yourself for those platforms."
msgstr ""
"当为桌面构建Godot时, 你很可能会使用系统上安装的预构建的Mono运行时. 在针对其他"
"平台(如Android, iOS和WebAssembly)时, 可能不会出现这种情况. 你将不得不自己为这"
"些平台构建Mono运行时."

msgid ""
"We recommend using these `build scripts <https://github.com/godotengine/"
"godot-mono-builds>`_. They simplify this process but also include some "
"patches needed for proper functioning with Godot. See the README on the link "
"above for instructions on how to use the scripts."
msgstr ""
"我们推荐使用这些 `build scripts <https://github.com/godotengine/godot-mono-"
"builds>`_ . 它们简化了这一过程, 但也包括一些与Godot正常运行所需的补丁. 关于如"
"何使用这些脚本, 请看上面链接中的README说明."

msgid "Targeting Android"
msgstr "以 Android 为目标平台"

msgid ""
"Compiling the Android export templates with Mono is a bit simpler than it is "
"for the desktop platforms, as there are no additional steps required after "
"building. There is no need to worry about run-time dependencies like a data "
"directory or the shared library (when dynamically linking) as those are "
"automatically added to the Gradle project."
msgstr ""
"与为其他平台构建相比, 使用Mono为Android编译导出模板要简单一些, 因为构建后无需"
"其他步骤. 无需担心运行时依赖项, 例如数据目录或共享库(动态链接时), 因为它们会"
"自动添加到Gradle项目中."

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"Android<doc_compiling_for_android>` page. Make sure to let SCons know about "
"the location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/android-armeabi-v7a-release\"`` (This path "
"may be different on your system)."
msgstr ""
"一旦你建立了Mono, 你就可以按照本页和 :ref:`Compiling for "
"Android<doc_compiling_for_android>` 页面中描述的说明继续构建Godot. 请确保让"
"SCons知道你刚刚构建的Mono运行时的位置, 例如. ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/android-armeabi-v7a-release\"`` (这个路径在"
"你的系统上可能不同)."

msgid "Targeting iOS"
msgstr "以 iOS 为目标平台"

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"iOS<doc_compiling_for_ios>` page. Make sure to let SCons know about the "
"location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/ios-arm64-release\"`` (This path may be "
"different on your system)."
msgstr ""
"一旦你构建了Mono, 你就可以按照本页面和 :ref:`Compiling for "
"iOS<doc_compiling_for_ios>` 页面中描述的说明来构建Godot. 请确保让SCons知道你"
"刚刚构建的Mono运行时的位置, 例如. ``scons [...] mono_prefix=\"$HOME/mono-"
"installs/ios-arm64-release\"`` (这个路径在你的系统上可能不同)."

msgid ""
"After building Godot for each architecture, you will notice SCons has copied "
"the Mono libraries for each of them to the output directory:"
msgstr ""
"在为每个架构构建Godot之后, 你会注意到SCons已经将每个架构的Mono库复制到输出目"
"录中:"

msgid ""
"The last three are only for iOS devices and are not available for the iOS "
"simulator."
msgstr "后面三个只针对iOS设备,iOS模拟器无法使用."

msgid ""
"These libraries must be put in universal (multi-architecture) \"fat\" files "
"to be distributed with the export templates."
msgstr "这些库必须放在通用(多架构)的 \"胖\" 文件中, 与导出模板一起分发."

msgid ""
"The following bash script will create the \"fat\" libraries in the directory "
"``#bin/ios/iphone-mono-libs``:"
msgstr "以下bash脚本将在 ``#bin/ios/iphone-mono-libs`` 目录下创建 \"fat\" 库:"

msgid ""
"The ``iphone-mono-libs`` folder must be distributed with the export "
"templates. The Godot editor will look for the libraries in ``<templates>/"
"iphone-mono-libs/lib<name>.iphone.fat.a``."
msgstr ""
"``iphone-mono-libs`` 文件夹必须与导出模板一起分发.Godot编辑器将在 "
"``<templates>/iphone-mono-libs/lib<name>.iphone.fat.a`` 中查找库."

msgid "Targeting WebAssembly"
msgstr "以 WebAssembly 为目标平台"

msgid ""
"Building for WebAssembly currently involves the same process regardless of "
"whether the Mono module is enabled."
msgstr "无论Mono模块是否启用, 目前为WebAssembly构建都涉及相同的过程."

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for the "
"Web<doc_compiling_for_web>` page. Make sure to let SCons know about the "
"location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/wasm-runtime-release\"`` (This path may be "
"different on your system)."
msgstr ""
"一旦你建立了Mono, 你就可以按照本页和 :ref:`Compiling for the "
"Web<doc_compiling_for_web>` 页面中描述的说明继续建立Godot. 请确保让SCons知道"
"你刚刚构建的Mono运行时的位置, 例如. ``scons [...] mono_prefix=\"$HOME/mono-"
"installs/wasm-runtime-release\"`` (这个路径在你的系统上可能不同)."

msgid "Base Class Library"
msgstr "基础类库"

msgid ""
"The export templates must also include the BCL (Base Class Library) for each "
"target platform. Godot looks for the BCL folder at ``<templates>/bcl/"
"<target_platform>``, where ``<target_platform>`` is the same name passed to "
"the SCons ``platform`` option, e.g.: ``<templates>/bcl/windows``, "
"``<templates>/bcl/javascript``."
msgstr ""
"导出模板还必须包括每个目标平台的BCL(基础类库).Godot在 ``<templates>/bcl/"
"<target_platform>`` 中查找BCL文件夹, 其中 ``<target_platform>`` 是传递给"
"SCons ``platform`` 选项的相同名称, 例如. ``<templates>/bcl/windows``, "
"``<templates>/bcl/javascript``."

msgid "Alternatively, Godot will look for them in the following locations:"
msgstr "或者,Godot会在以下地点寻找它们:"

msgid "Android"
msgstr "Android"

msgid "``<templates>/bcl/monodroid``"
msgstr "``<templates>/bcl/monodroid``"

msgid "iOS"
msgstr "iOS"

msgid "``<templates>/bcl/monotouch``"
msgstr "``<templates>/bcl/monotouch``"

msgid "WebAssembly"
msgstr "WebAssembly"

msgid "``<templates>/bcl/wasm``"
msgstr "``<templates>/bcl/wasm``"

msgid "Linux and macOS"
msgstr "Linux和MacOS"

msgid "``<templates>/bcl/net_4_x``"
msgstr "``<templates>/bcl/net_4_x``"

msgid "Windows"
msgstr "Windows"

msgid "``<templates>/bcl/net_4_x_win``"
msgstr "``<templates>/bcl/net_4_x_win``"

msgid ""
"As of now, we're assuming the same BCL profile can be used for both Linux "
"and macOS, but this may change in the future as they're not guaranteed to be "
"the same (as is the case with the Windows BCL)."
msgstr ""
"目前, 我们假设Linux和macOS都可以使用相同的BCL配置, 但未来可能会发生变化, 因为"
"它们不能保证相同(就像Windows BCL的情况一样)."

msgid ""
"If the target platform is the same as the platform of the Godot editor, then "
"the editor will use the BCL it's running on (``<data_folder>/Mono/lib/"
"mono/4.5``) if it cannot find the BCL in the export templates."
msgstr ""
"如果目标平台与Godot编辑器的平台相同, 那么编辑器在导出模板中找不到BCL时, 就会"
"使用它所运行的BCL(``<data_folder>/Mono/lib/mono/4.5``)."

msgid "AOT cross-compilers"
msgstr "AOT 交叉编译器"

msgid ""
"To perform ahead-of-time (AOT) compilation for other platforms, Godot needs "
"to have access to the Mono cross-compilers for that platform and "
"architecture."
msgstr ""
"要对其他平台进行超前(AOT)编译,Godot需要访问该平台和架构的Mono交叉编译器."

msgid ""
"Godot will look for the cross-compiler executable in the AOT compilers "
"folder. The location of this folder is ``<data_folder>/Tools/aot-compilers/"
"``."
msgstr ""
"Godot将在AOT编译器文件夹中寻找交叉编译器可执行文件. 这个文件夹的位置是 "
"``<data_folder>/Tools/aot-compilers/``."

msgid ""
"In order to build the cross-compilers we recommend using these `build "
"scripts <https://github.com/godotengine/godot-mono-builds>`_."
msgstr ""
"为了构建交叉编译器，我们推荐使用这些\\ `构建脚本 <https://github.com/"
"godotengine/godot-mono-builds>`_\\ 。"

msgid ""
"After building them, copy the executable to the Godot AOT compilers "
"directory. The executable name is ``<triple>-mono-sgen``, e.g.: ``aarch64-"
"apple-darwin-mono-sgen``."
msgstr ""
"构建完成后, 将可执行文件复制到Godot AOT编译器目录下. 可执行文件的名称是 ``<三"
">-mono-sgen``, 例如:``aarch64-apple-darwin-mono-sgen``. ``aarch64-apple-"
"darwin-mono-sgen``."

msgid "Command-line options"
msgstr "命令行选项"

msgid ""
"The following is the list of command-line options available when building "
"with the Mono module:"
msgstr "以下是使用Mono模块进行构建时可用的命令行选项的列表:"

msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr "**module_mono_enabled** \\ =yes | **no**"

msgid "Build Godot with the Mono module enabled."
msgstr "在启用Mono模块的情况下构建Godot."

msgid "**mono_glue**\\ =\\ **yes** | no"
msgstr "**mono_glue** \\ =\\ **yes** | no"

msgid ""
"Whether to include the glue source files in the build and define "
"``MONO_GLUE_DISABLED`` as a preprocessor macro."
msgstr ""
"是否在构建中包括胶水源文件, 并将 ``MONO_GLUE_DISABLED`` 定义为预处理器宏."

msgid "**mono_prefix**\\ =path"
msgstr "**mono_prefix** \\ =path"

msgid ""
"Path to the Mono installation directory for the target platform and "
"architecture."
msgstr "目标平台和体系结构的Mono安装目录的路径."

msgid "**mono_static**\\ =yes | no"
msgstr "**mono_static** \\ =yes | no"

msgid "Whether to link the Mono runtime statically."
msgstr "是否静态链接Mono运行时."

msgid ""
"The default is **yes** for iOS and WASM, and **no** for other platforms."
msgstr "iOS和WASM默认为 **是** , 其他平台为 **否** ."

msgid "**copy_mono_root**\\ =yes | **no**"
msgstr "**copy_mono_root** \\ =yes | **no**"

msgid ""
"Whether to copy the Mono framework assemblies and configuration files "
"required by the Godot editor."
msgstr "是否复制Godot编辑器所需的Mono框架程序集和配置文件."

msgid "Translation status"
msgstr "翻译状态"
