# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-compiling for iOS on Linux"
msgstr "在 Linux 平台上为 iOS 做交叉编译"

msgid ""
"The procedure for this is somewhat complex and requires a lot of steps, but "
"once you have the environment properly configured it will be easy to compile "
"Godot for iOS anytime you want."
msgstr ""
"此过程有些复杂, 需要很多步骤, 但只要你正确配置了环境, 就可以随时随地轻松为iOS"
"编译Godot."

msgid "Disclaimer"
msgstr "免责声明"

msgid ""
"While it is possible to compile for iOS on a Linux environment, Apple is "
"very restrictive about the tools to be used (especially hardware-wise), "
"allowing pretty much only their products to be used for development. So this "
"is **not official**. However, a `statement from Apple in 2010 <http://www."
"apple.com/pr/library/2010/09/09Statement-by-Apple-on-App-Store-Review-"
"Guidelines.html>`__ says they relaxed some of the `App Store review "
"guidelines <https://developer.apple.com/app-store/review/guidelines/>`__ to "
"allow any tool to be used, as long as the resulting binary does not download "
"any code, which means it should be OK to use the procedure described here "
"and cross-compiling the binary."
msgstr ""
"尽管可以在 Linux 环境上为 iOS 进行编译，但是 Apple 对要使用的工具有严格的限制"
"（特别是硬件方面），几乎只允许将其产品用于开发。因此，这是\\ **非官方的"
"**\\ 。然而，\\ `2010 年 Apple 的声明 <http://www.apple.com/pr/"
"library/2010/09/09Statement-by-Apple-on-App-Store-Review-Guidelines."
"html>`__\\ 表示放宽了一些\\ `App Store 审核指南 <https://developer.apple.com/"
"app-store/review/guidelines/>`__\\ ，允许使用任何工具，只要生成的二进制文件不"
"下载任何代码，这意味着可以使用此处描述的过程并交叉编译二进制文件。"

msgid "Requirements"
msgstr "需求"

msgid ""
"`XCode with the iOS SDK <https://developer.apple.com/xcode/download>`__ (a "
"dmg image)"
msgstr ""
"`带iOS SDK的XCode <https://developer.apple.com/xcode/download>`__ (dmg镜像)"

msgid ""
"`Clang >= 3.5 <http://clang.llvm.org>`__ for your development machine "
"installed and in the ``PATH``. It has to be version >= 3.5 to target "
"``arm64`` architecture."
msgstr ""
"`Clang >= 3.5 <http://clang.llvm.org>`__ 用于已安装的开发机器并位于 ``PATH`` "
"中. 它的版本必须是 >= 3.5 , 才能用于 ``arm64`` 体系结构."

msgid ""
"`Fuse <https://github.com/libfuse/libfuse>`__ for mounting and umounting the "
"dmg image."
msgstr "`Fuse <https://github.com/libfuse/libfuse>`__ 用于安装和卸载dmg映像."

msgid ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__, which needs to "
"be built from source. The procedure for that is explained below."
msgstr ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__, 需要从源码构建. "
"下面说明其过程."

msgid ""
"For building darling-dmg, you'll need the development packages of the "
"following libraries: fuse, icu, openssl, zlib, bzip2."
msgstr "要构建darling-dmg, 你需要以下库的开发包:fuse,icu,openssl,zlib,bzip2."

msgid ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ for the "
"needed build tools. The procedure for building is quite peculiar and is "
"described below."
msgstr ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ 用于所需的构"
"建工具. 构建过程非常特殊, 下面将进行描述."

msgid "This also has some extra dependencies: automake, autogen, libtool."
msgstr "这也有一些额外的依赖:automake,autogen,libtool."

msgid "Configuring the environment"
msgstr "配置环境"

msgid "darling-dmg"
msgstr "darling-dmg"

msgid "Clone the repository on your machine:"
msgstr "在你的机器上克隆该仓库："

msgid "Build it:"
msgstr "构建它："

msgid "Preparing the SDK"
msgstr "准备 SDK"

msgid "Mount the XCode image:"
msgstr "挂载 XCode 镜像："

msgid "Extract the iOS SDK:"
msgstr "解压缩 iOS SDK："

msgid "Pack the SDK:"
msgstr "打包 SDK："

msgid "Toolchain"
msgstr "工具链"

msgid "Build cctools:"
msgstr "构建 cctools："

msgid ""
"Copy the tools to a nicer place. Note that the SCons scripts for building "
"will look under ``usr/bin`` inside the directory you provide for the "
"toolchain binaries, so you must copy to such subdirectory, akin to the "
"following commands:"
msgstr ""
"将工具复制到更好的位置. 请注意, 用于构建的SCons脚本将在你为工具链二进制文件提"
"供的目录中的 ``usr/bin`` 下查找, 因此, 你必须复制到这样的子目录, 类似于以下命"
"令:"

msgid ""
"Now you should have the iOS toolchain binaries in ``/home/user/iostoolchain/"
"usr/bin``."
msgstr ""
"现在你应该在 ``/home/user/iostoolchain/usr/bin`` 中拥有iOS工具链二进制文件."

msgid "Compiling Godot for iPhone"
msgstr "为 iPhone 编译 Godot"

msgid ""
"Once you've done the above steps, you should keep two things in your "
"environment: the built toolchain and the iPhoneOS SDK directory. Those can "
"stay anywhere you want since you have to provide their paths to the SCons "
"build command."
msgstr ""
"完成上述步骤后, 应在环境中保留两件事: 构建的工具链和iPhoneOS SDK目录. 那些可"
"以留在你想要的任何地方, 因此你必须提供它们的路径给SCons构建命令."

msgid ""
"For the iPhone platform to be detected, you need the ``OSXCROSS_IOS`` "
"environment variable defined to anything."
msgstr ""
"为了检测iPhone平台, 你需要将 ``OSXCROSS_IOS`` 环境变量定义为 ``anything``."

msgid ""
"Now you can compile for iPhone using SCons like the standard Godot way, with "
"some additional arguments to provide the correct paths:"
msgstr ""
"现在你可以使用SCons像标准Godot方式一样编译iPhone, 带有一些其他参数以提供正确"
"的路径:"

msgid "Producing fat binaries"
msgstr "制作胖二进制文件"

msgid ""
"Apple requires a fat binary with both architectures (``armv7`` and "
"``arm64``) in a single file. To do this, use the ``arm-apple-darwin11-lipo`` "
"executable. The following example assumes you are in the root Godot source "
"directory:"
msgstr ""
"Apple需要一个胖二进制文件, 即两个架构(``armv7`` 和 ``arm64``)在一个文件中. 为"
"此, 请使用 ``arm-apple-darwin11-lipo`` 可执行文件. 以下示例假定你位于Godot源"
"目录的根路径:"

msgid "Then you will have iOS fat binaries in ``bin`` directory."
msgstr "然后你将在 ``bin`` 目录下有iOS大的二进制文件."

msgid "Translation status"
msgstr "翻译状态"
