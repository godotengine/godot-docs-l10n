# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Windows"
msgstr "为 Windows 平台编译"

msgid ""
"This page describes how to compile Windows editor and export template "
"binaries from source. If you're looking to export your project to Windows "
"instead, read :ref:`doc_exporting_for_windows`."
msgstr ""
"这个页面描述的是如何从源码编译 Windows 编辑器和导出模板二进制文件。如果你要找"
"的是导出项目到 Windows，请阅读 :ref:`doc_exporting_for_windows`\\ 。"

msgid "Requirements"
msgstr "需求"

msgid "For compiling under Windows, the following is required:"
msgstr "要在Windows下进行编译, 需要以下内容:"

msgid ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_, "
"version 2017 or later. VS 2019 is recommended. **Make sure to read "
"\"Installing Visual Studio caveats\" below or you will have to run/download "
"the installer again.**"
msgstr ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_ ,2017"
"或更高版本. 建议使用VS 2019. **请务必阅读下面的 \"安装Visual Studio注意事项"
"\", 否则你将不得不再次运行/下载安装程序.**"

msgid ""
"`MinGW-w64 <http://mingw-w64.org/>`__ with GCC can be used as an alternative "
"to Visual Studio. Be sure to install/configure it to use the ``posix`` "
"thread model."
msgstr ""
"`MinGW-w64 <http://mingw-w64.org/>`__ 与GCC可以作为Visual Studio的替代品. 请"
"确保安装/配置为使用 ``posix`` 线程模型."

msgid ""
"`Python 3.5+ <https://www.python.org/downloads/windows/>`_. **Make sure to "
"enable the option to add Python to the ``PATH`` in the installer.**"
msgstr ""
"`Python 3.5+ <https://www.python.org/downloads/windows/>`_\\ 。**请确保在安装"
"程序中勾选将 Python 添加到 ``PATH`` 的选项。**"

msgid ""
"`SCons <https://www.scons.org/>`_ build system. Using the latest release is "
"recommended, especially for proper support of recent Visual Studio releases."
msgstr ""
"`SCons <https://www.scons.org/>`_ 构建系统。推荐使用最新版本，尤其是为了支持"
"最近的 Visual Studio 版本。"

msgid ""
"If you have `Scoop <https://scoop.sh/>`_ installed, you can easily install "
"MinGW and other dependencies using the following command::"
msgstr ""
"如果您已安装 `Scoop <https://scoop.sh/>`_\\ ，则可以使用以下命令轻松安装 "
"MinGW 和其他依赖项： ::"

msgid ""
"If you have `MSYS2 <https://www.msys2.org/>`_ installed, you can easily "
"install MinGW and other dependencies using the following command::"
msgstr ""
"如果你已经安装了 `MSYS2 <https://www.msys2.org/>`_\\ ，你可以使用以下命令轻松"
"安装 MinGW 和其他依赖项： ::"

msgid ""
"For each MSYS2 MinGW subsystem, you should then run `pip3 install scons` in "
"its shell."
msgstr ""
"对于每个 MSYS2 MinGW 子系统，你应该在其 shell 中运行 `pip3 install "
"scons`\\ 。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "要获取编译所需的 Godot 源码，请参阅 :ref:`doc_getting_source`\\ 。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关 Godot 的 SCons 用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

msgid "Setting up SCons"
msgstr "设置 SCons"

msgid ""
"To install SCons, open the command prompt and run the following command::"
msgstr "要安装 SCons，请打开命令提示符并运行以下命令： ::"

msgid ""
"If you are prompted with the message ``Defaulting to user installation "
"because normal site-packages is not writeable``, you may have to run that "
"command again using elevated permissions. Open a new command prompt as an "
"Administrator then run the command again to ensure that SCons is available "
"from the ``PATH``."
msgstr ""
"如果你看到提示信息 ``Defaulting to user installation because normal site-"
"packages is not writeable``\\ ，那么你就需要提升权限后再重新执行该命令。使用"
"管理员身份打开一个新的命令提示符，然后再执行该命令，确保 SCons 可以通过 "
"``PATH`` 访问。"

msgid ""
"To check whether you have installed Python and SCons correctly, you can type "
"``python --version`` and ``scons --version`` into a command prompt (``cmd."
"exe``)."
msgstr ""
"要检查是否已正确安装Python和SCons, 可以在命令提示符 (``cmd.exe``) 中键入 "
"``python --version`` 和 ``scons --version``."

msgid ""
"If the commands above don't work, make sure to add Python to your ``PATH`` "
"environment variable after installing it, then check again. You can do so by "
"running the Python installer again and enabling the option to add Python to "
"the ``PATH``."
msgstr ""
"如果上面的命令不起作用, 请确保在安装后将Python添加到 ``PATH`` 环境变量中, 然"
"后再次检查. 为此, 您可以再次运行Python安装程序并启用将Python添加到 ``PATH`` "
"的选项."

msgid ""
"If SCons cannot detect your Visual Studio installation, it might be that "
"your SCons version is too old. Update it to the latest version with ``python "
"-m pip install --upgrade scons``."
msgstr ""
"如果 SCons 无法检测到你的 Visual Studio 安装，可能是因为你的 SCons 版本太老"
"了。请使用 ``python -m pip install --upgrade scons`` 将其更新为最新版本。"

msgid "Installing Visual Studio caveats"
msgstr "安装 Visual Studio 注意事项"

msgid ""
"If installing Visual Studio 2017 or 2019, make sure to enable **C++** in the "
"list of workflows to install."
msgstr ""
"如果安装Visual Studio 2017或2019, 请确保启用要安装的工作流程列表中的 **C+"
"+** ."

msgid ""
"If installing Visual Studio 2015, make sure to run a **Custom** installation "
"instead of **Typical** and select **C++** as a language there."
msgstr ""
"如果安装Visual Studio 2015, 请确保运行 **自定义** 安装而不是 **典型** 安装, "
"然后选择 **C++** 作为语言."

msgid ""
"If you've already made the mistake of installing Visual Studio without C++ "
"support, run the installer again; it should present you a **Modify** button. "
"Running the installer from *Add/Remove Programs* will only give you a "
"**Repair** option, which won't let you install C++ tools."
msgstr ""
"如果您已经犯了在没有C++支持的情况下安装Visual Studio的错误, 请再次运行安装程"
"序；它将为您提供一个 **修改** 按钮. 从 *添加/删除程序* 中运行安装程序只会给您"
"提供 **修复** 选项, 而该选项将不允许您安装C++工具."

msgid "Downloading Godot's source"
msgstr "下载 Godot 的源代码"

msgid "Refer to :ref:`doc_getting_source` for detailed instructions."
msgstr "详细步骤请参考 :ref:`doc_getting_source`\\ 。"

msgid ""
"The tutorial will assume from now on that you placed the source code in ``C:"
"\\godot``."
msgstr "从现在开始，本教程将假设您将源代码放在了 ``C:\\godot``\\ 。"

msgid ""
"To prevent slowdowns caused by continuous virus scanning during compilation, "
"add the Godot source folder to the list of exceptions in your antivirus "
"software."
msgstr ""
"为了防止编译过程中由于连续病毒扫描而导致的速度减慢，请将 Godot 源文件夹添加到"
"杀毒软件中的例外列表中。"

msgid ""
"For Windows Defender, hit the :kbd:`Windows` key, type \"Windows Defender "
"Settings\" then hit :kbd:`Enter`. Under **Virus & threat protection**, go to "
"**Virus & threat protection setting** and scroll down to **Exclusions**. "
"Click **Add or remove exclusions** then add the Godot source folder."
msgstr ""
"对于 Windows Defender，请按 :kbd:`Windows` 键，输入“Windows Defender "
"Settings”然后按 :kbd:`Enter`\\ 。在 **病毒和威胁防护** 下，进入\\ **病毒和威"
"胁防护设置**\\ ，并向下滚动至\\ **排除项**\\ 。单击\\ **添加或删除排除项"
"**\\ ，然后添加 Godot 源文件夹。"

msgid "Compiling"
msgstr "编译"

msgid "Selecting a compiler"
msgstr "选择编译器"

msgid ""
"SCons will automatically find and use an existing Visual Studio "
"installation. If you do not have Visual Studio installed, it will attempt to "
"use MinGW instead. If you already have Visual Studio installed and want to "
"use MinGW, pass ``use_mingw=yes`` to the SCons command line. Note that MSVC "
"builds cannot be performed from the MSYS2 or MinGW shells. Use either ``cmd."
"exe`` or PowerShell instead."
msgstr ""
"SCons 将自动查找并使用现有的 Visual Studio 安装。如果你没有安装 Visual "
"Studio，它将尝试使用 MinGW 代替。如果你已经安装了 Visual Studio 并想使用 "
"MinGW，请在 SCons 命令行中传入 ``use_mingw=yes``\\ 。注意，MSVC 的构建不能从 "
"MSYS2 或 MinGW 的 shell 中进行。使用 ``cmd.exe`` 或 PowerShell 代替。"

msgid ""
"During development, using the Visual Studio compiler is usually a better "
"idea, as it links the Godot binary much faster than MinGW. However, MinGW "
"can produce more optimized binaries using link-time optimization (see "
"below), making it a better choice for production use."
msgstr ""
"在开发过程中，通常最好使用 Visual Studio 编译器，因为链接 Godot 二进制文件的"
"速度比 MinGW 更快。但是，MinGW 可以利用链接时优化（见下文）来生成更多优化的二"
"进制文件，从而使其成为生产使用的更好选择。"

msgid "Running SCons"
msgstr "运行 SCons"

msgid ""
"After opening a command prompt, change to the root directory of the engine "
"source code (using ``cd``) and type::"
msgstr ""
"打开命令提示符后，（使用 ``cd``\\ ）转到引擎源代码的根目录，然后键入： ::"

msgid ""
"When compiling with multiple CPU threads, SCons may warn about pywin32 being "
"missing. You can safely ignore this warning."
msgstr ""
"使用多个 CPU 线程进行编译时，SCons 可能会警告 pywin32 丢失。您可以放心地忽略"
"此警告。"

msgid ""
"If all goes well, the resulting binary executable will be placed in ``C:"
"\\godot\\bin\\`` with the name ``godot.windows.tools.32.exe`` or ``godot."
"windows.tools.64.exe``. By default, SCons will build a binary matching your "
"CPU architecture, but this can be overridden using ``bits=64`` or "
"``bits=32``."
msgstr ""
"如果一切顺利, 生成的二进制可执行文件将被放在 ``C:\\godot\\bin\\`` 中, 名称为 "
"``godot.windows.tools.32.exe`` 或 ``godot.windows.tools.64.exe`` . 默认情况"
"下,SCons将建立一个与你的CPU架构相匹配的可执行文件, 但这可以用 ``bits=64`` 或 "
"``bits=32`` 来覆盖."

msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Running it will bring up the Project Manager."
msgstr ""
"该可执行文件包含整个引擎，并且运行时没有任何依赖项。运行它会启动项目管理器。"

msgid ""
"If you are compiling Godot for production use, then you can make the final "
"executable smaller and faster by adding the SCons option "
"``target=release_debug``."
msgstr ""
"如果您正在编译Godot用于生产用途, 那么您可以通过添加SCons选项 "
"``target=release_debug`` 来使最终的可执行文件更小更快."

msgid ""
"If you are compiling Godot with MinGW, you can make the binary even smaller "
"and faster by adding the SCons option ``use_lto=yes``. As link-time "
"optimization is a memory-intensive process, this will require about 7 GB of "
"available RAM while compiling."
msgstr ""
"如果你用MinGW编译Godot, 你可以通过添加SCons选项 ``use_lto=yes`` 来使二进制文"
"件更小更快. 由于链接时优化是一个内存密集的过程, 在编译时需要大约7GB的可用内"
"存."

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"如果你想为自己的 Godot 构建和官方发布使用单独的编辑器设置，你可以通过在 "
"``bin/`` 文件夹中创建一个名为 ``._sc_`` 或 ``_sc_`` 的文件来启用 :ref:"
"`doc_data_paths_self_contained_mode`\\ 。"

msgid "Development in Visual Studio"
msgstr "在 Visual Studio 中进行开发"

msgid ""
"Using an IDE is not required to compile Godot, as SCons takes care of "
"everything. But if you intend to do engine development or debugging of the "
"engine's C++ code, you may be interested in configuring a code editor or an "
"IDE."
msgstr ""
"编译 Godot 不需要使用 IDE，SCons 会处理所有事情。但是如果你想要做引擎开发，或"
"者调试引擎的 C++ 代码，你可能会对配置代码编辑器或者 IDE 感兴趣。"

msgid ""
"Folder-based editors don't require any particular setup to start working "
"with Godot's codebase. To edit projects with Visual Studio they need to be "
"set up as a solution."
msgstr ""
"基于文件夹的编辑器不需要任何特殊的设置就可以开始使用 Godot 的代码库。要使用 "
"Visual Studio 来编辑项目，需要先设置解决方案。"

msgid ""
"You can create a Visual Studio solution via SCons by running SCons with the "
"``vsproj=yes`` parameter, like this::"
msgstr ""
"您可以通过使用 ``vsproj=yes`` 参数运行 SCons 来创建 Visual Studio 解决方案，"
"如下所示： ::"

msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, and "
"able to build Godot using Visual Studio's **Build** button."
msgstr ""
"您现在可以在 Visual Studio 解决方案中打开 Godot 的源代码，并能够通过 Visual "
"Studio 的\\ **构建**\\ 按钮构建 Godot。"

msgid "See :ref:`doc_configuring_an_ide_vs` for further details."
msgstr "详情请参阅 :ref:`doc_configuring_an_ide_vs`。"

msgid "Cross-compiling for Windows from other operating systems"
msgstr "从其他操作系统为 Windows 交叉编译"

msgid ""
"If you are a Linux or macOS user, you need to install `MinGW-w64 <https://"
"mingw-w64.org/doku.php>`__, which typically comes in 32-bit and 64-bit "
"variants. The package names may differ based on your distribution, here are "
"some known ones:"
msgstr ""
"如果你是Linux或macOS用户, 你需要安装 `MinGW-w64 <https://mingw-w64.org/doku."
"php>`__ , 它通常有32位和64位两种版本. 包的名称可能根据你的发行版而不同, 这里"
"有一些已知的包:"

msgid "**Arch Linux**"
msgstr "**Arch Linux**"

msgid "Install `mingw-w64-gcc from the AUR`_."
msgstr "安装 `AUR 中的 mingw-w64-gcc`_\\ 。"

msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

msgid "**Fedora**"
msgstr "**Fedora**"

msgid "**macOS**"
msgstr "**macOS**"

msgid "**Mageia**"
msgstr "**Mageia**"

msgid ""
"Before attempting the compilation, SCons will check for the following "
"binaries in your ``PATH`` environment variable::"
msgstr "在尝试编译之前，SCons 将在 ``PATH`` 环境变量中检查以下二进制文件： ::"

msgid ""
"If the binaries are not located in the ``PATH`` (e.g. ``/usr/bin``), you can "
"define the following environment variables to give a hint to the build "
"system::"
msgstr ""
"如果这些二进制文件不在 ``PATH`` 中（例如 ``/usr/bin``\\ ），则可以定义以下环"
"境变量来提示以构建系统： ::"

msgid ""
"To make sure you are doing things correctly, executing the following in the "
"shell should result in a working compiler (the version output may differ "
"based on your system)::"
msgstr ""
"为了确保您做的事正确，在 shell 中执行以下操作将导致编译器正常工作（版本输出可"
"能因您的系统而异）： ::"

msgid "Troubleshooting"
msgstr "故障排除"

msgid ""
"Cross-compiling from some Ubuntu versions may lead to `this bug <https://"
"github.com/godotengine/godot/issues/9258>`_, due to a default configuration "
"lacking support for POSIX threading."
msgstr ""
"由于默认配置不支持POSIX线程, 因此从某些Ubuntu版本进行交叉编译可能会导致 `此"
"bug <https://github.com/godotengine/godot/issues/9258>`_ ."

msgid ""
"You can change that configuration following those instructions, for 64-bit::"
msgstr "您可以按照以下说明针对 64 位更改该配置： ::"

msgid "And for 32-bit::"
msgstr "对于 32 位： ::"

msgid "Creating Windows export templates"
msgstr "创建 Windows 导出模板"

msgid ""
"Windows export templates are created by compiling Godot without the editor, "
"with the following flags::"
msgstr ""
"Windows 导出模板是通过编译不使用编辑器的 Godot 来创建的，带有以下标志： ::"

msgid ""
"If you plan on replacing the standard export templates, copy these to the "
"following location, replacing ``<version>`` with the version identifier "
"(such as ``3.1.1.stable`` or ``3.2.dev``)::"
msgstr ""
"如果计划替换标准导出模板，复制模板到以下位置，并用版本标识符（例如 ``3.1.1."
"stable`` 或 ``3.2.dev``\\ ）替换 ``<version>``\\ ： ::"

msgid "With the following names::"
msgstr "使用以下名称： ::"

msgid ""
"However, if you are using custom modules or custom engine code, you may "
"instead want to configure your binaries as custom export templates here:"
msgstr ""
"此外, 如果您使用的是自定义模块或自定义引擎代码, 则可能需要在此处将二进制文件"
"配置为自定义导出模板:"

msgid ""
"You don't need to copy them in this case, just reference the resulting files "
"in the ``bin\\`` directory of your Godot source folder, so the next time you "
"build, you will automatically have the custom templates referenced."
msgstr ""
"在这种情况下, 您不需要复制它们, 只需引用在Godot源文件夹的 ``bin\\`` 目录中生"
"成的文件, 因此下次构建时, 将自动引用自定义模板."

msgid "Translation status"
msgstr "翻译状态"
