# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to the buildsystem"
msgstr "构建系统介绍"

msgid "SCons"
msgstr "SCons"

msgid ""
"Godot uses `SCons <https://www.scons.org/>`__ to build. We love it, we are "
"not changing it for anything else. We are not even sure other build systems "
"are up to the task of building Godot. We constantly get requests to move the "
"build system to CMake, or Visual Studio, but this is not going to happen. "
"There are many reasons why we have chosen SCons over other alternatives, for "
"example:"
msgstr ""
"Godot 使用 `SCons <https://www.scons.org/>`__ 来构建。我们喜欢它，不会因为其"
"他任何事情而改变它。我们甚至不确定其他构建系统是否可以完成 Godot 的构建任务。"
"我们不断收到将构建系统移至 CMake 或 Visual Studio 的请求，但这不会发生。我们"
"选择 SCons 而不是其他构建系统的原因有很多，例如："

msgid ""
"Godot can be compiled for a dozen different platforms: all PC platforms, all "
"mobile platforms, many consoles, and WebAssembly."
msgstr ""
"Godot 可以针对多种不同的平台进行编译：所有 PC 平台、所有移动平台、各种游戏主"
"机、WebAssembly。"

msgid ""
"Developers often need to compile for several of the platforms **at the same "
"time**, or even different targets of the same platform. They can't afford "
"reconfiguring and rebuilding the project each time. SCons can do this with "
"no sweat, without breaking the builds."
msgstr ""
"开发者们经常需要\\ **同时**\\ 将代码编译到多个平台上，或者同一个平台的不同架"
"构上，但他们负担不起每次都要重新配置和重构项目。SCons 可以毫不费力地完成此任"
"务，而不会破坏构建。"

msgid ""
"SCons will *never* break a build no matter how many changes, configurations, "
"additions, removals etc. You have more chances to die struck by lightning "
"than needing to clean and rebuild in SCons."
msgstr ""
"无论对项目做出多少修改、配置、增加、删除之类的事情，SCons *都不会*\\ 把构建工"
"作搞砸。你需要通过 Scons 进行清理和重新构建的机会比你被闪电击中的几率还低。"

msgid ""
"Godot build process is not simple. Several files are generated by code "
"(binders), others are parsed (shaders), and others need to offer "
"customization (plugins). This requires complex logic which is easier to "
"write in an actual programming language (like Python) rather than using a "
"mostly macro-based language only meant for building."
msgstr ""
"Godot的构建过程并不简单. 几个文件由代码生成(绑定), 其他文件被解析(着色器), 而"
"其他文件则需要提供自定义(插件). 这需要复杂的逻辑, 而该逻辑更容易用实际的编程"
"语言(如Python)编写, 而不是使用仅用于构建的基于宏的语言."

msgid ""
"Godot build process makes heavy use of cross-compiling tools. Each platform "
"has a specific detection process, and all these must be handled as specific "
"cases with special code written for each."
msgstr ""
"Godot的构建过程大量使用了交叉编译工具. 每个平台都有特定的检测过程, 需为每个平"
"台编写特殊代码, 将这些作为特殊情况处理."

msgid ""
"So, please try to keep an open mind and get at least a little familiar with "
"it if you are planning to build Godot yourself."
msgstr ""
"因此, 如果你想要自己构建 Godot 的话, 请持一个开放的态度, 至少稍微熟悉一下这个"
"构建系统."

msgid "Setup"
msgstr "场景布置"

msgid ""
"Please refer to the documentation for :ref:`doc_compiling_for_android`, :ref:"
"`doc_compiling_for_ios`, :ref:`doc_compiling_for_osx`, :ref:"
"`doc_compiling_for_uwp`, :ref:`doc_compiling_for_web`, :ref:"
"`doc_compiling_for_windows` and :ref:`doc_compiling_for_x11`."
msgstr ""
"你可以参照平台相关的构建文档 :ref:`doc_compiling_for_android`、\\ :ref:"
"`doc_compiling_for_ios`、\\ :ref:`doc_compiling_for_osx`、\\ :ref:"
"`doc_compiling_for_uwp`、\\ :ref:`doc_compiling_for_web`、\\ :ref:"
"`doc_compiling_for_windows`、\\ :ref:`doc_compiling_for_x11`。"

msgid ""
"Note that for **Windows/Visual Studio**, you need to use ``x86_x64 Cross "
"Tools Command Prompt for VS 2017`` or similar, depending on your install, "
"instead of the standard Windows command prompt to enter the commands below."
msgstr ""
"注意, 在 **Windows/Visual Studio** 环境下, 你要使用 ``VS2017 x86_x64 兼容工具"
"命令提示符`` 这类工具(具体视你安装的版本来定), 而不是标准Windows命令提示符下"
"输入以下命令."

msgid "Platform selection"
msgstr "选择平台"

msgid ""
"Godot's build system will begin by detecting the platforms it can build for. "
"If not detected, the platform will simply not appear on the list of "
"available platforms. The build requirements for each platform are described "
"in the rest of this tutorial section."
msgstr ""
"Godot的构建系统将从检测可构建的平台开始. 如果未检测到, 该平台将不会出现在可用"
"平台列表中. 本教程后续部分将介绍每种平台的构建要求."

msgid ""
"SCons is invoked by just calling ``scons``. If no platform is specified, "
"SCons will detect the target platform automatically based on the host "
"platform. It will then start building for the target platform right away."
msgstr ""
"仅通过调用 ``scons`` 即可调用SCons. 如果未指定平台,SCons将基于主机平台自动检"
"测目标平台. 然后它将立即开始为目标平台构建."

msgid "To list the available target platforms, use ``scons platform=list``::"
msgstr "要列出可用的目标平台，请使用 ``scons platform=list``\\ ： ::"

msgid ""
"To build for a platform (for example, x11), run with the ``platform=`` (or "
"``p=`` to make it short) argument:"
msgstr ""
"运行时使用 ``platform=`` (或简称为 ``p=``)参数, 为特定平台构建(例如x11):"

msgid ""
"This will start the build process, which will take a while. By default, "
"Godot's SCons setup is configured to use all CPU threads but one (to keep "
"the system responsive during compilation). If you want to adjust how many "
"CPU threads SCons will use, use the ``-j <threads>`` parameter to specify "
"how many threads will be used for the build."
msgstr ""

#, fuzzy
msgid "Example for using 4 threads:"
msgstr "使用 4 核的示例："

msgid "Resulting binary"
msgstr "生成的二进制文件"

msgid ""
"The resulting binaries will be placed in the ``bin/`` subdirectory, "
"generally with this naming convention::"
msgstr ""
"生成的二进制文件将被放置在 ``bin/`` 子目录中，通常使用这种命名约定： ::"

msgid "For the previous build attempt, the result would look like this::"
msgstr "对于先前的构建尝试，结果将如下所示： ::"

msgid ""
"This means that the binary is for X11, is not optimized, has tools (the "
"whole editor) compiled in, and is meant for 64 bits."
msgstr ""
"这意味着该二进制文件适用于X11, 未经过优化, 具有已编译的工具(整个编辑器), 并且"
"适用于64位."

msgid "A Windows binary with the same configuration will look like this:"
msgstr "一个具有相同配置的Windows二进制文件将如下所示:"

msgid ""
"Copy that binary to any location you like, as it contains the project "
"manager, editor and all means to execute the game. However, it lacks the "
"data to export it to the different platforms. For that the export templates "
"are needed (which can be either downloaded from `godotengine.org <https://"
"godotengine.org/>`__, or you can build them yourself)."
msgstr ""
"将该二进制文件复制到您喜欢的任何位置, 因为它包含项目管理器, 编辑器和执行游戏"
"的所有方法. 但是, 它缺少将其导出到不同平台的数据. 为此, 需要导出模板(可以从 "
"`godotengine.org <https://godotengine.org/>`__ 下载, 或者您可以自己构建它们)."

msgid ""
"Aside from that, there are a few standard options that can be set in all "
"build targets, and which will be explained below."
msgstr ""
"除此之外, 在所有的构建目标平台中有几个标准选项可以进行设置, 下面将对此进行说"
"明."

msgid "Tools"
msgstr "工具"

msgid ""
"Tools are enabled by default in all PC targets (Linux, Windows, macOS), "
"disabled for everything else. Disabling tools produces a binary that can run "
"projects but that does not include the editor or the project manager."
msgstr ""
"在所有PC平台(Linux, Windows, macOS)上工具默认被启用, 在其他平台上默认被禁用. "
"禁用工具会生成可以运行项目的二进制文件, 但不包括编辑器和项目管理器."

msgid "Target"
msgstr "目标"

msgid "Target controls optimization and debug flags. Each mode means:"
msgstr "构建目标控制着优化和调试标志. 每种模式表示:"

msgid ""
"**debug**: Build with C++ debugging symbols, runtime checks (performs checks "
"and reports error) and none to little optimization."
msgstr ""
"**debug** : 使用C ++调试符号进行构建, 运行时检查(执行检查并报告错误), 并且几"
"乎没有优化."

msgid ""
"**release_debug**: Build without C++ debugging symbols and optimization, but "
"keep the runtime checks (performs checks and reports errors). Official "
"editor binaries use this configuration."
msgstr ""
"**release_debug** : 不使用C ++调试符号和优化进行构建, 但保留运行时检查(执行检"
"查并报告错误). 官方编辑器二进制文件使用此配置."

msgid ""
"**release**: Build without symbols, with optimization and with little to no "
"runtime checks. This target can't be used together with ``tools=yes``, as "
"the editor requires some debug functionality and run-time checks to run."
msgstr ""
"**release** : 不使用符号进行构建, 具有优化功能, 几乎没有运行时检查. 该构建目"
"标不能与 ``tools=yes`` 一起使用, 因为编辑器需要一些调试功能和运行时检查才能运"
"行."

msgid ""
"This flag appends the ``.debug`` suffix (for debug), or ``.tools`` (for "
"debug with tools enabled). When optimization is enabled (release), it "
"appends the ``.opt`` suffix."
msgstr ""
"该标志追加 ``.debug`` 后缀(用于调试), 或 ``.tools`` (用于启用工具的调试). 启"
"用优化(release)后, 它会追加 ``.opt`` 后缀."

msgid "Bits"
msgstr "位（Bit）"

msgid ""
"Bits is meant to control the CPU or OS version intended to run the binaries. "
"It is focused mostly on desktop platforms and ignored everywhere else."
msgstr ""
"位用于控制要运行二进制文件的CPU或OS版本. 它主要针对在桌面平台, 而在其他平台都"
"会被忽略."

msgid "**32**: Build binaries for 32-bit platforms."
msgstr "**32** : 为32位平台构建二进制文件."

msgid "**64**: Build binaries for 64-bit platforms."
msgstr "**64** : 为64位平台构建二进制文件."

msgid "**default**: Build for the architecture that matches the host platform."
msgstr "**default** : 针对与主机平台匹配的架构进行构建."

msgid ""
"This flag appends ``.32`` or ``.64`` suffixes to resulting binaries when "
"relevant. If ``bits=default`` is used, the suffix will match the detected "
"architecture."
msgstr ""
"相关时, 此标志在生成的二进制文件后附加 ``.32`` 或 ``.64`` 后缀. 如果使用 "
"``bits=default``, 则后缀将匹配检测到的体系结构."

msgid "Custom modules"
msgstr "自定义模块"

msgid ""
"It's possible to compile modules residing outside of Godot's directory tree, "
"along with the built-in modules."
msgstr "可以编译驻扎在Godot目录树之外的模块, 以及内置模块."

msgid ""
"A ``custom_modules`` build option can be passed to the command line before "
"compiling. The option represents a comma-separated list of directory paths "
"containing a collection of independent C++ modules that can be seen as C++ "
"packages, just like the built-in ``modules/`` directory."
msgstr ""
"在编译之前, 可以在命令行中传递一个 ``custom_modules`` 构建选项. 这个选项代表"
"了一个以逗号分隔的目录路径列表, 其中包含了一系列独立的C++模块, 这些模块可以被"
"看作是C++包, 就像内置的 ``modules/`` 目录一样."

msgid ""
"For instance, it's possible to provide both relative, absolute, and user "
"directory paths containing such modules:"
msgstr "例如, 可以同时提供包含此类模块的相对, 绝对和用户目录路径:"

msgid ""
"If there's any custom module with the exact directory name as a built-in "
"module, the engine will only compile the custom one. This logic can be used "
"to override built-in module implementations."
msgstr ""
"如果有任何自定义模块的目录名与内置模块的目录名完全相同, 引擎将只编译自定义模"
"块. 这个逻辑可以用来覆盖内置模块的实现."

msgid ":ref:`doc_custom_modules_in_c++`"
msgstr ":ref:`doc_custom_modules_in_c++`"

msgid "Cleaning generated files"
msgstr "清理生成的文件"

msgid ""
"Sometimes, you may encounter an error due to generated files being present. "
"You can remove them by using ``scons --clean <options>``, where "
"``<options>`` is the list of build options you've used to build Godot "
"previously."
msgstr ""
"有时, 你可能会遇到一个错误, 因为生成的文件存在. 您可以使用``scons --clean "
"<options>``删除它们, 其中 ``<options>`` 是您之前用来构建Godot的构建选项列表."

msgid ""
"Alternatively, you can use ``git clean -fixd`` which will clean build "
"artifacts for all platforms and configurations. Beware, as this will remove "
"all untracked and ignored files in the repository. Don't run this command if "
"you have uncommitted work!"
msgstr ""
"或者, 你也可以使用``git clean -fixd``来清理所有平台和配置的构建工件. 注意, 这"
"将删除版本库中所有未跟踪和忽略的文件. 如果你有未提交的工作, 请不要运行这个命"
"令！"

msgid "Other build options"
msgstr "其他构建选项"

msgid ""
"There are several other build options that you can use to configure the way "
"Godot should be built (compiler, debug options, etc.) as well as the "
"features to include/disable."
msgstr ""
"您还可以使用其他几个构建选项来配置Godot的构建方式(编译器, 调试选项等), 以及要"
"包含/禁用的功能."

msgid ""
"Check the output of ``scons --help`` for details about each option for the "
"version you are willing to compile."
msgstr ""
"检查 ``scons --help`` 的输出, 以获取有关您愿意编译的版本的每个选项的详细信息."

msgid "Overriding the build options"
msgstr "重写构建选项"

msgid "Using a file"
msgstr "使用文件"

msgid ""
"The default ``custom.py`` file can be created at the root of the Godot "
"Engine source to initialize any SCons build options passed via the command "
"line:"
msgstr ""
"默认的 ``custom.py`` 文件可以在Godot引擎源的根部创建, 以初始化任何通过命令行"
"传递的SCons构建选项:"

msgid ""
"You can also disable some of the builtin modules before compiling, saving "
"some time it takes to build the engine. See :ref:`doc_optimizing_for_size` "
"page for more details."
msgstr ""
"你也可以在编译前禁用一些内置模块，节省一些构建引擎的时间。详情请参阅 :ref:"
"`doc_optimizing_for_size` 页面。"

msgid ""
"You can use the online `Godot build options generator <https://godot-build-"
"options-generator.github.io/>`__ to generate a ``custom.py`` file containing "
"SCons options. You can then save this file and place it at the root of your "
"Godot source directory."
msgstr ""
"您可以使用在线 `Godot 构建选项生成器 <https://godot-build-options-generator."
"github.io/>`__ , 生成一个包含SCons选项的 ``custom.py`` 文件. 然后您可以保存这"
"个文件, 并将其放在Godot源目录的根目录下."

msgid ""
"Another custom file can be specified explicitly with the ``profile`` command "
"line option, both overriding the default build configuration:"
msgstr ""
"另一个自定义文件可以用 ``profile`` 命令行选项明确指定, 都会覆盖默认的构建配"
"置:"

msgid ""
"Build options set from the file can be overridden by the command line "
"options."
msgstr "从文件中设置的构建选项可以被命令行选项所覆盖."

msgid "It's also possible to override the options conditionally:"
msgstr "也可以有条件地重写这些选项:"

msgid "Using the SCONSFLAGS"
msgstr "使用SCONSFLAGS"

msgid ""
"``SCONSFLAGS`` is an environment variable which is used by the SCons to set "
"the options automatically without having to supply them via the command line."
msgstr ""
"``SCONSFLAGS`` 是一个环境变量,SCons用来自动设置选项, 而无需通过命令行提供."

#, fuzzy
msgid ""
"For instance, you may want to force a number of CPU threads with the "
"aforementioned ``-j`` option for all future builds:"
msgstr "例如, 你可能希望在未来的所有构建中, 与上述 ``-j`` 选项并行构建Godot:"

msgid "Export templates"
msgstr "导出模板"

msgid ""
"Official export templates are downloaded from the Godot Engine site: "
"`godotengine.org <https://godotengine.org/>`__. However, you might want to "
"build them yourself (in case you want newer ones, you are using custom "
"modules, or simply don't trust your own shadow)."
msgstr ""
"官方的导出模板可以从 `Godot 的官方网站 <https://godotengine.org/>`__ 下载到. "
"此外, 你可能想要自己构建它们(可能想要构建更新的版本, 要使用自定义模块, 不信任"
"我们编译的包是否安全)."

msgid ""
"If you download the official export templates package and unzip it, you will "
"notice that most files are optimized binaries or packages for each platform:"
msgstr ""
"如果下载官方导出模板程序包并解压缩, 您会注意到大多数文件都是针对每个平台的优"
"化二进制文件或程序包:"

msgid ""
"To create those yourself, follow the instructions detailed for each platform "
"in this same tutorial section. Each platform explains how to create its own "
"template."
msgstr ""
"要自己创建它们, 请按照该教程中针对每个平台的详细说明的部分进行操作. 每个平台"
"都说明了如何创建自己的模板."

msgid ""
"The ``version.txt`` file should contain the corresponding Godot version "
"identifier. This file is used to install export templates in a version-"
"specific directory to avoid conflicts. For instance, if you are building "
"export templates for Godot 3.1.1, ``version.txt`` should contain ``3.1.1."
"stable`` on the first line (and nothing else). This version identifier is "
"based on the ``major``, ``minor``, ``patch`` (if present) and ``status`` "
"lines of the `version.py file in the Godot Git repository <https://github."
"com/godotengine/godot/blob/master/version.py>`__."
msgstr ""
"``version.txt`` 文件应包含相应的 Godot 版本标识符。该文件用于在特定于版本的目"
"录中安装导出模板，以避免冲突。例如，如果您要为 Godot 3.1.1 构建导出模板，则 "
"``version.txt`` 文件的第一行应包含 ``3.1.1.stable``\\ （没有其他内容）。该版"
"本标识符\\ `在 Godot Git 仓库库中的 version.py 文件 <https://github.com/"
"godotengine/godot/blob/master/version.py>`__\\ 的 ``major``\\ 、\\ "
"``minor``\\ 、\\ ``patch``\\ （如果存在）和 ``status`` 行。"

msgid ""
"If you are developing for multiple platforms, macOS is definitely the most "
"convenient host platform for cross-compilation, since you can cross-compile "
"for almost every target (except for UWP). Linux and Windows come in second "
"place, but Linux has the advantage of being the easier platform to set this "
"up."
msgstr ""
"如果要针对多个平台进行开发, 则macOS绝对是用于交叉编译的最方便的主机平台, 因为"
"您可以针对几乎每个目标(UWP除外)进行交叉编译.Linux和Windows位居第二, 但是Linux"
"的优势是易于设置."

msgid "Translation status"
msgstr "翻译状态"
