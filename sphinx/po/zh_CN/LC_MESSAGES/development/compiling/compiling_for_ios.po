# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for iOS"
msgstr "为 iOS 平台编译"

msgid ""
"This page describes how to compile iOS export template binaries from source. "
"If you're looking to export your project to iOS instead, read :ref:"
"`doc_exporting_for_ios`."
msgstr ""
"这个页面描述的是如何从源码编译 iOS 导出模板二进制。如果你想要找的是导出项目"
"到 iOS，请阅读 :ref:`doc_exporting_for_ios`\\ 。"

msgid "Requirements"
msgstr "需求"

msgid ""
"SCons 3.0+ (you can install it via `Homebrew <https://brew.sh/>`_ or "
"`MacPorts <https://www.macports.org/>`_, you should be able to run ``scons`` "
"in a terminal when installed)."
msgstr ""
"SCons 3.0+（你可以通过 `Homebrew <https://brew.sh/>`_ 或 `MacPorts <https://"
"www.macports.org/>`_ 安装它，安装后你应该可以在终端运行 ``scons`` ）。"

msgid ""
"Xcode 10.0 (or later) with the iOS (10.0) SDK and the command line tools."
msgstr "Xcode 10.0(或更高版本)以及iOS(10.0)SDK和命令行工具."

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "要获取编译所需的 Godot 源码，请参阅 :ref:`doc_getting_source`\\ 。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关 Godot 的 SCons 用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

msgid "Compiling"
msgstr "编译"

msgid "Open a Terminal, go to the root dir of the engine source code and type:"
msgstr "打开终端, 转到引擎源代码的根目录并键入:"

msgid "for a debug build, or:"
msgstr "针对调试版本, 或:"

msgid ""
"for a release build (check ``platform/iphone/detect.py`` for the compiler "
"flags used for each configuration)."
msgstr ""
"对于发布版本(检查 ``platform/iphone/detect.py`` 以获取用于每种配置的编译器标"
"志)."

msgid "Alternatively, you can run"
msgstr "或者, 你可以运行"

msgid "for a Simulator executable."
msgstr "用于模拟器可执行文件."

msgid ""
"For recent devices, Apple requires 64-bit versions of application binaries "
"when you are uploading to the Apple Store. The best way to provide these is "
"to create a bundle in which there are both 32-bit and 64-bit binaries, so "
"every device will be able to run the game."
msgstr ""
"对于最新的设备, 当您上载到苹果商店时, 苹果要求64位版本的应用程序二进制文件. "
"提供这些功能的最好方法是创建一个包, 其中包含32位和64位二进制文件, 这样每个设"
"备都可以运行游戏."

msgid ""
"It can be done in three steps: first compile the 32-bit version, then "
"compile the 64-bit version and then use ``lipo`` to bundle them into one "
"\"universal\" binary. All those steps can be performed with following "
"commands:"
msgstr ""
"可以分三步完成: 首先编译32位版本, 再编译64位版本, 然后使用 ``lipo`` 命令将它"
"们绑定到一个 \"通用(universal)\" 二进制文件中. 所有这些步骤都可以通过以下命令"
"执行:"

msgid ""
"If you also want to provide a simulator build (reduces the chance of any "
"linker errors with dependencies), you'll need to build and lipo the "
"``x86_64`` architecture as well."
msgstr ""
"如果您还想提供一个模拟器构建(减少具有依赖项的任何链接器错误的机会), 您还需要"
"构建和 ``lipo`` ``x86_64`` 体系结构."

msgid "Run"
msgstr "运行"

msgid ""
"To run on a device or simulator, follow these instructions: :ref:"
"`doc_exporting_for_ios`."
msgstr ""
"要在设备或模拟器上运行, 请按照以下说明操作: :ref:`doc_exporting_for_ios`."

msgid ""
"Replace or add your executable to the Xcode project, and change the "
"\"executable name\" property on Info.plist accordingly if you use an "
"alternative build."
msgstr ""
"将你的可执行文件替换或添加到Xcode项目, 如果你使用替代版本, 则相应地更改Info."
"plist上的 ``可执行文件名称`` 属性."

msgid "Translation status"
msgstr "翻译状态"
