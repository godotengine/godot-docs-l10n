# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Qt Creator"
msgstr "Qt Creator"

msgid ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ is a free, open "
"source IDE for all desktop platforms."
msgstr ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ 是一个自由、开源的 "
"IDE，适用于所有桌面平台。"

msgid "Importing the project"
msgstr "导入项目"

msgid ""
"From the Qt Creator's main screen select **New Project > Import Project > "
"Import Existing Project**."
msgstr ""
"在Qt Creator的主屏幕上选择 **New Project > Import Project > Import Existing "
"Project** ."

msgid "Under **Location** select the Godot root folder."
msgstr "在 **Location** 项下选择 Godot 源代码目录的绝对路径."

msgid ""
"Next, you can choose which folders and files will be visible to the project. "
"While C/C++ files are added automatically, other extensions can be "
"potentially useful: ``*.glsl`` for shader files, ``*.py`` for buildsystem "
"files, ``*.java`` for Android platform development, ``*.mm`` for macOS "
"platform development."
msgstr ""
"接下来, 你可以选择哪些文件夹和文件将对项目可见. 虽然C/C++文件是自动添加的, 但"
"其他扩展名也可能是有用的. ``*.glsl`` 用于着色器文件, ``*.py`` 用于构建系统文"
"件, ``*.java`` 用于Android平台开发, ``*.mm`` 用于MacOS平台开发."

msgid ""
"You can change this configuration later by right-clicking on your project "
"and selecting the **Edit Files...** option."
msgstr "你可以在之后通过在你的项目上右键选择 **编辑文件..** 选项来更改此配置."

msgid "Finish the import."
msgstr "完成导入."

msgid ""
"Open the ``project_name.includes`` file and add a line containing ``.`` to "
"it to correctly enable the code completion."
msgstr ""
"打开 ``project_name.includes`` 文件, 并在其中添加包含 ``.`` 的行, 以正确启用"
"代码自动完成功能."

msgid "From the left-side menu select **Projects** and open the **Build** tab."
msgstr "从左侧菜单选择 **Projects** , 并打开 **Build** 标签."

msgid "Delete the predefined ``make`` build step."
msgstr "删除预定义的 ``make`` 构建步骤."

msgid ""
"Click **Add Build Step > Custom Process Step** to add a new build step with "
"the following settings:"
msgstr ""
"单击 **Add Build Step > Custom Process Step** , 以添加具有以下设置的新构建步"
"骤:"

msgid "Command"
msgstr "命令"

msgid "**scons**"
msgstr "**scons**"

msgid "Arguments"
msgstr "参数"

msgid ""
"See :ref:`doc_introduction_to_the_buildsystem` for a full list of arguments."
msgstr "参见 :ref:`doc_introduction_to_the_buildsystem`, 获取完整的参数列表."

msgid ""
"If the build fails with ``Could not start process \"scons\"``, it can mean "
"that ``scons`` is not in your ``PATH`` environment variable. In this case, "
"you'll have to specify the full path to the SCons binary."
msgstr ""
"如果编译失败, ``Could not start process \"scons\"`` , 这可能意味着 ``scons`` "
"不在你的 ``PATH`` 环境变量中. 在这种情况下, 你必须指定SCons可执行文件的完整路"
"径."

msgid "Debugging the project"
msgstr "调试项目"

msgid "From the left-side menu select **Projects** and open the **Run** tab."
msgstr "从左侧菜单选择 **项目** , 并打开 **运行** 选项卡."

msgid ""
"Under **Executable** specify the path to your executable located in the "
"``<Godot root directory>/bin`` folder. The name depends on your build "
"configuration, e.g. ``godot.x11.tools.64`` for 64-bit X11 platform with "
"``tools`` enabled. You can use ``%{buildDir}`` to reference the project "
"root, e.g: ``%{buildDir}/bin/godot.x11.opt.tools.64``."
msgstr ""
"在 **Executable** 下指定位于 ``<Godot根目录>/bin`` 文件夹中的可执行文件的路"
"径. 文件名取决于你的编译配置, 例如: ``godot.x11.tools.64`` 对于64位X11平台, "
"启用 ``tools`` . 你可以使用 ``%{buildDir}`` 来引用项目根目录, 例如: "
"``%{buildDir}/bin/godot.x11.opt.tools.64`` ."

msgid ""
"If you want to run a specific project, specify its root folder under "
"**Working directory**."
msgstr "如果你想运行一个特定的项目, 在 **工作目录** 下指定其根文件夹."

msgid ""
"If you want to run the editor, add ``-e`` to the **Command line arguments** "
"field."
msgstr "如果你想运行编辑器, 请在 **命令行参数** 栏中添加 ``-e`` ."

msgid ""
"To learn more about command line arguments, refer to the :ref:`command line "
"tutorial <doc_command_line_tutorial>`."
msgstr ""
"要了解更多的命令行参数, 请参考 :ref:`命令行教程 "
"<doc_command_line_tutorial>` ."

msgid "Code style configuration"
msgstr "代码风格配置"

msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and the IDE should help them follow it. By "
"default, Qt Creator uses spaces for indentation which doesn't match the "
"Godot code style guidelines. You can change this behavior by changing the "
"**Code Style** in **Tools > Options > C++**."
msgstr ""
"开发人员必须遵循项目的\\ :ref:`代码风格 <doc_code_style_guidelines>`\\ ，IDE "
"应该可以帮助进行。默认情况下，Qt Creator 使用空格缩进，这与 Godot 的代码风格"
"不一致。你可以通过改变 **Tools > Options > C++** 中的 **Code Style** 来改变这"
"种行为。"

msgid ""
"Click on **Edit** to change the current settings, then click on **Copy Built-"
"in Code Style** button to set a new code style. Set a name for it (e.g. "
"Godot) and change the Tab policy to be **Tabs Only**."
msgstr ""
"点击 **Edit** 来改变当前的设置, 然后点击 **Copy Built-in Code Style** 按钮来"
"设置一个新的代码风格. 为它设置一个名称(如Godot), 并将Tab策略改为 **Tabs "
"Only** ."

msgid ""
"If you run into any issues, ask for help in one of `Godot's community "
"channels <https://godotengine.org/community>`__."
msgstr ""
"如果遇到问题, 也可在 `Godot 社区论坛 <https://godotengine.org/community>`__ "
"中寻求帮助."

msgid "Translation status"
msgstr "翻译状态"
