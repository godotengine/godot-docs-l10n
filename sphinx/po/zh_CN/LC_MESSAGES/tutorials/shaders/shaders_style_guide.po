# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Shaders style guide"
msgstr "着色器风格指南"

msgid ""
"This style guide lists conventions to write elegant shaders. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""
"本风格指南列出了编写优雅着色器的规范。其目的是鼓励编写干净、可读的代码，并促"
"进各项目、讨论和教程的一致性。希望这也能支持自动格式化工具的发展。"

msgid ""
"Since the Godot shader language is close to C-style languages and GLSL, this "
"guide is inspired by Godot's own GLSL formatting. You can view an example of "
"a GLSL file in Godot's source code `here <https://github.com/godotengine/"
"godot/blob/master/drivers/gles2/shaders/copy.glsl>`__."
msgstr ""
"由于 Godot 的着色器语言与 C 风格语言和 GLSL 很接近，所以本指南的灵感来自于 "
"Godot 自己的 GLSL 格式。你可以在 Godot 的源代码中查看 GLSL 文件的\\ `例子 "
"<https://github.com/godotengine/godot/blob/master/drivers/gles2/shaders/copy."
"glsl>`__\\ 。"

msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""
"风格指南并不是硬性的规则手册。有时，您可能无法应用下面的一些规范。当这种情况"
"发生时，请使用你最好的判断，并询问其他开发人员的见解。"

msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""
"一般来说，在项目和团队中保持代码的一致性比一板一眼地遵循本指南更为重要。"

msgid ""
"Godot's built-in shader editor uses a lot of these conventions by default. "
"Let it help you."
msgstr "Godot的内置着色器编辑器默认使用了很多这样的约定. 让它来帮助你."

msgid "Here is a complete shader example based on these guidelines:"
msgstr "下面是基于这些规范的完整着色器的例子："

msgid "Formatting"
msgstr "格式"

msgid "Encoding and special characters"
msgstr "编码和特殊字符"

msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr "使用换行符（\\ **LF**\\ ）换行，而不是 CRLF 或 CR。\\ *（编辑器默认）*"

msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr "在每个文件的末尾使用一个换行符。\\ *（编辑器默认）*"

msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""
"使用不带\\ `字节顺序标记 <https://zh.wikipedia.org/zh-cn/"
"%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F>`_\\ 的 "
"**UTF-8** 编码。\\ *（编辑器默认）*"

msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr "使用\\ **制表符**\\ 代替空格进行缩进。\\ *（编辑器默认）*"

msgid "Indentation"
msgstr "缩进"

msgid ""
"Each indent level should be one tab greater than the block containing it."
msgstr "每个缩进级别应比包含它的区块多一个制表符."

msgid "**Good**:"
msgstr "**良好的** :"

msgid "**Bad**:"
msgstr "**糟糕的** :"

msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr "使用2个缩进级别来区分续行与常规代码块."

msgid "Line breaks and blank lines"
msgstr "换行符和空白行"

msgid ""
"For a general indentation rule, follow `the \"1TBS Style\" <https://en."
"wikipedia.org/wiki/Indentation_style#Variant:_1TBS_(OTBS)>`_ which "
"recommends placing the brace associated with a control statement on the same "
"line. Always use braces for statements, even if they only span one line. "
"This makes them easier to refactor and avoids mistakes when adding more "
"lines to an ``if`` statement or similar."
msgstr ""
"对于一般的缩进规则, 请遵循 `\"1TBS样式\" <https://en.wikipedia.org/wiki/"
"Indentation_style#Variant:_1TBS_(OTBS)>`, 建议将与控制语句关联的括号放在同一"
"行上. 始终对语句使用大括号, 即使它们只占一行. 这使它们更易于重构, 并避免在向 "
"``if`` 语句或类似语句中添加更多行时出错."

msgid "Blank lines"
msgstr "空白行"

msgid "Surround function definitions with one (and only one) blank line:"
msgstr "用一个(而且只有一个)空行围绕着函数定义:"

msgid ""
"Use one (and only one) blank line inside functions to separate logical "
"sections."
msgstr "在函数中使用一个(而且只有一个)空行来分隔逻辑部分."

msgid "Line length"
msgstr "行的长度"

msgid "Keep individual lines of code under 100 characters."
msgstr "把每行代码控制在100个字符以内."

msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two shaders opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""
"如果可以的话, 尽量将行数保持在80个字符以下. 这有助于在小显示器上和在外部文本"
"编辑器中并排打开的两个着色器上阅读代码. 例如, 在查看差异修改时."

msgid "One statement per line"
msgstr "一条语句一行"

msgid "Never combine multiple statements on a single line."
msgstr "切勿在一行中合并多个语句."

msgid "The only exception to that rule is the ternary operator:"
msgstr "该规则的唯一例外是三元运算符："

msgid "Comment spacing"
msgstr "注释间距"

msgid ""
"Regular comments should start with a space, but not code that you comment "
"out. This helps differentiate text comments from disabled code."
msgstr ""
"普通注释开头应该留一个空格，但如果是为了停用代码而将其注释掉则不需要留。这样"
"可以用来区分文本注释和停用的代码。"

msgid ""
"Don't use multiline comment syntax if your comment can fit on a single line:"
msgstr "如果你的注释可以容纳在单行上, 就不要使用多行注释语法:"

msgid ""
"In the shader editor, to make the selected code a comment (or uncomment it), "
"press :kbd:`Ctrl + K`. This feature adds or removes ``//`` at the start of "
"the selected lines."
msgstr ""
"在着色器编辑器中, 要使选定的代码成为注释或取消注释, 按 :kbd:`Ctrl + K` . 该功"
"能在所选行的开头添加或删除 ``//`` ."

msgid "Whitespace"
msgstr "空格"

msgid ""
"Always use one space around operators and after commas. Also, avoid "
"extraneous spaces in function calls."
msgstr ""
"在运算符周围和逗号后面总是使用一个空格. 另外, 避免在函数调用中使用多余的空格."

msgid "Don't use spaces to align expressions vertically:"
msgstr "不要使用空格来垂直对齐表达式："

msgid "Floating-point numbers"
msgstr "浮点数字"

msgid ""
"Always specify at least one digit for both the integer and fractional part. "
"This makes it easier to distinguish floating-point numbers from integers, as "
"well as distinguishing numbers greater than 1 from those lower than 1."
msgstr ""
"在整数和小数部分请始终指定至少一个数字, 这样可以更容易区分浮点和整数, 以及区"
"分大于1和小于1的数字. 这样可以更容易区分浮点数和整数, 以及区分大于1和小于1的"
"数字."

msgid "Accessing vector members"
msgstr "访问向量成员"

msgid ""
"Use ``r``, ``g``, ``b``, and ``a`` when accessing a vector's members if it "
"contains a color. If the vector contains anything else than a color, use "
"``x``, ``y``, ``z``, and ``w``. This allows those reading your code to "
"better understand what the underlying data represents."
msgstr ""
"如果向量包含颜色, 在访问向量成员时使用 ``r`` , ``g`` , ``b`` 和 ``a`` . 如果"
"向量中不包含颜色, 则使用 ``x`` , ``y`` , ``z`` 和 ``w`` . 这可以让那些阅读你"
"的代码的人更好地理解基础数据的含义."

msgid "Naming conventions"
msgstr "命名约定"

msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code."
msgstr ""
"这些命名约定遵循 Godot 引擎风格. 打破这些都会使你的代码与内置的命名约定冲突, "
"导致风格不一致的代码."

msgid "Functions and variables"
msgstr "函数与变量"

msgid "Use snake\\_case to name functions and variables:"
msgstr "函数与变量使用 snake\\_case 命名："

msgid "Constants"
msgstr "常量"

msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr "使用 CONSTANT\\_CASE, 全部大写, 用下划线(\\_)分隔单词 :"

msgid "Code order"
msgstr "代码顺序"

msgid "We suggest to organize shader code this way:"
msgstr "我们建议以这种方式组织着色器代码:"

msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""
"我们优化了顺序, 使从上到下阅读代码变得容易, 帮助第一次阅读代码的开发人员了解"
"代码的工作原理, 并避免与变量声明顺序相关的错误."

msgid "This code order follows two rules of thumb:"
msgstr "此代码顺序遵循两个经验法则:"

msgid "Metadata and properties first, followed by methods."
msgstr "先是元数据和属性, 然后是方法."

msgid ""
"\"Public\" comes before \"private\". In a shader language's context, "
"\"public\" refers to what's easily adjustable by the user (uniforms)."
msgstr ""
"“公共”在“私有”之前。在着色器语言的语境中，“公共”指的是用户可以轻易调整的东西"
"（uniform）。"

msgid "Local variables"
msgstr "局部变量"

msgid ""
"Declare local variables as close as possible to their first use. This makes "
"it easier to follow the code, without having to scroll too much to find "
"where the variable was declared."
msgstr ""
"声明局部变量的位置离首次使用它的位置越近越好. 这让人更容易跟上代码的思路, 而"
"不需要上下翻找该变量的声明位置."

msgid "Translation status"
msgstr "翻译状态"
