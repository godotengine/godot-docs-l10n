# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Background loading"
msgstr "后台加载"

msgid ""
"When switching the main scene of your game (e.g. going to a new level), you "
"might want to show a loading screen with some indication that progress is "
"being made. The main load method (``ResourceLoader::load`` or just ``load`` "
"from GDScript) blocks your thread, making your game appear frozen and "
"unresponsive while the resource is being loaded. This document discusses the "
"alternative of using the ``ResourceInteractiveLoader`` class for smoother "
"load screens."
msgstr ""
"当切换游戏的主场景时，例如进入一个新的关卡，你可能想显示一个加载屏幕，并显示"
"一些正在进行的进度。主加载方法（\\ ``ResourceLoader::load`` 或 GDScript 中的 "
"``load``\\ ）会阻塞线程，使你的游戏在资源加载时显得冻结和无响应。本文档讨论了"
"使用 ``ResourceInteractiveLoader`` 类来实现更平滑的加载屏幕的替代方法。"

msgid "ResourceInteractiveLoader"
msgstr "ResourceInteractiveLoader"

msgid ""
"The ``ResourceInteractiveLoader`` class allows you to load a resource in "
"stages. Every time the method ``poll`` is called, a new stage is loaded, and "
"control is returned to the caller. Each stage is generally a sub-resource "
"that is loaded by the main resource. For example, if you're loading a scene "
"that loads 10 images, each image will be one stage."
msgstr ""
"``ResourceInteractiveLoader`` 类允许在阶段中加载资源. 每次调用 ``poll`` 方法"
"时, 都会加载一个新阶段, 并将控制权返回给调用方. 每个阶段通常是由主资源加载的"
"子资源. 例如, 如果您正在加载一个场景, 该场景加载10幅图像, 那么每个图像将是一"
"个阶段."

msgid "Usage"
msgstr "用法"

msgid "Usage is generally as follows"
msgstr "一般用法如下"

msgid "Obtaining a ResourceInteractiveLoader"
msgstr "获取 ResourceInteractiveLoader"

msgid ""
"This method will give you a ResourceInteractiveLoader that you will use to "
"manage the load operation."
msgstr ""
"此方法将向您提供一个 ResourceInteractiveLoader，您将使用它来管理加载操作。"

msgid "Polling"
msgstr "轮询"

msgid ""
"Use this method to advance the progress of the load. Each call to ``poll`` "
"will load the next stage of your resource. Keep in mind that each stage is "
"one entire \"atomic\" resource, such as an image, or a mesh, so it will take "
"several frames to load."
msgstr ""
"使用此方法可以推进加载的进度。每次调用 ``poll`` 都会加载资源的下一个阶段。请"
"记住，每个阶段都是一个完整的“原子”资源，例如图像或网格，往往需要几帧才能加载"
"完。"

msgid ""
"Returns ``OK`` on no errors, ``ERR_FILE_EOF`` when loading is finished. Any "
"other return value means there was an error and loading has stopped."
msgstr ""
"没有错误时返回 ``OK``\\ ，加载完成后返回 ``ERR_FILE_EOF``\\ 。返回其他任何值"
"时表示存在错误并且已停止加载。"

msgid "Load progress (optional)"
msgstr "加载进度（可选）"

msgid "To query the progress of the load, use the following methods:"
msgstr "可以使用以下方法查询加载进度："

msgid ""
"``get_stage_count`` returns the total number of stages to load. "
"``get_stage`` returns the current stage being loaded."
msgstr ""
"``get_stage_count`` 返回要加载的阶段总数。\\ ``get_stage`` 返回当前正在加载的"
"阶段。"

msgid "Forcing completion (optional)"
msgstr "强制完成（可选）"

msgid ""
"Use this method if you need to load the entire resource in the current "
"frame, without any more steps."
msgstr "如果需要在当前帧中加载整个资源，请使用此方法，无需执行后续步骤。"

msgid "Obtaining the resource"
msgstr "获取资源"

msgid ""
"If everything goes well, use this method to retrieve your loaded resource."
msgstr "如果一切顺利，请使用此方法获取已加载的资源。"

msgid "Example"
msgstr "示例"

msgid ""
"This example demonstrates how to load a new scene. Consider it in the "
"context of the :ref:`doc_singletons_autoload` example."
msgstr ""
"此示例演示如何加载新场景。请结合 :ref:`doc_singletons_autoload` 示例来看。"

msgid ""
"First, we set up some variables and initialize the ``current_scene`` with "
"the main scene of the game:"
msgstr ""
"首先，我们设置一些变量，然后用游戏的主场景初始化 ``current_scene``\\ ："

msgid ""
"The function ``goto_scene`` is called from the game when the scene needs to "
"be switched. It requests an interactive loader, and calls "
"``set_process(true)`` to start polling the loader in the ``_process`` "
"callback. It also starts a \"loading\" animation, which could show a "
"progress bar or loading screen."
msgstr ""
"需要切换场景时，游戏中会调用函数 ``goto_scene``\\ 。这个函数会请求一个交互式"
"加载器，并调用 ``set_process(true)`` 开始在 ``_process`` 回调中轮询加载器。它"
"还会启动“加载”动画来显示进度条或加载界面。"

msgid ""
"``_process`` is where the loader is polled. ``poll`` is called, and then we "
"deal with the return value from that call. ``OK`` means keep polling, "
"``ERR_FILE_EOF`` means loading is done, anything else means there was an "
"error. Also note we skip one frame (via ``wait_frames``, set on the "
"``goto_scene`` function) to allow the loading screen to show up."
msgstr ""
"加载器的轮询是在 ``_process`` 中进行的。它首先会调用 ``poll``\\ ，然后我们处"
"理该调用的返回值。\\ ``OK`` 表示继续轮询，\\ ``ERR_FILE_EOF`` 表示加载完成，"
"其它值表示出错。另外注意我们跳过了一帧（使用的是 ``wait_frames``\\ ，在 "
"``goto_scene`` 函数里设置）来让加载界面能够显示出来。"

msgid ""
"Note how we use ``OS.get_ticks_msec`` to control how long we block the "
"thread. Some stages might load fast, which means we might be able to cram "
"more than one call to ``poll`` in one frame; some might take way more than "
"your value for ``time_max``, so keep in mind we won't have precise control "
"over the timings."
msgstr ""
"注意我们是如何使用 ``OS.get_ticks_msec`` 来控制阻塞线程的时间。有些阶段可能加"
"载得很快，这意味着我们可能会在一帧中塞进多个对 ``poll`` 的调用；有些阶段可能"
"需要比 ``time_max`` 值更多，所以请记住我们无法精确控制时间。"

msgid ""
"Some extra helper functions. ``update_progress`` updates a progress bar, or "
"can also update a paused animation (the animation represents the entire load "
"process from beginning to end). ``set_new_scene`` puts the newly loaded "
"scene on the tree. Because it's a scene being loaded, ``instance()`` needs "
"to be called on the resource obtained from the loader."
msgstr ""
"一些额外的辅助函数。\\ ``update_progress`` 更新进度条，或者也可以更新暂停的动"
"画（动画从头到尾表示整个加载过程）。\\ ``set_new_scene`` 将新加载的场景放在树"
"上。因为它是一个被加载的场景，所以需要在从加载器获得的资源上调用 "
"``instance()``\\ 。"

msgid "Using multiple threads"
msgstr "使用多线程"

msgid ""
"ResourceInteractiveLoader can be used from multiple threads. A couple of "
"things to keep in mind if you attempt it:"
msgstr ""
"可以在多个线程中使用 ResourceInteractiveLoader。如果你想试一试，请记住以下几"
"点："

msgid "Use a semaphore"
msgstr "使用信号量"

msgid ""
"While your thread waits for the main thread to request a new resource, use a "
"``Semaphore`` to sleep (instead of a busy loop or anything similar)."
msgstr ""
"你的线程在等待主线程请求新的资源时，应使用 ``Semaphore``\\ （信号量）来休眠"
"（而不是不断循环或者类似的东西）。."

msgid "Not blocking main thread during the polling"
msgstr "在轮询期间不阻塞主线程"

msgid ""
"If you have a mutex to allow calls from the main thread to your loader "
"class, don't lock the main thread while you call ``poll`` on your loader "
"class. When a resource is done loading, it might require some resources from "
"the low-level APIs (VisualServer, etc), which might need to lock the main "
"thread to acquire them. This might cause a deadlock if the main thread is "
"waiting for your mutex while your thread is waiting to load a resource."
msgstr ""
"如果你使用互斥锁来保护从主线程对加载器类的调用，调用加载器类的 ``poll`` 时不"
"要对主线程加锁。资源加载完成后，可能会通过底层 API（VisualServer 等）来获取一"
"些必要的资源，获取时可能会需要对主线程加锁。如果此时你的线程正在等待资源的加"
"载，而主线程在等待你的互斥锁，就可能导致死锁。"

msgid "Example class"
msgstr "示例类"

msgid ""
"You can find an example class for loading resources in threads here: :"
"download:`resource_queue.gd <files/resource_queue.gd>`. Usage is as follows:"
msgstr ""
"您可以在这里找到一个用于在线程中加载资源的示例类：:download:`resource_queue."
"gd <files/resource_queue.gd>`\\ 。用法如下："

msgid "Call after you instance the class to start the thread."
msgstr "在实例化类之后调用以启动线程."

msgid ""
"Queue a resource. Use optional argument \"p_in_front\" to put it in front of "
"the queue."
msgstr "对于资源队列. 使用可选的参数 \"p_in_front\" , 将其放在队列的前面."

msgid "Remove a resource from the queue, discarding any loading done."
msgstr "从队列中删除资源, 丢弃任何已完成的加载."

msgid ""
"Returns ``true`` if a resource is fully loaded and ready to be retrieved."
msgstr "如果资源已完全加载并准备好被检索, 则返回 ``true`` ."

msgid ""
"Get the progress of a resource. Returns -1 if there was an error (for "
"example if the resource is not in the queue), or a number between 0.0 and "
"1.0 with the progress of the load. Use mostly for cosmetic purposes "
"(updating progress bars, etc), use ``is_ready`` to find out if a resource is "
"actually ready."
msgstr ""
"获取一个资源的进度. 如果有错误, 返回-1(例如, 如果资源不在队列中), 或者返回一"
"个介于0.0和1.0之间的数字, 表示加载的进度. 主要用于预览的目的(更新进度条等), "
"使用 ``is_ready`` 来了解资源是否真的准备完成."

msgid ""
"Returns the fully loaded resource, or ``null`` on error. If the resource is "
"not fully loaded (``is_ready`` returns ``false``), it will block your thread "
"and finish the load. If the resource is not on the queue, it will call "
"``ResourceLoader::load`` to load it normally and return it."
msgstr ""
"返回完全加载的资源，或者错误时返回 ``null``\\ 。如果资源没有完全加载（\\ "
"``is_ready`` 返回 ``false``\\ ），它将阻塞你的线程并完成加载。如果资源不在队"
"列中，它将调用 ``ResourceLoader::load`` 来正常加载并返回。"

msgid "Example:"
msgstr "示例："

msgid ""
"**Note**: this code, in its current form, is not tested in real world "
"scenarios. If you run into any issues, ask for help in one of `Godot's "
"community channels <https://godotengine.org/community>`__."
msgstr ""
"**注意**\\ ：这段代码目前的形式没有在实际的场景中进行测试。如果您遇到任何问"
"题，请在 `Godot 的社区频道 <https://godotengine.org/community>`__\\ 中寻求帮"
"助。"

msgid "Translation status"
msgstr "翻译状态"
