# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Audio streams"
msgstr "音频流"

msgid "Introduction"
msgstr "前言"

msgid ""
"As you might have already read in :ref:`doc_audio_buses`, sound is sent to "
"each bus via an AudioStreamPlayer node. There are different kinds of "
"AudioStreamPlayers. Each one loads an AudioStream and plays it back."
msgstr ""
"正如你可能已经在 :ref:`doc_audio_buses` 中读到的一样, 声音通过"
"AudioStreamPlayer节点发送到每个总线.AudioStreamPlayer有很多种. 每一个都会加载"
"一个AudioStream并进行播放."

msgid "AudioStream"
msgstr "AudioStream"

msgid ""
"An audio stream is an abstract object that emits sound. The sound can come "
"from many places, but is most commonly loaded from the filesystem. Audio "
"files can be loaded as AudioStreams and placed inside an AudioStreamPlayer. "
"You can find information on supported formats and differences in :ref:"
"`doc_importing_audio_samples`."
msgstr ""
"音频流(audio stream)是一种发出声音的抽象对象. 声音可以来自许多地方, 最常见的"
"是从文件系统加载. 音频文件可以作为AudioStreams加载并放置在AudioStreamPlayer"
"中. 你可以在 :ref:`doc_importing_audio_samples` 中找到有关支持的格式和格式差"
"异的信息."

msgid ""
"There are other types of AudioStreams, such as AudioStreamRandomPitch. This "
"one makes a random adjustment to the sound's pitch every time it's played "
"back. This can be helpful for adding variation to sounds that are played "
"back often."
msgstr ""
"AudioStream有不同的类型, 例如AudioStreamRandomPitch, 它在每次播放声音时随机调"
"整音高(对于某些音效非常有用), 可以为频繁播放的声音增加一些变化."

msgid "AudioStreamPlayer"
msgstr "AudioStreamPlayer"

msgid ""
"This is the standard, non-positional stream player. It can play to any bus. "
"In 5.1 sound setups, it can send audio to stereo mix or front speakers."
msgstr ""
"这是一个标准的, 非位置型的流播放器, 可以播放到任意总线. 在5.1立体声中, 它可以"
"将音频发送到立体声混音或前置扬声器."

msgid "AudioStreamPlayer2D"
msgstr "AudioStreamPlayer2D"

msgid ""
"This is a variant of AudioStreamPlayer, but emits sound in a 2D positional "
"environment. When close to the left of the screen, the panning will go left. "
"When close to the right side, it will go right."
msgstr ""
"这是AudioStreamPlayer的一种变体, 它将声音发散到2D位置环境中. 当靠近屏幕左侧"
"时, 声像将向左偏移. 靠近右侧时, 则向右偏移."

msgid ""
"Area2Ds can be used to divert sound from any AudioStreamPlayer2Ds they "
"contain to specific buses. This makes it possible to create buses with "
"different reverb or sound qualities to handle action happening in a "
"particular parts of your game world."
msgstr ""
"Area2D可以将它们包含的AudioStreamPlayer2D的声音转移到特定的总线上. 这样就可以"
"创造具有不同混响或声音质量的总线, 从而处理在游戏世界的特定区域中发生的动作."

msgid "AudioStreamPlayer3D"
msgstr "AudioStreamPlayer3D"

msgid ""
"This is a variant of AudioStreamPlayer, but emits sound in a 3D positional "
"environment. Depending on the location of the player relative to the screen, "
"it can position sound in stereo, 5.1 or 7.1 depending on the chosen audio "
"setup."
msgstr ""
"这是AudioStreamPlayer的一种变体, 它将声音发散到3D位置环境中. 根据播放器相对于"
"屏幕的位置, 它可以将声音定位在立体声(5.1或7.1)中, 具体取决于所选的音频设置."

msgid ""
"Similar to AudioStreamPlayer2D, an Area can divert the sound to an audio bus."
msgstr "类似AudioStreamPlayer2D,Area可以将声音转移到音频总线上."

msgid ""
"Unlike for 2D, the 3D version of AudioStreamPlayer has a few more advanced "
"options:"
msgstr "与2D不同,AudioStreamPlayer的3D版本有一些更高级的选项:"

msgid "Reverb buses"
msgstr "混响总线"

msgid ""
"Godot allows for 3D audio streams that enter a specific Area node to send "
"dry and wet audio to separate buses. This is useful when you have several "
"reverb configurations for different types of rooms. This is done by enabling "
"this type of reverb in the **Reverb Bus** section of the Area's properties:"
msgstr ""
"Godot允许进入特定Area节点的3D音频流将干音频和湿音频发送到不同的总线上. 当你为"
"不同类型的房间设置不同的混响配置时十分有用. 这是通过在Area属性的 **Reverb "
"Bus** 部分中启用此类混响来实现的:"

msgid ""
"At the same time, a special bus layout is created where each area receives "
"the reverb info from each area. A Reverb effect needs to be created and "
"configured in each reverb bus to complete the setup for the desired effect:"
msgstr ""
"同时, 还创建了一个特殊的总线布局, 每个区域都接收各自的混响信息. 最后需要在每"
"条总线中创建并配置一个实际的混响效果, 才能完成所需效果的设置:"

msgid ""
"The Area's **Reverb Bus** section also has a parameter named **Uniformity**. "
"Some types of rooms bounce sounds more than others (like a warehouse), so "
"reverberation can be heard almost uniformly across the room even though the "
"source may be far away. Playing around with this parameter can simulate that "
"effect."
msgstr ""
"Area的 **Reverb Bus** 部分还有一个名为 **Uniformity** (均匀性)的参数. 有些类"
"型的房间比其他类型的房间反弹的声音更多(例如仓库), 因此即使声源离得很远, 也能"
"在整个房间里听到几乎均匀的混响. 调整此参数可以模拟这种效果."

msgid "Doppler"
msgstr "多普勒"

msgid ""
"When the relative velocity between an emitter and listener changes, this is "
"perceived as an increase or decrease in the pitch of the emitted sound. "
"Godot can track velocity changes in the AudioStreamPlayer3D and Camera "
"nodes. Both nodes have this property, which must be enabled manually:"
msgstr ""
"当发射源和接收者之间的相对速度发生变化时, 发出声音的音高会随之升高/降低.Godot"
"可以跟踪AudioStreamPlayer3D和Camera节点的速度变化. 这两个节点都有这个属性, 需"
"要手动启用:"

msgid ""
"Enable it by setting it depending on how objects will be moved: use **Idle** "
"for objects moved using ``_process``, or **Physics** for objects moved using "
"``_physics_process``. The tracking will happen automatically."
msgstr ""
"根据对象的移动方法选择启用设置: 如果用 ``_process`` 来移动, 选择 **Idle** ；"
"如果使用 ``_physics_process`` 来移动, 选择 **Physics** . 追踪将自动进行."

msgid "Translation status"
msgstr "翻译状态"
