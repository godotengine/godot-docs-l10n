# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Prototyping levels with CSG"
msgstr "使用 CSG 设计关卡原型"

msgid ""
"CSG stands for **Constructive Solid Geometry**, and is a tool to combine "
"basic shapes or custom meshes to create more complex shapes. In 3D modelling "
"software, CSG is mostly known as \"Boolean Operators\"."
msgstr ""
"CSG 是 **Constructive Solid Geometry**\\ （构造实体几何）的缩写，是一种将基本"
"形状或自定义网格组合起来以创建更复杂形状的工具。在三维建模软件中，CSG 多被称"
"为“布尔运算符”。"

msgid ""
"Level prototyping is one of the main uses of CSG in Godot. This technique "
"allows users to create simple versions of most common shapes by combining "
"primitives. Interior environments can be created by using inverted "
"primitives."
msgstr ""
"CSG 在 Godot 中的目的是将其用于关卡原型设计。该技术允许用户通过组合图元来创建"
"最常见形状的简单版本。可以使用反转图元创建室内环境。"

msgid ""
"The CSG nodes in Godot are mainly intended for prototyping. There is no "
"built-in support for UV mapping or editing 3D polygons (though extruded 2D "
"polygons can be used with the CSGPolygon node)."
msgstr ""
"Godot中的CSG节点主要用于原型设计. 没有内置的对UV贴图或编辑3D多边形的支持(尽管"
"挤出的2D多边形可以用CSGPolygon节点来使用)."

msgid ""
"If you're looking for an easy to use level design tool for a project, you "
"may want to use `Qodot <https://github.com/Shfty/qodot-plugin>`__ instead. "
"It lets you design levels using `TrenchBroom <https://kristianduske.com/"
"trenchbroom/>`__ and import them in Godot."
msgstr ""
"如果你正在为一个项目寻找一个简单易用的关卡设计工具, 你可能会想使用 `Qodot "
"<https://github.com/Shfty/qodot-plugin>`__ 来代替. 它可以让你使用 "
"`TrenchBroom <https://kristianduske.com/trenchbroom/>`__ 设计关卡, 并在Godot"
"中导入它们."

msgid "Introduction to CSG nodes"
msgstr "CSG 节点简介"

msgid ""
"Like other features of Godot, CSG is supported in the form of nodes. These "
"are the CSG nodes:"
msgstr "与 Godot 的其他功能一样，CSG 以节点的形式存在。这些是 CSG 节点："

msgid ":ref:`CSGBox <class_CSGBox>`"
msgstr ":ref:`CSGBox <class_CSGBox>`"

msgid ":ref:`CSGCylinder <class_CSGCylinder>` (also supports cone)"
msgstr ":ref:`CSGCylinder <class_CSGCylinder>` (也支持锥体)"

msgid ":ref:`CSGSphere <class_CSGSphere>`"
msgstr ":ref:`CSGSphere <class_CSGSphere>`"

msgid ":ref:`CSGTorus <class_CSGTorus>`"
msgstr ":ref:`CSGTorus <class_CSGTorus>`"

msgid ":ref:`CSGPolygon <class_CSGPolygon>`"
msgstr ":ref:`CSGPolygon <class_CSGPolygon>`"

msgid ":ref:`CSGMesh <class_CSGMesh>`"
msgstr ":ref:`CSGMesh <class_CSGMesh>`"

msgid ":ref:`CSGCombiner <class_CSGcombiner>`"
msgstr ":ref:`CSGCombiner <class_CSGcombiner>`"

msgid "CSG tools features"
msgstr "CSG 工具功能"

msgid "Every CSG node supports 3 kinds of boolean operations:"
msgstr "每个 CSG 节点都支持 3 种布尔运算："

msgid ""
"**Union:** Geometry of both primitives is merged, intersecting geometry is "
"removed."
msgstr "**并集（Union）：**\\ 合并两个图元的几何体，删除交叉的几何体。"

msgid ""
"**Intersection:** Only intersecting geometry remains, the rest is removed."
msgstr "**交集（Intersection）：**\\ 只保留相交的几何体，其余的被删除。"

msgid ""
"**Subtraction:** The second shape is subtracted from the first, leaving a "
"dent with its shape."
msgstr ""
"**差集（Subtraction）：**\\ 从第一种形状中减去第二种形状，留下一个凹陷的形"
"状。"

msgid "CSGPolygon"
msgstr "CSGPolygon"

msgid ""
"The :ref:`CSGPolygon <class_CSGPolygon>` node extrude along a Polygon drawn "
"in 2D (in X, Y coordinates) in the following ways:"
msgstr ""
":ref:`CSGPolygon <class_CSGPolygon>` 节点以下列方式沿着以 2D（X、Y 坐标）绘制"
"的多边形挤出："

msgid "**Depth:** Extruded back a given amount."
msgstr "**Depth：**\\ （深度）挤出一定量。"

msgid "**Spin:** Extruded while spinning around its origin."
msgstr "**Spin：**\\ （旋转）围绕原点旋转时挤出。"

msgid ""
"**Path:** Extruded along a Path node. This operation is commonly called "
"lofting."
msgstr "**路径(Path):** 沿路径节点挤出. 此操作通常称为放样."

msgid ""
"The **Path** mode must be provided with a :ref:`Path <class_Path>` node to "
"work. In the Path node, draw the path and the polygon in CSGPolygon will "
"extrude along the given path."
msgstr ""
"**Path** 模式需要一个 :ref:`Path <class_Path>` 节点来运行。在 Path 节点中绘制"
"路径，CSGPolygon 中的多边形将沿给定路径挤出。"

msgid "Custom meshes"
msgstr "自定义网格"

msgid ""
"Any mesh can be used for :ref:`CSGMesh <class_CSGMesh>`; the mesh can be "
"modelled in other software and imported into Godot. Multiple materials are "
"supported. There are some restrictions for geometry:"
msgstr ""
"任何网格都可以用于 :ref:`CSGMesh <class_CSGMesh>`, 网格可以在其他软件中建模并"
"导入Godot. 支持多种材质, 对几何体有一些限制:"

msgid "it must be closed,"
msgstr "它必须被关闭,"

msgid "it must not self-intersect,"
msgstr "它不能自我相交,"

msgid "it must not contain internal faces,"
msgstr "它不能包含内部面,"

msgid "every edge must connect to only two other faces."
msgstr "每条边都必须连接到另外两个面."

msgid "CSGCombiner"
msgstr "CSGCombiner"

msgid ""
"The :ref:`CSGCombiner <class_CSGCombiner>` node is an empty shape used for "
"organization. It will only combine children nodes."
msgstr ""
":ref:`CSGCombiner <class_CSGCombiner>` 节点是一个用于组织的空形状, 它只会合并"
"子节点."

msgid "Processing order"
msgstr "处理顺序"

msgid ""
"Every CSG node will first process its children nodes and their operations: "
"union, intersection or subtraction, in tree order, and apply them to itself "
"one after the other."
msgstr ""
"每个CSG节点将首先按树顺序处理其子节点及其操作: 并集, 交集或减法, 并将它们逐一"
"应用于自身."

msgid ""
"In the interest of performance, make sure CSG geometry remains relatively "
"simple, as complex meshes can take a while to process. If adding objects "
"together (such as table and room objects), create them as separate CSG "
"trees. Forcing too many objects in a single tree will eventually start "
"affecting performance. Only use binary operations where you actually need "
"them."
msgstr ""
"为了保证性能, 确保CSG几何体保持相对简单, 因为复杂的网格可能需要一段时间来处"
"理. 如果将对象添加在一起(如桌子和房间对象), 请将它们创建为单独的CSG树. 强制在"
"一棵树中添加太多对象最终会影响性能. 仅在实际需要的地方使用二进制操作."

msgid "Prototyping a level"
msgstr "原型设计"

msgid "We will prototype a room to practice the use of CSG tools."
msgstr "我们将对房间进行原型设计以练习使用CSG工具."

msgid ""
"Working in **Orthogonal** projection gives a better view when combining the "
"CSG shapes."
msgstr "在\\ **正交**\\ 视角下工作，在组合 CSG 形状时可以得到更好的视图。"

msgid "Our level will contain these objects:"
msgstr "我们的关卡将包含以下对象:"

msgid "a room,"
msgstr "一个房间,"

msgid "a bed,"
msgstr "一张床,"

msgid "a lamp,"
msgstr "一盏灯,"

msgid "a desk,"
msgstr "一张桌子,"

msgid "a bookshelf."
msgstr "一个书架."

msgid "Create a scene with a Spatial node as root node."
msgstr "使用Spatial节点作为根节点创建场景."

msgid ""
"The default lighting of the environment doesn't provide clear shading at "
"some angles. Change the display mode using **Display Overdraw** in the 3D "
"viewport menu, or add a DirectionalLight node to help you see clearly."
msgstr ""
"环境的默认光照在某些角度不能提供清晰的阴影。使用 3D 视图菜单中的\\ **显示重复"
"绘制**\\ 改变显示模式，或者添加一个 DirectionalLight 节点来帮助你清楚看到。"

msgid ""
"Create a CSGBox and name it ``room``, enable **Invert Faces** and change the "
"dimensions of your room."
msgstr ""
"创建一个 CSGBox 并将其命名为 ``room``\\ ，启用 **Invert Faces**\\ （反转面）"
"并改变你的房间的大小。"

msgid "Next, create a CSGCombiner and name it ``desk``."
msgstr "接下来, 创建一个CSGCombiner并将其命名为 ``desk`` ."

msgid "A desk has one surface and 4 legs:"
msgstr "桌子有一个表面和四条腿:"

msgid ""
"Create 1 CSGBox children node in **Union** mode for the surface and adjust "
"the dimensions."
msgstr "在 **Union** 模式下为曲面创建1个CSGBox子节点, 并调整大小."

msgid ""
"Create 4 CSGBox children nodes in **Union** mode for the legs and adjust the "
"dimensions."
msgstr "在 **Union** 模式下为腿部创建4个CSGBox子节点并调整大小."

msgid "Adjust their placement to resemble a desk."
msgstr "调整它们的摆放位置, 就像一张办公桌."

msgid ""
"CSG nodes inside a CSGCombiner will only process their operation within the "
"combiner. Therefore, CSGCombiners are used to organize CSG nodes."
msgstr ""
"CSG 组合内的 CSG 节点只会在组合内处理它们的操作。因此，CSGCombiner（CSG 组合"
"器）是用来组织 CSG 节点的。"

msgid "Create a CSGCombiner and name it ``bed``."
msgstr "创建一个CSGCombiner, 并将其命名为 ``bed`` ."

msgid ""
"Our bed consists of 3 parts: the bed, the mattress and a pillow. Create a "
"CSGBox and adjust its dimension for the bed. Create another CSGBox and "
"adjust its dimension for the mattress."
msgstr ""
"我们的床由三部分组成: 床, 床垫和枕头. 创建一个CSGBox并调整床的尺寸. 再创建一"
"个CSGBox, 并调整床垫的尺寸."

msgid ""
"We will create another CSGCombiner named ``pillow`` as the child of  "
"``bed``. The scene tree should look like this:"
msgstr ""
"我们将创建另一个名为 ``pillow`` 的CSGCombiner作为 ``bed`` 的子节点. 场景树应"
"如下所示:"

msgid ""
"We will combine 3 CSGSphere nodes in **Union** mode to form a pillow. Scale "
"the Y axis of the spheres and enable **Smooth Faces**."
msgstr ""
"我们将在 **Union** 模式下组合 3 个 CSGSphere 节点，形成一个枕头。缩放球体的 "
"Y 轴并启用 **Smooth Faces**\\ （平滑面）。"

msgid ""
"Select the ``pillow`` node and switch the mode to **Subtraction**; the "
"combined spheres will cut a hole into the mattress."
msgstr ""
"选择 ``pillow`` 节点，并将模式切换到 **Subtraction**\\ ；组合后的球体将在床垫"
"上开一个洞。"

msgid ""
"Try to re-parent the ``pillow`` node to the root ``Spatial`` node; the hole "
"will disappear."
msgstr "试着将 ``pillow`` 节点重设你代到根 ``Spatial`` 节点；这个洞会消失。"

msgid ""
"This is to illustrate the effect of CSG processing order. Since the root "
"node is not a CSG node, the CSGCombiner nodes are the end of the operations; "
"this shows the use of CSGCombiner to organize the CSG scene."
msgstr ""
"这是为了说明CSG处理顺序的效果. 由于根节点不是CSG节点, 所以CSGCombiner节点是操"
"作的结束；这显示了使用CSGCombiner来组织CSG场景."

msgid ""
"Undo the re-parent after observing the effect. The bed you've built should "
"look like this:"
msgstr "观察效果后, 撤消重新选择父节点. 您搭建的床应如下所示:"

msgid "Create a CSGCombiner and name it ``lamp``."
msgstr "创建一个CSGCombiner, 并将其命名为 ``lamp`` ."

msgid ""
"A lamp consists of 3 parts: the stand, the pole and the lampshade. Create a "
"CSGCylinder, enable the **Cone** option and make it the stand. Create "
"another CSGCylinder and adjust the dimensions to use it as a pole."
msgstr ""
"一盏灯由3部分组成: 支架, 灯杆和灯罩. 创建一个CSGCylinder, 启用 **Cone** 选项"
"并将其作为支架. 再创建一个CSGCylinder, 并调整尺寸, 将其作为灯杆使用."

msgid ""
"We will use a CSGPolygon for the lampshade. Use the **Spin** mode for the "
"CSGPolygon and draw a `trapezoid <https://en.wikipedia.org/wiki/Trapezoid>`_ "
"while in **Front View** (numeric keypad 1); this shape will extrude around "
"the origin and form the lampshade."
msgstr ""
"我们将使用 CSGPolygon 来制作灯罩。使用 **Spin** 模式，在\\ **前视图**\\ （小"
"键盘 1）下绘制一个\\ `梯形 <https://zh.wikipedia.org/wiki/"
"%E6%A2%AF%E5%BD%A2>`_\\ ，这个形状将围绕原点挤出，形成灯罩。"

msgid "Adjust the placement of the 3 parts to make it look like a lamp."
msgstr "调整3个部分的位置, 使其看起来像一盏灯."

msgid "Create a CSGCombiner and name it ``bookshelf``."
msgstr "创建一个CSGCombiner, 并将其命名为 ``bookshelf`` ."

msgid ""
"We will use 3 CSGBox nodes for the bookshelf. Create a CSGBox and adjust its "
"dimensions; this will be the size of the bookshelf."
msgstr ""
"我们将为书架使用3个CSGBox节点. 创建一个CSGBox并调整其大小, 这将是书架的尺寸."

msgid ""
"Duplicate the CSGBox and shorten the dimensions of each axis and change the "
"mode to **Subtraction**."
msgstr ""
"复制 CSGBox 并缩短每个轴的尺寸，并将模式改为 **Subtraction**\\ （减去）。"

msgid ""
"You've almost built a shelf. Create one more CSGBox for dividing the shelf "
"into two levels."
msgstr "你几乎已经建立了一个架子. 再创建一个CSGBox, 把架子分成两层."

msgid ""
"Position your furniture in your room as you like and your scene should look "
"this:"
msgstr "根据您的喜好将您的家具放在房间里, 您的场景应该是这样的:"

msgid ""
"You've successfully prototyped a room level with the CSG tools in Godot. CSG "
"tools can be used for designing all kinds of levels, such as a maze or a "
"city; explore its limitations when designing your game."
msgstr ""
"你已经成功地用Godot中的CSG工具制作了一个房间关卡的原型.CSG工具可以用于设计各"
"种类型的关卡, 如迷宫或城市；在设计游戏时探究它的局限性."

msgid "Using prototype textures"
msgstr "使用原型纹理"

msgid ""
"Godot's :ref:`doc_spatial_material` supports *triplanar mapping*, which can "
"be used to automatically apply a texture to arbitrary objects without "
"distortion. This is handy when using CSG as Godot doesn't support editing UV "
"maps on CSG nodes yet. Triplanar mapping is relatively slow, which usually "
"restricts its usage to organic surfaces like terrain. Still, when "
"prototyping, it can be used to quickly apply textures to CSG-based levels."
msgstr ""
"Godot的 :ref:`doc_spatial_material` 支持*triplanar mapping*, 它可以用来自动将"
"纹理应用到任意对象上, 而不会发生变形. 这在使用CSG时很方便, 因为Godot还不支持"
"在CSG节点上编辑UV贴图. 三面贴图的速度相对较慢, 这通常限制了它的使用, 比如地形"
"等有机表面. 不过, 在原型设计时, 还是可以用它来快速将纹理应用到基于CSG的关卡"
"上. (CSG: 构造实体几何(Constructive Solid Geometry)的简写)."

msgid ""
"If you need some textures for prototyping, Kenney made a `set of CC0-"
"licensed prototype textures <https://kenney.nl/assets/prototype-textures>`__."
msgstr ""
"如果你需要一些原型的图片,Kenney做了一套 `CC0授权的原型图片 <https://kenney."
"nl/assets/prototype-textures>`__."

msgid "There are two ways to apply a material to a CSG node:"
msgstr "有两种方法可以将材质应用到CSG节点:"

msgid ""
"Applying it to a CSGCombiner node as a material override (**Geometry > "
"Material Override** in the Inspector). This will affect its children "
"automatically, but will make it impossible to change the material in "
"individual children."
msgstr ""
"将其作为材质覆盖应用到CSGCombiner节点上(在检查器中的 **Geometry > Material "
"Override** ). 这将自动影响它的子节点, 但能改变单个子节点的材质."

msgid ""
"Applying a material to individual nodes (**Material** in the Inspector). "
"This way, each CSG node can have its own appearance. Subtractive CSG nodes "
"will apply their material to the nodes they're \"digging\" into."
msgstr ""
"将材质应用于单个节点( **材质** 在(属性)检查器中). 这样, 每个CSG节点都可以有自"
"己的外观. 减去CSG节点将把它们的材质应用到 \"digging\" 到的节点上."

msgid ""
"To apply triplanar mapping to a CSG node, select it, go to the Inspector, "
"click the **[empty]** text next to **Material Override** (or **Material** "
"for individual CSG nodes). Choose **New SpatialMaterial**. Click the newly "
"created material's icon to edit it. Unfold the **Albedo** section and load a "
"texture into the **Texture** property. Now, unfold the **Uv1** section and "
"check **Triplanar**. You can change the texture offset and scale on each "
"axis by playing with the **Scale** and **Offset** properties just above. "
"Higher values in the **Scale** property will cause the texture to repeat "
"more often."
msgstr ""
"要将三平面贴图应用到 CSG 节点，请选中它，转到“检查器”，单击 **Material "
"Override**\\ （材质覆盖）旁的 **[空]** 字样（如果是单独的 CSG 节点则为 "
"**Material**\\ ）。选择\\ **新建 SpatialMaterial**\\ 。点击刚创建出来的材质图"
"标来进行编辑。展开 **Albedo** 部分，为 **Texture** 属性加载一张纹理。现在再展"
"开 **Uv1** 部分，勾选 **Triplanar**\\ 。可以用上面的 **Scale** 和 **Offset** "
"属性来调整纹理在各个方向上的缩放和偏移量。\\ **Scale** 属性越大，纹理重复得越"
"多。"

msgid ""
"You can copy a SpatialMaterial to reuse it across CSG nodes. To do so, click "
"the dropdown arrow next to a material property in the Inspector and choose "
"**Copy**. To paste it, select the node you'd like to apply the material "
"onto, click the dropdown arrow next to its material property then choose "
"**Paste**."
msgstr ""
"您可以复制一个 SpatialMaterial, 以便在 CSG 节点中重复使用它. 要做到这一点, 在"
"(属性)检查器中点击材质属性旁边的下拉箭头, 然后选择 **复制** . 要粘贴它, 请选"
"择您要应用该材质的节点, 单击其材质属性旁边的下拉箭头, 然后选择 **粘贴** ."

msgid "Translation status"
msgstr "翻译状态"
