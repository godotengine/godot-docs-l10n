# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the SurfaceTool"
msgstr "使用 SurfaceTool"

msgid ""
"The :ref:`SurfaceTool <class_surfacetool>` provides a useful interface for "
"constructing geometry. The interface is similar to the :ref:"
"`ImmediateGeometry <class_immediategeometry>` node. You set each per-vertex "
"attribute (e.g. normal, uv, color) and then when you add a vertex it "
"captures the attributes."
msgstr ""
":ref:`SurfaceTool <class_surfacetool>` 提供了一个有用的接口来构建几何体。这个"
"接口类似于 :ref:`ImmediateGeometry <class_immediategeometry>` 节点。你设置每"
"个顶点的属性（例如法线、uv、颜色），然后当你添加一个顶点时，它就会捕捉到这些"
"属性。"

msgid ""
"The SurfaceTool also provides some useful helper functions like ``index()`` "
"and ``generate_normals()``."
msgstr ""
"SurfaceTool 还提供了一些有用的辅助函数，如 ``index()`` 和 "
"``generate_normals()``\\ 。"

msgid "Attributes are added before each vertex is added:"
msgstr "属性是在添加每个顶点之前添加的："

msgid ""
"When finished generating your geometry with the :ref:`SurfaceTool "
"<class_surfacetool>` call ``commit()`` to finish generating the mesh. If an :"
"ref:`ArrayMesh <class_ArrayMesh>` is passed to ``commit()`` then it appends "
"a new surface to the end of the ArrayMesh. While if nothing is passed in, "
"``commit()`` returns an ArrayMesh."
msgstr ""
"当使用 :ref:`SurfaceTool <class_surfacetool>` 完成生成几何体后，调用 "
"``commit()`` 完成生成网格。如果将一个 :ref:`ArrayMesh <class_ArrayMesh>` 传递"
"给了 ``commit()``\\ ，那么它就会在这个 ArrayMesh 的末尾附加一个新的表面。而如"
"果没有传递任何信息，\\ ``commit()`` 则返回一个 ArrayMesh。"

msgid "Code creates a triangle with indices"
msgstr "代码创建一个有索引的三角形"

msgid ""
"You can optionally add an index array, either by calling ``add_index()`` and "
"adding vertices to the index array or by calling ``index()`` which shrinks "
"the vertex array to remove duplicate vertices."
msgstr ""
"你可以选择添加一个索引数组, 可以通过调用 ``add_index()`` 将顶点添加到索引数组"
"中, 也可以通过调用 ``index()`` 将顶点数组缩小以删除重复的顶点."

msgid ""
"Similarly, if you have an index array, but you want each vertex to be unique "
"(e.g. because you want to use unique normals or colors per face instead of "
"per-vertex), you can call ``deindex()``."
msgstr ""
"同样, 如果你有一个索引数组, 但希望每个顶点都是唯一的(例如, 因为想在每个面而不"
"是每个顶点使用唯一的法线或颜色), 可以调用 ``deindex()`` ."

msgid ""
"If you don't add custom normals yourself, you can add them using "
"``generate_normals()``, which should be called after generating geometry and "
"before committing the mesh using ``commit()`` or ``commit_to_arrays()``. "
"Calling ``generate_normals(true)`` will flip the resulting normals. As a "
"side note, ``generate_normals()`` only works if the primitive type is set to "
"``Mesh.PRIMITIVE_TRIANGLES``."
msgstr ""
"如果你不想自行添加自定义法线，那么可以使用 ``generate_normals()`` 来添加，调"
"用时机应该是在生成几何体之后、使用 ``commit()`` 或 ``commit_to_arrays()`` 提"
"交网格之前。调用 ``generate_normals(true)`` 会将最终的法线翻转。另外请注"
"意，\\ ``generate_normals()`` 只有在图元类型为 ``Mesh.PRIMITIVE_TRIANGLES`` "
"时有效。"

msgid ""
"You may notice that normal mapping or other material properties look broken "
"on the generated mesh. This is because normal mapping **requires** the mesh "
"to feature *tangents*, which are separate from *normals*. You can either add "
"custom tangents manually, or generate them automatically with with "
"``generate_tangents()``. This method requires that each vertex have UVs and "
"normals set already."
msgstr ""
"你可能发现了，在生成的网格上，法线贴图或者其他一些材质属性看上去不对劲。这是"
"因为对法线贴图而言，\\ **必需**\\ 的是\\ *切线*\\ ，这和\\ *法线*\\ 是两码"
"事。有两种解决方法，手动添加切线信息，或者使用 ``generate_tangents()`` 自动生"
"成。这个方法要求每个顶点都已经具有 UV 和法线。"

msgid ""
"By default, when generating normals, they will be calculated on a per-face "
"basis. If you want smooth vertex normals, when adding vertices, call "
"``add_smooth_group()``. ``add_smooth_group()`` needs to be called while "
"building the geometry, e.g. before the call to ``add_vertex()`` (if non-"
"indexed) or ``add_index()`` (if indexed)."
msgstr ""
"默认情况下, 当生成法线时, 它们将以每个面为基础进行计算. 如果想要平滑的顶点法"
"线, 在添加顶点时, 调用 ``add_smooth_group()`` . ``add_smooth_group()`` 需要在"
"建立几何体时调用, 例如在调用 ``add_vertex()`` (如果没有索引)或 "
"``add_index()`` (如果有索引)之前."

msgid "Translation status"
msgstr "翻译状态"
