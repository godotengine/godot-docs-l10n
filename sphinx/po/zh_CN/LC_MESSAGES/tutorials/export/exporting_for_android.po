# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Exporting for Android"
msgstr "为 Android 导出"

msgid ""
"This page describes how to export a Godot project to Android. If you're "
"looking to compile export template binaries from source instead, read :ref:"
"`doc_compiling_for_android`."
msgstr ""
"这个页面描述的是如何将 Godot 项目导出到 Android。如果你想要找的是从源码编译编"
"辑器或导出模板二进制文件，请阅读 :ref:`doc_compiling_for_android`\\ 。"

msgid ""
"Exporting for Android has fewer requirements than compiling Godot for "
"Android. The following steps detail what is needed to set up the Android SDK "
"and the engine."
msgstr ""
"导出Android的要求比编译Android的Godot要少. 下面的步骤详细介绍了设置Android "
"SDK和引擎所需的内容."

msgid "Install OpenJDK 11"
msgstr "安装 OpenJDK 11"

msgid ""
"Download and install  `OpenJDK 11 <https://adoptium.net/?"
"variant=openjdk11>`__."
msgstr "下载并安装  `OpenJDK 11 <https://adoptium.net/?variant=openjdk11>`__."

msgid "Download the Android SDK"
msgstr "下载 Android SDK"

msgid "Download and install the Android SDK."
msgstr "下载并安装 Android SDK."

msgid ""
"You can install it using `Android Studio version 4.1 or later <https://"
"developer.android.com/studio/>`__."
msgstr ""
"你可以使用 `Android Studio 4.1或更高版本 <https://developer.android.com/"
"studio/>`__ 进行安装."

msgid ""
"Run it once to complete the SDK setup using these `instructions <https://"
"developer.android.com/studio/intro/update#sdk-manager>`__."
msgstr ""
"运行一次，使用这些\\ `说明 <https://developer.android.com/studio/intro/"
"update#sdk-manager>`__\\ 完成 SDK 设置。"

msgid ""
"Ensure that the `required packages <https://developer.android.com/studio/"
"intro/update#recommended>`__ are installed as well."
msgstr ""
"确保安装了\\ `必要的软件包 <https://developer.android.com/studio/intro/"
"update#recommended>`__\\ 。"

msgid "Android SDK Platform-Tools version 30.0.5 or later"
msgstr "Android SDK Platform-Tools 30.0.5 或更高版本"

msgid "Android SDK Build-Tools version 30.0.3"
msgstr "Android SDK Build-Tools 版本 30.0.3"

msgid "Android SDK Platform 31"
msgstr "Android SDK Platform 31"

msgid "Android SDK Command-line Tools (latest)"
msgstr "Android SDK Command-line Tools（最新）"

msgid "CMake version 3.10.2.4988404"
msgstr "CMake 版本 3.10.2.4988404"

msgid "NDK version r23c (23.2.8568313)"
msgstr "NDK 版本 r23c（23.2.8568313）"

msgid ""
"You can install it using the `command line tools <https://developer.android."
"com/studio/#command-tools>`__."
msgstr ""
"你可以使用\\ `命令行工具 <https://developer.android.com/studio/#command-"
"tools>`__\\ 安装。"

msgid ""
"Once the command line tools are installed, run the `sdkmanager <https://"
"developer.android.com/studio/command-line/sdkmanager>`__ command to complete "
"the setup process:"
msgstr ""
"命令行工具安装完成后, 运行 `sdkmanager <https://developer.android.com/studio/"
"command-line/sdkmanager>`__ 命令以完成安装过程:"

msgid ""
"If you are using Linux, **do not use an Android SDK provided by your "
"distribution's repositories as it will often be outdated**."
msgstr ""
"如果你使用的是 Linux，\\ **请勿使用发行版软件库提供的 Android SDK，因为它通常"
"是过时的**\\ 。"

msgid "Create a debug.keystore"
msgstr "创建 debug.keystore"

msgid ""
"Android needs a debug keystore file to install to devices and distribute non-"
"release APKs. If you have used the SDK before and have built projects, ant "
"or eclipse probably generated one for you (in the ``~/.android`` directory "
"on Linux and macOS, in the ``C:\\Users\\<user>\\.android\\`` directory on "
"Windows)."
msgstr ""
"Android 需要调试密钥库文件，才能安装到设备并分发非发布版本 APK。如果您以前使"
"用过 SDK 并且已经构建了项目，那么 ant 或 eclipse 可能会为您生成一个（在 "
"Linux 和 macOS 上，您可以在 ``~/ .android`` 目录中找到它）。"

msgid ""
"If you can't find it or need to generate one, the keytool command from the "
"JDK can be used for this purpose::"
msgstr "如果找不到或需要生成一个，则可以使用 JDK 中的 keytool 命令： ::"

msgid ""
"This will create a ``debug.keystore`` file in your current directory. You "
"should move it to a memorable location such as ``%USERPROFILE%\\."
"android\\``, because you will need its location in a later step. For more "
"information on ``keytool`` usage, see `this Q&A article <https://godotengine."
"org/qa/21349/jdk-android-file-missing>`__."
msgstr ""
"这会在当前目录中创建一个 ``debug.keystore`` 文件。你需要移动到一个好记的位"
"置，比如 ``%USERPROFILE%\\.android\\``\\ ，因为后续步骤会需要这个位置。\\ "
"``keytool`` 用法的更多信息请查看\\ `这个 Q&A 文章 <https://godotengine.org/"
"qa/21349/jdk-android-file-missing>`__\\ 。"

msgid "Setting it up in Godot"
msgstr "在 Godot 中进行设置"

msgid ""
"Enter the Editor Settings screen. This screen contains the editor settings "
"for the user account in the computer (it's independent of the project)."
msgstr ""
"进入编辑器设置屏幕。此屏幕包含计算机中用户帐户的编辑器设置（与项目无关）。"

msgid "Scroll down to the section where the Android settings are located:"
msgstr "向下滚动到 Android 设置所在的部分："

msgid "In that screen, 2 paths need to be set:"
msgstr "在该屏幕中，需要设置两个路径："

msgid ""
"The ``Android Sdk Path`` should be the location where the Android SDK was "
"installed. - For example ``%LOCALAPPDATA%\\Android\\Sdk\\`` on Windows or ``/"
"Users/$USER/Library/Android/sdk/`` on macOS."
msgstr ""
"``Android Sdk Path`` 设置为Android SDK的安装位置. 例如,Windows上的 "
"``%LOCALAPPDATA%\\Android\\Sdk\\`` , 或macOS上的 ``/Users/$USER/Library/"
"Android/sdk/`` ."

msgid ""
"The debug ``.keystore`` file - It can be found in the folder where you put "
"the ``debug.keystore`` file you created above."
msgstr ""
"调试 ``.keystore`` 文件——可以在之前创建 ``debug.keystore`` 文件的文件夹中找"
"到。"

msgid "Once that is configured, everything is ready to export to Android!"
msgstr "配置完成后, 导出到Android的一切都准备好了！"

msgid ""
"If you get an error saying *\"Could not install to device.\"*, make sure you "
"do not have an application with the same Android package name already "
"installed on the device (but signed with a different key)."
msgstr ""
"如果你遇到 *“Could not install to device”* 的错误，请确认设备上未安装使用了相"
"同Android包名（但使用不同密钥进行签名）的应用。"

msgid ""
"If you have an application with the same Android package name but a "
"different signing key already installed on the device, you **must** remove "
"the application in question from the Android device before exporting to "
"Android again."
msgstr ""
"如果设备上安装了 Android 包名相同但签名密钥不同的应用，你\\ **必须**\\ 先在"
"该 Android 设备询问时选择删除该应用，但后再重新导出到 Android。"

msgid "Providing launcher icons"
msgstr "提供启动器图标"

msgid ""
"Launcher icons are used by Android launcher apps to represent your "
"application to users. Godot only requires high-resolution icons (for "
"``xxxhdpi`` density screens) and will automatically generate lower-"
"resolution variants."
msgstr ""
"启动器图标是 Android 启动器应用把你的应用展示给用户时所用到的。Godot 只需要高"
"分辨率图标（适用于 ``xxxhdpi`` 屏幕），会自动生成低分辨率的变体。"

msgid "There are two types of icons required by Godot:"
msgstr "Godot 需要两种类型的图标："

msgid ""
"**Main Icon:** The \"classic\" icon. This will be used on all Android "
"versions up to Android 8 (Oreo), exclusive. Must be at least 192×192 px."
msgstr ""
"**主图标：**\\ “经典”图标。这会在所有 Android 版本不高于 Android 8（Oreo）中"
"使用。必须至少为 192×192 px。"

msgid ""
"**Adaptive Icons:** Starting from Android 8 (inclusive), `Adaptive Icons "
"<https://developer.android.com/guide/practices/ui_guidelines/"
"icon_design_adaptive>`_ were introduced. Applications will need to include "
"separate background and foreground icons to have a native look. The user's "
"launcher application will control the icon's animation and masking. Must be "
"at least 432×432 px."
msgstr ""
"**自适应图标：**\\ 从 Android 8 开始（含）引入了\\ `自适应图标 <https://"
"developer.android.com/guide/practices/ui_guidelines/"
"icon_design_adaptive>`_\\ （Adaptive Icons）。应用为了有原生的样式需要包含分"
"离的背景与前景图标。用户的启动程序会控制图标的动画和遮罩。必须至少为 432×432 "
"px。"

msgid ""
"It's important to adhere to some rules when designing adaptive icons. "
"`Google Design has provided a nice article <https://medium.com/google-design/"
"designing-adaptive-icons-515af294c783>`_ that helps to understand those "
"rules and some of the capabilities of adaptive icons."
msgstr ""
"重要的是设计自适应图标时必须遵守一些规则。\\ `Google Design 提供了一篇不错的"
"文章 <https://medium.com/google-design/designing-adaptive-"
"icons-515af294c783>`_\\ 来帮助理解这些规则以及自适应图标的一些技巧。"

msgid ""
"The most important adaptive icon design rule is to have your icon critical "
"elements inside the safe zone: a centered circle with a diameter of 66dp "
"(264 pixels on ``xxxhdpi``) to avoid being clipped by the launcher."
msgstr ""
"自适应图标最重要的规则是，要把图标的重要元素放置在安全区内：那是一个居中的直"
"径为 66dp（\\ ``xxxhdpi`` 上为 264 像素）的圆，这样就可以避免被启动器裁剪。"

msgid ""
"If you don't provide some of the requested icons, Godot will replace them "
"using a fallback chain, trying the next in line when the current one fails:"
msgstr ""
"如果你不提供必要的图标，Godot 会根据回退链来进行替换，当前行失败时会尝试下一"
"行："

msgid ""
"**Main Icon:** Provided main icon -> Project icon -> Default Godot main icon."
msgstr "**主图标：**\\ 提供的主图标 -> 项目图标 -> 默认 Godot 主图标。"

msgid ""
"**Adaptive Icon Foreground:** Provided foreground icon -> Provided main icon "
"-> Project icon -> Default Godot foreground icon."
msgstr ""
"**自适应图标前景：**\\ 提供的前景图标 -> 提供的主图标 -> 项目图标 -> 默认 "
"Godot 前景图标。"

msgid ""
"**Adaptive Icon Background:** Provided background icon -> Default Godot "
"background icon."
msgstr "**自适应图标背景：**\\ 提供的背景图标 -> 默认 Godot 背景图标。"

msgid ""
"It's highly recommended to provide all the requested icons with their "
"specified resolutions. This way, your application will look great on all "
"Android devices and versions."
msgstr ""
"强烈建议提供所有要求的图标的指定分辨率。这样一来，你的应用程序在所有的 "
"Android 设备和版本上都会显得非常漂亮。"

msgid "Exporting for Google Play Store"
msgstr "为 Google Play 商店导出"

msgid ""
"Uploading an APK to Google's Play Store requires you to sign using a non-"
"debug keystore file; such file can be generated like this:"
msgstr ""
"将 APK 上传到 Google 的 Play 商店，需要您使用非调试密钥库文件进行签名；这样的"
"文件可以像这样生成："

msgid ""
"This keystore and key are used to verify your developer identity, remember "
"the password and keep it in a safe place! Use Google's Android Developer "
"guides to learn more about `APK signing <https://developer.android.com/"
"studio/publish/app-signing>`__."
msgstr ""
"这个密钥库和密钥用于验证您的开发人员身份，请记住密码并将其保存在安全的地方！"
"使用 Google 的 Android 开发者指南来了解有关 `APK 签名 <https://developer."
"android.com/studio/publish/app-signing>`__\\ 的更多信息。"

msgid "Now fill in the following forms in your Android Export Presets:"
msgstr "现在，在您的 Android 导出预设中填写以下表格："

msgid "**Release:** Enter the path to the keystore file you just generated."
msgstr "**发布：**\\ 输入您刚刚生成的密钥库文件的路径。"

msgid "**Release User:** Replace with the key alias."
msgstr "**发布用户：**\\ 替换为密钥别名。"

msgid ""
"**Release Password:** Key password. Note that the keystore password and the "
"key password currently have to be the same."
msgstr "**发布密码：**\\ 密钥密码。请注意，密钥库密码和密钥密码当前必须相同。"

msgid ""
"**Your export_presets.cfg file now contains sensitive information.** If you "
"use a version control system, you should remove it from public repositories "
"and add it to your ``.gitignore`` file or equivalent."
msgstr ""
"**您的 export_presets.cfg 文件现在包含有敏感信息。**\\ 如果使用版本控制系统，"
"则应将其从公共仓库中删除，并将其添加到 ``.gitignore`` 文件或等效文件中。"

msgid ""
"Don't forget to uncheck the **Export With Debug** checkbox while exporting."
msgstr "在导出时，不要忘记取消勾选\\ **使用调试导出**\\ 。"

msgid "Optimizing the APK size"
msgstr "优化 APK 大小"

msgid ""
"By default, the APK will contain native libraries for both ARMv7 and ARMv8 "
"architectures. This increases its size significantly. To create a smaller "
"APK, uncheck either **Armeabi-v 7a** or **Arm 64 -v 8a** in your project's "
"Android export preset. This will create an APK that only contains a library "
"for a single architecture. Note that applications targeting ARMv7 can also "
"run on ARMv8 devices, but the opposite is not true."
msgstr ""
"默认情况下,APK将包含适用于ARMv7和ARMv8体系结构的本地库. 这会大大增加其大小. "
"要创建较小的APK, 请在项目的Android导出预设中取消选中 **Armeabi-v 7a** 或 "
"**Arm 64 -v 8a** . 这将创建一个仅包含单个架构库的APK. 请注意, 针对ARMv7的应用"
"程序也可以在ARMv8设备上运行, 但事实并非如此."

msgid ""
"Since August 2019, Google Play requires all applications to be available in "
"64-bit form. This means you cannot upload an APK that contains *just* an "
"ARMv7 library. To solve this, you can upload several APKs to Google Play "
"using its `Multiple APK support <https://developer.android.com/google/play/"
"publishing/multiple-apks>`__. Each APK should target a single architecture; "
"creating an APK for ARMv7 and ARMv8 is usually sufficient to cover most "
"devices in use today."
msgstr ""
"自2019年8月起,Google Play要求所有应用程序都必须以64位格式提供. 这意味着您不能"
"上传 *仅* 包含ARMv7库的APK. 为了解决这个问题, 您可以使用其 `多个APK 支持 "
"<https://developer.android.com/google/play/publishing/multiple-apks>`__ 将多"
"个APK上传到Google Play. 每个APK都应针对单一架构；为ARMv7和ARMv8创建APK通常足"
"以覆盖当今使用的大多数设备."

msgid ""
"You can optimize the size further by compiling an Android export template "
"with only the features you need. See :ref:`doc_optimizing_for_size` for more "
"information."
msgstr ""
"您可以通过仅编译具有所需功能的Android导出模板来进一步优化大小. 有关更多信息, "
"请参见 :ref:`doc_optimizing_for_size`."

msgid "Troubleshooting rendering issues"
msgstr "渲染故障排除"

msgid ""
"To improve out-of-the-box performance on mobile devices, Godot automatically "
"uses low-end-friendly settings by default on both Android and iOS."
msgstr ""
"为了在移动设备上提升初始性能，Godot 在 Android 和 iOS 上默认会自动使用对低端"
"设备友好的设置。"

msgid ""
"This can cause rendering issues that do not occur when running the project "
"on a desktop platform. See :ref:`doc_mobile_rendering_limitations` for more "
"information."
msgstr ""
"这样可能造成在桌面平台上运行项目时不会发生的渲染问题。详情请参阅 :ref:"
"`doc_mobile_rendering_limitations`\\ 。"

msgid "Translation status"
msgstr "翻译状态"
