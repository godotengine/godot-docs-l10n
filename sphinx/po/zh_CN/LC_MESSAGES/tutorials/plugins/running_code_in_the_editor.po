# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Running code in the editor"
msgstr "在编辑器中运行代码"

msgid "What is ``tool``?"
msgstr "``tool`` 是什么？"

msgid ""
"``tool`` is a powerful line of code that, when added at the top of your "
"script, makes it execute in the editor. You can also decide which parts of "
"the script execute in the editor, which in game, and which in both."
msgstr ""
"``tool`` 是一个强大的代码行, 当添加到脚本的顶部时, 它会在编辑器中执行. 您还可"
"以决定脚本的哪些部分在编辑器中执行, 哪部分在游戏中执行, 以及哪部分在两者中均"
"执行."

msgid ""
"You can use it for doing many things, but it is mostly useful in level "
"design for visually presenting things that are hard to predict ourselves. "
"Here are some use cases:"
msgstr ""
"您可以使用它来做很多事情, 它在层次设计中非常有用, 可以直观地呈现难以预测的事"
"物. 以下是一些用例:"

msgid ""
"If you have a cannon that shoots cannonballs affected by physics (gravity), "
"you can draw the cannonball's trajectory in the editor, making level design "
"a lot easier."
msgstr ""
"如果你有一门发射受物理学(重力)影响的炮弹的大炮, 你可以在编辑器中画出炮弹的轨"
"迹, 使关卡设计容易得多."

msgid ""
"If you have jumppads with varying jump heights, you can draw the maximum "
"jump height a player would reach if it jumped on one, also making level "
"design easier."
msgstr ""
"如果您有不同跳跃高度的跳线, 您可以绘制游戏角色能跳过的最大跳跃高度, 也可以让"
"关卡设计变得更容易."

msgid ""
"If your player doesn't use a sprite, but draws itself using code, you can "
"make that drawing code execute in the editor to see your player."
msgstr ""
"如果您的游戏角色不使用精灵, 却使用代码来绘制, 您可以在编辑器中执行该绘图代码"
"以查看您的游戏角色."

msgid ""
"``tool`` scripts run inside the editor, and let you access the scene tree of "
"the currently edited scene. This is a powerful feature which also comes with "
"caveats, as the editor does not include protections for potential misuse of "
"``tool`` scripts. Be **extremely** cautious when manipulating the scene "
"tree, especially via :ref:`Node.queue_free<class_Node_method_queue_free>`, "
"as it can cause crashes if you free a node while the editor runs logic "
"involving it."
msgstr ""
"``tool`` 脚本在编辑器内运行, 让你访问当前编辑的场景树. 这是一个强大的功能, 但"
"也有一些注意事项, 因为编辑器不包括对 ``tool`` 脚本潜在滥用的保护. 在操作场景"
"树时, 尤其是通过 :ref:`Node.queue_free<class_Node_method_queue_free>` 时, 要 "
"**极其** 谨慎, 因为如果你在编辑器运行涉及到节点的逻辑时释放该节点, 可能会导致"
"崩溃."

msgid "How to use it"
msgstr "如何使用它"

msgid ""
"To turn a script into a tool, add the keyword ``tool`` at the top of your "
"code."
msgstr "要把一个脚本变成一个工具, 在你的代码顶部添加关键字 ``tool`` ."

msgid ""
"To check if you are currently in the editor, use: ``Engine.editor_hint``."
msgstr "要检查您当前是否在编辑器中, 请使用 : ``Engine.editor_hint``."

msgid "For example, if you want to execute some code only in the editor, use:"
msgstr "例如, 如果你想只在编辑器中执行一些代码, 可以使用:"

msgid ""
"On the other hand, if you want to execute code only in game, simply negate "
"the same statement:"
msgstr "另一方面, 如果你想只在游戏中执行代码, 只需否定相同的语句:"

msgid ""
"Pieces of code do not have either of the 2 conditions above will run both in-"
"editor and in-game."
msgstr "不具备上述两个条件之一的代码片断将在编辑器和游戏中运行."

msgid "Here is how a ``_process()`` function might look for you:"
msgstr "以下是 ``_process()`` 函数的示例:"

msgid ""
"Modifications in editor are permanent. For example, in the following case, "
"when we remove the script, the node will keep its rotation. Be careful to "
"avoid making unwanted modifications."
msgstr ""
"编辑器中的修改是永久性的. 例如, 在下面的情况下, 当我们删除脚本时, 节点将保持"
"其旋转. 要注意避免做不需要的修改."

msgid "Try it out"
msgstr "试试看"

msgid ""
"Add a ``Sprite`` node to your scene and set the texture to Godot icon. "
"Attach and open a script, and change it to this:"
msgstr ""
"在场景中添加一个 ``Sprite`` 节点, 并将纹理设置为Godot图标. 添加并打开脚本, 并"
"将其更改为:"

msgid ""
"Save the script and return to the editor. You should now see your object "
"rotate. If you run the game, it will also rotate."
msgstr ""
"保存脚本并返回编辑器. 现在您应该看到您的对象在旋转. 如果您运行游戏, 它也会旋"
"转."

msgid ""
"If you don't see the changes, reload the scene (close it and open it again)."
msgstr "如果您没有看到变化, 请重新加载场景(关闭它并再次打开)."

msgid ""
"Now let's choose which code runs when. Modify your ``_process()`` function "
"to look like this:"
msgstr "现在让我们选择何时运行代码. 将 ``_process()`` 函数修改为:"

msgid ""
"Save the script. Now the object will spin clockwise in the editor, but if "
"you run the game, it will spin counter-clockwise."
msgstr ""
"保存脚本. 现在, 对象将在编辑器中顺时针旋转, 但如果您运行游戏, 它将逆时针旋转."

msgid "Editing variables"
msgstr "编辑变量"

msgid ""
"Add and export a variable speed to the script. The function set_speed after "
"\"setget\" is executed with your input to change the variable. Modify  "
"``_process()`` to include the rotation speed."
msgstr ""
"在脚本中添加并导出一个变量速度. 在 \"setget\" 之后的函数set_speed与你的输入一"
"起执行, 以改变这个变量. 修改 ``_process()`` 以包含旋转速度."

msgid ""
"Code from other nodes doesn't run in the editor. Your access to other nodes "
"is limited. You can access the tree and nodes, and their default properties, "
"but you can't access user variables. If you want to do so, other nodes have "
"to run in the editor too. AutoLoad nodes cannot be accessed in the editor at "
"all."
msgstr ""
"其他节点的代码不会在编辑器中运行. 您对其他节点的访问权限被限制了. 您可以访问"
"树和节点及其默认属性, 但无法访问用户变量. 如果要这样做, 其他节点也必须在编辑"
"器中运行. AutoLoad节点时无法在编辑器中访问的."

msgid "Instancing scenes"
msgstr "实例化场景"

msgid ""
"You can instantiate packed scenes normally and add them to the scene "
"currently opened in the editor. By default, nodes or scenes added with :ref:"
"`Node.add_child(node) <class_Node_method_add_child>` are **not** visible in "
"the Scene tree dock and are **not** persisted to disk. If you wish the node "
"or scene to be visible in the scene tree dock and persisted to disk when "
"saving the scene, you need to set the child node's :ref:`owner "
"<class_Node_property_owner>` property to the currently edited scene root."
msgstr ""
"在编辑器中，你可以正常实例化打包场景，并将它们添加到当前打开的场景中。默认情"
"况下，使用 :ref:`Node.add_child(node) <class_Node_method_add_child>` 添加的节"
"点或场景在“场景”树面板中是\\ **不可见**\\ 的，也\\ **不会**\\ 持久化到磁盘"
"上。如果你希望节点和场景在场景树面板中可见，并在保存场景时持久化到磁盘上，则"
"需要将这些子节点的 :ref:`owner <class_Node_property_owner>` 属性设为当前编辑"
"场景的根节点。"

msgid "If you are using ``tool``:"
msgstr "如果你使用的是 ``tool`` :"

msgid "If you are using :ref:`EditorScript<class_EditorScript>`:"
msgstr "如果你使用 :ref:`EditorScript<class_EditorScript>` :"

msgid ""
"Using ``tool`` improperly can yield many errors. It is advised to first "
"write the code how you want it, and only then add the ``tool`` keyword to "
"the top. Also, make sure to separate code that runs in-editor from code that "
"runs in-game. This way, you can find bugs more easily."
msgstr ""
"不适当地使用 ``tool`` 会产生许多错误. 建议首先按照你想要的方式写代码, 然后才"
"在上面添加 ``tool`` 关键字. 另外, 要确保把在编辑器中运行的代码和在游戏中运行"
"的代码分开. 这样, 你可以更容易地发现错误."

msgid "Translation status"
msgstr "翻译状态"
