# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom GUI controls"
msgstr "自定义 GUI 控件"

msgid "So many controls..."
msgstr "控件真多呀……"

msgid ""
"Yet there are never enough. Creating your own custom controls that act just "
"the way you want them to is an obsession of almost every GUI programmer. "
"Godot provides plenty of them, but they may not work exactly the way you "
"want. Before contacting the developers with a pull-request to support "
"diagonal scrollbars, at least it will be good to know how to create these "
"controls easily from script."
msgstr ""
"不过这是永远不嫌多的。每个 GUI 程序员几乎都痴迷于创建自己的自定义控件，让这些"
"控件让自己的要求工作。Godot 提供了大量的控件，但它们可能并不完全如您所愿的方"
"式工作。在使用支持对角滚动条的拉取请求与开发人员联系之前，至少应该了解如何从"
"脚本轻松地创建这些控件。"

msgid "Drawing"
msgstr "绘制"

msgid ""
"For drawing, it is recommended to check the :ref:`doc_custom_drawing_in_2d` "
"tutorial. The same applies. Some functions are worth mentioning due to their "
"usefulness when drawing, so they will be detailed next:"
msgstr ""
"谈到绘制, 推荐看看这篇 :ref:`doc_custom_drawing_in_2d` 的教程. 同样的原理适用"
"与控件绘制. 这里有些函数值得一提, 因为它们在绘制时有用, 所以接下来将进行详细"
"说明:"

msgid "Checking control size"
msgstr "检查控件的大小"

msgid ""
"Unlike 2D nodes, \"size\" is important with controls, as it helps to "
"organize them in proper layouts. For this, the :ref:`Control.rect_size "
"<class_Control_property_rect_size>` property is provided. Checking it during "
"``_draw()`` is vital to ensure everything is kept in-bounds."
msgstr ""
"与2D节点不同,\"size\" 对控件很重要, 因为它有助于在适当的布局中组织它们. 为"
"此, 我们提供了 :ref:`Control.rect_size <class_Control_property_rect_size>` 属"
"性. 在 ``_draw()`` 中检查它以确保所有东西都在范围之内."

msgid "Checking focus"
msgstr "检查输入焦点"

msgid ""
"Some controls (such as buttons or text editors) might provide input focus "
"for keyboard or joypad input. Examples of this are entering text or pressing "
"a button. This is controlled with the :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>` property. When drawing, and if the "
"control supports input focus, it is always desired to show some sort of "
"indicator (highlight, box, etc.) to indicate that this is the currently "
"focused control. To check for this status, the :ref:`Control.has_focus() "
"<class_Control_method_has_focus>` method exists. Example"
msgstr ""
"一些控件(如按钮或文本编辑器)可为键盘或手柄输入提供输入焦点. 这方面的例子是输"
"入文本或按下一个按钮. 这可以通过 :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>` 属性来控制. 绘制时, 如果控件支持输入焦"
"点, 总是希望显示某种指示来表明(高亮, 方框等), 当前这是焦点控件. 为了检查这个"
"状态, 存在一个 :ref:`Control.has_focus() <class_Control_method_has_focus>` 的"
"方法. 例子"

msgid "Sizing"
msgstr "调整大小"

msgid ""
"As mentioned before, size is important to controls. This allows them to lay "
"out properly, when set into grids, containers, or anchored. Controls, most "
"of the time, provide a *minimum size* to help properly lay them out. For "
"example, if controls are placed vertically on top of each other using a :ref:"
"`VBoxContainer <class_VBoxContainer>`, the minimum size will make sure your "
"custom control is not squished by the other controls in the container."
msgstr ""
"如前所述, 尺寸对控件是很重要的. 这可以让它们在设置网格, 容器或锚定时以正确布"
"局. 控件, 在大多数情况下, 提供了一个 *minimum size* , 以帮助它们正确布局. 例"
"如, 如果控件被垂直放置在彼此的顶部, 使用 :ref:`VBoxContainer "
"<class_VBoxContainer>` , 最小尺寸将确保你的自定义控件不会被容器中的其他控件挤"
"压."

msgid ""
"To provide this callback, just override :ref:`Control.get_minimum_size() "
"<class_Control_method_get_minimum_size>`, for example:"
msgstr ""
"要提供此回调, 只需重写 :ref:`Control.get_minimum_size() "
"<class_Control_method_get_minimum_size>` , 例如:"

msgid "Alternatively, set it using a function:"
msgstr "或者, 使用函数进行设置:"

msgid "Input"
msgstr "输入"

msgid ""
"Controls provide a few helpers to make managing input events much easier "
"than regular nodes."
msgstr "控件为输入事件的管理提供了一些辅助工具，比普通节点要方便一点。"

msgid "Input events"
msgstr "输入事件"

msgid ""
"There are a few tutorials about input before this one, but it's worth "
"mentioning that controls have a special input method that only works when:"
msgstr ""
"在此之前有几个关于输入的教程, 但值得一提的是, 控件有一个特殊的输入方法, 只有"
"在以下情况下才起作用:"

msgid "The mouse pointer is over the control."
msgstr "鼠标指针悬停在控件上."

msgid ""
"The button was pressed over this control (control always captures input "
"until button is released)"
msgstr "鼠标按键在此控件上被按下 (控件始终捕获输入, 直到按钮被释放)"

msgid ""
"Control provides keyboard/joypad focus via :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>`."
msgstr ""
"控件通过以下方式提供键盘和手柄焦点 :ref:`Control.focus_mode "
"<class_Control_property_focus_mode>`."

msgid ""
"This function is :ref:`Control._gui_input() "
"<class_Control_method__gui_input>`. Simply override it in your control. No "
"processing needs to be set."
msgstr ""
"这个函数 :ref:`Control._gui_input() <class_Control_method__gui_input>` . 只需"
"在你的控件中重写它. 不需要设置处理."

msgid ""
"For more information about events themselves, check the :ref:"
"`doc_inputevent` tutorial."
msgstr "有关事件本身的详细信息，请查看 :ref:`doc_inputevent` 教程。"

msgid "Notifications"
msgstr "通知"

msgid ""
"Controls also have many useful notifications for which no dedicated callback "
"exists, but which can be checked with the _notification callback:"
msgstr ""
"控件也有许多有用的通知, 这些通知不存在专门的回调, 但可以用_notification回调来"
"检查:"

msgid "Translation status"
msgstr "翻译状态"
