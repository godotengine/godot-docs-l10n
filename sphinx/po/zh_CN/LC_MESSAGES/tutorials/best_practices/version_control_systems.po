# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Version Control Systems"
msgstr "版本控制系统"

msgid "Introduction"
msgstr "前言"

msgid ""
"Godot aims to be VCS friendly and generate mostly readable and mergeable "
"files. Godot also supports the use of version control systems in the editor "
"itself. However, VCS in the editor requires a plugin for the specific VCS "
"you are using. VCS can be setup or shut down in the editor under **Project > "
"Version Control**."
msgstr ""
"Godot 旨在对版本控制系统（Version Control System，VCS）友好，并尽量生成可读且"
"可合并的文件。Godot 支持在编辑器本身中使用 VCS。但是，在编辑器中使用 VCS 需要"
"使用对应的 VCS 插件。可以在编辑器中的\\ **项目> 版本控制**\\ 下设置或关闭 "
"VCS。"

msgid "Official Git plugin"
msgstr "官方 Git 插件"

msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases `here <https://github.com/godotengine/godot-git-"
"plugin/releases>`__. Documentation on how to use the Git plugin can be found "
"`here <https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"有一个官方插件可以让你在编辑器中使用 Git。你可以在\\ `这里 <https://github."
"com/godotengine/godot-git-plugin/releases>`__\\ 找到最新的版本。关于如何使用 "
"Git 插件的文档可以在\\ `这里 <https://github.com/godotengine/godot-git-"
"plugin/wiki>`__\\ 找到。"

msgid "Files to exclude from VCS"
msgstr "从 VCS 中排除的文件"

msgid "There are some folders Godot creates you should have your VCS ignore:"
msgstr "有一些Godot创建的文件夹, 你应该让版本控制系统忽略:"

msgid ""
"``.import/``: This folder stores all the files it imports automatically "
"based on your source assets and their import flags."
msgstr ""
"``.import/`` : 根据你的源资产和导入标记自动导入的文件都保存在这个文件夹中."

msgid ""
"``*.translation``: These files are binary imported translations generated "
"from CSV files."
msgstr "``*.translation`` . 这些文件是从CSV文件生成的导入的二进制翻译文件."

msgid ""
"``export_presets.cfg``: This file contains all the export presets for the "
"project, including sensitive information such as Android keystore "
"credentials."
msgstr ""
"``export_presets.cfg``\\ ：此文件包含项目的所有导出预设，含有 Android 密钥库"
"认证信息等敏感信息。"

msgid ""
"``.mono/``: This folder stores automatically-generated Mono files. It only "
"exists in projects that use the Mono version of Godot."
msgstr ""
"``.mono /`` : 此文件夹存储自动生成的Mono文件. 它仅在使用Mono版本的Godot的项目"
"中存在."

msgid "Working with Git on Windows"
msgstr "在 Windows 上使用 Git"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted automatically. It is better "
"to set this option as::"
msgstr ""
"大多数 Git for Windows 客户端都将 ``core.autocrlf`` 设置为 ``true``\\ 。可能"
"会导致文件错误地被 Git 标记为已修改，因为文件的行尾会被自动转换。最好将该选项"
"设置为： ::"

msgid "Translation status"
msgstr "翻译状态"
