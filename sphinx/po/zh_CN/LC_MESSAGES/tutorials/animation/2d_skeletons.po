# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D skeletons"
msgstr "2D 骨架"

msgid "Introduction"
msgstr "前言"

msgid ""
"When working with 3D, skeletal deforms are common for characters and "
"creatures and most 3D modelling applications support it. For 2D, as this "
"function is not used as often, it's difficult to find mainstream software "
"aimed for this."
msgstr ""
"使用 3D 时，骨架变形在角色和生物中很常见，大多数 3D 建模软件都支持这种变形。"
"这种功能在 2D 中没有那么常用，很难找到以它为卖点的主流软件。"

msgid ""
"One option is to create animations in third-party software such as Spine or "
"Dragonbones. From Godot 3.1 onwards, though, this functionality is supported "
"built-in."
msgstr ""
"你可以在 Spine、Dragonbones 等第三方软件中创建动画。不过，Godot 从 3.1 版本开"
"始就已经内置了这个功能。"

msgid ""
"Why would you want to do skeletal animations directly in Godot? The answer "
"is that there are many advantages to it:"
msgstr "为什么要在 Godot 中直接处理骨骼动画？答案是这样做有很多好处："

msgid ""
"Better integration with the engine, so less hassle importing and editing "
"from an external tool."
msgstr "能更好地与引擎集成, 从而减少使用外部工具导入和编辑的麻烦."

msgid ""
"Ability to control particle systems, shaders, sounds, call scripts, colors, "
"transparency, etc. in animations."
msgstr "能够控制粒子系统, 着色器, 声音, 调用脚本, 颜色, 透明度等动画."

msgid ""
"The built-in skeletal system in Godot is very efficient and designed for "
"performance."
msgstr "Godot内置的骨骼系统非常高效, 并且是为性能而设计的."

msgid "The following tutorial will, then, explain 2D skeletal deformations."
msgstr "接下来的教程将讲解 2D 骨架变形。"

msgid "Setup"
msgstr "场景布置"

msgid ""
"Before starting, we recommend you to go through the :ref:"
"`doc_cutout_animation` tutorial to gain a general understanding of animating "
"within Godot."
msgstr ""
"在开始之前, 我们建议您先浏览一下 :ref:`doc_cutout_animation` 教程, 以便对"
"Godot中的动画制作有一个大致的了解."

msgid ""
"For this tutorial, we will be using a single image to construct our "
"character. Download it from :download:`gBot_pieces.png <img/gBot_pieces."
"png>` or save the image below."
msgstr ""
"在本教程中, 我们将使用单张图片来构建我们的角色. 从这里下载 :download:"
"`gBot_pieces.png <img/gBot_pieces.png>` 或保存下图."

msgid ""
"It is also advised to download the final character image :download:"
"`gBot_complete.png <img/gBot_complete.png>` to have a good reference for "
"putting the different pieces together."
msgstr ""
"并且建议下载最终的角色图片 :download:`gBot_complete.png <img/gBot_complete."
"png>` 将不同部分放在一起，以便进行参考。"

msgid "Creating the polygons"
msgstr "创建多边形"

msgid ""
"Create a new scene for your model (if it's going to be an animated "
"character, you may want to use a ``KinematicBody2D``). For ease of use, an "
"empty 2D node is created as a root for the polygons."
msgstr ""
"为您的模型创建一个新场景（如果它是一个动画角色，您可能需要使用 "
"``KinematicBody2D``\\ ）。为便于使用，创建一个空的 2D 节点作为多边形的根节"
"点。"

msgid ""
"Begin with a ``Polygon2D`` node. There is no need to place it anywhere in "
"the scene for now, so simply create it like this:"
msgstr ""
"从 ``Polygon2D`` 节点开始。现在不需要把它放在场景何处，所以简单创建如下："

msgid ""
"Select it and assign the texture with the character pieces you have "
"downloaded before:"
msgstr "为您之前下载的角色部件选择并指定纹理："

msgid ""
"Drawing a polygon directly is not advised. Instead, open the \"UV\" dialog "
"for the polygon:"
msgstr "不建议直接绘制多边形。请打开该多边形的“UV”对话框："

msgid ""
"Head over to the *Points* mode, select the pencil and draw a polygon around "
"the desired piece:"
msgstr "转到 *点* 模式, 选择铅笔, 在需要的区域绘制一个多边形:"

msgid ""
"Duplicate the polygon node and give it a proper name. Then, enter the \"UV\" "
"dialog again and replace the old polygon with another one in the new desired "
"piece."
msgstr ""
"复制多边形节点, 并给它一个合适的名字. 然后, 再次进入 \"UV\" 对话框, 在新的所"
"需设计中用另一个多边形替换旧的多边形."

msgid ""
"When you duplicate nodes and the next piece has a similar shape, you can "
"edit the previous polygon instead of drawing a new one."
msgstr ""
"当复制节点且下一块具有相似形状时, 可以编辑上一个多边形, 而不是绘制新多边形."

msgid ""
"After moving the polygon, remember to update the UV by selecting Edit -> "
"\"Polygon -> UV\" in the Polygon 2D UV Editor."
msgstr ""
"移动多边形后, 请记住通过在多边形2D UV编辑器中选择编辑->\"多边形->UV\" 来更新"
"UV."

msgid "Keep doing this until you mapped all pieces."
msgstr "继续这样做, 直到你映射所有的部件."

msgid ""
"You will notice that pieces for nodes appear in the same layout as they do "
"in the original texture. This is because by default, when you draw a "
"polygon, the UV and points are the same."
msgstr ""
"你会注意到, 节点的部分与它们在原始纹理中的布局是一样的. 这是因为默认情况下, "
"当你绘制一个多边形时,UV和点是一样的."

msgid ""
"Rearrange the pieces and build the character. This should be pretty quick. "
"There is no need to change pivots, so don't bother making sure rotation "
"pivots for each piece are right; you can leave them be for now."
msgstr ""
"重新排列部件, 建立角色. 这个过程应该很快. 没必要改变轴心, 因此, 不必费心确保"
"每个部件的旋转轴心都正确；你可以暂时不用理会它们."

msgid ""
"Ah, the visual order of the pieces is not correct yet, as some are covering "
"wrong pieces. Rearrange the order of the nodes to fix this:"
msgstr ""
"啊, 这些作品的视觉顺序还不正确, 因为有些覆盖到错误的部分. 重新排列节点的顺序"
"来解决这个问题:"

msgid ""
"And there you go! It was definitely much easier than in the cutout tutorial."
msgstr "恭喜你完成本节教程!它肯定比剪纸动画教程简单得多."

msgid "Creating the skeleton"
msgstr "创建骨架"

msgid ""
"Create a ``Skeleton2D`` node as a child of the root node. This will be the "
"base of our skeleton:"
msgstr "创建一个 ``Skeleton2D`` 节点作为根节点的子项。我们将其作为骨架的基础："

msgid ""
"Create a ``Bone2D`` node as a child of the skeleton. Put it on the hip "
"(usually skeletons start here). The bone will be pointing to the right, but "
"you can ignore this for now."
msgstr ""
"创建一个 ``Bone2D`` 节点作为骨架的子项。把它放在臀部（通常从这里开始建立骨"
"架）。骨骼会指向右边，但是现在你可以忽略这个。"

msgid "Keep creating bones in hierarchy and naming them accordingly."
msgstr "在层级结构中继续创建骨骼并依次命名它们."

msgid ""
"At the end of this chain, there will be a *jaw* node. It is, again, very "
"short and pointing to the right. This is normal for bones without children. "
"The length of *tip* bones can be changed with a property in the inspector:"
msgstr ""
"在这根链条的末端，会有一个\\ *下巴*\\ 节点。它很短小，也指向右边。这根单根骨"
"正常情况下没有子骨骼。\\ *提示*\\ 单根骨的长度属性可以通过检查器来改变："

msgid ""
"In this case, we don't need to rotate the bone (coincidentally the jaw "
"points right in the sprite), but in case you need to, feel free to do it. "
"Again, this is only really needed for tip bones as nodes with children don't "
"usually need a length or a specific rotation."
msgstr ""
"在这种情况下, 我们不需要旋转骨头, 巧合的是, 精灵中的下巴指向右边, 但万一需"
"要, 可以随意旋转. 同样, 这只是对尖端骨骼的真正需要, 因为带有子节点通常不需要"
"长度或特定的旋转."

msgid "Keep going and build the whole skeleton:"
msgstr "继续构建整个骨架："

msgid ""
"You will notice that all bones raise an annoying warning about a missing "
"rest pose. This means that it's time to set one. Go to the *skeleton* node "
"and create a rest pose. This pose is the default one, you can come back to "
"it anytime you want (which is very handy for animating):"
msgstr ""
"你会注意到，所有骨骼节点旁都有一个烦人的警告，提示你缺少放松姿势。这意味着是"
"时候设置一个了。转到\\ *骨架*\\ 节点并创建一个放松姿势。这个姿势是默认的，你"
"可以随时回来修改（对于制作动画来说非常方便）："

msgid ""
"The warnings will go away. If you modify the skeleton (add/remove bones) you "
"will need to set the rest pose again."
msgstr "警告消失了。如果你修改骨架（添加/移除骨骼）你需要重新设置放松姿势。"

msgid "Deforming the polygons"
msgstr "多边形的变形"

msgid ""
"Select the previously created polygons and assign the skeleton node to their "
"``Skeleton`` property. This will ensure that they can eventually be deformed "
"by it."
msgstr ""
"选择之前创建的多边形，并将骨架节点分配给它们的 ``Skeleton`` 属性。这将确保它"
"们最终能被变形。"

msgid "Click the property highlighted above and select the skeleton node:"
msgstr "单击上面突出显示的属性并选择骨架节点："

msgid ""
"Again, open the UV editor for the polygon and go to the *Bones* section."
msgstr "再次打开多边形的 UV 编辑器，进入 *Bones* 部分。"

msgid ""
"You will not be able to paint weights yet. For this you need to synchronize "
"the list of bones from the skeleton with the polygon. This step is done only "
"once and manually (unless you modify the skeleton by adding/removing/"
"renaming bones). It ensures that your rigging information is kept in the "
"polygon, even if a skeleton node is accidentally lost or the skeleton "
"modified. Push the \"Sync Bones to Polygon\" button to sync the list."
msgstr ""
"现在您还不能绘制权重。为此，您首先需要将骨架中的骨骼列表与多边形同步。此步骤"
"仅需手动执行一次（除非您通过添加/删除/重命名骨骼来修改骨架）。它确保您的绑定"
"信息保存在多边形中，即使骨架节点意外丢失或被修改。按“同步骨骼到多边形”按钮来"
"同步列表。"

msgid ""
"The list of bones will automatically appear. By default, your polygon has no "
"weight assigned to any of them. Select the bones you want to assign weight "
"to and paint them:"
msgstr ""
"骨骼列表将自动显示。默认情况下，您的多边形没有被分配任何权重信息。选择您想要"
"分配权重的骨骼，并在它们上面绘制："

msgid ""
"Points in white have a full weight assigned, while points in black are not "
"influenced by the bone. If the same point is painted white for multiple "
"bones, the influence will be distributed amongst them (so usually there is "
"not that much need to use shades in-between unless you want to polish the "
"bending effect)."
msgstr ""
"白色点完全受到权重影响，而黑色点完全不受影响。如果在多根骨骼上，绘制了相同的"
"白色点，那么权重的影响将平均分配在这些骨骼之间。（所以通常不需要过多使用中间"
"色调，除非你想仔细打磨弯曲效果）。"

msgid ""
"After painting the weights, animating the bones (NOT the polygons!) will "
"have the desired effect of modifying and bending the polygons accordingly. "
"As you only need to animate bones in this approach, work becomes much easier!"
msgstr ""
"绘制完权重后，制作骨骼的动画（不是多边形的动画！）会具有修改和弯曲多边形的预"
"期效果。因为你只需用这种方法驱动骨骼，工作就变得容易得多！"

msgid ""
"But it's not all roses. Trying to animate bones that bend the polygon will "
"often yield unexpected results:"
msgstr ""
"但这并不完美。尝试调调骨骼的动画，弯曲的多边形往往会产生意想不到的结果："

msgid ""
"This happens because Godot generates internal triangles that connect the "
"points when drawing the polygon. They don't always bend the way you would "
"expect. To solve this, you need to set hints in the geometry to clarify how "
"you expect it to deform."
msgstr ""
"这是因为Godot在绘制多边形时, 产生了内部三角形来连接这些点. 它们并不总是按你所"
"期望的方式弯曲. 如果要解决这个问题, 你需要在几何图形中设置提示, 以明确希望它"
"如何变形."

msgid "Internal vertices"
msgstr "内部顶点"

msgid ""
"Open the UV menu for each bone again and go to the *Points* section. Add "
"some internal vertices in the regions where you expect the geometry to bend:"
msgstr ""
"再次打开每根骨骼的 UV 菜单，进入 *Points* 部分。在你期望几何体弯曲的地方添加"
"一些内部顶点："

msgid ""
"Now, go to the *Polygon* section and redraw your own polygons with more "
"detail. Imagine that, as your polygons bend, you need to make sure they "
"deform the least possible, so experiment a bit to find the right setup."
msgstr ""
"现在转到 *多边形* 部分, 重新绘制细节更丰富的多边形. 这样, 当多边形弯曲时, 你"
"需要确保它们变形的可能性最小, 慢慢尝试找出正确的设置."

msgid ""
"Once you start drawing, the original polygon will disappear and you will be "
"free to create your own:"
msgstr "一旦你开始绘制, 原来的多边形会消失, 你可以自由创建自己的多边形:"

msgid ""
"This amount of detail is usually fine, though you may want to have more fine-"
"grained control over where triangles go. Experiment by yourself until you "
"get the results you like."
msgstr ""
"通常这个数量的细节没有问题, 尽管你想更精细地控制三角形. 请多多尝试, 直到获得"
"你满意的结果."

msgid ""
"**Note:** Don't forget that your newly added internal vertices also need "
"weight painting! Go to the *Bones* section again to assign them to the right "
"bones."
msgstr ""
"**注意:** 不要忘记你新添加的内部顶点也需要绘制权重!再次转到 *骨骼* 部分, 将它"
"们分配到正确的骨骼."

msgid "Once you are all set, you will get much better results:"
msgstr "一旦你设定好了, 你会得到更好的结果:"

msgid "Translation status"
msgstr "翻译状态"
