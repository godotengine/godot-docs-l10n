# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D lights and shadows"
msgstr "2D 灯光和阴影"

msgid "Introduction"
msgstr "前言"

msgid ""
"This tutorial explains how the 2D lighting works in the `lights and shadows "
"<https://github.com/godotengine/godot-demo-projects/tree/master/2d/"
"lights_and_shadows>`_ demo project. It begins with a brief description of "
"the resources used in the final demo and then describes how to make a scene "
"like the demo step by step."
msgstr ""
"本教程以 `灯与影 <https://github.com/godotengine/godot-demo-projects/tree/"
"master/2d/lights_and_shadows>`_ 演示项目解释了2D灯光的工作原理. 本节首先简要"
"介绍了最终demo所使用的资源, 然后介绍了如何逐步实现类似demo的场景."

msgid ""
"All the resources for this tutorial can be found in the `official demo "
"repository <https://github.com/godotengine/godot-demo-projects>`_ on GitHub. "
"I suggest you download it before starting. Alternatively, it can be "
"downloaded from the Project Manager. Launch Godot and in the top bar select "
"\"Templates\" and search for \"2D Lights and Shadows Demo\"."
msgstr ""
"本教程的所有资源都可以在 GitHub 上的\\ `官方演示仓库 <https://github.com/"
"godotengine/godot-demo-projects>`_\\ 中找到。我建议您在开始之前下载。或者也可"
"以在项目管理器中下载。在启动 Godot 时在顶部栏中选择“模板”选项卡并搜索“2D "
"Lights and Shadows Demo”。"

msgid "Setup"
msgstr "场景布置"

msgid ""
"For this demo we use four textures: two for the lights, one for the shadow "
"casters, and one for the background. I've included links to them all here if "
"you want to download them separately from the demo."
msgstr ""
"对于这个演示, 我们使用四种纹理: 两种用于灯光, 一种用于那些会产生阴影的物品, "
"一种用于背景. 如果想单独下载它们, 我在这里列出了所有链接."

msgid ""
"The first is the background image (`background.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/background.png>`_) used in the demo. You do not "
"necessarily need a background, but we use one for the demo."
msgstr ""
"第一个是演示中使用的背景图像( `bg.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/bg.png>`_ ). 你"
"不一定需要背景, 但我们还是在演示中用了一个."

msgid ""
"The second is a plain black image (`caster.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/caster.png>`_) to use as our shadow caster object. For a "
"top down game this could be a wall or any other object that casts a shadow."
msgstr ""
"第二个是用作影子的纯黑色图片 (`caster.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/caster."
"png>`_ ) . 对跳跃游戏, 它可能是墙或任何其他投射阴影的物体."

msgid ""
"Next is the light itself (`light.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/light.png>`_). "
"If you click the link you will notice how large it is. The image you use for "
"a light should cover the area you want your light to cover. This image is "
"1024x1024 pixels, so you should use it to cover 1024x1024 pixels in your "
"game."
msgstr ""
"接下来是灯本身 (`light.png <https://raw.githubusercontent.com/godotengine/"
"godot-demo-projects/master/2d/lights_and_shadows/light.png>`_ ) . 如果单击该"
"链接, 您会注意到它有多大. 用于灯光的图像应覆盖您希望灯光覆盖的区域. 此图像为"
"1024x1024像素, 因此您应该使用它来覆盖游戏中的1024x1024像素."

msgid ""
"Lastly, we have the spotlight image (`spot.png <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/spot.png>`_). The demo uses a blob to show where the "
"light is and the larger light image to show the effect of the light upon the "
"rest of the scene."
msgstr ""
"最后, 我们有聚光灯图像 (`spot.png <https://raw.githubusercontent.com/"
"godotengine/godot-demo-projects/master/2d/lights_and_shadows/spot.png>`_ ) . "
"该演示使用灯泡来显示灯光的位置, 使用较大的灯光图片来显示灯光对场景其余部分的"
"影响."

msgid "Nodes"
msgstr "节点"

msgid "The demo uses four different nodes:"
msgstr "该演示使用了四个不同类型的节点:"

msgid ":ref:`CanvasModulate <class_CanvasModulate>`"
msgstr ":ref:`CanvasModulate <class_CanvasModulate>`"

msgid ":ref:`Sprite <class_Sprite>`"
msgstr ":ref:`Sprite <class_Sprite>`"

msgid ":ref:`Light2D <class_Light2D>`"
msgstr ":ref:`Light2D <class_Light2D>`"

msgid ":ref:`LightOccluder2D <class_LightOccluder2D>`"
msgstr ":ref:`LightOccluder2D <class_LightOccluder2D>`"

msgid ""
":ref:`CanvasModulate<class_CanvasModulate>` is used to darken the scene."
msgstr ":ref:`CanvasModulate<class_CanvasModulate>` 用于使场景变暗。"

msgid ""
":ref:`Sprites <class_Sprite>` are used to display the textures for the light "
"blobs, the background, and for the shadow casters."
msgstr ""
":ref:`Sprites <class_Sprite>` 用于显示灯泡、背景和产生阴影的物体的纹理。"

msgid ""
":ref:`Light2Ds <class_Light2D>` are used to light the scene. The way a light "
"typically works is by adding a selected texture over the rest of the scene "
"to simulate lighting. But it can be used in other ways, for example masking "
"out parts of the scene."
msgstr ""
":ref:`Light2Ds <class_Light2D>` 用于点亮场景. 光通常的工作方式是在场景的其余"
"部分添加选定的纹理以模拟光照. 但它可以以其他方式使用, 例如屏蔽部分场景."

msgid ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` are used to tell the shader "
"which parts of the scene cast shadows. The shadows appear only on areas "
"covered by the :ref:`Light2D <class_Light2D>` and their direction is based "
"on the center of the :ref:`Light <class_Light2D>`."
msgstr ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` 用于告诉着色器, 场景的哪些部"
"分投射阴影. 阴影仅出现在 :ref:`Light2D <class_Light2D>` 所覆盖的区域, 它们的"
"方向基于 :ref:`Light <class_Light2D>` 的中心."

msgid "Lights"
msgstr "灯光"

msgid ""
":ref:`Lights <class_Light2D>` cover the entire extent of their respective "
"Texture. They use additive blending to add the color of their texture to the "
"scene."
msgstr ""
":ref:`Lights <class_Light2D>` 覆盖各自纹理的整个范围. 它们使用Additive "
"Blending将其纹理颜色添加到场景中."

msgid ""
":ref:`Lights <class_Light2D>` have four ``Modes``: ``Add``, ``Sub``, "
"``Mix``, and ``Mask``."
msgstr ""
":ref:`Lights <class_Light2D>` 有四个 ``模式``: ``add``, ``sub``, ``mix``, 和 "
"``mask`` ."

msgid ""
"``Add`` adds the color of the light texture to the scene. It brightens the "
"area under the light."
msgstr "``Add`` 将光纹理的颜色添加到场景中. 它会照亮灯光下的区域."

msgid ""
"``Sub`` subtracts the color of the light from the scene. It darkens the area "
"under the light."
msgstr "``Sub`` 从场景中减去光的颜色. 它使灯光下的区域变暗."

msgid ""
"``Mix`` mixes the color of the light with the underlying scene. The "
"resulting brightness is halfway between the color of the light and the color "
"underneath."
msgstr ""
"``Mix`` 混合了灯光的颜色和底层场景. 产生的亮度介于灯光颜色和下方颜色之间."

msgid ""
"``Mask`` is used to mask out areas that are covered by the light. Masked out "
"areas are hidden or revealed based on the color of the light."
msgstr "``Mask`` 用于遮盖灯光覆盖的区域. 根据光的颜色隐藏或显示遮盖区域."

msgid ""
"For the demo the lights have two components, the :ref:`Light "
"<class_Light2D>` itself (which is the effect of the light), and a :ref:"
"`Sprite <class_Sprite>` blob which is an image showing the location of the "
"light source. A child :ref:`Sprite <class_Sprite>` is not necessary to make "
"a :ref:`Light <class_Light2D>` work."
msgstr ""
"对于这个demo, 灯光有两个组件, :ref:`Light <class_Light2D>` 本身(这是灯光的效"
"果), 和 :ref:`Sprite <class_Sprite>` 灯泡(一个显示光源位置的图片). 子节点 :"
"ref:`Sprite <class_Sprite>` 不是让 :ref:`Light <class_Light2D>` 工作的必要条"
"件."

msgid "Shadows"
msgstr "阴影"

msgid ""
"Shadows are made by intersecting a :ref:`Light <class_Light2D>` with a :ref:"
"`LightOccluder2D <class_LightOccluder2D>`."
msgstr ""
"阴影是通过让 :ref:`Light <class_Light2D>` 与 :ref:`LightOccluder2D "
"<class_LightOccluder2D>` 的范围相交来制作的."

msgid ""
"By default shadows are turned off. To turn them on click on the :ref:`Light "
"<class_Light2D>` and under the Shadows section check ``Enabled``."
msgstr ""
"默认情况下, 阴影处于关闭状态. 要打开它们, 请单击 :ref:`Light "
"<class_Light2D>` 并在Shadows部分下面选中 ``启用`` ."

msgid ""
"In the demo we are using a :ref:`Sprite <class_Sprite>` with a Texture on it "
"to make the \"Shadow Casters\", but in reality all you need is a couple of :"
"ref:`LightOccluder2Ds <class_LightOccluder2D>`. By itself the :ref:"
"`LightOccluder2D <class_LightOccluder2D>` looks like a dark spot and in this "
"demo the :ref:`Sprite <class_Sprite>` is just a black square."
msgstr ""
"在演示中我们使用带有纹理的 :ref:`Sprite <class_Sprite>` 来制作 \"投射影子的物"
"体\", 但实际上您只需要几个 :ref:`LightOccluder2Ds "
"<class_LightOccluder2D>` . :ref:`LightOccluder2D <class_LightOccluder2D>` 本"
"身看起来像一个黑点, 在这个演示中 :ref:`Sprite <class_Sprite>` 只是一个黑色方"
"块."

msgid "Step by step"
msgstr "渐进式教程"

msgid ""
"Now that we have covered the basics of the nodes being used, we can now walk "
"step by step through the process of making a scene like the one found in the "
"demo."
msgstr ""
"既然我们已经介绍了需用到的节点的基础知识, 那就可以开始逐步实现demo中的场景了."

msgid ""
"First add a :ref:`Sprite <class_Sprite>` and set its texture to the "
"`background image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/background.png>`_. For your game this "
"can be any background you choose. For this style of shadow it is most likely "
"to be a floor texture."
msgstr ""
"首先添加一个 :ref:`Sprite <class_Sprite>` 并将其纹理设置为 `背景图片 "
"<https://raw.githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/bg.png>`_ . 在你的游戏中这可以是你选择的任何背景. 对于我们"
"这种风格的阴影, 这张图最可能是地板的纹理."

msgid ""
"Next create three :ref:`Light2D's <class_Light2D>` and set their textures to "
"the `light image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/light.png>`_. You can alter their "
"color in the top section. By default shadows are turned off and the ``mode`` "
"is set to ``add``. This means that each light adds its own color to whatever "
"is underneath."
msgstr ""
"接下来创建三个 :ref:`Light2D's <class_Light2D>` 并将它们的纹理设置为 `light "
"image <https://raw.githubusercontent.com/godotengine/godot-demo-projects/"
"master/2d/lights_and_shadows/light.png>`_ . 你可以在上面的栏目中更改颜色. 默"
"认情况下, 阴影关闭并且 ``mode`` 设置为 ``add`` . 这意味着每个灯光都会将自己的"
"颜色添加到下面的任何颜色中."

msgid ""
"Next add a child :ref:`Sprite <class_Sprite>` to each of the :ref:`Light "
"<class_Light2D>` nodes, and set the :ref:`Sprite's <class_Sprite>` texture "
"to the `blob image <https://raw.githubusercontent.com/godotengine/godot-demo-"
"projects/master/2d/lights_and_shadows/spot.png>`_. Each of these should stay "
"centered on the :ref:`Light <class_Light2D>` node. The blob is the image of "
"the light itself while the :ref:`Light <class_Light2D>` shows the effect "
"that the light has on the scene. The :ref:`LightOccluder2D's "
"<class_LightOccluder2D>` will treat the position of the light as the center "
"of the :ref:`Light <class_Light2D>` node, which is why we want the blob to "
"be centered on its parent :ref:`Light <class_Light2D>`."
msgstr ""
"接下来为每个 :ref:`Light <class_Light2D>` 节点添加一个 :ref:`Sprite "
"<class_Sprite>` 子节点, 并将 :ref:`Sprite's <class_Sprite>` 纹理设置为 `blob "
"image <https://raw.githubusercontent.com/godotengine/godot-demo-projects/"
"master/2d/lights_and_shadows/spot.png>`_ . 他们都应该保持在 :ref:`Light "
"<class_Light2D>` 节点的中心.blob是灯本身的图像, 而 :ref:`Light "
"<class_Light2D>` 显示灯光对场景的影响. :ref:`LightOccluder2D's "
"<class_LightOccluder2D>` 会将光的位置视为 :ref:`Light <class_Light2D>` 节点的"
"中心, 这就是为什么我们希望blob位于父节点 :ref:`Light <class_Light2D>` 的中心."

msgid ""
"The animations in the demo will not be covered here. See :ref:"
"`doc_introduction_animation` for information on creating animations."
msgstr ""
"这里将不涉及演示中的动画。有关创建动画的信息，请参见 :ref:"
"`doc_introduction_animation` 。"

msgid ""
"Right now the scene should look too bright. This is because all three lights "
"are adding color to the scene. This is why the demo uses a :ref:"
"`CanvasModulate <class_CanvasModulate>` in the scene. The :ref:"
"`CanvasModulate <class_CanvasModulate>` multiples the entire viewport by a "
"specific color."
msgstr ""
"现在场景看起来太亮了. 这是因为三个灯都在为场景添加颜色. 这就是演示场景使用 :"
"ref:`CanvasModulate <class_CanvasModulate>` 的原因. :ref:`CanvasModulate "
"<class_CanvasModulate>` 将整个视口乘以特定颜色."

msgid ""
"Add a :ref:`CanvasModulate <class_CanvasModulate>` to the scene and set its "
"color to ``rgb(70, 70, 70)``. This will make the scene sufficiently dark to "
"see the effects of the lights distinctly."
msgstr ""
"在场景中添加 :ref:`CanvasModulate <class_CanvasModulate>` 并将其颜色设置为 "
"``rgb(70, 70, 70)`` . 这将使场景足够暗, 以清楚地看到灯光的效果."

msgid "Now we add the shadow casters."
msgstr "现在, 我们来添加会投射阴影的物体."

msgid ""
"The demo uses a :ref:`Node <class_Node2D>` named \"casters\" to organize the "
"shadow casters. Add a :ref:`Node2D <class_Node2D>` to the scene. It will be "
"used to group all the shadow casters together. This way we can show and hide "
"them all at the same time."
msgstr ""
"该演示使用了一个名为 \"casters\" 的 :ref:`Node <class_Node2D>` 来组织投射阴影"
"的物体. 在场景中添加 :ref:`Node2D <class_Node2D>` . 它会被用来把所有投射阴影"
"的物体变成一个大组. 这样我们就可以同时显示和隐藏它们."

msgid ""
"Each shadow caster is made of a :ref:`Sprite <class_Sprite>`, with a :ref:"
"`LightOccluder2D <class_LightOccluder2D>` child. For the demo the :ref:"
"`Sprite <class_Sprite>` has a texture set to the `caster image <https://raw."
"githubusercontent.com/godotengine/godot-demo-projects/master/2d/"
"lights_and_shadows/caster.png>`_ and nothing else. The child :ref:"
"`LightOccluder2D <class_LightOccluder2D>` is where all the magic happens. In "
"a game the :ref:`Sprite <class_Sprite>` could be more than a black box; it "
"could be an image of whatever object is casting the shadow: a wall, a "
"magical chest, or anything else."
msgstr ""
"每个阴影投射器都由具有 :ref:`LightOccluder2D <class_LightOccluder2D>` 子节点"
"的 :ref:`Sprite <class_Sprite>` 组成. 在演示中, :ref:`Sprite <class_Sprite>` "
"的纹理设置为 `caster image <https://raw.githubusercontent.com/godotengine/"
"godot-demo-projects/master/2d/lights_and_shadows/caster.png>`_ . 子节点 :ref:"
"`LightOccluder2D <class_LightOccluder2D>` 是所有神奇的事情发生的地方. 在游戏"
"中 :ref:`Sprite <class_Sprite>` 可能不仅仅是一个黑色的方块; 它可以是任何可以"
"投射阴影的物体的图片: 一面墙, 一个宝箱或其他任何东西."

msgid ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` tell the game what shape the "
"occluder has. They hold an :ref:`OccluderPolygon2D "
"<class_OccluderPolygon2D>`, which is a container for a polygon and some "
"other information. For this demo, since our wall is a square, we set "
"``Polygon`` to a square. The other default settings are fine."
msgstr ""
":ref:`LightOccluder2Ds <class_LightOccluder2D>` 告诉游戏Occluder(遮光物)是什"
"么形状.Occluder是一个多边形的容器 :ref:`OccluderPolygon2D "
"<class_OccluderPolygon2D>` . 对于这个演示, 由于我们的墙是正方形, 我们将 "
"``Polygon`` 设置为正方形. 其他设置保持为默认."

msgid ""
"The first setting, ``Closed`` can be either ``on`` or ``off``. A closed "
"polygon occludes light coming from all directions. An open polygon only "
"occludes light from one direction."
msgstr ""
"对于第一个设置， ``Closed`` 可以是 ``on`` 或 ``off``\\ 。 闭合的多边形遮挡来"
"自所有方向的光线。 开放多边形仅遮挡来自一个方向的光线。"

msgid ""
"``Cull Mode`` lets you select which direction gets culled. The default is "
"``Disabled``, meaning the occluder will cast a shadow no matter which side "
"the light is on. The other two settings ``Clockwise`` and ``Counter-"
"Clockwise`` refer to the winding order of the vertices of the polygon. The "
"winding order is used to determine which side of the line is inside the "
"polygon. Only outward facing lines cast shadows."
msgstr ""
"``Cull Mode`` 让您选择剔除的方向. 默认值为 \"已禁用\", 这意味着无论灯光在哪一"
"侧, 遮挡物都会投射阴影. 另外两个设置 ``Clockwise`` 和 ``Counter-Clockwise`` "
"指的是多边形顶点的弯曲顺序. 弯曲顺序用于确定光线的哪一侧在多边形内. 只有朝外"
"的光线才投下阴影."

msgid ""
"To illustrate the difference, here is an image of a :ref:`LightOccluder2D "
"<class_LightOccluder2D>` with ``Closed`` set to ``off`` in the "
"corresponding :ref:`OccluderPolygon2D <class_OccluderPolygon2D>`, so that "
"the lines of the polygon can be seen:"
msgstr ""
"为了说明它们的差异, 这张图片里是一个相应的 :ref:`LightOccluder2D "
"<class_LightOccluder2D>` 的 ``Closed`` 设置为 ``off`` 的 :ref:"
"`OccluderPolygon2D <class_OccluderPolygon2D>` . 这是为了可以看到多边形的轮廓:"

msgid "``Cull Mode`` is set to ``Disabled``. All three lines cast shadows."
msgstr "``Cull Mode`` 设置为 ``Disabled`` . 全部三条轮廓线都投下阴影."

msgid ""
"``Cull Mode`` is set to ``Clockwise``. Only the top and right lines cast "
"shadows."
msgstr "``Cull Mode`` 设置为 ``Clockwise`` . 只有顶部和右侧线条投射阴影."

msgid ""
"``Cull Mode`` is set to ``Counter-Clockwise``. Only the bottom line casts a "
"shadow. If ``Closed`` was set to ``on`` there would be an additional "
"vertical line on the left which would cast a shadow as well."
msgstr ""
"``Cull Mode`` 设置为 ``Counter-Clockwise`` . 只有底部的轮廓线投下阴影. 如果 "
"``Closed`` 设置为 ``on`` , 左边会有一条额外的垂直轮廓线也会投射阴影."

msgid ""
"When you have added the :ref:`LightOccluder2Ds <class_LightOccluder2D>` the "
"shadows still won't appear. You need to go back into the :ref:`Light2Ds "
"<class_Light2D>` and under the Shadow section set ``Enable`` to ``on``. This "
"turns on shadows with hard edges like in the image below."
msgstr ""
"当你添加 :ref:`LightOccluder2Ds <class_LightOccluder2D>` 时, 阴影仍不会出现. "
"你需要回到 :ref:`Light2Ds <class_Light2D>` 并在Shadow部分下设置 ``Enable`` "
"为 ``on`` . 这将打开带有硬边缘的阴影, 如下图所示."

msgid ""
"To give the shadows that nice, soft edge look we set the variables "
"``filter``, ``filter smooth``, and ``gradient length``. Godot supports "
"`Percentage Closer Filtering <https://developer.nvidia.com/gpugems/GPUGems/"
"gpugems_ch11.html>`_ (PCF), which takes multiple samples of the shadow map "
"around a pixel and blurs them to create a smooth shadow effect. The higher "
"the number of samples the smoother the shadow will look, but the slower it "
"will run. That is why Godot provides 3-13 samples by default and allows you "
"to choose. The demo uses PCF7."
msgstr ""
"为了给出看起来更好的柔和边缘阴影, 我们设置变量 ``filter`` , ``filter "
"smooth`` 和 ``gradient length`` . Godot支持 `Percentage Closer Filtering "
"<https://developer.nvidia.com/gpugems/GPUGems/gpugems_ch11.html>`_ (PCF) , 它"
"在像素周围提取阴影贴图的多个样本, 并模糊它们以创建平滑的阴影效果. 样本数越"
"多, 阴影看起来越平滑但运行速度越慢. 这就是为什么Godot默认提供3-13个样本并让你"
"可以自己选择用几个样本. 该演示使用PCF7."

msgid ""
"This is a shadow rendered with the demo's settings. ``gradient length`` is "
"set to ``1.3``, ``filter smooth`` is set to ``11.1``, and ``filter`` is set "
"to ``PCF7``."
msgstr ""
"这是使用演示中设置渲染的阴影. ``gradient length`` 设置为 ``1.3`` , ``filter "
"smooth`` 设置成 ``11.1`` , ``filter`` 设置为 ``PCF7`` ."

msgid ""
"``filter`` is set to ``PCF13``. Notice how the shadow becomes wider, this is "
"because the distance between samples is based on the variable ``filter "
"smooth``."
msgstr ""
"``filter`` 设置为 ``PCF13`` . 注意这里阴影变宽了, 这是因为样本之间的距离是依"
"赖于变量 ``filter smooth`` 的."

msgid ""
"In order to make use of filtering you need to set the ``filter smooth`` "
"variable. This dictates how far apart the samples are. If you want the soft "
"area to extend quite far, you can increase the size of ``filter smooth``. "
"However, with few samples and a large filter smooth, you can see lines "
"forming between the samples."
msgstr ""
"为了使用filtering(过滤), 你需要设置 ``filter smooth`` 变量. 这决定了样品之间"
"的距离. 如果您想让柔软区域延伸很远, 您可以增加 ``filter smooth`` 的大小. 然"
"而, 在低样品和大过滤平滑的情况下, 你会看到样本之间形成的线条."

msgid "``filter smooth`` is set to ``30``."
msgstr "``filter smooth`` 设置为 ``30`` ."

msgid ""
"The different :ref:`Light <class_Light2D>` nodes in the demo use different "
"values for filter smooth. Play around with it and see what you like."
msgstr ""
"演示中的不同 :ref:`Light <class_Light2D>` 节点使用不同的filter smooth值. 玩玩"
"它, 看看你喜欢什么样的."

msgid "``filter smooth`` is set to ``0``."
msgstr "``filter smooth`` 设置为 ``0`` ."

msgid ""
"Lastly, there is the variable ``gradient length``. For some smooth shadows "
"it is preferable not to have the shadow start immediately on the object, as "
"this produces a hard edge. The gradient length variable creates a smooth "
"gradient to begin the shadow to reduce the effect of the hard edge."
msgstr ""
"最后谈谈变量 ``gradient length`` . 对于一些平滑阴影, 最好不要在对象上立即开始"
"阴影, 因为这会产生硬边. Gradient length(渐变长度)变量让阴影刚开始的时候平滑渐"
"变, 以减少硬边缘的影响."

msgid "``gradient length`` is set to ``0``."
msgstr "``gradient length`` 设置为 ``0`` ."

msgid "``gradient length`` is set to ``10``."
msgstr "``gradient length`` 设置为 ``10`` ."

msgid ""
"You will need to play around with the options a bit to find settings that "
"suit your project. There is no right solution for everyone, which is why "
"Godot provides so much flexibility. Just keep in mind that the higher "
"``filter`` set the more expensive the shadows will be."
msgstr ""
"您需要稍微调整设置以找到适合你项目的设置. 没有对每个人都正确的解决方案, 这就"
"是Godot为什么提供如此多灵活性. 只要记住 ``filter`` 值越高, 阴影的计算成本也越"
"高就行了."

msgid "Translation status"
msgstr "翻译状态"
