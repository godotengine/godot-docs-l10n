# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Localization using gettext"
msgstr "使用 gettext 进行本地化"

msgid ""
"In addition to :ref:`doc_importing_translations` in CSV format, Godot also "
"supports loading translation files written in the GNU gettext format (text-"
"based ``.po`` and compiled ``.mo`` since Godot 3.5)."
msgstr ""
"除了 CSV 格式的 :ref:`doc_importing_translations` 外，Godot 还支持加载 GNU "
"gettext 格式的翻译文件（基于文本的 ``.po``\\ ，Godot 3.5 起还支持编译后的 ``."
"mo``\\ ）。"

msgid ""
"For an introduction to gettext, check out `A Quick Gettext Tutorial <https://"
"www.labri.fr/perso/fleury/posts/programming/a-quick-gettext-tutorial."
"html>`_. It's written with C projects in mind, but much of the advice also "
"applies to Godot (with the exception of ``xgettext``)."
msgstr ""
"有关 gettext 的介绍，请查看 `A Quick Gettext Tutorial <https://www.labri.fr/"
"perso/fleury/posts/programming/a-quick-gettext-tutorial.html>`_\\ 。它是针对 "
"C 项目编写的，但是很多建议也适用于 Godot（除了 ``xgettext``\\ ）。"

msgid "Advantages"
msgstr "优势"

msgid ""
"gettext is a standard format, which can be edited using any text editor or "
"GUI editors such as `Poedit <https://poedit.net/>`_."
msgstr ""
"gettext 是一种标准格式，可以使用任何文本编辑器或图形用户界面编辑器（如 "
"`Poedit <https://poedit.net/>`_\\ ）进行编辑。"

msgid ""
"gettext is supported by translation platforms such as `Transifex <https://"
"www.transifex.com/>`_ and `Weblate <https://weblate.org/>`_, which makes it "
"easier for people to collaborate to localization."
msgstr ""
"`Transifex <https://www.transifex.com/>`_ 和 `Weblate <https://weblate.org/"
">`_ 等翻译平台也支持 gettext，让人们可以更方便地进行本地化协作。"

msgid ""
"Compared to CSV, gettext works better with version control systems like Git, "
"as each locale has its own messages file."
msgstr ""
"与 CSV 相比，gettext 更适合 Git 这样的版本控制系统，因为每个语言环境都有自己"
"的消息文件。"

msgid ""
"Multiline strings are more convenient to edit in gettext files compared to "
"CSV files."
msgstr "与 CSV 文件相比，在 gettext 文件中编辑多行字符串更方便。"

msgid "Disadvantages"
msgstr "缺点"

msgid ""
"gettext is a more complex format than CSV and can be harder to grasp for "
"people new to software localization."
msgstr ""
"gettext 是一种比 CSV 更复杂的格式，对于刚接触软件本地化的人来说可能更难理解。"

msgid ""
"People who maintain localization files will have to install gettext tools on "
"their system. However, as Godot supports using text-based message files (``."
"po``), translators can test their work without having to install gettext "
"tools."
msgstr ""
"维护本地化文件的人员必须在其系统上安装 gettext 工具。但是，由于 Godot 支持使"
"用基于文本的消息文件（\\ ``.po``\\ ），翻译人员无需安装 gettext 工具即可测试"
"他们的工作。"

msgid "Caveats"
msgstr "注意事项"

msgid ""
"As Godot uses its own PO file parser behind the scenes (which is more "
"limited than the reference GNU gettext implementation), some features such "
"as pluralization aren't supported."
msgstr ""
"由于 Godot 在幕后使用自己的 PO 文件解析器（这比参考 GNU gettext 实现有更多限"
"制），因此不支持诸如复数之类的一些特性。"

msgid "Installing gettext tools"
msgstr "安装 gettext 工具"

msgid ""
"The command line gettext tools are required to perform maintenance "
"operations, such as updating message files. Therefore, it's strongly "
"recommended to install them."
msgstr ""
"需要命令行 gettext 工具来执行维护操作，如更新消息文件。因此，强烈建议您安装它"
"们。"

msgid ""
"**Windows:** Download an installer from `this page <https://mlocati.github."
"io/articles/gettext-iconv-windows.html>`_. Any architecture and binary type "
"(shared or static) works; if in doubt, choose the 64-bit static installer."
msgstr ""
"**Windows：**\\ 从\\ `该页面 <https://mlocati.github.io/articles/gettext-"
"iconv-windows.html>`_\\ 下载安装程序。任何体系结构和二进制类型（共享或静态）"
"都可以；如果不确定，请选择 64 位静态安装程序。"

msgid ""
"**macOS:** Install gettext either using `Homebrew <https://brew.sh/>`_ with "
"the ``brew install gettext`` command, or using `MacPorts <https://www."
"macports.org/>`_ with the ``sudo port install gettext`` command."
msgstr ""
"**macOS：**\\ 使用 `Homebrew <https://brew.sh/>`_ 的 ``brew install "
"gettext`` 命令来安装 gettext，或使用 `MacPorts <https://www.macports.org/>`_ "
"的 ``sudo port install gettext`` 命令来安装。"

msgid ""
"**Linux:** On most distributions, install the ``gettext`` package from your "
"distribution's package manager."
msgstr ""
"**Linux：**\\ 在大多数发行版上，请使用发行版的包管理器安装 ``gettext`` 包。"

msgid "Creating the PO template (POT) manually"
msgstr "手动创建 PO 模板（POT）"

msgid ""
"Godot currently doesn't support extracting source strings using "
"``xgettext``, so the ``.pot`` file must be created manually. This file can "
"be placed anywhere in the project directory, but it's recommended to keep it "
"in a subdirectory, as each locale will be defined in its own file."
msgstr ""
"Godot目前不支持使用 ``xgettext`` 提取源字符串, 因此必须手动创建 ``.pot`` 文"
"件. 该文件可以放在项目目录中的任何位置, 但建议将其放在子目录中, 因为每个语言"
"环境都将在其自己的文件中定义."

msgid ""
"Create a directory named `locale` in the project directory. In this "
"directory, save a file named ``messages.pot`` with the following contents:"
msgstr ""
"在工程目录下创建名为 `locale` 的目录. 在该目录下, 保存一个名为 ``messages."
"pot`` 的文件, 内容如下:"

msgid ""
"Messages in gettext are made of ``msgid`` and ``msgstr`` pairs. ``msgid`` is "
"the source string (usually in English), ``msgstr`` will be the translated "
"string."
msgstr ""
"gettext 中的消息由 ``msgid`` 和 ``msgstr`` 对组成。\\ ``msgid`` 为源字符串"
"（一般为英文），\\ ``msgstr`` 为翻译后的字符串。"

msgid ""
"The ``msgstr`` value in PO template files (``.pot``) should **always** be "
"empty. Localization will be done in the generated ``.po`` files instead."
msgstr ""
"PO 模板文件（\\ ``.pot``\\ ）中的 ``msgstr`` 值应\\ **始终**\\ 为空。本地化会"
"在生成的 ``.po`` 文件中进行。"

msgid "Creating the PO template (POT) using pybabel"
msgstr "使用 pybabel 创建 PO 模板（POT）"

msgid ""
"The Python tool pybabel has support for Godot and can be used to "
"automatically create and update the POT file from your scene files and "
"scripts."
msgstr ""
"Python 工具 pybabel 支持 Godot，可用于从场景文件和脚本自动创建和更新 POT 文"
"件。"

msgid "After installing ``babel`` and ``babel-godot``, for example using pip:"
msgstr "安装 ``Babel`` 和 ``babel-godot`` 后, 例如使用pip:"

msgid ""
"Write a mapping file (for example ``babelrc``) which will indicate which "
"files pybabel needs to process (note that we process GDScript as Python, "
"which is generally sufficient):"
msgstr ""
"编写一个映射文件（例如 ``Babelrc``\\ ），指明 pybabel 需要处理哪些文件（请注"
"意，我们将 GDScript 作为 Python 处理，这通常就足够了）："

msgid "You can then run pybabel like so:"
msgstr "然后，您可以运行 pybabel，如下所示："

msgid ""
"Use the ``-k`` option to specify what needs to be extracted. In this case, "
"arguments to :ref:`tr() <class_Object_method_tr>` will be translated, as "
"well as properties named \"text\" (commonly used by Control nodes) and "
"LineEdit's \"placeholder_text\" property."
msgstr ""
"使用 ``-k`` 选项指定需要提取的内容。在这种情况下，将翻译 :ref:"
"`tr()<class_object_method_tr>` 的参数，以及名为“text”的属性（Control 节点常"
"用）和 LineEdit 的 ``placeholder_text`` 属性。"

msgid "Creating a messages file from a PO template"
msgstr "从 PO 模板创建消息文件"

msgid ""
"The ``msginit`` command is used to turn a PO template into a messages file. "
"For instance, to create a French localization file, use the following "
"command while in the ``locale`` directory:"
msgstr ""
"``msginit`` 命令用于将 PO 模板转换为消息文件。例如，要创建法语本地化文件，请"
"在 ``locale`` 目录中使用以下命令："

msgid ""
"The command above will create a file named ``fr.po`` in the same directory "
"as the PO template."
msgstr "上面的命令会在 PO 模板所在的目录下创建一个名为 ``fr.po`` 的文件。"

msgid ""
"Alternatively, you can do that graphically using Poedit, or by uploading the "
"POT file to your web platform of choice."
msgstr ""
"或者，您可以使用 Poedit 以图形方式完成此操作，或者通过将 POT 文件上传到您选择"
"的 Web 平台。"

msgid "Loading a messages file in Godot"
msgstr "在 Godot 中加载消息文件"

msgid ""
"To register a messages file as a translation in a project, open the "
"**Project Settings**, then go to the **Localization** tab. In "
"**Translations**, click **Add…** then choose the ``.po`` or ``.mo`` file in "
"the file dialog. The locale will be inferred from the ``\"Language: "
"<code>\\n\"`` property in the messages file."
msgstr ""
"如果要将消息文件注册为项目的翻译，请打开\\ **项目设置**\\ ，然后进入\\ **本地"
"化**\\ 选项卡。在\\ **翻译**\\ 中单击\\ **添加...**\\ ，然后在文件对话框中选"
"择该 ``.po`` 或者 ``.mo`` 文件。区域设置将从消息文件的 ``\"Language: "
"<code>\\n\"`` 属性中推算出来。"

msgid ""
"See :ref:`doc_internationalizing_games` for more information on importing "
"and testing translations in Godot."
msgstr ""
"关于在 Godot 中导入和测试翻译的更多信息，请参阅 :ref:"
"`doc_internationalizing_games`。"

msgid "Updating message files to follow the PO template"
msgstr "按照 PO 模板更新消息文件"

msgid ""
"After updating the PO template, you will have to update message files so "
"that they contain new strings, while removing strings that are no longer "
"present in the PO template. This can be done automatically using the "
"``msgmerge`` tool:"
msgstr ""
"更新 PO 模板后，您必须更新消息文件以使其包含新字符串，同时删除已经在 PO 模板"
"中不复存在的字符串。这可以使用 ``msgmerge`` 工具自动完成："

msgid ""
"If you want to keep a backup of the original message file (which would be "
"saved as ``fr.po~`` in this example), remove the ``--backup=none`` argument."
msgstr ""
"如果你想保留原始消息文件的备份，在本例中会保存为 ``fr.po~`` ，请删除 ``--"
"backup=none`` 参数。"

msgid ""
"After running ``msgmerge``, strings which were modified in the source "
"language will have a \"fuzzy\" comment added before them in the ``.po`` "
"file. This comment denotes that the translation should be updated to match "
"the new source string, as the translation will most likely be inaccurate "
"until it's updated."
msgstr ""
"运行 ``msgmerge`` 后，如果源语言修改了某个字符串，那么在 ``.po`` 文件中就会在"
"这个字符串之前加入“fuzzy”注释。这个注释表示的是翻译应当针对新字符串进行更新，"
"因为现有翻译非常可能是不精确的。"

msgid ""
"Strings with \"fuzzy\" comments will **not** be read by Godot until the "
"translation is updated and the \"fuzzy\" comment is removed."
msgstr ""
"Godot **不会**\\ 读取带有“fuzzy”注释的字符串，需要更新翻译并移除“fuzzy”注释才"
"行。"

msgid "Checking the validity of a PO file or template"
msgstr "检查 PO 文件或模板的有效性"

msgid ""
"It is possible to check whether a gettext file's syntax is valid by running "
"the command below:"
msgstr "可以通过运行以下命令来检查 gettext 文件的语法是否有效："

msgid ""
"If there are syntax errors or warnings, they will be displayed in the "
"console. Otherwise, ``msgfmt`` won't output anything."
msgstr ""
"如果有语法错误或警告，他们将显示在控制台。否则，\\ ``msgfmt`` 不会输出任何东"
"西。"

msgid "Using binary MO files (useful for large projects only)"
msgstr "使用二进制 MO 文件（仅适用于大型项目）"

msgid ""
"For large projects with several thousands of strings to translate or more, "
"it can be worth it to use binary (compiled) MO message files instead of text-"
"based PO files. Binary MO files are smaller and faster to read than the "
"equivalent PO files."
msgstr ""
"大型项目会有成千上万的字符串要翻译，相比于基于文本的 PO 文件，使用（编译为）"
"二进制的 MO 消息文件可能更加划算。二进制 MO 文件比对应的 PO 文件更小、读起来"
"更快。"

msgid "You can generate a MO file with the command below:"
msgstr "你可以使用下面的命令生成 MO 文件："

msgid ""
"If the PO file is valid, this command will create a ``fr.mo`` file besides "
"the PO file. This MO file can then be loaded in Godot as described below."
msgstr ""
"如果这个 PO 文件是有效的，这个命令就会在 PO 文件的旁边创建一个 ``fr.mo`` 文"
"件。这个 MO 文件可以按照下文的方法加载进 Godot。"

msgid ""
"The original PO file should be kept in version control so you can update "
"your translation in the future. In case you lose the original PO file and "
"wish to decompile a MO file into a text-based PO file, you can do so with:"
msgstr ""
"应该在版本控制中保留原始 PO 文件，这样以后就可以更新翻译。如果你丢失了原始的 "
"PO 文件，希望将 MO 文件反编译为基于文本的 PO 文件，你可以这样做："

msgid ""
"The decompiled file will not include comments or fuzzy strings, as these are "
"never compiled in the MO file in the first place."
msgstr ""
"反编译出的文件不包含注释和模糊字符串，因为它们一开始就没有编译进 MO 文件里。"

msgid "Translation status"
msgstr "翻译状态"
