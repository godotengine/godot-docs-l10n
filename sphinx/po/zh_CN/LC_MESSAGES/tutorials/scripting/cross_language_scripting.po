# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-language scripting"
msgstr "跨语言脚本"

msgid ""
"Godot allows you to mix and match scripting languages to suit your needs. "
"This means a single project can define nodes in both C# and GDScript. This "
"page will go through the possible interactions between two nodes written in "
"different languages."
msgstr ""
"Godot允许您混合和匹配脚本语言以满足您的需求. 这意味着一个项目可以同时用C#和"
"GDScript定义节点. 本页将介绍用不同语言编写的两个节点之间可能的交互."

msgid ""
"The following two scripts will be used as references throughout this page."
msgstr "以下两个脚本用在整个页面中作为参考."

msgid "Instantiating nodes"
msgstr "实例化节点"

msgid ""
"If you're not using nodes from the scene tree, you'll probably want to "
"instantiate nodes directly from the code."
msgstr "如果不使用场景树中的节点, 则可能需要直接从代码实例化节点."

msgid "Instantiating C# nodes from GDScript"
msgstr "在 GDScript 中实例化 C# 节点"

msgid ""
"Using C# from GDScript doesn't need much work. Once loaded (see :ref:"
"`doc_gdscript_classes_as_resources`), the script can be instantiated with :"
"ref:`new() <class_CSharpScript_method_new>`."
msgstr ""
"从GDScript中使用C#并不麻烦. 加载后(见 :ref:"
"`doc_gdscript_classes_as_resources`)脚本就可以使用 :ref:`new() "
"<class_CSharpScript_method_new>` 进行实例化."

msgid ""
"When creating ``.cs`` scripts, you should always keep in mind that the class "
"Godot will use is the one named like the ``.cs`` file itself. If that class "
"does not exist in the file, you'll see the following error: ``Invalid call. "
"Nonexistent function `new` in base``."
msgstr ""
"创建 ``.cs`` 脚本时, 应始终记住 Godot 将使用和这个 ``.cs`` 文件名相同的类. 如"
"果文件中不存在该类, 您将看到以下错误: ``Invalid call. Nonexistent function "
"`new` in base`` ."

msgid "For example, MyCoolNode.cs should contain a class named MyCoolNode."
msgstr "比如,MyCoolNode.cs 应该包含一个名为 MyCoolNode 的类."

msgid ""
"You also need to check your ``.cs`` file is referenced in the project's ``."
"csproj`` file. Otherwise, the same error will occur."
msgstr ""
"您还需要检查在项目的 ``.csproj`` 文件中引用了该 ``.cs`` 文件的内容. 否则, 将"
"发生相同的错误."

msgid "Instantiating GDScript nodes from C#"
msgstr "在C#中实例化GDScript节点"

msgid ""
"From the C# side, everything work the same way. Once loaded, the GDScript "
"can be instantiated with :ref:`GDScript.New() <class_GDScript_method_new>`."
msgstr ""
"在 C# 端, 所有的工作方式相同. 加载后,GDScript 可以被实例化, 使用 :ref:"
"`GDScript.New() <class_GDScript_method_new>`."

msgid ""
"Here we are using an :ref:`class_Object`, but you can use type conversion "
"like explained in :ref:`doc_c_sharp_features_type_conversion_and_casting`."
msgstr ""
"在这里我们使用一个 :ref:`class_Object` , 但是也可以使用类型转换, 如 :ref:"
"`doc_c_sharp_features_type_conversion_and_casting` 章节所述."

msgid "Accessing fields"
msgstr "访问字段"

msgid "Accessing C# fields from GDScript"
msgstr "从 GDScript 中访问 C# 字段"

msgid ""
"Accessing C# fields from GDScript is straightforward, you shouldn't have "
"anything to worry about."
msgstr "从GDScript访问 C# 字段很简单, 没什么可担心的."

msgid ""
"Note that it doesn't matter if the field is defined as a property or an "
"attribute. However, trying to set a value on a property that does not define "
"a setter will result in a crash."
msgstr ""
"需要注意的是, 字段定义为属性(property)或特性(attribute)并不重要, 但尝试在未定"
"义 setter 的属性(property)上设置值将导致崩溃."

msgid "Accessing GDScript fields from C#"
msgstr "从 C# 中访问 GDSscript"

msgid ""
"As C# is statically typed, accessing GDScript from C# is a bit more "
"convoluted, you will have to use :ref:`Object.Get() "
"<class_Object_method_get>` and :ref:`Object.Set() "
"<class_Object_method_set>`. The first argument is the name of the field you "
"want to access."
msgstr ""
"由于 C# 是静态类型, 因此从 C# 访问 GDScript 会有点复杂, 因此您必须使用 :ref:"
"`Object.Get() <class_Object_method_get>` 和 :ref:`Object.Set() "
"<class_Object_method_set>` . 第一个参数是要访问的字段的名称."

msgid ""
"Keep in mind that when setting a field value you should only use types the "
"GDScript side knows about. Essentially, you want to work with built-in types "
"as described in :ref:`doc_gdscript` or classes extending :ref:`class_Object`."
msgstr ""
"牢记在给字段赋值时只能使用 GDScript 知道的类型. 实质上指的是 GDScript 的内置"
"类型 :ref:`doc_gdscript` 或者 :ref:`class_Object` 的扩展类."

msgid "Calling methods"
msgstr "调用方法"

msgid "Calling C# methods from GDScript"
msgstr "在GDScript中调用C#方法"

msgid ""
"Again, calling C# methods from GDScript should be straightforward. The "
"marshalling process will do its best to cast the arguments to match function "
"signatures. If that's impossible, you'll see the following error: ``Invalid "
"call. Nonexistent function `FunctionName```."
msgstr ""
"从 GDScript 调用 C# 方法同样是很简单的. 调用过程将尽力强制转换你的参数类型去"
"匹配函数签名. 如果失败则会看到以下错误 ``Invalid call. Nonexistent function "
"`FunctionName``` ."

msgid "Calling GDScript methods from C#"
msgstr "从 C# 中 调用 GDScript 方法"

msgid ""
"To call GDScript methods from C# you'll need to use :ref:`Object.Call() "
"<class_Object_method_call>`. The first argument is the name of the method "
"you want to call. The following arguments will be passed to said method."
msgstr ""
"从 C# 中调用 GDScript 方法需要使用 :ref:`Object.Call() "
"<class_Object_method_call>` . 第一个参数是想要调用方法的名称. 接下来的其他参"
"数会传递给被调用的方法."

msgid ""
"As you can see, if the first argument of the called method is an array, "
"you'll need to cast it as ``object``. Otherwise, each element of your array "
"will be treated as a single argument and the function signature won't match."
msgstr ""
"如您所见，如果被调用方法的第一个参数为数组类型，你需要强制转换成 "
"``object``\\ 。否则数组的每个元素将被当做单个参数传入，这将导致与被调用的函数"
"签名参数不匹配。"

msgid "Inheritance"
msgstr "继承"

msgid ""
"A GDScript file may not inherit from a C# script. Likewise, a C# script may "
"not inherit from a GDScript file. Due to how complex this would be to "
"implement, this limitation is unlikely to be lifted in the future. See `this "
"GitHub issue <https://github.com/godotengine/godot/issues/38352>`__ for more "
"information."
msgstr ""
"GDScript文件可能无法从C＃脚本继承. 同样地,C＃脚本可能无法从GDScript文件继承. "
"由于实现起来非常复杂, 因此将来不太可能取消此限制. 详见 `这个 GitHub issue "
"<https://github.com/godotengine/godot/issues/38352>`_ ."

msgid "Translation status"
msgstr "翻译状态"
