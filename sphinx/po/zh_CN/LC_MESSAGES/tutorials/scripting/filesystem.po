# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "File system"
msgstr "文件系统"

msgid "Introduction"
msgstr "前言"

msgid ""
"A file system manages how assets are stored and how they are accessed. A "
"well-designed file system also allows multiple developers to edit the same "
"source files and assets while collaborating. Godot stores all assets as "
"files in its file system."
msgstr ""
"文件系统管理资源的存储方式和访问方式. 精心设计的文件系统还允许多个开发人员在"
"协作时编辑相同的源文件和资源.Godot将所有资源作为文件存储在其文件系统中."

msgid "Implementation"
msgstr "实现"

msgid ""
"The file system stores resources on disk. Anything, from a script, to a "
"scene or a PNG image is a resource to the engine. If a resource contains "
"properties that reference other resources on disk, the paths to those "
"resources are also included. If a resource has sub-resources that are built-"
"in, the resource is saved in a single file together with all the bundled sub-"
"resources. For example, a font resource is often bundled together with the "
"font textures."
msgstr ""
"文件系统将资源存储在磁盘上. 从脚本到场景或PNG图像的任何内容都是引擎的资源. 如"
"果一个资源包含引用磁盘上其他资源的属性, 则它还将包括这些资源的路径. 如果一个"
"资源具有内置的子资源, 则该资源与所有捆绑的子资源一起保存在单个文件中. 例如, "
"字体资源通常与字体纹理捆绑在一起."

msgid ""
"The Godot file system avoids using metadata files. Existing asset managers "
"and VCSs are better than anything we can implement, so Godot tries its best "
"to play along with SVN, Git, Mercurial, Perforce, etc."
msgstr ""
"Godot文件系统避免使用元数据文件. 现有的资源管理器和VCS比我们能够实现的任何东"
"西都要好, 因此Godot会尽力与SVN, Git, Mercurial, Perforce等一起使用."

msgid "Example of file system contents:"
msgstr "文件系统内容示例:"

msgid "project.godot"
msgstr "project.godot"

msgid ""
"The ``project.godot`` file is the project description file, and it is always "
"found at the root of the project. In fact, its location defines where the "
"root is. This is the first file that Godot looks for when opening a project."
msgstr ""
"``project.godot`` 文件是项目描述文件, 可以始终在项目的根目录下找到. 实际上, "
"其位置定义了根的位置. 这是Godot打开项目时要查找的第一个文件."

msgid ""
"This file contains the project configuration in plain text, using the win."
"ini format. Even an empty ``project.godot`` can function as a basic "
"definition of a blank project."
msgstr ""
"该文件使用 ``win.ini`` 格式以纯文本格式包含项目配置. 甚至一个空的 ``project."
"godot`` 都可以用作空项目的基本定义."

msgid "Path delimiter"
msgstr "路径分隔符"

msgid ""
"Godot only supports ``/`` as a path delimiter. This is done for portability "
"reasons. All operating systems support this, even Windows, so a path such as "
"``C:\\project\\project.godot`` needs to be typed as ``C:/project/project."
"godot``."
msgstr ""
"Godot只支持用 ``/`` 做路径分隔符. 这样做出于可移植性的原因. 所有操作系统甚至"
"Windows都支持此功能, 因此诸如 ``c:\\project\\project.godot`` 之类的路径需要键"
"入为 ``C:/project/project.godot`` ."

msgid "Resource path"
msgstr "资源路径"

msgid ""
"When accessing resources, using the host OS file system layout can be "
"cumbersome and non-portable. To solve this problem, the special path ``res://"
"`` was created."
msgstr ""
"访问资源时, 使用主机OS文件系统布局可能很麻烦且不可移植. 为了解决这个问题, 创"
"建了特殊路径 ``res://``."

msgid ""
"The path ``res://`` will always point at the project root (where ``project."
"godot`` is located, so ``res://project.godot`` is always valid)."
msgstr ""
"路径 ``res://`` 将始终指向项目根目录( ``project.godot`` 所在的位置, 因此 "
"``res://project.godot`` 将始终有效)."

msgid ""
"This file system is read-write only when running the project locally from "
"the editor. When exported or when running on different devices (such as "
"phones or consoles, or running from DVD), the file system will become read-"
"only and writing will no longer be permitted."
msgstr ""
"仅当从编辑器本地运行项目时, 此文件系统才是读写的. 导出时或在其他设备(例如电话"
"或控制台, 或从DVD运行)上运行时, 文件系统将变为只读状态, 并且将不再允许写入."

msgid "User path"
msgstr "用户路径"

msgid ""
"Writing to disk is still needed for tasks such as saving game state or "
"downloading content packs. To this end, the engine ensures that there is a "
"special path ``user://`` that is always writable. This path resolves "
"differently depending on the OS the project is running on. Local path "
"resolution is further explained in :ref:`doc_data_paths`."
msgstr ""
"保存游戏状态和下载内容包之类的任务仍然需要对磁盘进行写入。为此，引擎保证特殊"
"路径 ``user://`` 始终可写。根据运行项目的操作系统的不同，该路径会被解析为不同"
"的路径。本地路径解析在 :ref:`doc_data_paths` 中有更加深入的介绍。"

msgid "Host file system"
msgstr "主机文件系统"

msgid ""
"Alternatively host file system paths can also be used, but this is not "
"recommended for a released product as these paths are not guaranteed to work "
"on all platforms. However, using host file system paths can be useful when "
"writing development tools in Godot."
msgstr ""
"另外, 也可以使用主机文件系统路径, 但是不建议将其用于已发布的产品, 因为不能保"
"证这些路径在所有平台上都可以使用. 但是, 在Godot中编写开发工具时, 使用主机文件"
"系统路径可能会很有用."

msgid "Drawbacks"
msgstr "缺点"

msgid ""
"There are some drawbacks to this simple file system design. The first issue "
"is that moving assets around (renaming them or moving them from one path to "
"another inside the project) will break existing references to these assets. "
"These references will have to be re-defined to point at the new asset "
"location."
msgstr ""
"这种简单的文件系统设计有一些缺点。第一个问题是，资源四处移动（重新命名资源或"
"将其从项目中的一条路径移动到另一条路径）将破坏现有对这些资源的引用。这些引用"
"将必须重新定义以指向新资源的位置。"

msgid ""
"To avoid this, do all your move, delete and rename operations from within "
"Godot, on the FileSystem dock. Never move assets from outside Godot, or "
"dependencies will have to be fixed manually (Godot detects this and helps "
"you fix them anyway, but why go the hard route?)."
msgstr ""
"为避免这种情况, 请在Godot中的文件系统停靠面板上, 进行所有移动, 删除和重命名操"
"作. 切勿从Godot外部移动资源, 否则必须手动修复依赖关系(Godot会检测到此问题并帮"
"助您修复它们, 但是为什么要走这条艰难的路线呢？)."

msgid ""
"The second is that, under Windows and macOS, file and path names are case "
"insensitive. If a developer working in a case insensitive host file system "
"saves an asset as ``myfile.PNG``, but then references it as ``myfile.png``, "
"it will work fine on their platform, but not on other platforms, such as "
"Linux, Android, etc. This may also apply to exported binaries, which use a "
"compressed package to store all files."
msgstr ""
"第二个问题是在Windows和macOS下, 文件名和路径名不区分大小写. 如果开发人员在不"
"区分大小写的主机文件系统中工作, 将资源保存为 ``myfile.PNG`` , 然后将其引用为 "
"``myfile.png`` , 则该资源将在该平台上正常工作, 但在其他平台(例如Linux, "
"Android等)上无法正常工作. 这也适用于导出的二进制文件, 该文件使用压缩包存储所"
"有文件."

msgid ""
"It is recommended that your team clearly define a naming convention for "
"files when working with Godot. One simple fool-proof convention is to only "
"allow lowercase file and path names."
msgstr ""
"建议您的团队在使用Godot一起工作时明确定义文件的命名约定. 一种简单的万无一失的"
"约定是仅允许使用小写的文件名和路径名."

msgid "Translation status"
msgstr "翻译状态"
