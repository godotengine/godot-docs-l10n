# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom VisualScript nodes"
msgstr "自定义 VisualScript 节点"

msgid ""
"`Godot 4.0 will remove VisualScript from core entirely. <https://godotengine."
"org/article/godot-4-will-discontinue-visual-scripting>`__ As a result, "
"creating new projects using visual scripting in Godot is not recommended. "
"Future Godot 4.x releases may have VisualScript reimplemented as an "
"extension."
msgstr ""
"`Godot 4.0 将会把 VisualScript 从核心中完全移除。 <https://godotengine.org/"
"article/godot-4-will-discontinue-visual-scripting>`__\\ 因此，不推荐在新的 "
"Godot 项目中使用可视化脚本。后续的 Godot 4.x 版本可能会将 VisualScript 重新实"
"现为扩展。"

msgid ""
"While Godot 3.x will keep VisualScript supported, we recommend :ref:`trying "
"out GDScript <toc-learn-scripting-gdscript>` instead, especially if you "
"intend to migrate your project to Godot 4."
msgstr ""
"Godot 3.x 仍会支持 VisualScript，我们建议你先\\ :ref:`试一试 GDScript <toc-"
"learn-scripting-gdscript>`\\ ，尤其是你想要把项目移植到 Godot 4 的话。"

msgid ""
"Custom nodes are written in GDScript and can then be used in VisualScript. "
"This is useful for offloading complex code to GDScript and reusing it."
msgstr ""
"自定义节点可以用 GDScript 定义，并在 VisualScript 中使用。这对分流复杂代码到 "
"GDScript 并反复使用尤为有用。"

msgid "Creating a custom node"
msgstr "创建自定义节点"

msgid ""
"Create a new script that extends :ref:`class_VisualScriptCustomNode` and put "
"a ``tool`` keyword at the top. This is needed for the script to run in the "
"editor."
msgstr ""
"新建一个继承 :ref:`class_VisualScriptCustomNode` 类的脚本, 并在代码顶端添加 "
"``tool`` 关键字. ``tool`` 能让脚本在编辑器中运行."

msgid ""
"There are some functions that can be implemented to set parameters of the "
"custom node. Only add functions that are needed, a "
"``_has_input_sequence_port`` function is not necessary if it should return "
"``false`` for example."
msgstr ""
"你可以实现一些能够设置自定义节点参数的函数 (继承自 VisualScriptCustomNode 的"
"虚函数). 只需要实现那些有必要的函数, 假如你知道 ``_has_input_sequence_port`` "
"一定会返回 ``false``, 则没有必要实现它."

msgid ""
"The most important part of a custom node is the ``_step`` function. The "
"logic of the node is defined there."
msgstr ""
"自定义节点最重要的部分就是 ``_step`` 函数. 你需要在这个函数中定义节点的逻辑."

msgid "The ``inputs`` parameter holds the value of the input ports."
msgstr "``inputs`` 参数传入可视化节点输入端口的值."

msgid ""
"The ``outputs`` parameter is an array where the indices represent the output "
"port ids. It can be modified to set the values of the output ports."
msgstr ""
"``outputs`` 参数是一个数组, 数组下标代表了输出接口的 ID. 可以通过修改数组元素"
"来修改输出接口的值."

msgid ""
"``start_mode`` can be checked to see if it is the first time ``_step`` is "
"called."
msgstr "``start_mode`` 可以用来检查是否是首次调用 ``_step`` 函数."

msgid ""
"``working_mem`` is persistent each ``_step`` call. It can be used to store "
"information."
msgstr ""
"``working_mem`` 每次调用 ``_step`` 时不变(引用同一个数组). 可以用它来储存信"
"息."

msgid ""
"If you want to throw an error, for example if the input types are incorrect, "
"you can return the error message as a string. When everything goes right, "
"return the id of the sequence port which should be called next. If your "
"custom node doesn't have any, just return 0."
msgstr ""
"若你想抛出一个错误, 例如输入类型不正确时, 可以将错误信息返回为字符串. 若一切"
"安好, 则返回下一个将被调用的序列接口的 ID. 如果你的自定义节点没有需要调用的接"
"口, 则返回 0."

msgid "Example:"
msgstr "示例："

msgid "Using a custom node"
msgstr "使用自定义节点"

msgid ""
"To use the script, add a ``CustomNode``, select it and drag your custom node "
"script into the ``script`` property shown in the inspector."
msgstr ""
"要使用你的自定义节点脚本，视图上方点击添加节点，新增一个 ``CustomNode``\\ ，"
"选定它，并将你的脚本拖拽进检查器的 ``script`` 属性中。"

msgid "Result:"
msgstr "结果:"

msgid "Translation status"
msgstr "翻译状态"
