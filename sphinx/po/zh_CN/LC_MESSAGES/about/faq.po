# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "FAQ"
msgstr "FAQ"

msgid "Frequently asked questions"
msgstr "常见问题"

msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr "可以用 Godot 做什么？需要花多少钱？有哪些许可条款？"

msgid ""
"Godot is `Free and Open-Source Software <https://en.wikipedia.org/wiki/"
"Free_and_open-source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godot 是 `自由且开源的软件 <https://en.wikipedia.org/wiki/Free_and_open-"
"source_software>`_\\ 可在 `OSI 认可的 <https://opensource.org/licenses/"
"MIT>`_ MIT 许可证下使用，不仅是自由的而且同样免费。"

msgid "In short:"
msgstr "简而言之："

msgid ""
"You are free to download and use Godot for any purpose: personal, non-"
"profit, commercial, or otherwise."
msgstr "你可以自由下载和使用 Godot，用于个人、非营利、商业等任何目的。"

msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr ""
"无论出于任何原因，商业还是非商业，您都可以根据自己的心之所向，自由地对 Godot "
"进行修改、分发、再分发、改版。"

msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"该附带文档的所有内容均在宽松的知识共享署名 3.0（\\ `CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_\\ ）许可下发布，署名为“Juan "
"Linietsky、Ariel Manzur 和 Godot 引擎社区。”"

msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"Logo 徽标和图标均在相同的 CC 共享许可下。注意，Godot 的源代码中包含的某些第三"
"方库可能具有不同的许可。"

msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE."
"txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ "
"files in the Godot repository."
msgstr ""
"有关详细信息，请查看 Godot 仓库中的 `COPYRIGHT.txt <https://github.com/"
"godotengine/godot/blob/master/COPYRIGHT.txt>`_ 以及 `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ 和 `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ 文件。"

msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"还可以查阅 `Godot 网站上的许可页面 <https://godotengine.org/license>`_\\ 。"

msgid "Which platforms are supported by Godot?"
msgstr "Godot 支持哪些平台？"

msgid "**For the editor:**"
msgstr "**编辑器：**"

msgid "Windows"
msgstr "Windows"

msgid "macOS"
msgstr "macOS"

msgid "X11 (Linux, \\*BSD)"
msgstr "X11（Linux、\\*BSD）"

msgid ":ref:`Web <doc_using_the_web_editor>`"
msgstr ":ref:`Web <doc_using_the_web_editor>`"

msgid "Android (experimental)"
msgstr "Android（实验性）"

msgid "**For exporting your games:**"
msgstr "**导出游戏：**"

msgid "Windows (and UWP)"
msgstr "Windows（以及 UWP）"

msgid "Android"
msgstr "Android"

msgid "iOS"
msgstr "iOS"

msgid "Web"
msgstr "Web"

msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default."
msgstr "同时支持 32 位和 64 位的二进制文件，默认为 64 位。"

msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr "一些用户也在 Linux 的基于 ARM 的系统上成功构建和使用 Godot，如树莓派。"

msgid ""
"Additionally, there is some unofficial third-party work being done on "
"building for some consoles. However, none of this is included in the default "
"build scripts or export templates at this time."
msgstr ""
"此外，也有一些非官方的第三方正在进行在一些游戏主机平台上的构建工作。但是，目"
"前默认构建脚本和导出模板中都不包含这些内容。"

msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"有关这方面的更多信息，请参阅\\ :ref:`导出 <toc-learn-workflow-export>`\\ 和"
"\\ :ref:`编译 Godot <toc-devel-compiling>` 章节。"

msgid "Which programming languages are supported in Godot?"
msgstr "Godot 支持哪些编程语言？"

msgid ""
"The officially supported languages for Godot are GDScript, Visual Scripting, "
"C#, and C++. See the subcategories for each language in the :ref:`scripting "
"<toc-learn-scripting>` section."
msgstr ""
"Godot 官方支持的语言是 GDScript、Visual Scripting、C# 和 C++。请参阅\\ :ref:`"
"编写脚本 <toc-learn-scripting>`\\ 章节中的各个语言的相关段落。"

msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"如果你刚开始接触 Godot 或一般的游戏开发，推荐学习并使用 GDScript 语言，因为它"
"是 Godot 的原生语言。虽然从长远来看，脚本语言的性能往往不如低级语言，但对于原"
"型设计、开发最小可行产品（MVP）和关注上市时间（TTM）来说，GDScript 将提供一种"
"快速、友好、有能力的游戏开发方式。"

msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. Our friendly and hard-working development "
"community is always ready to tackle new problems as they arise, but since "
"this is an open-source project, we recommend that you first do some due "
"diligence yourself. Searching through discussions on `open issues <https://"
"github.com/godotengine/godot/issues>`_ is a great way to start your "
"troubleshooting."
msgstr ""
"请注意，加入 C# 支持的时间相对较短，因此，使用该语言可能会遇到一些问题。我们"
"友好且勤奋的开发社区随时准备解决出现的新问题，但由于这是一个开源项目，我们建"
"议你先自己做一些排查。搜索\\ `现存问题 <https://github.com/godotengine/godot/"
"issues>`_\\ 中的讨论是开始故障排除的好方法。"

msgid ""
"As for new languages, support is possible via third parties using the "
"GDNative / NativeScript / PluginScript facilities. (See the question about "
"plugins below.) Work is currently underway, for example, on unofficial "
"bindings for Godot to `Python <https://github.com/touilleMan/godot-python>`_ "
"and `Nim <https://github.com/pragmagic/godot-nim>`_."
msgstr ""
"对于新兴语言，可以通过第三方使用 GDNative / NativeScript / PluginScript 获得"
"支持。（请参阅下面关于插件的问题。）例如，Godot 非官方的 `Python <https://"
"github.com/touilleMan/godot-python>`_ 和 `Nim <https://github.com/pragmagic/"
"godot-nim>`_ 绑定正在开发中。"

msgid "What is GDScript and why should I use it?"
msgstr "GDScript 是什么？为什么要用它？"

msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before then you'll feel right at home. For examples, history, "
"and a complete overview of the power GDScript offers you, check out the :ref:"
"`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScript 是 Godot 所集成的脚本语言。它是从头开始构建的，目标是用最少的代码让 "
"Godot 的潜力最大化，使新手和专业开发人员都能尽可能快地利用 Godot 的优势。如果"
"你曾经用像 Python 这样的语言写过任何东西，那么你会感到宾至如归。如果您想了解"
"关于 GDScript 的示例、历史、以及完整的功能介绍，请查看 :ref:`GDScript 脚本指"
"南 <doc_gdscript>`\\ 。"

msgid ""
"There are several reasons to use GDScript--especially when you are "
"prototyping, in alpha/beta stages of your project, or are not creating the "
"next AAA title--but the most salient reason is the overall **reduction of "
"complexity**."
msgstr ""
"使用 GDScript 有不少原因——尤其是在进行原型设计时、在项目的 alpha/beta 阶段、"
"或者项目不是 3A 大作时——但最突出的优势就是整体\\ **复杂度降低**\\ 。"

msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core--rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"为 Godot 创建一个紧密集成的自定义脚本语言的原因有两点：首先，它减少了启动和运"
"行Godot 所需的时间，使开发人员能够快速上手引擎，提高了生产力；其次，它减少了"
"维护的总体负担，减少了问题的维度，并允许引擎的开发人员专注于排除错误并改进与"
"引擎核心相关的功能——而不是花费大量时间来尝试在一大堆语言中获得一小组增量功"
"能。"

msgid ""
"Since Godot is an open-source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages--"
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and rapid your development becomes, we think "
"GDScript will grow on you."
msgstr ""
"由于 Godot 是开源项目，因此从一开始就必须优先考虑更加集成和无缝的体验，而不是"
"通过支持大多人熟悉的编程语言来吸引更多用户——特别是在支持那些大多人熟悉的语言"
"会导致更糟糕的体验时。我们理解你更想在 Godot 中使用其他语言（请参阅上面支持的"
"选项列表）。话虽如此，如果你还没试过 GDScript，先试\\ **三天**\\ 。就像 "
"Godot 一样，一旦你看到它有多强大并且开发多迅速，我们认为你将对 GDScript 刮目"
"相看。"

msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"有关熟悉 GDScript 或动态类型语言的更多信息，请参阅 :ref:"
"`doc_gdscript_more_efficiently` 教程。"

msgid "What were the motivations behind creating GDScript?"
msgstr "创建 GDScript 背后的动机是什么？"

msgid ""
"In the early days, the engine used the `Lua <https://www.lua.org>`__ "
"scripting language. Lua is fast, but creating bindings to an object oriented "
"system (by using fallbacks) was complex and slow and took an enormous amount "
"of code. After some experiments with `Python <https://www.python.org>`__, it "
"also proved difficult to embed."
msgstr ""
"在早期，引擎使用 `Lua <https://www.lua.org>`__ 脚本语言。Lua 速度很快，但是创"
"建到面向对象的系统的绑定（通过使用回退）是非常复杂且缓慢的，并且需要大量代"
"码。在用 `Python <https://www.python.org>`__ 进行了一些实验后，它也被证明是难"
"以嵌入的。"

msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "为 Godot 创建自定义脚本语言的主要原因有："

msgid ""
"Poor threading support in most script VMs, and Godot uses threads (Lua, "
"Python, Squirrel, JavaScript, ActionScript, etc.)."
msgstr ""
"Godot 使用多线程，而大多数脚本虚拟机对线程的支持不佳（Lua、Python、Squirrel、"
"JavaScript、ActionScript 等）。"

msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JavaScript)."
msgstr ""
"大多数脚本语言（Lua、Python、JavaScript）的虚拟机没有很好地支持类扩展，适配 "
"Godot 工作方式的效率极低。"

msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JavaScript, etc.) We wanted to focus on "
"a great engine, not a great amount of integrations."
msgstr ""
"许多现有语言的 C++ 绑定接口都非常糟糕，会产生大量代码、错误、瓶颈，而且效率普"
"遍低下（例如 Lua、Python、Squirrel、JavaScript 等）。我们希望专注于一个更好的"
"引擎，而不是大量的缝合。"

msgid ""
"No native vector types (vector3, matrix4, etc.), resulting in highly reduced "
"performance when using custom types (Lua, Python, Squirrel, JavaScript, "
"ActionScript, etc.)."
msgstr ""
"没有原生的向量类型（vector3、matrix4 等），导致使用自定义类型实现时，性能大大"
"降低（Lua、Python、Squirrel、JavaScript、ActionScript 等）。"

msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JavaScript, ActionScript, etc.)."
msgstr ""
"在大部分解释型编程语言（Lua、Python、JavaScript、ActionScript 等）中，垃圾收"
"集器会导致延迟或不必要的大内存使用。"

msgid ""
"Difficulty to integrate with the code editor for providing code completion, "
"live editing, etc. (all of them). This is well-supported by GDScript."
msgstr ""
"难以与 Godot 代码编辑器集成从而支持代码补全、动态编辑等（其他语言都这样）。但"
"这方面 GDScript 支持得很好。"

msgid "GDScript was designed to curtail the issues above, and more."
msgstr "GDScript 是为了减少上述问题以及防止更多问题而设计的。"

msgid "What type of 3D model formats does Godot support?"
msgstr "Godot 支持哪些 3D 模型格式？"

msgid ""
"Godot supports Collada via the `OpenCollada <https://github.com/KhronosGroup/"
"OpenCOLLADA/wiki/OpenCOLLADA-Tools>`_ exporter (Maya, 3DSMax). If you are "
"using Blender, take a look at our own `Better Collada Exporter <https://"
"godotengine.org/download>`_."
msgstr ""
"Godot 通过 `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`_ 导出器（Maya、3DSMax）支持 Collada。如果你使用的是 "
"Blender，可以试一试我们的 `Better Collada Exporter <https://godotengine.org/"
"download>`_\\ 。"

msgid "As of Godot 3.0, glTF is supported."
msgstr "Godot 从 3.0 版本开始支持 glTF。"

msgid ""
"FBX is supported via the Open Asset Import library. However, FBX is "
"proprietary so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"通过使用 Open Asset Import 库实现了 FBX 的支持。不过，FBX 是私有格式，所以如"
"果你的工作流允许，我们推荐你使用上述其它格式。"

msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr "Godot 会支持【此处插入 FMOD、GameWorks 等闭源 SDK 的名字】吗？"

msgid ""
"The aim of Godot is to create a free and open-source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godot 的目的是创建一个自由开源，MIT 许可证，且模块化和可扩展的引擎。核心引擎"
"开发社区没有计划支持任何第三方，闭源或专有 SDK，因为集成这些 SDK 会违背 "
"Godot 的精神。"

msgid ""
"That said, because Godot is open-source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them--as either open- or closed-source."
msgstr ""
"正因为 Godot 是开源和模块化的，所以说没有什么能阻止你或其他任何感兴趣的人将这"
"些库添加为模块并使用它们——无论是开源还是闭源——发布游戏。"

msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr "如欲了解如何支持您使用的 SDK，请查看下面的插件问题。"

msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open-source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"如果您知道 Godot 尚不支持但提供自由和开源集成的第三方SDK，请考虑自己开始集成"
"工作。Godot 不属于个人；它属于社区，它与像您一样雄心勃勃的社区贡献者一起成"
"长。"

msgid ""
"How do I install the Godot editor on my system (for desktop integration)?"
msgstr "如何在我的系统上安装 Godot 编辑器（进行桌面集成）？"

msgid ""
"Since you don't need to actually install Godot on your system to run it, "
"this means desktop integration is not performed automatically. There are two "
"ways to overcome this. You can install Godot from `Steam <https://store."
"steampowered.com/app/404790/Godot_Engine/>`__ (all platforms), `Scoop "
"<https://scoop.sh/>`__ (Windows), `Homebrew <https://brew.sh/>`__ (macOS) or "
"`Flathub <https://flathub.org/apps/details/org.godotengine.Godot>`__ "
"(Linux). This will automatically perform the required steps for desktop "
"integration."
msgstr ""
"Godot 实际并不需要在你的系统上进行安装就能够运行，因此不会自动进行桌面集成。"
"解决方法有两种。你可以通过 `Steam <https://store.steampowered.com/app/404790/"
"Godot_Engine/>`__\\ （全平台）、\\ `Scoop <https://scoop.sh/>`__\\ "
"（Windows）、\\ `Homebrew <https://brew.sh/>`__\\ （macOS）、\\ `Flathub "
"<https://flathub.org/apps/details/org.godotengine.Godot>`__\\ （Linux）来安"
"装 Godot。这样就会自动执行桌面集成所需的步骤。"

msgid ""
"Alternatively, you can manually perform the steps that an installer would do "
"for you:"
msgstr "另外你也可以手动执行安装文件会帮你执行的步骤："

msgid ""
"Move the Godot executable to a stable location (i.e. outside of your "
"Downloads folder), so you don't accidentally move it and break the shortcut "
"in the future."
msgstr ""
"将 Godot 可执行文件移动到稳定的位置（即你的 Downloads 文件夹之外），这样你以"
"后就不会不小心对它进行移动、不会破坏快捷方式了。"

msgid "Right-click the Godot executable and choose **Create Shortcut**."
msgstr "右键单击 Godot 可执行文件，选择\\ **创建快捷方式**\\ 。"

msgid ""
"Move the created shortcut to ``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``. This is the user-wide location for shortcuts that will "
"appear in the Start menu. You can also pin Godot in the task bar by right-"
"clicking the executable and choosing **Pin to Task Bar**."
msgstr ""
"将创建的快捷方式移动到 ``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``\\ 。这是针对用户的快捷方式存放位置，会显示在开始菜单中。你也"
"可以将 Godot 固定在任务栏上，右键单击可执行文件并选择\\ **固定至任务栏**\\ 即"
"可。"

msgid ""
"Drag the extracted Godot application to ``/Applications/Godot.app``, then "
"drag it to the Dock if desired. Spotlight will be able to find Godot as long "
"as it's in ``/Applications`` or ``~/Applications``."
msgstr ""
"将解压出的 Godot 应用拖拽至 ``/Applications/Godot.app``\\ ，如果需要的话还可"
"以再拖到 Dock 栏上。只要 Godot 在 ``/Applications`` 或 ``~/Applications`` "
"中，“聚焦”就能找到它。"

msgid "Linux"
msgstr "Linux"

msgid ""
"Move the Godot binary to a stable location (i.e. outside of your Downloads "
"folder), so you don't accidentally move it and break the shortcut in the "
"future."
msgstr ""
"将 Godot 二进制文件移动到稳定的位置（即你的 Downloads 文件夹之外），这样你以"
"后就不会不小心对它进行移动、不会破坏快捷方式了。"

msgid ""
"Rename and move the Godot binary to a location present in your ``PATH`` "
"environment variable. This is typically ``/usr/local/bin/godot`` or ``/usr/"
"bin/godot``. Doing this requires administrator privileges, but this also "
"allows you to :ref:`run the Godot editor from a terminal "
"<doc_command_line_tutorial>` by entering ``godot``."
msgstr ""
"将 Godot 二进制文件进行重命名，然后移动到处于 ``PATH`` 环境变量中的某个位置。"
"通常是 ``/usr/local/bin/godot`` 或者 ``/usr/bin/godot``\\ 。这个操作需要管理"
"员权限，不过能够让你通过输入 ``godot`` 直接\\ :ref:`从命令行运行 Godot 编辑"
"器 <doc_command_line_tutorial>`\\ 。"

msgid ""
"If you cannot move the Godot editor binary to a protected location, you can "
"keep the binary somewhere in your home directory, and modify the ``Path=`` "
"line in the ``.desktop`` file linked below to contain the full *absolute* "
"path to the Godot binary."
msgstr ""
"如果你无法将 Godot 编辑器二进制文件移动到受保护的位置，你可以将它保存在你的家"
"目录中的某个位置，然后修改下方链接的 ``.desktop`` 文件中的 ``Path=`` 行，让它"
"包含指向 Godot 二进制文件的完整\\ *绝对*\\ 路径。"

msgid ""
"Save `this .desktop file <https://raw.githubusercontent.com/godotengine/"
"godot/3.x/misc/dist/linux/org.godotengine.Godot.desktop>`__ to ``$HOME/."
"local/share/applications/``. If you have administrator privileges, you can "
"also save the ``.desktop`` file to ``/usr/local/share/applications`` to make "
"the shortcut available for all users."
msgstr ""
"将\\ `这个 .desktop 文件 <https://raw.githubusercontent.com/godotengine/"
"godot/3.x/misc/dist/linux/org.godotengine.Godot.desktop>`__\\ 保存到 "
"``$HOME/.local/share/applications/``\\ 。如果你有管理员权限，你还可以把这个 "
"``.desktop`` 文件保存到 ``/usr/local/share/applications`` 中，这样所有用户就"
"都能够使用这个快捷方式了。"

msgid "Is the Godot editor a portable application?"
msgstr "Godot 编辑器是绿色应用吗？"

msgid ""
"In its default configuration, Godot is *semi-portable*. Its executable can "
"run from any location (including non-writable locations) and never requires "
"administrator privileges."
msgstr ""
"默认配置下，Godot 是\\ *半绿色*\\ 的。从任何位置运行都可以运行它的可执行文件"
"（包括无法写入的位置），无须管理员权限。"

msgid ""
"However, configuration files will be written to the user-wide configuration "
"or data directory. This is usually a good approach, but this means "
"configuration files will not carry across machines if you copy the folder "
"containing the Godot executable. See :ref:`doc_data_paths` for more "
"information."
msgstr ""
"不过，配置文件会写入到针对用户的配置或数据目录。通常来说，这是不错的做法，但"
"也意味着将包含 Godot 可执行文件的文件夹复制到另一台机器上是无法带走配置文件"
"的。更多信息请参阅 :ref:`doc_data_paths`\\ 。"

msgid ""
"If *true* portable operation is desired (e.g. for use on an USB stick), "
"follow the steps in :ref:`doc_data_paths_self_contained_mode`."
msgstr ""
"如果你需要\\ *真·绿色*\\ 的操作（例如放到 U 盘上使用），请按照 :ref:"
"`doc_data_paths_self_contained_mode` 中的步骤操作。"

msgid "Why does Godot use Vulkan or OpenGL instead of Direct3D?"
msgstr "为什么 Godot 使用 Vulkan/OpenGL 而不是 Direct3D？"

msgid ""
"Godot aims for cross-platform compatibility and open standards first and "
"foremost. OpenGL and Vulkan are the technologies that are both open and "
"available (nearly) on all platforms. Thanks to this design decision, a "
"project developed with Godot on Windows will run out of the box on Linux, "
"macOS, and more."
msgstr ""
"Godot 致力于实现跨平台兼容性和开放式标准。OpenGL 和 Vulkan 是几乎在所有平台上"
"都开放且可用的技术。由于这一设计决策，在 Windows 上使用 Godot 开发的项目将在 "
"Linux、macOS 等平台上也能“开箱即用”。"

msgid ""
"Since Godot only has a few people working on its renderer, we would prefer "
"having fewer rendering backends to maintain. On top of that, using a single "
"API on all platforms allows for greater consistency with fewer platform-"
"specific issues."
msgstr ""
"由于 Godot 只有少数人在处理其渲染器，因此我们希望维护较少的渲染后端。最重要的"
"是，在所有平台上使用单个 API 可以提高一致性，减少特定于平台的问题。"

msgid ""
"In the long term, we may develop a Direct3D 12 renderer for Godot (mainly "
"for the Xbox's purposes), but Vulkan and OpenGL will remain the default "
"rendering backends on all platforms, including Windows."
msgstr ""
"从长远来看，我们可能会为 Godot 开发 Direct3D 12 渲染器（主要用于 Xbox 的目"
"的），但 Vulkan 和 OpenGL 仍将是所有平台（包括 Windows）上的默认渲染后端。"

msgid "Why does Godot aim to keep its core feature set small?"
msgstr "为什么 Godot 旨在保持其核心功能集较小？"

msgid ""
"Godot intentionally does not include features that can be implemented by add-"
"ons unless they are used very often. One example of this would be advanced "
"artificial intelligence functionality."
msgstr ""
"Godot 有意不包含可以通过附加组件实现的功能，除非它们经常使用。这方面的一个例"
"子是先进的人工智能功能。"

msgid "There are several reasons for this:"
msgstr "这有几个原因："

msgid ""
"**Code maintenance and surface for bugs.** Every time we accept new code in "
"the Godot repository, existing contributors often take the reponsibility of "
"maintaining it. Some contributors don't always stick around after getting "
"their code merged, which can make it difficult for us to maintain the code "
"in question. This can lead to poorly maintained features with bugs that are "
"never fixed. On top of that, the \"API surface\" that needs to be tested and "
"checked for regressions keeps increasing over time."
msgstr ""
"**代码维护和表面 bug。**\\ 每次我们在 Godot 仓库中接受新的代码时，现有的贡献"
"者往往会承担起维护它的责任。一些贡献者在合并他们的代码后并不总是坚持下去，这"
"会使我们难以维护有问题的代码。这可能会导致维护不善的功能以及从未修复的错误。"
"最重要的是，需要测试和检查回归的“API 表面”随着时间的推移不断增加。"

msgid ""
"**Ease of contribution.** By keeping the codebase small and tidy, it can "
"remain fast and easy to compile from source. This makes it easier for new "
"contributors to get started with Godot, without requiring them to purchase "
"high-end hardware."
msgstr ""
"**易于贡献。**\\ 通过保持代码库小而整洁, 可以保持快速、轻松地从源代码编译。这"
"使得新贡献者更容易入门 Godot，无需他们购买高端硬件。"

msgid ""
"**Keeping the binary size small for the editor.** Not everyone has a fast "
"Internet connection. Ensuring that everyone can download the Godot editor, "
"extract it and run it in less than 5 minutes makes Godot more accessible to "
"developers in all countries."
msgstr ""
"**为编辑器保持较小的二进制大小。**\\ 并非每个人都拥有快速的 Internet 连接。确"
"保每个人都可以在 5 分钟内下载、解压缩并运行 Godot 编辑器，这使得所有国家/地区"
"的开发人员都可以更轻松地访问 Godot。"

msgid ""
"**Keeping the binary size small for export templates.** This directly "
"impacts the size of projects exported with Godot. On mobile and web "
"platforms, keeping file sizes low is primordial to ensure fast installation "
"and loading on underpowered devices. Again, there are many countries where "
"high-speed Internet is not readily available. To add to this, strict data "
"usage caps are often in effect in those countries."
msgstr ""
"**为导出模板保持较小的二进制大小。**\\ 这直接影响到 Godot 导出的项目的大小。"
"在移动和 Web 平台上，较小的文件大小是在功率不足的设备上快速安装和加载的首要条"
"件。同上，在许多国家，用上高速网络并不容易。并且这些国家往往有严格的数据使用"
"上限。"

msgid ""
"For all the reasons above, we have to be selective of what we can accept as "
"core functionality in Godot. This is why we are aiming to move some core "
"functionality to officially supported add-ons in future versions of Godot. "
"In terms of binary size, this also has the advantage of making you pay only "
"for what you actually use in your project. (In the meantime, you can :ref:"
"`compile custom export templates with unused features disabled "
"<doc_optimizing_for_size>` to optimize the distribution size of your "
"project.)"
msgstr ""
"基于上述原因，我们必须选择哪些功能作为 Godot 的核心功能。这就是为什么我们计划"
"在 Godot 的未来版本里，将转移一些核心功能到官方支持的附加组件中。在文件大小方"
"面，这也算是一个优点，你的项目可以精简掉没有实际使用过的功能（目前，你可以通"
"过\\ :ref:`编译自定义导出模板、禁用未使用的功能 <doc_optimizing_for_size>`\\ "
"来优化项目的发布大小。）"

msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr "如果要适配多种分辨率和纵横比，资产应做哪些处理？"

msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"这个问题很常见，可能要归功于苹果公司。苹果一开始将它们的设备分辨率加倍，让人"
"觉得不同分辨率使用相同的资产是个好主意，所以很多人就这么做下去了。起初只有苹"
"果设备这么做，但 Android 和后来的苹果设备又有了不同的分辨率和宽高比，它们的大"
"小和 DPI 变得多种多样。"

msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D it's just a matter of Camera XFov or "
"YFov."
msgstr ""
"最常见和最恰当的处理方法是，为游戏使用单一基本分辨率，并仅处理不同的屏幕宽高"
"比。主要是 2D 游戏需要这么做，在 3D 游戏中它只是相机 XFov 或 YFov 的问题。"

msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 2K and devices that go down to 400p, regular hardware scaling "
"in your device will take care of this at little or no performance cost. Most "
"common choices are either near 1080p (1920x1080) or 720p (1280x720). Keep in "
"mind the higher the resolution, the larger your assets, the more memory they "
"will take and the longer the time it will take for loading."
msgstr ""
"为游戏选择基础分辨率。即使有高达 2K 的设备和低至 400p 的设备，设备中的常规硬"
"件缩放也会在很少或没有性能成本的情况下解决这个问题。最常见的选择是接近 1080p"
"（1920x1080）或 720p（1280x720）。请记住，分辨率越高，资产越大，占用的内存就"
"越多，加载所需的时间也就越长。"

msgid ""
"Use the stretch options in Godot; 2D stretching while keeping aspect ratios "
"works best. Check the :ref:`doc_multiple_resolutions` tutorial on how to "
"achieve this."
msgstr ""
"使用 Godot 中的拉伸选项；2D 保持宽高比时拉伸效果最好。请参阅教程 :ref:"
"`doc_multiple_resolutions` 来学习如何实现。"

msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"确定最小分辨率，然后决定是否希望游戏垂直或水平拉伸以获得不同的宽高比，或者如"
"果有一个宽高比并且您希望显示黑条。这也在 :ref:`doc_multiple_resolutions` 中有"
"所解释。"

msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"对于用户界面，请使用 :ref:`锚定 <doc_size_and_anchors>` 来确定控件应停留和移"
"动的位置。如果 UI 更复杂，请考虑学习 Container（容器）。"

msgid "And that's it! Your game should work in multiple resolutions."
msgstr "就是这样！你的游戏应该能够以多种分辨率运行了。"

msgid ""
"If there is a desire to make your game also work on ancient devices with "
"tiny screens (fewer than 300 pixels in width), you can use the export option "
"to shrink images, and set that build to be used for certain screen sizes in "
"the App Store or Google Play."
msgstr ""
"如果希望让您的游戏也适用于具有小屏幕（宽度小于 300 像素）的古老设备，可以在导"
"出选项中缩小图像，并且在 App Store 或 Google Play 中将它设为用于特定的屏幕大"
"小。"

msgid "How can I extend Godot?"
msgstr "如何扩展 Godot？"

msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"要扩展 Godot，比如创建 Godot 编辑器插件或添加对其他语言的支持，请参阅\\ :ref:"
"`编辑器插件 <doc_making_plugins>`\\ 和工具脚本。"

msgid "Also, see the official blog posts on these topics:"
msgstr "另外, 请参阅有关这些主题的官方博客:"

msgid ""
"`A look at the GDNative architecture <https://godotengine.org/article/look-"
"gdnative-architecture>`_"
msgstr ""
"`GDNative 架构概览 <https://godotengine.org/article/look-gdnative-"
"architecture>`_"

msgid "`GDNative is here! <https://godotengine.org/article/dlscript-here>`_"
msgstr "`GDNative 来了! <https://godotengine.org/article/dlscript-here>`_"

msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `unofficial Python support <https://github.com/touilleMan/"
"godot-python>`_ for Godot. This would be a good starting point to see how "
"another third-party library integrates with Godot."
msgstr ""
"您还可以查看 GDScript 的实现，Godot 模块以及 Godot 的\\ `非官方 Python 支持 "
"<https://github.com/touilleMan/godot-python>`_\\ 。这个将是您了解如何将第三方"
"库整合到 Godot 中的第一步。"

msgid "When is the next release of Godot out?"
msgstr "Godot 的下一个版本什么时候发布？"

msgid ""
"When it's ready! See :ref:`doc_release_policy_when_is_next_release_out` for "
"more information."
msgstr "当它准备好的时候！详情见 :ref:`doc_running_code_in_the_editor`\\ 。"

msgid "I would like to contribute! How can I get started?"
msgstr "我想要贡献！ 该如何开始？"

msgid ""
"Awesome! As an open-source project, Godot thrives off of the innovation and "
"ambition of developers like you."
msgstr ""
"太棒了！作为一个开源项目，Godot 的发展得益于像您这样的开发者的创新和雄心。"

msgid ""
"The first place to get started is in the `issues <https://github.com/"
"godotengine/godot/issues>`_. Find an issue that resonates with you, then "
"proceed to the `How to Contribute <https://github.com/godotengine/godot/blob/"
"master/CONTRIBUTING.md#contributing-pull-requests>`_ guide to learn how to "
"fork, modify, and submit a Pull Request (PR) with your changes."
msgstr ""
"开始的第一个地方就是\\ `问题列表 <https://github.com/godotengine/godot/"
"issues>`_\\ 。找到一个与您产生共鸣的问题，然后继续阅读\\ `如何贡献 <https://"
"github.com/godotengine/godot/blob/master/CONTRIBUTING.md#contributing-pull-"
"requests>`_\\ 指南，学习如何使用 fork、修改和提交 Pull Request（PR）。"

msgid "I have a great idea for Godot. How can I share it?"
msgstr "我有个关于 Godot 的好主意，该如何分享它？"

msgid ""
"It might be tempting to want to bring ideas to Godot, like ones that result "
"in massive core changes, some sort of mimicry of what another game engine "
"does, or alternative workflows that you'd like built into the editor. These "
"are great, and we are thankful to have such motivated people want to "
"contribute, but Godot's focus is and always will be the core functionality "
"as outlined in the `Roadmap <https://github.com/godotengine/godot-roadmap/"
"blob/master/ROADMAP.md>`_, `squashing bugs and addressing issues <https://"
"github.com/godotengine/godot/issues>`_, and conversations between Godot "
"community members."
msgstr ""
"想要把一些想法带给Godot会很诱人, 比如导致大量核心变化的想法, 某种模仿其他游戏"
"引擎所做的事情, 或者您想要在编辑器中构建另一种工作流程. 这些都是伟大的, 我们"
"感谢有这些想要积极贡献的人, 但Godot的焦点是而且始终将是在 `路线图 <https://"
"github.com/godotengine/godot-roadmap/blob/master/ROADMAP.md>`_ 中概述的核心功"
"能. `排查 bug 和解决问题 <https://github.com/godotengine/godot/issues>`_, 以"
"及与Godot社区成员之间的讨论."

msgid ""
"Most developers in the Godot community will be more interested to learn "
"about things like:"
msgstr "Godot社区中的大多数开发人员都会更有兴趣了解以下内容:"

msgid ""
"Your experience using the software and the problems you have (we care about "
"this much more than ideas on how to improve it)."
msgstr ""
"你使用该软件的经验和你遇到的问题(我们关心的不仅仅是关于如何改进它的想法)."

msgid ""
"The features you would like to see implemented because you need them for "
"your project."
msgstr "你希望实现的功能, 因为你需要它们用于你的项目."

msgid ""
"The concepts that were difficult to understand while learning the software."
msgstr "学习软件时难以理解的概念。"

msgid "The parts of your workflow you would like to see optimized."
msgstr "你的工作流程中希望优化的部分。"

msgid ""
"Parts where you missed clear tutorials or where the documentation wasn't "
"clear."
msgstr "教程不全的部分或者文档不清晰的部分。"

msgid ""
"Please don't feel like your ideas for Godot are unwelcome. Instead, try to "
"reformulate them as a problem first, so developers and the community have a "
"functional foundation to ground your ideas on."
msgstr ""
"因此, 请不要觉得您对Godot的想法是不受欢迎的. 相反, 首先尝试将它们作为问题重新"
"表述出来, 这样开发人员和社区会有一个功能依据, 可以为您的想法奠定基础."

msgid ""
"A good way to approach sharing your ideas and problems with the community is "
"as a set of user stories. Explain what you are trying to do, what behavior "
"you expect to happen, and then what behavior actually happened. Framing "
"problems and ideas this way will help the whole community stay focused on "
"improving developer experiences as a whole."
msgstr ""
"与社区分享您的想法和问题的一个好方法是用案例来说明. 解释您想做什么, 您期望发"
"生什么行为, 然后实际发生了什么行为. 以这种方式体现问题和想法, 将有助于整个社"
"区始终专注于作为一个整体改善开发者的体验."

msgid ""
"Bonus points for bringing screenshots, concrete numbers, test cases, or "
"example projects (if applicable)."
msgstr "最好可以附上截图、具体数值、测试用例或示例项目（如果适用的话）。"

msgid "Is it possible to use Godot to create non-game applications?"
msgstr "是否能用 Godot 创建非游戏应用？"

msgid ""
"Yes! Godot features an extensive built-in UI system, and its small "
"distribution size can make it a suitable alternative to frameworks like "
"Electron or Qt."
msgstr ""
"是的！Godot 具有广泛的内置 UI 系统，其较小的软件包可以使它成为 Electron 或 "
"Qt 等框架的合适替代品。"

msgid ""
"When creating a non-game application, make sure to enable :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>` in the Project Settings to decrease CPU and GPU usage."
msgstr ""
"当创建一个非游戏的应用程序时，确保在项目设置中启用 :ref:`低处理器模式 "
"<class_ProjectSettings_property_application/run/low_processor_mode>` 以减少"
"CPU和GPU占用。"

msgid ""
"That said, we wouldn't recommend using Godot to create a *mobile* "
"application since low-processor mode isn't supported on mobile platforms yet."
msgstr ""
"也就是说，我们不建议使用 Godot 来创建\\ *移动*\\ 应用程序，因为移动平台还不支"
"持低处理器模式。"

msgid ""
"Check out `Material Maker <https://github.com/RodZill4/material-maker>`__ "
"and `Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__ for "
"examples of open source applications made with Godot."
msgstr ""
"请查看 `Material Maker <https://github.com/RodZill4/material-maker>`__ 和 "
"`Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__\\ ，以了解"
"用 Godot 制作的开源应用程序的例子。"

msgid "Is it possible to use Godot as a library?"
msgstr "是否能将 Godot 作为库使用？"

msgid ""
"Godot is meant to be used with its editor. We recommend you give it a try, "
"as it will most likely save you time in the long term. There are no plans to "
"make Godot usable as a library, as it would make the rest of the engine more "
"convoluted and difficult to use for casual users."
msgstr ""
"Godot 旨在与其编辑器一起使用。我们建议您尝试一下编辑器，因为从长远来看，它很"
"可能会节省您的时间。目前尚无计划把 Godot 作为库使用，因为这会使引擎的其余部分"
"更加混乱，难以为普通用户使用。"

msgid ""
"If you want to use a rendering library, look into using an established "
"rendering engine instead. Keep in mind rendering engines usually have "
"smaller communities compared to Godot. This will make it more difficult to "
"find answers to your questions."
msgstr ""
"如果你想使用一个渲染库，那就使用一个已经建立的渲染引擎来代替。需要注意的是，"
"与 Godot 相比，渲染引擎通常拥有更小的社区，这将会使你解决问题的难度加大。"

msgid "What user interface toolkit does Godot use?"
msgstr "Godot 使用的用户界面工具包是什么？"

msgid ""
"Godot does not use a standard :abbr:`GUI (Graphical User Interface)` toolkit "
"like GTK, Qt or wxWidgets. Instead, Godot uses its own user interface "
"toolkit, rendered using OpenGL ES or Vulkan. This toolkit is exposed in the "
"form of Control nodes, which are used to render the editor (which is written "
"in C++). These Control nodes can also be used in projects from any scripting "
"language supported by Godot."
msgstr ""
"Godot 不使用标准的 :abbr:`GUI(Graphical User Interface)` 工具箱，如 GTK、Qt "
"或 wxWidgets。相反，Godot 使用自己的用户界面工具包，使用 OpenGL ES 或 Vulkan "
"进行渲染。这个工具包以控件节点（Control）的形式暴露出来，用于渲染编辑器（用 "
"C++ 编写）。这些控制节点也可以在 Godot 支持的任何脚本语言的项目中使用。"

msgid ""
"This custom toolkit makes it possible to benefit from hardware acceleration "
"and have a consistent appearance across all platforms. On top of that, it "
"doesn't have to deal with the LGPL licensing caveats that come with GTK or "
"Qt. Lastly, this means Godot is \"eating its own dog food\" since the editor "
"itself is one of the most complex users of Godot's UI system."
msgstr ""
"这个定制的工具包使它能获益于硬件加速，并在全平台上拥有一致的外观。最重要的"
"是，它不必处理 GTK 或 Qt 所带来的 LGPL 许可注意事项。最后，这意味着 Godot "
"在“自产自用”，因为编辑器本身就是 Godot UI 系统中最复杂的用例之一。"

msgid ""
"This custom UI toolkit :ref:`can't be used as a library "
"<doc_faq_use_godot_as_library>`, but you can still :ref:`use Godot to create "
"non-game applications by using the editor <doc_faq_non_game_applications>`."
msgstr ""
"这个自定义 UI 工具包\\ :ref:`不能作为一个库使用 "
"<doc_faq_use_godot_as_library>`，但你仍然可以\\ :ref:`通过使用 Godot 编辑器来"
"创建非游戏应用程序<doc_faq_non_game_applications>`。"

msgid "Why does Godot not use STL (Standard Template Library)?"
msgstr "为什么 Godot 不使用 STL（标准模板库）？"

msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of "
"STL. We believe STL is a great general purpose library, but we had special "
"requirements for Godot."
msgstr ""
"像许多其他库一样（Qt 就是一个例子），Godot 没有使用 STL。我们相信 STL 是一个"
"伟大的通用库，但我们对 Godot 有特殊的要求。"

msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STL 模板会创建大量符号，产生巨型的调试二进制文件。我们使用一些名称很短的模板"
"来代替。"

msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"我们的大多数容器都是针对特定需求设计的，例如 Vector 使用写时复制，我们用它来"
"传递数据，而 RID 系统则需要 O(1) 访问时间来提高性能。同样，我们的哈希表实现旨"
"在与内部引擎类型无缝集成。"

msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr "我们的容器内置了内存跟踪，有助于更好地跟踪内存的使用情况。"

msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr "对于大型数组，我们使用内存池，可以映射到预先分配的缓冲区或虚拟内存。"

msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr ""
"我们使用自定义字符串类型，因为 STL 提供的版本过于基础，并且缺乏适当的国际化支"
"持。"

msgid "Why does Godot not use exceptions?"
msgstr "为什么 Godot 不使用异常？"

msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"我们相信无论如何游戏都不应该崩溃。如果发生意外情况，Godot将打印一个错误（甚至"
"可以追溯到脚本），但之后它会尽可能优雅地恢复，并继续前进。"

msgid ""
"Additionally, exceptions significantly increase binary size for the "
"executable."
msgstr "此外，异常会显著增加可执行文件的二进制大小。"

msgid "Why does Godot not enforce RTTI?"
msgstr "为什么 Godot 不使用 RTTI？"

msgid ""
"Godot provides its own type-casting system, which can optionally use RTTI "
"internally. Disabling RTTI in Godot means considerably smaller binary sizes "
"can be achieved, at a little performance cost."
msgstr ""
"Godot 提供了自己的类型转换系统，可以可选地在内部使用 RTTI（运行时类型识别）。"
"在 Godot 中禁用 RTTI 意味着可以以较小的性能代价实现相当小的二进制大小。"

msgid "Why does Godot not force users to implement DoD (Data oriented Design)?"
msgstr "为什么 Godot 不强制用户实现 DoD（面向数据设计）？"

msgid ""
"While Godot internally for a lot of the heavy performance tasks attempts to "
"use cache coherency as well as possible, we believe most users don't really "
"need to be forced to use DoD practices."
msgstr ""
"虽然 Godot 内部针对许多繁重的性能任务，尝试尽可能地使用缓存一致性，但我们相信"
"大多数用户并不真正需要被迫使用 DoD 实践。"

msgid ""
"DoD is mostly a cache coherency optimization that can only gain you "
"significant performance improvements when dealing with dozens of thousands "
"of objects (which are processed every frame with little modification). As "
"in, if you are moving a few hundred sprites or enemies per frame, DoD won't "
"help you, and you should consider a different approach to optimization."
msgstr ""
"面向数据设计主要是缓存一致性优化，它只能在处理成千上万个对象时获得显著的性能"
"提升（每帧都经过少量修改）。比如，如果你每帧移动几百个精灵或敌人，面向数据设"
"计不会帮您的，您应该考虑一种不同的优化方法。"

msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"绝大多数游戏都不需要这个, 并且Godot提供了方便的辅助工具来完成大多数情况下的工"
"作."

msgid ""
"If a game that really needs to process such large amount of objects is "
"needed, our recommendation is to use C++ and GDNative for the high "
"performance parts and GDScript (or C#) for the rest of the game."
msgstr ""
"如果一个游戏的确需要处理较多数量游戏对象，那么我们建议使用 C++ 和 GDNative 处"
"理需要高性能的部分，使用 GDScript（或 C#）负责游戏的其它部分。"

msgid "How can I support Godot development or contribute?"
msgstr "如何支持或参与 Godot 的发展？"

msgid "See :ref:`doc_ways_to_contribute`."
msgstr "请参阅 :ref:`doc_ways_to_contribute`。"

msgid "Who is working on Godot? How can I contact you?"
msgstr "谁在为 Godot 工作？如何联系？"

msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"请参照 `Godot 官网 <https://godotengine.org/contact>`_\\ 上的相应页面。"

msgid "Translation status"
msgstr "翻译状态"
