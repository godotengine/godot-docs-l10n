# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Listening to player input"
msgstr "Отслеживание ввода игрока"

msgid ""
"Building upon the previous lesson :ref:`doc_scripting_first_script`, let's "
"look at another important feature of any game: giving control to the player. "
"To add this, we need to modify our ``Sprite.gd`` code."
msgstr ""
"Основываясь на предыдущем уроке :ref:`doc_scripting_first_script`, давайте "
"рассмотрим еще одну важную особенность любой игры: предоставление контроля "
"игроку. Чтобы добавить это, нам нужно изменить наш код ``Sprite.gd``."

msgid "You have two main tools to process the player's input in Godot:"
msgstr ""
"У вас есть два важных инструмента для обработки пользовательского ввода в "
"Godot:"

msgid ""
"The built-in input callbacks, mainly ``_unhandled_input()``. Like "
"``_process()``, it's a built-in virtual function that Godot calls every time "
"the player presses a key. It's the tool you want to use to react to events "
"that don't happen every frame, like pressing :kbd:`Space` to jump. To learn "
"more about input callbacks, see :ref:`doc_inputevent`."
msgstr ""
"Встроенные обратные вызовы ввода, в основном ``_unhandled_input()``. "
"Например, ``_process()``, это встроенная виртуальная функция, которую Godot "
"вызывает каждый раз, когда игрок нажимает клавишу. Это инструмент, который "
"вы захотите использовать, чтобы реагировать на события, которые не "
"происходят каждый кадр, например, нажатие :kbd:`Space` для прыжка. Чтобы "
"узнать больше об обратных вызовах ввода, посмотрите :ref:`doc_inputevent`."

msgid ""
"The ``Input`` singleton. A singleton is a globally accessible object. Godot "
"provides access to several in scripts. It's the right tool to check for "
"input every frame."
msgstr ""
"Синглтон ``Input``. *Синглтон* - это глобально доступный объект. Godot "
"предоставляет доступ к нескольким из них в скриптах. Это подходящий "
"инструмент для проверки ввода в каждом кадре."

msgid ""
"We're going to use the ``Input`` singleton here as we need to know if the "
"player wants to turn or move every frame."
msgstr ""
"Здесь мы будем использовать синглтон ``Input``, поскольку нам нужно знать в "
"каждом кадре, хочет ли игрок поворачиваться или двигаться."

msgid ""
"For turning, we should use a new variable: ``direction``. In our "
"``_process()`` function, replace the ``rotation += angular_speed * delta`` "
"line with the code below."
msgstr ""
"Для поворота мы должны использовать новую переменную: ``direction``. В нашей "
"функции ``_process()`` замените строку ``rotation += angular_speed * delta`` "
"на приведенный ниже код."

msgid ""
"Our ``direction`` local variable is a multiplier representing the direction "
"in which the player wants to turn. A value of ``0`` means the player isn't "
"pressing the left or the right arrow key. A value of ``1`` means the player "
"wants to turn right, and ``-1`` means they want to turn left."
msgstr ""
"Наша локальная переменная ``direction`` - это множитель, представляющий "
"собой направление, в котором игрок хочет повернуть. Значение ``0`` означает, "
"что игрок не нажимает ни стрелку влево, ни стрелку вправо. Значение ``1`` "
"говорит, что игрок хочет повернуть вправо, а ``-1`` - что игрок хочет "
"повернуть влево."

msgid ""
"To produce these values, we introduce conditions and the use of ``Input``. A "
"condition starts with the ``if`` keyword in GDScript and ends with a colon. "
"The condition is the expression between the keyword and the end of the line."
msgstr ""
"Для обработки этих значений мы вводим условие и используем ``Input``. "
"Условие в GDScript начинается с ключевого слова ``if`` и заканчивается "
"двоеточием. Условие - это выражение между ключевым словом и концом строки."

msgid ""
"To check if a key was pressed this frame, we call ``Input."
"is_action_pressed()``. The method takes a text string representing an input "
"action and returns ``true`` if the action is pressed, ``false`` otherwise."
msgstr ""
"Чтобы проверить, была ли нажата клавиша в этом кадре, мы вызываем ``Input."
"is_action_pressed()``. Метод принимает текстовую строку, представляющую "
"входное действие, и возвращает ``true``, если клавиша нажата, и ``false`` в "
"противном случае."

msgid ""
"The two actions we use above, \"ui_left\" and \"ui_right\", are predefined "
"in every Godot project. They respectively trigger when the player presses "
"the left and right arrows on the keyboard or left and right on a gamepad's D-"
"pad."
msgstr ""
"Два действия, которые мы использовали выше, «ui_left» и «ui_right», "
"предопределены в каждом проекте Godot. Они соответственно срабатывают, когда "
"игрок нажимает стрелки влево и вправо на клавиатуре или же влево и вправо на "
"крестовине геймпада."

msgid ""
"You can see and edit input actions in your project by going to Project -> "
"Project Settings and clicking on the Input Map tab."
msgstr ""
"Вы можете просматривать и редактировать действия ввода в своем проекте, "
"перейдя в «Проект» -> «Настройки проекта» и щелкнув вкладку «Список "
"действий»."

msgid ""
"Finally, we use the ``direction`` as a multiplier when we update the node's "
"``rotation``: ``rotation += angular_speed * direction * delta``."
msgstr ""
"Наконец, мы используем ``direction`` как множитель, когда обновляем "
"``rotation`` узла: ``rotation += angular_speed * direction * delta``."

msgid ""
"If you run the scene with this code, the icon should rotate when you press :"
"kbd:`Left` and :kbd:`Right`."
msgstr ""
"Если запустить сцену с этим кодом, иконка должна вращаться при нажатии :kbd:"
"`Влево` и :kbd:`Вправо`."

msgid "Moving when pressing \"up\""
msgstr "Перемещение при нажатии \"вверх\""

msgid ""
"To only move when pressing a key, we need to modify the code that calculates "
"the velocity. Replace the line starting with ``var velocity`` with the code "
"below."
msgstr ""
"Чтобы двигаться только при нажатии клавиши, нам нужно изменить код, который "
"вычисляет скорость. Замените строку, начинающуюся с ``var velocity``, на "
"приведенный ниже код."

msgid ""
"We initialize the ``velocity`` with a value of ``Vector2.ZERO``, another "
"constant of the built-in ``Vector`` type representing a 2D vector of length "
"0."
msgstr ""
"Мы инициализируем ``velocity'' со значением ``Vector2.ZERO'', еще одной "
"константой встроенного типа ``Vector'', представляющей двумерный вектор "
"нулевой длины."

msgid ""
"If the player presses the \"ui_up\" action, we then update the velocity's "
"value, causing the sprite to move forward."
msgstr ""
"Когда игрок выполняет действие \"ui_up\", мы обновляем значение скорости, "
"заставляя спрайт двигаться вперёд."

msgid "Complete script"
msgstr "Готовый скрипт"

msgid "Here is the complete ``Sprite.gd`` file for reference."
msgstr "Это полный файл ``Sprite.gd`` для справки."

msgid ""
"If you run the scene, you should now be able to rotate with the left and "
"right arrow keys and move forward by pressing :kbd:`Up`."
msgstr ""
"Если вы запустите сцену, вы должны иметь возможность вращаться с помощью "
"стрелок влево и вправо, а также двигаться нажатием :kbd:`Up`."

msgid "Summary"
msgstr "Подведение итогов"

msgid ""
"In summary, every script in Godot represents a class and extends one of the "
"engine's built-in classes. The node types your classes inherit from give you "
"access to properties like ``rotation`` and ``position`` in our sprite's "
"case. You also inherit many functions, which we didn't get to use in this "
"example."
msgstr ""
"В общем, каждый скрипт в Godot представляет собой класс и расширяет один из "
"встроенных классов движка. Типы узлов, от которых наследуются ваши классы, "
"дают вам доступ к таким свойствам, как ``вращение'' и ``позиция'' в случае "
"нашего спрайта. Вы также наследуете множество функций, которые мы не "
"использовали в этом примере."

msgid ""
"In GDScript, the variables you put at the top of the file are your class's "
"properties, also called member variables. Besides variables, you can define "
"functions, which, for the most part, will be your classes' methods."
msgstr ""
"В GDScript переменные, которые вы помещаете в верхней части файла, являются "
"свойствами вашего класса, также называемыми переменными-членами. Кроме "
"переменных, вы можете определять функции, которые, по сути, являются "
"методами ваших классов."

msgid ""
"Godot provides several virtual functions you can define to connect your "
"class with the engine. These include ``_process()``, to apply changes to the "
"node every frame, and ``_unhandled_input()``, to receive input events like "
"key and button presses from the users. There are quite a few more."
msgstr ""
"Godot предоставляет несколько виртуальных функций, которые вы можете "
"определить для связи вашего класса с движком. К ним относятся "
"``_process()``, применяющая изменения к узлу каждый кадр, и "
"``_unhandled_input()``, получающая события ввода, такие как нажатие клавиш и "
"кнопок от пользователей. Есть еще множество других функций."

msgid ""
"The ``Input`` singleton allows you to react to the players' input anywhere "
"in your code. In particular, you'll get to use it in the ``_process()`` loop."
msgstr ""
"Одноэлементное множество ``Input``позволяет Вам реагировать на участие "
"игрока в любом месте Вашего кода. В первую очередь Вы сможете применить его "
"в цикле ``_process()``."

msgid ""
"In the next lesson :ref:`doc_signals`, we'll build upon the relationship "
"between scripts and nodes by having our nodes trigger code in scripts."
msgstr ""
"В следующем уроке :ref:`doc_signals`мы будем опираться на отношения между "
"скриптами и узлами так, чтобы узлы приводили код в скриптах в действие."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
