# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Thread-safe APIs"
msgstr "Потокобезопасные API"

msgid "Threads"
msgstr "Потоки"

msgid ""
"Threads are used to balance processing power across CPUs and cores. Godot "
"supports multithreading, but not in the whole engine."
msgstr ""
"Потоки используются для балансировки вычислительной мощности между "
"процессорами и ядрами. Godot поддерживает многопоточность, но не во всем "
"движке."

msgid ""
"Below is a list of ways multithreading can be used in different areas of "
"Godot."
msgstr ""
"Ниже приведен список способов, которыми многопоточность может быть "
"использована в различных областях Godot."

msgid "Global scope"
msgstr "Глобальная область"

msgid ""
":ref:`Global Scope<class_@GlobalScope>` singletons are all thread-safe. "
"Accessing servers from threads is supported (for VisualServer and Physics "
"servers, ensure threaded or thread-safe operation is enabled in the project "
"settings!)."
msgstr ""
"Все синглтоны :ref:`Global Scope<class_@GlobalScope>` являются "
"потокобезопасными. Доступ к серверам из потоков поддерживается (для серверов "
"VisualServer и Physics убедитесь, что в настройках проекта включена "
"потоковая или потокобезопасная работа!)."

msgid ""
"This makes them ideal for code that creates dozens of thousands of instances "
"in servers and controls them from threads. Of course, it requires a bit more "
"code, as this is used directly and not within the scene tree."
msgstr ""
"Это делает их отличными для кода который создаёт многие тысячи экземпляров в "
"серверах и контролирует их из потоков. Конечно, это требует немного больше "
"кода, так как они используются напрямую, а не через дерево сцены."

msgid "Scene tree"
msgstr "Дерево сцены"

#, fuzzy
msgid ""
"Interacting with the active scene tree is **NOT** thread-safe. Make sure to "
"use mutexes when sending data between threads. If you want to call functions "
"from a thread, the *call_deferred* function may be used:"
msgstr ""
"Взаимодействие с активным деревом сцены **НЕ** потоко-безопасно. Убедитесь "
"что используете мьютексы когда посылаете данные между потоками. Если вы "
"хотите вызывать функции из потока, можно использовать функцию "
"*call_deferred*:"

msgid ""
"However, creating scene chunks (nodes in tree arrangement) outside the "
"active tree is fine. This way, parts of a scene can be built or instantiated "
"in a thread, then added in the main thread:"
msgstr ""
"Хотя, создание чанков сцены (нодов в древе) вне активного древа нормально. "
"Таким образом, части сцены могут быть собраны или инстанцированы из потока, "
"а затем добавлены в главный поток:"

msgid ""
"Still, this is only really useful if you have **one** thread loading data. "
"Attempting to load or create scene chunks from multiple threads may work, "
"but you risk resources (which are only loaded once in Godot) tweaked by the "
"multiple threads, resulting in unexpected behaviors or crashes."
msgstr ""

msgid ""
"Only use more than one thread to generate scene data if you *really* know "
"what you are doing and you are sure that a single resource is not being used "
"or set in multiple ones. Otherwise, you are safer just using the servers API "
"(which is fully thread-safe) directly and not touching scene or resources."
msgstr ""

msgid "Rendering"
msgstr "*Рендеринг*"

msgid ""
"Instancing nodes that render anything in 2D or 3D (such as Sprite) is *not* "
"thread-safe by default. To make rendering thread-safe, set the **Rendering > "
"Threads > Thread Model** project setting to **Multi-Threaded**."
msgstr ""

msgid ""
"Note that the Multi-Threaded thread model has several known bugs, so it may "
"not be usable in all scenarios."
msgstr ""

msgid "GDScript arrays, dictionaries"
msgstr "GDScript массивы, словари"

#, fuzzy
msgid ""
"In GDScript, reading and writing elements from multiple threads is OK, but "
"anything that changes the container size (resizing, adding or removing "
"elements) requires locking a mutex."
msgstr ""
"В GDScript, чтение или запись элементов из многих потоков нормально, но "
"любая операция изменяющая размер контейнера (изменение размера, добавление "
"или удаление элементов) требует закрытие через мьютекс."

msgid "Resources"
msgstr "Ресурсы"

msgid ""
"Modifying a unique resource from multiple threads is not supported. However "
"handling references on multiple threads is supported, hence loading "
"resources on a thread is as well - scenes, textures, meshes, etc - can be "
"loaded and manipulated on a thread and then added to the active scene on the "
"main thread. The limitation here is as described above, one must be careful "
"not to load the same resource from multiple threads at once, therefore it is "
"easiest to use **one** thread for loading and modifying resources, and then "
"the main thread for adding them."
msgstr ""
"Изменение уникального ресурса из нескольких потоков не поддерживается. "
"Однако работа со ссылками в нескольких потоках поддерживается, поэтому "
"загрузка ресурсов в поток также поддерживается - сцены, текстуры, сетки и т."
"д. могут быть загружены и обработаны в потоке, а затем добавлены в активную "
"сцену в основном потоке. Ограничением здесь является то, что, как описано "
"выше, нужно быть осторожным, чтобы не загрузить один и тот же ресурс из "
"нескольких потоков одновременно, поэтому проще всего использовать **один "
"поток** для загрузки и изменения ресурсов, а затем основной поток для их "
"добавления."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
