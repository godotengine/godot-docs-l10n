# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D movement overview"
msgstr "Перемещение в 2D пространстве"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Every beginner has been there: \"How do I move my character?\" Depending on "
"the style of game you're making, you may have special requirements, but in "
"general the movement in most 2D games is based on a small number of designs."
msgstr ""
"Каждый новичок задаётся вопросом: \"Как я могу перемещать свой персонаж?\". "
"В зависимости от стиля игры, у тебя могут быть специальные требования, но в "
"основном перемещения в большинстве 2D игр основаны на небольшом числе "
"различных способов."

msgid ""
"We'll use :ref:`KinematicBody2D <class_KinematicBody2D>` for these examples, "
"but the principles will apply to other node types (Area2D, RigidBody2D) as "
"well."
msgstr ""
"Для наших примеров мы будем использовать :ref:`KinematicBody2D "
"<class_KinematicBody2D>`, но эти принципы так же применимы и для других "
"типов узлов (Area2D, RigidBody2D)."

msgid "Setup"
msgstr "Настройка"

msgid ""
"Each example below uses the same scene setup. Start with a "
"``KinematicBody2D`` with two children: ``Sprite`` and ``CollisionShape2D``. "
"You can use the Godot icon (\"icon.png\") for the Sprite's texture or use "
"any other 2D image you have."
msgstr ""
"Каждый из примеров показанных ниже использует одинаковые настройки сцены. "
"Начинайте с добавления ``KinematicBody2D`` с двумя дочерними узлами: "
"``Sprite`` и ``CollisionShape2D``. Вы можете использовать иконку Godot "
"(\"icon.png\") в качестве текстуры спрайта или воспользоваться любой другой "
"2D картинкой которая имеется."

msgid ""
"Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add "
"the following input actions (see :ref:`InputEvent <doc_inputevent>` for "
"details):"
msgstr ""
"Откройте ``Проект -> Настройки проекта`` и выберите вкладку \"Список "
"действий\". Добавьте следующие действия (для справки :ref:`InputEvent "
"<doc_inputevent>`):"

msgid "8-way movement"
msgstr "8-стороннее движение"

msgid ""
"In this scenario, you want the user to press the four directional keys (up/"
"left/down/right or W/A/S/D) and move in the selected direction. The name \"8-"
"way movement\" comes from the fact that the player can move diagonally by "
"pressing two keys at the same time."
msgstr ""
"В этом примере мы хотим, чтобы игрок использовал четыре клавиши для выбора "
"движения в заданном направлении (клавиши - стрелки: вверх/влево/вниз/вправо "
"или W/A/S/D). Термин 8 - позиционное перемещение исходит из факта, что игрок "
"может перемещаться по диагонали удерживая одновременно две клавиши."

msgid "Add a script to the kinematic body and add the following code:"
msgstr "Добавьте скрипт к \"KinematicBody2D\", а затем добавьте следующий код:"

msgid ""
"In the ``get_input()`` function, we check for the four key events and sum "
"them up to get the velocity vector. This has the benefit of making two "
"opposite keys cancel each other out, but will also result in diagonal "
"movement being faster due to the two directions being added together."
msgstr ""
"В функции ``get_input()`` мы получаем события о нажатии четырёх клавиш и "
"складываем их с вектором направления. Такой подход позволяет отменять "
"одновременное нажатия клавиш противоположных направлений, но как результат "
"при сложении диагональных перемещений, движение по диагонали будет "
"происходить быстрее."

msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, and multiply by the desired speed."
msgstr ""
"Мы можем предотвратить это применив нормализацию (*normalize*) к вектору "
"направления, таким образом длинна вектора (*length*) станет равной ``1``, и "
"затем умножим его на желаемую скорость."

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""
"Если вы никогда прежде не использовали векторную алгебру, или желаете "
"освежить память, то можете посмотреть применение векторной алгебры в Godot :"
"ref:`doc_vector_math`."

msgid ""
"If the code above does nothing when you press the keys, double-check that "
"you've set up input actions correctly as described in the :ref:"
"`doc_2d_movement_setup` part of this tutorial."
msgstr ""
"Если код выше ничего не делает при нажатии клавиш, проверьте заново "
"установки входных действий как описано в :ref:`doc_2d_movement_setup` части "
"этого урока."

msgid "Rotation + movement"
msgstr "Вращение + перемещение"

msgid ""
"This type of movement is sometimes called \"Asteroids-style\" because it "
"resembles how that classic arcade game worked. Pressing left/right rotates "
"the character, while up/down moves it forward or backward in whatever "
"direction it's facing."
msgstr ""
"Этот стиль движения иногда называют \"Астероид-стиль\" потому что он похож "
"на классическую аркадную игру. Нажатие влево/вправо вращает персонаж, вверх/"
"вниз перемещает его вперёд или назад по направления персонажа."

msgid ""
"Here we've added two new variables to track our rotation direction and "
"speed. Again, pressing both keys at once will cancel out and result in no "
"rotation. The rotation is applied directly to the body's ``rotation`` "
"property."
msgstr ""
"Здесь мы добавили две новых переменных для отслеживания направления вращения "
"и скорости вращения. Как и ранее, нажатие двух противоположных клавиш "
"одновременно, отменяет вращение. Вращение осуществляется изменением свойства "
"``rotation``."

msgid ""
"To set the velocity, we use the ``Vector2.rotated()`` method, so that it "
"points in the same direction as the body. ``rotated()`` is a useful vector "
"function that you can use in many circumstances where you would otherwise "
"need to apply trigonometric functions."
msgstr ""
"Для задания скорости, мы используем метод``Vector2.rotated()`` чтобы "
"скорость была направлена вдоль направления тела. ``rotated()`` полезная "
"векторная функция, которую можно использовать во многих обстоятельствах, в "
"противном случае пришлось бы применять тригонометрические функции."

msgid "Rotation + movement (mouse)"
msgstr "Вращение + перемещение с помощью мыши"

msgid ""
"This style of movement is a variation of the previous one. This time, the "
"direction is set by the mouse position instead of the keyboard. The "
"character will always \"look at\" the mouse pointer. The forward/back inputs "
"remain the same, however."
msgstr ""
"Этот стиль перемещения - вариация предыдущего. Сейчас направление "
"устанавливается перемещением мыши а не клавиатурой. Благодаря функции \"look "
"at\", персонаж будет всегда смотреть на курсор мыши. Перемещения вперёд/"
"назад остаются прежними."

msgid ""
"Here we're using the :ref:`Node2D <class_Node2D>` ``look_at()`` method to "
"point the player towards a given position. Without this function, you could "
"get the same effect by setting the angle like this:"
msgstr ""
"Мы используем :ref:`Node2D <class_Node2D>` ``look_at()``метод для указания "
"направления игрока. Без этой функции мы можем достичь того же эффекта "
"используя установку угла как описано ниже:"

msgid "Click-and-move"
msgstr "Нажми и двигайся"

msgid ""
"This last example uses only the mouse to control the character. Clicking on "
"the screen will cause the player to move to the target location."
msgstr ""
"В последнем примере для перемещения персонажа используется только мышь. "
"Нажатие на экран заставит игрока двигаться в указанном направлении."

msgid ""
"Note the ``distance_to()`` check we make prior to movement. Without this "
"test, the body would \"jitter\" upon reaching the target position, as it "
"moves slightly past the position and tries to move back, only to move too "
"far and repeat."
msgstr ""
"Заметьте проверку``distance_to()``, которую мы выполняем перед перемещением. "
"Без этого теста, тела может начать дрожать пытаясь достичь заданной позиции, "
"так как оно может её проскакивать при перемещении и пытаться вернуться "
"назад, снова её проскакивая."

msgid ""
"Uncommenting the ``look_at()`` line will also turn the body to point in its "
"direction of motion if you prefer."
msgstr ""
"Раскомментируя строку ``look_at()``заставит тело поворачиваться в "
"направлении своего перемещения."

msgid ""
"This technique can also be used as the basis of a \"following\" character. "
"The ``target`` position can be that of any object you want to move to."
msgstr ""
"Этот приём ещё может использоваться как основа для \"следящего\" персонажа. "
"Позицией цели может быть любой объект в направлении которого вы хотите "
"перемещаться."

msgid "Summary"
msgstr "Подведение итогов"

msgid ""
"You may find these code samples useful as starting points for your own "
"projects. Feel free to use them and experiment with them to see what you can "
"make."
msgstr ""
"Вы можете найти эти примеры полезными как основа для вашего проекта. Не "
"стесняйтесь использовать их и экспериментировать с ними, чтобы увидеть, что "
"вы можете сделать."

msgid ""
"You can download this sample project here: :download:`2D_movement_demo.zip "
"<files/2D_movement_demo.zip>`"
msgstr ""
"Вы можете загрузить эти примеры: :download:`2D_movement_demo.zip "
"<files/2D_movement_demo.zip>`"

msgid "Translation status"
msgstr "Translation status (статус перевода)"
