# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Differences between GLES2 and GLES3"
msgstr "Отличия между GLES2 и GLES3"

msgid ""
"This page documents the differences between GLES2 and GLES3 that are by "
"design and are not the result of bugs. There may be differences that are "
"unintentional, but they should be reported as bugs."
msgstr ""
"Эта страница описывает различия между GLES2 и GLES3 по дизайну а не в "
"результате ошибок. Существует и много непреднамеренных различий, но о них "
"нужно сообщить как об ошибках."

msgid ""
"\"GLES2\" and \"GLES3\" are the names used in Godot for the two OpenGL-based "
"rendering backends. In terms of graphics APIs, the GLES2 backend maps to "
"OpenGL 2.1 on desktop, OpenGL ES 2.0 on mobile and WebGL 1.0 on the web. The "
"GLES3 backend maps to OpenGL 3.3 on desktop, OpenGL ES 3.0 on mobile and "
"WebGL 2.0 on the web."
msgstr ""
"\"GLES2\" и \"GLES3\" это имена используемые в Godot для двух базирующихся "
"на OpenGL движка отрисовки. В терминологии графических API, движок GLES2 "
"представляет OpenGL 2.1 на десктопе, OpenGL ES 2.0 на мобильных платформах и "
"WebGL 1.0 в вэбе. Движок GLES3 - это OpenGL 3.3 на десктопе, OpenGL ES 3.0 "
"на мобильных платформах и WebGL 2.0 в вэбе."

msgid "Particles"
msgstr "Частицы"

msgid ""
"GLES2 cannot use the :ref:`Particles <class_Particles>` or :ref:`Particles2D "
"<class_Particles2D>` nodes as they require advanced GPU features. Instead, "
"use :ref:`CPUParticles <class_CPUParticles>` or :ref:`CPUParticles2D "
"<class_CPUParticles2D>`, which provides a similar interface to a :ref:"
"`ParticlesMaterial <class_ParticlesMaterial>`."
msgstr ""
"В GLES2 нельзя использовать ноды :ref:`Particles <class_Particles>` или :ref:"
"`Particles2D <class_Particles2D>` так как им требуется продвинутые "
"возможности GPU. Вместо них, используйте :ref:`CPUParticles "
"<class_CPUParticles>` или :ref:`CPUParticles2D <class_CPUParticles2D>` "
"которые предоставляют похожий интерфейс для :ref:`ParticlesMaterial "
"<class_ParticlesMaterial>`."

msgid ""
"Particles and Particles2D can be converted to their CPU equivalent node with "
"the \"Convert to CPUParticles\" option in the editor."
msgstr ""
"Particles и Particles2D могут быть сконвертированы в эквивалент на CPU через "
"опцию \"Convert to CPUParticles\" в редакторе."

#, fuzzy
msgid "``SCREEN_TEXTURE`` mip-maps"
msgstr "SCREEN_TEXTURE мип-карты"

msgid ""
"In GLES2, ``SCREEN_TEXTURE`` (accessed via a :ref:`ShaderMaterial "
"<class_ShaderMaterial>`) does not have computed mip-maps. So when accessing "
"at a different LOD, the texture will not appear blurry."
msgstr ""
"В GLES2, ``SCREEN_TEXTURE`` (доступно через :ref:`ShaderMaterial "
"<class_ShaderMaterial>`) не содержит вычисленных мип-карт. Так что при "
"доступе к другому LOD, текстура не будет выглядеть сглаженной."

msgid "``DEPTH_TEXTURE``"
msgstr ""

msgid ""
"While GLES2 supports ``DEPTH_TEXTURE`` in shaders, it may not work on some "
"old hardware (especially mobile)."
msgstr ""
"Хотя GLES2 поддерживает ``DEPTH_TEXTURE`` в шейдерах, это может не работать "
"на некоторых старых аппаратных средствах (особенно мобильных)."

msgid "Color space"
msgstr "Цветовое пространство"

msgid ""
"GLES2 and GLES3 are in different color spaces. This means that colors will "
"appear slightly different between them especially when lighting is used."
msgstr ""
"GLES2 и GLES3 находятся в разных цветовых пространствах. Это означает, что "
"цвета между ними будут немного отличаться, особенно при использовании "
"освещения."

msgid ""
"If your game is going to use both GLES2 and GLES3, you can use an ``if`` "
"statement check and see if the output is in sRGB, using ``OUTPUT_IS_SRGB``. "
"``OUTPUT_IS_SRGB`` is ``true`` in GLES2 and ``false`` in GLES3."
msgstr ""
"Если ваша игра будет использовать как GLES2, так и GLES3, вы можете "
"использовать оператор ``if`` для проверки, является ли вывод sRGB, используя "
"``OUTPUT_IS_SRGB``. ``OUTPUT_IS_SRGB`` имеет значение ``true`` в GLES2 и "
"``false`` в GLES3."

msgid "HDR"
msgstr "HDR"

msgid ""
"GLES2 is not capable of using High Dynamic Range (HDR) rendering features. "
"If HDR is set for your project, or for a given viewport, Godot will still "
"use Low Dynamic Range (LDR) which limits viewport values to the ``0-1`` "
"range."
msgstr ""
"GLES2 не способен использовать функции рендеринга с высоким динамическим "
"диапазоном (HDR). Если HDR установлен для вашего проекта или для данного "
"видового экрана, Godot все равно будет использовать низкий динамический "
"диапазон (LDR), который ограничивает значения видового экрана диапазоном "
"``0-1``."

msgid ""
"The Viewport **Debanding** property and associated project setting will also "
"have no effect when HDR is disabled. This means debanding can't be used in "
"GLES2."
msgstr ""
"Свойство Viewport **Debanding** и связанные с ним настройки проекта также не "
"будут иметь эффекта, если HDR отключен. Это означает, что дебандинг не может "
"быть использован в GLES2."

msgid "SpatialMaterial features"
msgstr "Особенности SpatialMaterial"

msgid ""
"In GLES2, the following advanced rendering features in the :ref:"
"`SpatialMaterial <class_SpatialMaterial>` are missing:"
msgstr ""
"В GLES2, следующие продвинутые возможности отрисовки отсутствуют в :ref:"
"`SpatialMaterial <class_SpatialMaterial>`:"

msgid "Refraction"
msgstr "Преломление (рефрацкция)"

msgid "Subsurface scattering"
msgstr "Subsurface scattering (Подповерхностное рассеяние)"

msgid "Anisotropy"
msgstr "Анизотропия"

msgid "Clearcoat"
msgstr "Прозрачное покрытие"

msgid "Depth mapping"
msgstr "Depth mapping (Глубин-маппинг)"

msgid "When using SpatialMaterials they will not even appear in the editor."
msgstr "При использовании SpatialMaterials они даже не появятся в редакторе."

msgid ""
"In custom :ref:`ShaderMaterials <class_ShaderMaterial>`, you can set values "
"for these features but they will be non-functional. For example, you will "
"still be able to set the ``SSS`` built-in (which normally adds subsurface "
"scattering) in your shader, but nothing will happen."
msgstr ""
"В пользовательских :ref:`ShaderMaterials <class_ShaderMaterial>`, вы можете "
"установить значения для этих функций, но они будут нефункциональны. "
"Например, вы все еще сможете установить встроенное значение ``SSS`` (которое "
"обычно добавляет подповерхностное рассеивание) в вашем шейдере, но ничего не "
"произойдет."

msgid "Environment features"
msgstr "Особенности окружающей среды"

msgid ""
"In GLES2, the following features in the :ref:`Environment "
"<class_Environment>` are missing:"
msgstr ""
"В GLES2 отсутствуют следующие возможности в :ref:`Environment "
"<class_Environment>`:"

msgid "Auto exposure"
msgstr "Автоматическая экспозиция"

msgid "Tonemapping"
msgstr "Тонирование"

msgid "Screen space reflections"
msgstr "Отражения в пространстве экрана"

msgid "Screen space ambient occlusion"
msgstr "Окружающая окклюзия в пространстве экрана"

msgid "That means that in GLES2 environments you can only set:"
msgstr "Это означает, что в среде GLES2 вы можете только установить:"

msgid "Sky (including procedural sky)"
msgstr "Небо (включая процедурное небо)"

msgid "Ambient light"
msgstr "Окружающий свет"

msgid "Fog"
msgstr "Туман"

msgid "Depth of field"
msgstr "Глубина резкости"

msgid "Glow (also known as bloom)"
msgstr "Сияние (также известное как блюм)"

msgid "Adjustment"
msgstr "Регулировка параметров цвета"

msgid "GIProbes"
msgstr ""

msgid ""
":ref:`GIProbes <class_GIProbe>` do not work in GLES2. Instead use :ref:"
"`Baked Lightmaps <class_BakedLightmap>`. For a description of how baked "
"lightmaps work see the :ref:`Baked Lightmaps tutorial <doc_baked_lightmaps>`."
msgstr ""

msgid "Contact shadows"
msgstr ""

msgid ""
"The ``shadow_contact`` property of :ref:`Lights <class_Light>` is not "
"supported in GLES2 and so does nothing."
msgstr ""

msgid "Light performance"
msgstr ""

msgid ""
"In GLES2, performance scales poorly with several lights, as each light is "
"processed in a separate render pass (in opposition to GLES3 which is all "
"done in a single pass). Try to limit scenes to as few lights as possible in "
"order to achieve greatest performance."
msgstr ""

msgid "Texture compression"
msgstr ""

msgid ""
"On mobile, GLES2 requires ETC texture compression, while GLES3 requires "
"ETC2. ETC2 is enabled by default, so if exporting to mobile using GLES2 make "
"sure to set the project setting ``rendering/vram_compression/import_etc`` "
"and then reimport textures."
msgstr ""

msgid ""
"Since ETC doesn't support transparency, you must reimport textures that "
"contain an alpha channel to use the Uncompressed, Lossy or Lossless "
"compression mode (instead of Video RAM). This can be done in the Import dock "
"after selecting them in the FileSystem dock."
msgstr ""

#, fuzzy
msgid "Blend shapes"
msgstr "Видимые области соприкосновения"

msgid ""
"In GLES2, blend shapes are implemented on the CPU instead of the GPU. "
"Accordingly, they may not perform as well as blend shapes in GLES3. To avoid "
"performance issues when using blend shapes in GLES2, try to minimize the "
"number of blend shapes that are updated each frame."
msgstr ""

msgid "Shading language"
msgstr "Язык шейдеров"

msgid ""
"GLES3 provides many built-in functions that GLES2 does not. Below is a list "
"of functions that are not available or are have limited support in GLES2."
msgstr ""

#, fuzzy
msgid ""
"For a complete list of built-in GLSL functions see the :ref:`Shading "
"Language doc <doc_shading_language>`."
msgstr ""
"Для получения дополнительной информации о самих событиях ввода посмотрите "
"руководство :ref:`Input Event Tutorial<doc_inputevent>`."

msgid "Function"
msgstr "Функция"

msgid "vec_type **modf** ( vec_type x, out vec_type i )"
msgstr ""

msgid "vec_int_type **floatBitsToInt** ( vec_type x )"
msgstr ""

msgid "vec_uint_type **floatBitsToUint** ( vec_type x )"
msgstr ""

msgid "vec_type **intBitsToFloat** ( vec_int_type x )"
msgstr ""

msgid "vec_type **uintBitsToFloat** ( vec_uint_type x )"
msgstr ""

msgid "ivec2 **textureSize** ( sampler2D_type s, int lod )"
msgstr ""

msgid "See workaround below"
msgstr ""

msgid "ivec2 **textureSize** ( samplerCube s, int lod )"
msgstr ""

msgid "vec4_type **texture** ( sampler_type s, vec_type uv [, float bias] )"
msgstr ""

msgid "**bias** not available in vertex shader"
msgstr ""

msgid ""
"vec4_type **textureProj** ( sampler_type s, vec_type uv [, float bias] )"
msgstr ""

msgid "vec4_type **textureLod** ( sampler_type s, vec_type uv, float lod )"
msgstr ""

msgid "Only available in vertex shader on some hardware"
msgstr ""

msgid "vec4_type **textureProjLod** ( sampler_type s, vec_type uv, float lod )"
msgstr ""

#, fuzzy
msgid ""
"vec4_type **textureGrad** ( sampler_type s, vec_type uv, vec_type dPdx, "
"vec_type dPdy )"
msgstr "vec4_type **textureLod** ( sampler3D_type s, vec3 uv, float lod )"

msgid "vec_type **dFdx** ( vec_type p )"
msgstr ""

msgid "vec_type **dFdy** ( vec_type p )"
msgstr ""

msgid "vec_type **fwidth** ( vec_type p )"
msgstr ""

msgid ""
"Functions not in GLES2's GLSL were added with Godots own shader standard "
"library. These functions may perform worse in GLES2 compared to GLES3."
msgstr ""

msgid "``textureSize()`` workaround"
msgstr ""

msgid ""
"GLES2 does not support ``textureSize()``. You can get the size of a texture "
"the old fashioned way by passing in a uniform with the texture size yourself."
msgstr ""

#, fuzzy
msgid "Built in variables and render modes"
msgstr "Опции Отрисовки"

msgid ""
"Godot also provides many built-in variables and render modes. Some cannot be "
"supported in GLES2. Below is a list of built-in variables and render modes "
"that, when written to, will have no effect or could even cause issues when "
"using the GLES2 backend."
msgstr ""

#, fuzzy
msgid "Variable / Render Mode"
msgstr "Опции Отрисовки"

msgid "``ensure_correct_normals``"
msgstr ""

msgid "``INSTANCE_ID``"
msgstr ""

msgid "``DEPTH``"
msgstr ""

msgid "``ANISOTROPY``"
msgstr ""

msgid "``ANISOTROPY_FLOW``"
msgstr ""

msgid "``SSS_STRENGTH``"
msgstr ""

msgid "Translation status"
msgstr "Translation status (статус перевода)"
