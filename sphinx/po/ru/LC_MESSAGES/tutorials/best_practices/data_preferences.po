# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Data preferences"
msgstr "Смена текущей сцены"

msgid ""
"Ever wondered whether one should approach problem X with data structure Y or "
"Z? This article covers a variety of topics related to these dilemmas."
msgstr ""
"Вы когда-нибудь задумывались, следует ли подходить к проблеме X со "
"структурой данных Y или Z? В этой статье рассматриваются различные темы, "
"связанные с этими дилеммами."

msgid ""
"This article makes references to \"[something]-time\" operations. This "
"terminology comes from algorithm analysis' `Big O Notation <https://rob-bell."
"net/2009/06/a-beginners-guide-to-big-o-notation/>`_."
msgstr ""
"В этой статье есть ссылки на операции \"[что-то] -время\". Эта терминология "
"взята из анализа алгоритмов `Big O Notation <https://rob-bell.net/2009/06/a-"
"beginners-guide-to-big-o-notation/>`_."

msgid ""
"Long-story short, it describes the worst-case scenario of runtime length. In "
"laymen's terms:"
msgstr ""
"Короче говоря, он описывает наихудший сценарий продолжительности времени "
"выполнения. Проще говоря:"

msgid ""
"\"As the size of a problem domain increases, the runtime length of the "
"algorithm...\""
msgstr ""
"«По мере увеличения размера проблемной области время выполнения "
"алгоритма ...»"

msgid "Constant-time, ``O(1)``: \"...does not increase.\""
msgstr "Постоянное время, ``O(1)``: \"...не увеличивается.\""

msgid "Logarithmic-time, ``O(log n)``: \"...increases at a slow rate.\""
msgstr ""
"Логарифмическое время, ``O(log n)``: \"... увеличивается с медленной "
"скоростью.\""

msgid "Linear-time, ``O(n)``: \"...increases at the same rate.\""
msgstr "Линейное время, ``O(n)``: \"... увеличивается с той же скоростью.\""

msgid "Etc."
msgstr "И т.п."

msgid ""
"Imagine if one had to process 3 million data points within a single frame. "
"It would be impossible to craft the feature with a linear-time algorithm "
"since the sheer size of the data would increase the runtime far beyond the "
"time allotted. In comparison, using a constant-time algorithm could handle "
"the operation without issue."
msgstr ""
"Представьте, что нужно обработать 3 миллиона точек данных в одном кадре. "
"Было бы невозможно создать эту функцию с помощью алгоритма линейного "
"времени, поскольку сам размер данных увеличит время выполнения намного "
"больше отведенного времени. Для сравнения, использование алгоритма с "
"постоянным временем может справиться с операцией без проблем."

msgid ""
"By and large, developers want to avoid engaging in linear-time operations as "
"much as possible. But, if one keeps the scale of a linear-time operation "
"small, and if one does not need to perform the operation often, then it may "
"be acceptable. Balancing these requirements and choosing the right "
"algorithm / data structure for the job is part of what makes programmers' "
"skills valuable."
msgstr ""
"По большому счету, разработчики хотят по возможности избегать операций с "
"линейным временем. Но если сохранить небольшой масштаб операции с линейным "
"временем, и если нет необходимости выполнять операцию часто, то это может "
"быть приемлемым. Уравновешивание этих требований и выбор правильного "
"алгоритма / структуры данных для работы - это часть того, что делает навыки "
"программистов ценными."

msgid "Array vs. Dictionary vs. Object"
msgstr "Массив против словаря против объекта"

msgid ""
"Godot stores all variables in the scripting API in the `Variant <https://"
"docs.godotengine.org/en/latest/development/cpp/variant_class.html>`_ class. "
"Variants can store Variant-compatible data structures such as :ref:`Array "
"<class_Array>` and :ref:`Dictionary <class_Dictionary>` as well as :ref:"
"`Object <class_Object>` s."
msgstr ""
"Godot хранит все переменные в API сценариев в классе `Variant <https://docs."
"godotengine.org/ru/latest/development/cpp/variant_class.html>`_. Варианты "
"могут хранить Variant-совместимые структуры данных, такие как :ref:`Array "
"<class_Array>` и :ref:`Dictionary <class_Dictionary>`, а также :ref:`Object "
"<class_Object>`."

msgid ""
"Godot implements Array as a ``Vector<Variant>``. The engine stores the Array "
"contents in a contiguous section of memory, i.e. they are in a row adjacent "
"to each other."
msgstr ""
"Godot реализует массив как ``Vector<Variant>``. Движок хранит содержимое "
"массива в непрерывном разделе памяти, то есть они находятся в строке рядом "
"друг с другом."

msgid ""
"For those unfamiliar with C++, a Vector is the name of the array object in "
"traditional C++ libraries. It is a \"templated\" type, meaning that its "
"records can only contain a particular type (denoted by angled brackets). So, "
"for example, a :ref:`PoolStringArray <class_PoolStringArray>` would be "
"something like a ``Vector<String>``."
msgstr ""
"Для тех, кто не знаком с C++, вектор - это имя объекта массива в "
"традиционных библиотеках C++. Это \"шаблонный\" тип, что означает, что его "
"записи могут содержать только определенный тип (обозначенный угловыми "
"скобками). Так, например, a :ref:`PoolStringArray <class_PoolStringArray>` "
"будет чем-то вроде `` Vector <String>``."

msgid "Contiguous memory stores imply the following operation performance:"
msgstr ""
"Непрерывные хранилища памяти подразумевают следующую производительность "
"операций:"

msgid "**Iterate:** Fastest. Great for loops."
msgstr "**Итерация:** Самый быстрый. Отлично подходит для циклов."

msgid "Op: All it does is increment a counter to get to the next record."
msgstr ""
"Операции: всё, что он делает, это увеличивает счётчик, чтобы перейти к "
"следующей записи."

msgid "**Insert, Erase, Move:** Position-dependent. Generally slow."
msgstr ""
"**Вставка, стирание, перемещение:** В зависимости от позиции. Обычно "
"медленно."

msgid ""
"Op: Adding/removing/moving content involves moving the adjacent records over "
"(to make room / fill space)."
msgstr ""
"Операции: добавление/удаление/перемещение содержимого включает перемещение "
"соседних записей (чтобы освободить место/заполнить пространство)."

msgid "Fast add/remove *from the end*."
msgstr "Быстрое добавление/удаление *с конца*."

msgid "Slow add/remove *from an arbitrary position*."
msgstr "Медленное добавление/удаление *из произвольной позиции*."

msgid "Slowest add/remove *from the front*."
msgstr "Самое медленное добавление/удаление *спереди*."

msgid "If doing many inserts/removals *from the front*, then..."
msgstr "Если делать много вставок/удалений *спереди*, то ..."

msgid "invert the array."
msgstr "инвертировать массив."

msgid "do a loop which executes the Array changes *at the end*."
msgstr "выполнить цикл, который выполняет изменения массива *в конце*."

msgid "re-invert the array."
msgstr "повторно инвертировать массив."

msgid ""
"This makes only 2 copies of the array (still constant time, but slow) versus "
"copying roughly 1/2 of the array, on average, N times (linear time)."
msgstr ""
"Это делает только 2 копии массива (по-прежнему с постоянным временем, но "
"медленно) по сравнению с копированием примерно 1/2 массива, в среднем, N раз "
"(линейное время)."

msgid ""
"**Get, Set:** Fastest *by position*. E.g. can request 0th, 2nd, 10th record, "
"etc. but cannot specify which record you want."
msgstr ""
"**Получить, установить:** Самый быстрый *по позиции*. Может запрашивать 0-ю, "
"2-ю, 10-ю запись и т. д., но не может указать, какую запись вы хотите."

msgid "Op: 1 addition operation from array start position up to desired index."
msgstr ""
"Операции: 1 операция сложения от начальной позиции массива до желаемого "
"индекса."

msgid "**Find:** Slowest. Identifies the index/position of a value."
msgstr "**Поиск:** Самый медленный. Определяет индекс/позицию значения."

msgid ""
"Op: Must iterate through array and compare values until one finds a match."
msgstr ""
"Операции: необходимо перебирать массив и сравнивать значения, пока не будет "
"найдено совпадение."

msgid ""
"Performance is also dependent on whether one needs an exhaustive search."
msgstr ""
"Производительность также зависит от того, нужен ли вам исчерпывающий поиск."

msgid ""
"If kept ordered, custom search operations can bring it to logarithmic time "
"(relatively fast). Laymen users won't be comfortable with this though. Done "
"by re-sorting the Array after every edit and writing an ordered-aware search "
"algorithm."
msgstr ""
"Если сохранять порядок, пользовательские операции поиска могут привести его "
"к логарифмическому времени (относительно быстро). Однако пользователям-"
"непрофессионалам это не понравится. Выполняется путем повторной сортировки "
"массива после каждого редактирования и написания алгоритма поиска с "
"упорядочением."

msgid ""
"Godot implements Dictionary as an ``OrderedHashMap<Variant, Variant>``. The "
"engine stores a small array (initialized to 2^3 or 8 records) of key-value "
"pairs. When one attempts to access a value, they provide it a key. It then "
"*hashes* the key, i.e. converts it into a number. The \"hash\" is used to "
"calculate the index into the array. As an array, the OHM then has a quick "
"lookup within the \"table\" of keys mapped to values. When the HashMap "
"becomes too full, it increases to the next power of 2 (so, 16 records, then "
"32, etc.) and rebuilds the structure."
msgstr ""
"Godot реализует словарь как ``OrderedHashMap<Variant, Variant>``. Движок "
"хранит небольшой массив (инициализированный 2^3 = 8 записями) пар ключ-"
"значение. Когда кто-то пытается получить доступ к значению, они "
"предоставляют ему ключ. Затем он *хеширует* ключ, т.е. преобразует его в "
"число. «Хеш» используется для вычисления индекса в массиве. В качестве "
"массива OHM затем выполняет быстрый поиск в «таблице» ключей, сопоставленных "
"со значениями. Когда HashMap становится слишком полным, он увеличивается до "
"следующей степени 2 (так, 16 записей, затем 32 и т.д.) и перестраивает "
"структуру."

msgid ""
"Hashes are to reduce the chance of a key collision. If one occurs, the table "
"must recalculate another index for the value that takes the previous "
"position into account. In all, this results in constant-time access to all "
"records at the expense of memory and some minor operational efficiency."
msgstr ""
"Хеши предназначены для уменьшения вероятности конфликта ключей. Если это "
"произойдет, таблица должна пересчитать другой индекс для значения, "
"учитывающего предыдущую позицию. В целом это приводит к постоянному доступу "
"ко всем записям за счет памяти и некоторой незначительной операционной "
"эффективности."

msgid "Hashing every key an arbitrary number of times."
msgstr "Хеширование каждого ключа произвольное количество раз."

msgid ""
"Hash operations are constant-time, so even if an algorithm must do more than "
"one, as long as the number of hash calculations doesn't become too dependent "
"on the density of the table, things will stay fast. Which leads to..."
msgstr ""
"Операции хеширования выполняются с постоянным временем, поэтому, даже если "
"алгоритм должен выполнять несколько операций, пока количество вычислений "
"хеша не станет слишком зависимым от плотности таблицы, все будет оставаться "
"быстрым. Что приводит к..."

msgid "Maintaining an ever-growing size for the table."
msgstr "Поддержание постоянно растущего размера стола."

msgid ""
"HashMaps maintain gaps of unused memory interspersed in the table on purpose "
"to reduce hash collisions and maintain the speed of accesses. This is why it "
"constantly increases in size quadratically by powers of 2."
msgstr ""
"HashMaps сохраняют промежутки неиспользуемой памяти, разбросанные по "
"таблице, с целью уменьшения хеш-коллизий и поддержания скорости доступа. Вот "
"почему он постоянно увеличивается в размере квадратично в степени 2."

msgid ""
"As one might be able to tell, Dictionaries specialize in tasks that Arrays "
"do not. An overview of their operational details is as follows:"
msgstr ""
"Как можно догадаться, словари специализируются на задачах, которых массивы "
"не выполняют. Ниже приводится обзор их рабочих характеристик:"

msgid "**Iterate:** Fast."
msgstr "**Итерация:** Быстро."

msgid ""
"Op: Iterate over the map's internal vector of hashes. Return each key. "
"Afterwards, users then use the key to jump to and return the desired value."
msgstr ""
"Операции: обойти внутренний вектор хешей карты. Вернуть каждый ключ. После "
"этого пользователи используют клавишу, чтобы перейти к желаемому значению и "
"вернуть его."

msgid "**Insert, Erase, Move:** Fastest."
msgstr "**Вставка, стирание, перемещение:** Самый быстрый."

msgid ""
"Op: Hash the given key. Do 1 addition operation to look up the appropriate "
"value (array start + offset). Move is two of these (one insert, one erase). "
"The map must do some maintenance to preserve its capabilities:"
msgstr ""
"Операции: Хешировать данный ключ. Выполнить 1 операцию сложения, чтобы найти "
"соответствующее значение (начало массива + смещение). Ход - два таких (одна "
"вставка, одна стирание). Карта должна быть обновлена, чтобы сохранить свои "
"возможности:"

msgid "update ordered List of records."
msgstr "обновить упорядоченный список записей."

msgid "determine if table density mandates a need to expand table capacity."
msgstr ""
"определить, требует ли плотность стола необходимость увеличения вместимости "
"стола."

msgid ""
"The Dictionary remembers in what order users inserted its keys. This enables "
"it to execute reliable iterations."
msgstr ""
"Словарь запоминает, в каком порядке пользователи вставляли его ключи. Это "
"позволяет ему выполнять надежные итерации."

msgid "**Get, Set:** Fastest. Same as a lookup *by key*."
msgstr ""
"**Получить, установить:** Самый быстрый. То же, что и поиск *по ключу*."

msgid "Op: Same as insert/erase/move."
msgstr "Операции: То же, что и вставка/стирание/перемещение."

msgid "**Find:** Slowest. Identifies the key of a value."
msgstr "**Поиск:** Самый медленный. Определяет индекс/позицию значения."

msgid ""
"Op: Must iterate through records and compare the value until a match is "
"found."
msgstr ""
"Операции: необходимо перебирать записи и сравнивать значение, пока не будет "
"найдено совпадение."

msgid ""
"Note that Godot does not provide this feature out-of-the-box (because they "
"aren't meant for this task)."
msgstr ""
"Обратите внимание, что Godot не предоставляет эту функцию \"из "
"коробки\" (потому что она не предназначены для этой задачи)."

msgid ""
"Godot implements Objects as stupid, but dynamic containers of data content. "
"Objects query data sources when posed questions. For example, to answer the "
"question, \"do you have a property called, 'position'?\", it might ask its :"
"ref:`script <class_Script>` or the :ref:`ClassDB <class_ClassDB>`. One can "
"find more information about what objects are and how they work in the :ref:"
"`doc_what_are_godot_classes` article."
msgstr ""
"Godot реализует Объекты как глупые, но динамические контейнеры содержимого "
"данных. Объекты запрашивают источники данных, когда задают вопросы. "
"Например, чтобы ответить на вопрос \"есть ли у вас свойство под названием "
"'position'?\", Он может спросить его :ref:`script <class_Script>` или :ref:"
"`ClassDB <class_ClassDB>`. Более подробную информацию о том, что такое "
"объекты и как они работают, можно найти в статье :ref:"
"`doc_what_are_godot_classes`."

msgid ""
"The important detail here is the complexity of the Object's task. Every time "
"it performs one of these multi-source queries, it runs through *several* "
"iteration loops and HashMap lookups. What's more, the queries are linear-"
"time operations dependent on the Object's inheritance hierarchy size. If the "
"class the Object queries (its current class) doesn't find anything, the "
"request defers to the next base class, all the way up until the original "
"Object class. While these are each fast operations in isolation, the fact "
"that it must make so many checks is what makes them slower than both of the "
"alternatives for looking up data."
msgstr ""
"Важной деталью здесь является сложность задачи Объекта. Каждый раз, когда он "
"выполняет один из этих запросов с несколькими источниками, он проходит через "
"*несколько* итерационных циклов и поисков HashMap. Более того, запросы "
"представляют собой линейные операции, зависящие от размера иерархии "
"наследования объекта. Если класс, который запрашивает Object (его текущий "
"класс), ничего не находит, запрос передается следующему базовому классу, "
"вплоть до исходного класса Object. Хотя каждая из этих операций является "
"быстрой по отдельности, тот факт, что она должна выполнять так много "
"проверок, делает их медленнее, чем обе альтернативы для поиска данных."

msgid ""
"When developers mention how slow the scripting API is, it is this chain of "
"queries they refer to. Compared to compiled C++ code where the application "
"knows exactly where to go to find anything, it is inevitable that scripting "
"API operations will take much longer. They must locate the source of any "
"relevant data before they can attempt to access it."
msgstr ""
"Когда разработчики упоминают, насколько медленным является API сценариев, "
"они ссылаются именно на эту цепочку запросов. По сравнению с "
"скомпилированным кодом C++, в котором приложение точно знает, куда идти, "
"чтобы что-то найти, операции API сценариев неизбежно займут гораздо больше "
"времени. Они должны найти источник любых соответствующих данных, прежде чем "
"они смогут попытаться получить к нему доступ."

msgid ""
"The reason GDScript is slow is because every operation it performs passes "
"through this system."
msgstr ""
"Причина по кторой GDScript работает медленно это потому что каждоыа операцыа "
"дожна проходит через эту систему."

msgid ""
"C# can process some content at higher speeds via more optimized bytecode. "
"But, if the C# script calls into an engine class' content or if the script "
"tries to access something external to it, it will go through this pipeline."
msgstr ""
"C# может обрабатывать некоторый контент на более высоких скоростях за счет "
"более оптимизированного байт-кода. Но если сценарий C# вызывает содержимое "
"класса движка или если сценарий пытается получить доступ к чему-то внешнему "
"по отношению к нему, он будет проходить через этот конвейер."

msgid ""
"NativeScript C++ goes even further and keeps everything internal by default. "
"Calls into external structures will go through the scripting API. In "
"NativeScript C++, registering methods to expose them to the scripting API is "
"a manual task. It is at this point that external, non-C++ classes will use "
"the API to locate them."
msgstr ""
"NativeScript C++ идет еще дальше и по умолчанию сохраняет все внутри. Вызовы "
"во внешние структуры будут проходить через скриптовый API. В NativeScript C+"
"+ регистрация методов для предоставления их скриптовому API выполняется "
"вручную. Именно в этот момент внешние классы, не относящиеся к C++, будут "
"использовать API для их поиска."

msgid ""
"So, assuming one extends from Reference to create a data structure, like an "
"Array or Dictionary, why choose an Object over the other two options?"
msgstr ""
"Итак, если предположить, что один из них расширяется от ссылки для создания "
"структуры данных, такой как массив или словарь, зачем выбирать объект вместо "
"двух других вариантов?"

msgid ""
"**Control:** With objects comes the ability to create more sophisticated "
"structures. One can layer abstractions over the data to ensure the external "
"API doesn't change in response to internal data structure changes. What's "
"more, Objects can have signals, allowing for reactive behavior."
msgstr ""
"**Control:** С объектами появляется возможность создавать более сложные "
"структуры. Можно накладывать абстракции на данные, чтобы гарантировать, что "
"внешний API не изменится в ответ на изменения внутренней структуры данных. "
"Более того, объекты могут иметь сигналы, позволяющие реагировать на них."

msgid ""
"**Clarity:** Objects are a reliable data source when it comes to the data "
"that scripts and engine classes define for them. Properties may not hold the "
"values one expects, but one doesn't need to worry about whether the property "
"exists in the first place."
msgstr ""
"**Clarity:** Объекты являются надежным источником данных, когда речь идет о "
"данных, которые для них определяют сценарии и классы движка. Свойства могут "
"не содержать ожидаемых значений, но не нужно беспокоиться о том, существует "
"ли это свойство вообще."

msgid ""
"**Convenience:** If one already has a similar data structure in mind, then "
"extending from an existing class makes the task of building the data "
"structure much easier. In comparison, Arrays and Dictionaries don't fulfill "
"all use cases one might have."
msgstr ""
"**Convenience:** Если кто-то уже имеет в виду аналогичную структуру данных, "
"то расширение существующего класса значительно упрощает задачу построения "
"структуры данных. Для сравнения: массивы и словари не подходят для всех "
"возможных вариантов использования."

msgid ""
"Objects also give users the opportunity to create even more specialized data "
"structures. With it, one can design their own List, Binary Search Tree, "
"Heap, Splay Tree, Graph, Disjoint Set, and any host of other options."
msgstr ""
"Объекты также дают пользователям возможность создавать еще более "
"специализированные структуры данных. С его помощью можно создать собственный "
"список, дерево двоичного поиска, множество, дерево отображения, график, "
"непересекающийся набор и любые другие варианты."

msgid ""
"\"Why not use Node for tree structures?\" one might ask. Well, the Node "
"class contains things that won't be relevant to one's custom data structure. "
"As such, it can be helpful to construct one's own node type when building "
"tree structures."
msgstr ""
"\"Почему бы не использовать Node для древовидных структур?\" можно спросить. "
"Ну, класс Node содержит вещи, которые не имеют отношения к пользовательской "
"структуре данных. Таким образом, при построении древовидных структур может "
"быть полезно создать собственный тип узла."

msgid ""
"From here, one can then create their own structures with specific features, "
"limited only by their imagination."
msgstr ""
"Здесь можно создавать свои собственные структуры с определенными функциями, "
"ограниченными только собственным воображением."

msgid "Enumerations: int vs. string"
msgstr "Перечисления: int vs. string"

msgid ""
"Most languages offer an enumeration type option. GDScript is no different, "
"but unlike most other languages, it allows one to use either integers or "
"strings for the enum values (the latter only when using the ``export`` "
"keyword in GDScript). The question then arises, \"which should one use?\""
msgstr ""
"Большинство языков предлагают выбор типа перечисления. GDScript ничем не "
"отличается, но, в отличие от большинства других языков, позволяет "
"использовать для значений перечисления либо целые числа, либо строки "
"(последнее только при использовании ключевого слова ``export`` в GDScript). "
"Тогда возникает вопрос: \"какой использовать?\""

msgid ""
"The short answer is, \"whichever you are more comfortable with.\" This is a "
"feature specific to GDScript and not Godot scripting in general; The "
"languages prioritizes usability over performance."
msgstr ""
"Короткий ответ: «то, что вам удобнее». Это особенность, специфическая для "
"GDScript, а не для скриптов Godot в целом; Языки ставят удобство "
"использования выше производительности."

msgid ""
"On a technical level, integer comparisons (constant-time) will happen faster "
"than string comparisons (linear-time). If one wants to keep up other "
"languages' conventions though, then one should use integers."
msgstr ""
"На техническом уровне, сравнения целых чисел (время константы) будут "
"происходить быстрее, чем сравнения строк (линейное время). Однако, если кто-"
"то хочет сохранить конвенции других языков, то следует использовать целые "
"числа."

msgid ""
"The primary issue with using integers comes up when one wants to *print* an "
"enum value. As integers, attempting to print MY_ENUM will print ``5`` or "
"what-have-you, rather than something like ``\"MyEnum\"``. To print an "
"integer enum, one would have to write a Dictionary that maps the "
"corresponding string value for each enum."
msgstr ""
"Основная проблема с использованием целых чисел возникает, когда кто-то хочет "
"*распечатать* значение перечисления. В качестве целых чисел при попытке "
"вывести MY_ENUM будет выведено ``5`` или что-то ещё, а не что-то вроде "
"``«MyEnum»``. Чтобы напечатать целочисленное перечисление, нужно написать "
"словарь, который отображает соответствующее строковое значение для каждого "
"перечисления."

msgid ""
"If the primary purpose of using an enum is for printing values and one "
"wishes to group them together as related concepts, then it makes sense to "
"use them as strings. That way, a separate data structure to execute on the "
"printing is unnecessary."
msgstr ""
"Если основной целью использования перечисления является печать значений и "
"кто-то желает сгруппировать их вместе как связанные концепции, то имеет "
"смысл использовать их как строки. Таким образом, отдельная структура данных "
"для выполнения при печати не нужна."

msgid ""
"AnimatedTexture vs. AnimatedSprite vs. AnimationPlayer vs. AnimationTree"
msgstr ""
"AnimatedTexture против AnimatedSprite против AnimationPlayer против "
"AnimationTree"

msgid ""
"Under what circumstances should one use each of Godot's animation classes? "
"The answer may not be immediately clear to new Godot users."
msgstr ""
"При каких обстоятельствах следует использовать каждый из классов анимации "
"Godot? Ответ может быть не сразу понятен новым пользователям Godot."

msgid ""
":ref:`AnimatedTexture <class_AnimatedTexture>` is a texture that the engine "
"draws as an animated loop rather than a static image. Users can manipulate..."
msgstr ""
":ref:`AnimatedTexture <class_AnimatedTexture>` - это текстура, которую "
"движок рисует как анимированный цикл, а не как статическое изображение. "
"Пользователи могут манипулировать ..."

msgid "the rate at which it moves across each section of the texture (fps)."
msgstr ""
"скорость, с которой он перемещается по каждому участку текстуры (кадров в "
"секунду)."

msgid "the number of regions contained within the texture (frames)."
msgstr "количество областей, содержащихся в текстуре (кадрах)."

msgid ""
"Godot's :ref:`VisualServer <class_VisualServer>` then draws the regions in "
"sequence at the prescribed rate. The good news is that this involves no "
"extra logic on the part of the engine. The bad news is that users have very "
"little control."
msgstr ""
"Затем :ref:`VisualServer <class_VisualServer>` Godot'а последовательно "
"рисует регионы с заданной скоростью. Хорошая новость заключается в том, что "
"это не требует дополнительной логики со стороны движка. Плохая новость в "
"том, что у пользователей очень мало контроля."

msgid ""
"Also note that AnimatedTexture is a :ref:`Resource <class_Resource>` unlike "
"the other :ref:`Node <class_Node>` objects discussed here. One might create "
"a :ref:`Sprite <class_Sprite>` node that uses AnimatedTexture as its "
"texture. Or (something the others can't do) one could add AnimatedTextures "
"as tiles in a :ref:`TileSet <class_TileSet>` and integrate it with a :ref:"
"`TileMap <class_TileMap>` for many auto-animating backgrounds that all "
"render in a single batched draw call."
msgstr ""
"Также обратите внимание, что AnimatedTexture является :ref:`Resource "
"<class_Resource>` в отличие от других :ref:`Node <class_Node>` объектов, "
"обсуждаемых здесь. Можно создать узел :ref:`Sprite <class_Sprite>`, который "
"использует AnimatedTexture в качестве текстуры. Или (что не могут сделать "
"другие) можно добавить AnimatedTexture в виде тайлов в :ref:`TileSet "
"<class_TileSet>` и интегрировать его с :ref:`TileMap <class_TileMap>` для "
"многих автоанимированных фонов, которые все визуализируют в одном вызове "
"пакетной отрисовки."

msgid ""
"The AnimatedSprite node, in combination with the :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, allows one to create a variety of animation "
"sequences through spritesheets, flip between animations, and control their "
"speed, regional offset, and orientation. This makes them well-suited to "
"controlling 2D frame-based animations."
msgstr ""
"Узел AnimatedSprite в сочетании с ресурсом :ref:`SpriteFrames "
"<class_SpriteFrames>` позволяет создавать различные последовательности "
"анимации с помощью таблиц спрайтов, переключаться между анимациями и "
"управлять их скоростью, региональным смещением и ориентацией. Это делает их "
"удобными для управления 2D-анимацией на основе кадра."

msgid ""
"If one needs trigger other effects in relation to animation changes (for "
"example, create particle effects, call functions, or manipulate other "
"peripheral elements besides the frame-based animation), then will need to "
"use an :ref:`AnimationPlayer <class_AnimationPlayer>` node in conjunction "
"with the AnimatedSprite."
msgstr ""
"Если нужно запускать другие эффекты в связи с изменениями анимации "
"(например, создавать эффекты частиц, вызывать функции или манипулировать "
"другими периферийными элементами помимо покадровой анимации), тогда "
"необходимо использовать :ref:`AnimationPlayer <class_AnimationPlayer>` узел "
"в сочетании с AnimatedSprite."

msgid ""
"AnimationPlayers are also the tool one will need to use if they wish to "
"design more complex 2D animation systems, such as..."
msgstr ""
"AnimationPlayers - это также инструмент, который необходимо использовать, "
"если они хотят создавать более сложные системы 2D-анимации, такие как ..."

msgid "**Cut-Out animations:** editing sprites' transforms at runtime."
msgstr ""
"**Cut-Out animations:** редактирование преобразований спрайтов во время "
"выполнения."

msgid ""
"**2D Mesh animations:** defining a region for the sprite's texture and "
"rigging a skeleton to it. Then one animates the bones which stretch and bend "
"the texture in proportion to the bones' relationships to each other."
msgstr ""
"**2D Mesh animations:** определение области для текстуры спрайта и привязка "
"к ней скелета. Затем анимируются кости, которые растягивают и изгибают "
"текстуру пропорционально соотношению костей друг с другом."

msgid "A mix of the above."
msgstr "Смесь вышеперечисленного."

msgid ""
"While one needs an AnimationPlayer to design each of the individual "
"animation sequences for a game, it can also be useful to combine animations "
"for blending, i.e. enabling smooth transitions between these animations. "
"There may also be a hierarchical structure between animations that one plans "
"out for their object. These are the cases where the :ref:`AnimationTree "
"<class_AnimationTree>` shines. One can find an in-depth guide on using the "
"AnimationTree :ref:`here <doc_animation_tree>`."
msgstr ""
"Несмотря на то, что для разработки каждой отдельной последовательности "
"анимации для игры нужен AnimationPlayer, также может быть полезно "
"комбинировать анимации для смешивания, то есть для обеспечения плавных "
"переходов между этими анимациями. Также может существовать иерархическая "
"структура между анимациями, которую человек планирует для своего объекта. "
"Это случаи, когда светится :ref:`AnimationTree <class_AnimationTree>`. Можно "
"найти подробное руководство по использованию AnimationTree :ref:`здесь "
"<doc_animation_tree>`."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
