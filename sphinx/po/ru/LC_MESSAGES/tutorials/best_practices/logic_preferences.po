# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Logic preferences"
msgstr "Настройки логики"

msgid ""
"Ever wondered whether one should approach problem X with strategy Y or Z? "
"This article covers a variety of topics related to these dilemmas."
msgstr ""
"Вы когда-нибудь задумывались, следует ли подходить к проблеме X со "
"стратегией Y или Z? В этой статье рассматриваются различные темы, связанные "
"с этими дилеммами."

msgid "Loading vs. preloading"
msgstr "Загрузка и предварительная загрузка"

msgid ""
"In GDScript, there exists the global :ref:`preload "
"<class_@GDScript_method_preload>` method. It loads resources as early as "
"possible to front-load the \"loading\" operations and avoid loading "
"resources while in the middle of performance-sensitive code."
msgstr ""
"В GDScript существует глобальный метод :ref:`preload <class_ @ "
"GDScript_method_preload>`. Он загружает ресурсы как можно раньше, чтобы "
"предварительно загрузить «загрузочные» операции и избежать загрузки ресурсов "
"в середине кода, чувствительного к производительности."

msgid ""
"Its counterpart, the :ref:`load <class_@GDScript_method_load>` method, loads "
"a resource only when it reaches the load statement. That is, it will load a "
"resource in-place which can cause slowdowns when it occurs in the middle of "
"sensitive processes. The ``load`` function is also an alias for :ref:"
"`ResourceLoader.load(path) <class_ResourceLoader_method_load>` which is "
"accessible to *all* scripting languages."
msgstr ""
"Его аналог, метод :ref:`load <class_ @ GDScript_method_load>`, загружает "
"ресурс только тогда, когда он достигает оператора load. То есть он загрузит "
"ресурс на месте, что может вызвать замедление, когда это произойдет в "
"середине важных процессов. Функция ``load`` также является псевдонимом для :"
"ref:`ResourceLoader.load(path) <class_ResourceLoader_method_load>`, который "
"доступен для *всех* языков сценариев."

msgid ""
"So, when exactly does preloading occur versus loading, and when should one "
"use either? Let's see an example:"
msgstr ""
"Итак, когда именно происходит предварительная загрузка во время загрузки и "
"когда следует ее использовать? Посмотрим на пример:"

msgid ""
"Preloading allows the script to handle all the loading the moment one loads "
"the script. Preloading is useful, but there are also times when one doesn't "
"wish for it. To distinguish these situations, there are a few things one can "
"consider:"
msgstr ""
"Предварительная загрузка позволяет сценарию обрабатывать всю загрузку в "
"момент загрузки сценария. Предварительная загрузка полезна, но бывают "
"случаи, когда этого не хочется. Чтобы различать эти ситуации, следует учесть "
"несколько вещей:"

msgid ""
"If one cannot determine when the script might load, then preloading a "
"resource, especially a scene or script, could result in further loads one "
"does not expect. This could lead to unintentional, variable-length load "
"times on top of the original script's load operations."
msgstr ""
"Если невозможно определить, когда может загрузиться сценарий, то "
"предварительная загрузка ресурса, особенно сцены или сценария, может "
"привести к дальнейшим загрузкам, которых нельзя было ожидать. Это может "
"привести к непреднамеренной загрузке переменной длины поверх операций "
"загрузки исходного сценария."

msgid ""
"If something else could replace the value (like a scene's exported "
"initialization), then preloading the value has no meaning. This point isn't "
"a significant factor if one intends to always create the script on its own."
msgstr ""
"Если что-то еще может заменить значение (например, экспортированная "
"инициализация сцены), то предварительная загрузка значения не имеет смысла. "
"Этот момент не является существенным фактором, если кто-то намеревается "
"всегда создавать сценарий самостоятельно."

msgid ""
"If one wishes only to 'import' another class resource (script or scene), "
"then using a preloaded constant is often the best course of action. However, "
"in exceptional cases, one may wish not to do this:"
msgstr ""
"Если кто-то хочет только 'импортировать' ресурс другого класса (скрипт или "
"сцену), то использование предварительно загруженной константы часто является "
"лучшим способом действий. Однако в исключительных случаях одно мое желание "
"не делать этого:"

msgid ""
"If the 'imported' class is liable to change, then it should be a property "
"instead, initialized either using an ``export`` or a ``load`` (and perhaps "
"not even initialized until later)."
msgstr ""
"Если 'импортированный' класс подлежит изменению, то вместо этого он должен "
"быть свойством, инициализированным либо с помощью ``export``, либо ``load`` "
"(и, возможно, даже не инициализированного позже)."

msgid ""
"If the script requires a great many dependencies, and one does not wish to "
"consume so much memory, then one may wish to, load and unload various "
"dependencies at runtime as circumstances change. If one preloads resources "
"into constants, then the only way to unload these resources would be to "
"unload the entire script. If they are instead loaded properties, then one "
"can set them to ``null`` and remove all references to the resource entirely "
"(which, as a :ref:`Reference <class_Reference>`-extending type, will cause "
"the resources to delete themselves from memory)."
msgstr ""
"Если для сценария требуется очень много зависимостей, и кто-то не желает "
"расходовать так много памяти, то может потребоваться загружать и выгружать "
"различные зависимости во время выполнения по мере изменения обстоятельств. "
"Если предварительно загрузить ресурсы в константы, то единственный способ "
"выгрузить эти ресурсы — это выгрузить весь сценарий. Если вместо этого они "
"загружают свойства, то можно установить для них значение `` null `` и "
"полностью удалить все ссылки на ресурс (что, как расширяющийся тип :ref:"
"`Reference <class_Reference>`, приведет к самоудалению ресурсов из памяти)."

msgid "Large levels: static vs. dynamic"
msgstr "Большие уровни: статические против динамических"

msgid ""
"If one is creating a large level, which circumstances are most appropriate? "
"Should they create the level as one static space? Or should they load the "
"level in pieces and shift the world's content as needed?"
msgstr ""
"Если кто-нибудь создает большой уровень, какие обстоятельства являются "
"самыми подходящими? Должны ли они создавать уровень как одно статичное "
"пространство? Или они должны загружать уровень по частям и перемещать "
"содержимое мира по мере необходимости?"

msgid ""
"Well, the simple answer is , \"when the performance requires it.\" The "
"dilemma associated with the two options is one of the age-old programming "
"choices: does one optimize memory over speed, or vice versa?"
msgstr ""
"Что ж, простой ответ: «когда этого требует производительность». Дилемма, "
"связанная с этими двумя вариантами, является одним из старых вопросов "
"программирования: оптимизировать ли память вместо скорости или наоборот?"

msgid ""
"The naive answer is to use a static level that loads everything at once. "
"But, depending on the project, this could consume a large amount of memory. "
"Wasting users' RAM leads to programs running slow or outright crashing from "
"everything else the computer tries to do at the same time."
msgstr ""
"Наивный ответ - использовать статический уровень, который загружает все "
"сразу. Но, в зависимости от проекта, это может потреблять большой объем "
"памяти. Исчерпание оперативной памяти пользователей приводит к тому, что "
"программы работают медленно или полностью вылетают из-за всего остального, "
"что компьютер пытается делать одновременно."

msgid ""
"No matter what, one should break larger scenes into smaller ones (to aid in "
"reusability of assets). Developers can then design a node that manages the "
"creation/loading and deletion/unloading of resources and nodes in real-time. "
"Games with large and varied environments or procedurally generated elements "
"often implement these strategies to avoid wasting memory."
msgstr ""
"Несмотря ни на что, нужно разбивать большие сцены на более мелкие (чтобы "
"способствовать повторному использованию ресурсов). Затем разработчики могут "
"проектировать узел, который управляет созданием/загрузкой и удалением/"
"выгрузкой ресурсов и узлов в режиме реального времени. Игры с большими и "
"разнообразными средами или процедурно генерируемыми элементами часто "
"реализуют эти стратегии, чтобы избежать траты памяти."

msgid ""
"On the flip side, coding a dynamic system is more complex, i.e. uses more "
"programmed logic, which results in opportunities for errors and bugs. If one "
"isn't careful, they can develop a system that bloats the technical debt of "
"the application."
msgstr ""
"С другой стороны, кодирование динамической системы является более сложным, т."
"к. использует больше программируемой логики, которая приводит к возможностям "
"для ошибок и багов. Если кто-то не будет осторожен, они могут разработать "
"систему, которая раздувает технический долг приложения."

msgid "As such, the best options would be..."
msgstr "Таким образом, лучшими вариантами были бы ..."

msgid "To use a static level for smaller games."
msgstr "Использовать статические уровни для небольших игр."

msgid ""
"If one has the time/resources on a medium/large game, create a library or "
"plugin that can code the management of nodes and resources. If refined over "
"time, so as to improve usability and stability, then it could evolve into a "
"reliable tool across projects."
msgstr ""
"Если у вас есть время / ресурсы для средней / большой игры, создайте "
"библиотеку или плагин, который может кодировать управление узлами и "
"ресурсами. Если со временем доработать, чтобы улучшить удобство "
"использования и стабильность, то он может превратиться в надежный инструмент "
"для всех проектов."

msgid ""
"Code the dynamic logic for a medium/large game because one has the coding "
"skills, but not the time or resources to refine the code (game's gotta get "
"done). Could potentially refactor later to outsource the code into a plugin."
msgstr ""
"Кодируйте динамическую логику для средней / большой игры, потому что у вас "
"есть навыки кодирования, но нет времени или ресурсов для уточнения кода "
"(игра должна быть завершена). Позже потенциально можно провести рефакторинг, "
"чтобы передать код в плагин."

msgid ""
"For an example of the various ways one can swap scenes around at runtime, "
"please see the :ref:`\"Change scenes manually\" "
"<doc_change_scenes_manually>` documentation."
msgstr ""
"Примеры различных способов, которыми можно менять местами сцены во время "
"выполнения, можно найти в документации :ref:`«Изменить сцены вручную» "
"<doc_change_scenes_manually>`."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
