# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using ImmediateGeometry"
msgstr "Использование ImmediateGeometry"

msgid ""
"Unlike the SurfaceTool or ArrayMesh, :ref:`ImmediateGeometry "
"<class_ImmediateGeometry>` is an actual node. Being a node makes it quick to "
"add to a scene and get visual output. It uses an OpenGL 1.x-style API like "
"SurfaceTool, but it's actually designed to create meshes on the fly."
msgstr ""
"В отличие от SurfaceTool или ArrayMesh, :ref:`ImmediateGeometry "
"<class_ImmediateGeometry>` является фактическим узлом. Наличие узла "
"позволяет быстро добавлять элементы в сцену и получать визуальный результат. "
"Он использует API в стиле OpenGL 1.x, такой как SurfaceTool, но на самом "
"деле он предназначен для создания сеток на лету."

msgid ""
"Generating complex geometry (several thousand vertices) with this node is "
"inefficient, even if it's done only once. Instead, it is designed to "
"generate simple geometry that changes every frame."
msgstr ""
"Генерация сложной геометрии (несколько тысяч вершин) с помощью этого узла "
"неэффективна, даже если это делается только один раз. Вместо этого он "
"предназначен для создания простой геометрии, которая меняется в каждом кадре."

msgid ""
"Before starting, you should clear the geometry by calling ``clear()``. This "
"ensures that you are not building upon the geometry from the previous frame. "
"If you want to keep geometry between frames, do not call ``clear()``."
msgstr ""
"Перед началом работы вы должны очистить геометрию, вызвав ``clear()``. Это "
"гарантирует, что вы не опираетесь на геометрию предыдущего кадра. Если вы "
"хотите сохранить геометрию между кадрами, не вызывайте ``clear()``."

msgid ""
"To begin generating geometry you must call ``begin()``. ``begin()`` takes a "
"``PrimitiveType`` as an argument. ``PrimitiveType`` is an OpenGL concept "
"that instructs the GPU how to arrange the primitive based on the vertices "
"given whether it is triangles, lines, points, etc. A complete list can be "
"found under the :ref:`Mesh <class_mesh>` class reference page."
msgstr ""
"Чтобы начать генерировать геометрию, вы должны вызвать ``begin()``. "
"``begin()`` принимает ``PrimitiveType`` в качестве аргумента. "
"``PrimitiveType`` - это концепция OpenGL, которая инструктирует графический "
"процессор, как расположить примитив на основе заданных вершин, будь то "
"треугольники, линии, точки и т.д. Полный список можно найти на странице "
"ссылок на классы :ref:`Mesh <class_mesh>`."

msgid ""
"Once you have called ``begin()`` you are ready to start adding vertices. You "
"add vertices one at a time. First you add vertex specific attributes such as "
"normals or UVs using ``set_****()`` (e.g. ``set_normal()``). Then you call "
"``add_vertex()`` to add a vertex with those attributes. For example:"
msgstr ""
"После того, как вы вызвали ``begin()``, вы готовы начать добавлять вершины. "
"Вы добавляете вершины по одной за раз. Сначала вы добавляете атрибуты, "
"специфичные для вершин, такие как нормали или UVS, используя ``set_****()`` "
"(например, ``set_normal()``). Затем вы вызываете ``add_vertex()``, чтобы "
"добавить вершину с этими атрибутами. Например:"

msgid ""
"Only attributes added before the call to ``add_vertex()`` will be included "
"in that vertex."
msgstr ""
"В эту вершину будут включены только атрибуты, добавленные до вызова "
"``add_vertex()``."

msgid ""
"Finally, once you have added all your vertices call ``end()`` to signal that "
"you have finished generating the mesh."
msgstr ""
"Наконец, как только вы добавили все свои вершины, вызовите ``end()``, чтобы "
"сигнализировать о том, что вы закончили генерировать сетку."

msgid "The example code below draws a single triangle."
msgstr "Приведенный ниже пример кода рисует один треугольник."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
