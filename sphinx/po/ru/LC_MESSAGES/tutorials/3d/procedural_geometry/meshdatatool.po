# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the MeshDataTool"
msgstr "Использование MeshDataTool"

msgid ""
"The :ref:`MeshDataTool <class_meshdatatool>` is not used to generate "
"geometry. But it is helpful for dynamically altering geometry, for example "
"if you want to write a script to tessellate, simplify, or deform meshes."
msgstr ""
"Инструмент :ref:`MeshDataTool <class_meshdatatool>` не используется для "
"создания геометрии. Но он полезен для динамического изменения геометрии, "
"например, если вы хотите написать сценарий для тесселяции, упрощения или "
"деформации сетки."

msgid ""
"The MeshDataTool is not as fast as altering arrays directly using ArrayMesh. "
"However, it provides more information and tools to work with meshes than the "
"ArrayMesh does. When the MeshDataTool is used, it calculates mesh data that "
"is not available in ArrayMeshes such as faces and edges, which are necessary "
"for certain mesh algorithms. If you do not need this extra information then "
"it may be better to use an ArrayMesh."
msgstr ""
"MeshDataTool работает не так быстро, как изменение массивов непосредственно "
"с помощью ArrayMesh. Однако он предоставляет больше информации и "
"инструментов для работы с сетками, чем ArrayMesh. Когда используется "
"MeshDataTool, он вычисляет данные сетки, которые недоступны в массивах, "
"таких как грани и ребра, которые необходимы для определенных алгоритмов "
"сетки. Если вам не нужна эта дополнительная информация, то, возможно, лучше "
"использовать ArrayMesh."

msgid ""
"MeshDataTool can only be used on Meshes that use the PrimitiveType ``Mesh."
"PRIMITIVE_TRIANGLES``."
msgstr ""
"MeshDataTool можно использовать только в сетках, использующих примитивный "
"тип `Mesh.PRIMITIVE_TRIANGLES`."

msgid ""
"We initialize the MeshDataTool from an ArrayMesh by calling "
"``create_from_surface()``. If there is already data initialized in the "
"MeshDataTool, calling ``create_from_surface()`` will clear it for you. "
"Alternatively, you can call ``clear()`` yourself before re-using the "
"MeshDataTool."
msgstr ""
"Предположим, что сетка хранится в ArrayMesh с именем `mesh`. Затем мы "
"инициализируем MeshDataTool из `mesh` вызовом `create_from_surface()`. Если "
"в MeshDataTool уже есть инициализированные данные, вызов "
"`create_from_surface()` очистит их. В качестве альтернативы, вы можете "
"вызвать `clear()` самостоятельно перед повторным использованием MeshDataTool."

msgid ""
"In the examples below, assume an ArrayMesh called ``mesh`` has already been "
"created. See :ref:`ArrayMesh tutorial <doc_arraymesh>` for an example of "
"mesh generation."
msgstr ""
"В приведенных ниже примерах предполагается, что сетка ArrayMesh под "
"названием ``mesh`` уже создана. Пример создания сетки см. в :ref:`ArrayMesh "
"tutorial <doc_arraymesh>`."

msgid ""
"``create_from_surface()`` uses the vertex arrays from the ArrayMesh to "
"calculate two additional arrays, one for edges and one for faces, for a "
"total of three arrays."
msgstr ""
"``create_from_surface()`` использует массивы вершин из ArrayMesh для "
"вычисления двух дополнительных массивов, одного для рёбер и одного для "
"граней, всего три массива."

msgid ""
"An edge is a connection between any two vertices. Each edge in the edge "
"array contains a reference to the two vertices it is composed of, and up to "
"two faces that it is contained within."
msgstr ""
"Ребро - это соединение между любыми двумя вершинами. Каждое ребро в массиве "
"ребер содержит ссылку на две вершины, из которых оно состоит, и до двух "
"граней, внутри которых оно содержится."

msgid ""
"A face is a triangle made up of three vertices and three corresponding "
"edges. Each face in the face array contains a reference to the three "
"vertices and three edges it is composed of."
msgstr ""
"Грань - это треугольник, состоящий из трех вершин и трех соответствующих "
"ребер. Каждая грань в массиве граней содержит ссылку на три вершины и три "
"ребра, из которых она состоит."

msgid ""
"The vertex array contains edge, face, normal, color, tangent, uv, uv2, bone, "
"and weight information connected with each vertex."
msgstr ""
"Массив вершин содержит информацию о грани, лице, нормали, цвете, "
"касательной, uv, uv2, кости и весе, связанную с каждой вершиной."

msgid ""
"To access information from these arrays you use a function of the form "
"``get_****()``:"
msgstr ""
"Для доступа к информации из этих массивов вы используете функцию вида "
"`get_****()`:"

msgid ""
"What you choose to do with these functions is up to you. A common use case "
"is to iterate over all vertices and transform them in some way:"
msgstr ""
"То, что вы решите делать с этими функциями, зависит от вас. Распространенным "
"вариантом использования является перебор всех вершин и их преобразование "
"каким-либо образом:"

msgid ""
"These modifications are not done in place on the ArrayMesh. If you are "
"dynamically updating an existing ArrayMesh, first delete the existing "
"surface before adding a new one using :ref:`commit_to_surface() "
"<class_meshdatatool_method_commit_to_surface>`:"
msgstr ""
"Эти модификации не выполняются на месте ArrayMesh. Если вы динамически "
"обновляете существующий ArrayMesh, сначала удалите существующую поверхность, "
"прежде чем добавлять новую, используя :ref:`commit_to_surface() "
"<class_meshdatatool_method_commit_to_surface>`:"

msgid ""
"Below is a complete example that turns a spherical mesh called ``mesh`` into "
"a randomly deformed blob complete with updated normals and vertex colors. "
"See :ref:`ArrayMesh tutorial <doc_arraymesh>` for how to generate the base "
"mesh."
msgstr ""
"Ниже приведен пример, который превращает сферическую сетку ``mesh`` в "
"произвольно деформированный шар с обновленными нормалями и цветами вершин. "
"Как сгенерировать базовую сетку смотрите в :ref:`ArrayMesh tutorial "
"<doc_arraymesh>`."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
