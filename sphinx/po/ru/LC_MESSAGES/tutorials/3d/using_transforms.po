# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using 3D transforms"
msgstr "Использование 3D-трансформаций"

msgid "Introduction"
msgstr "Введение"

msgid ""
"If you have never made 3D games before, working with rotations in three "
"dimensions can be confusing at first. Coming from 2D, the natural way of "
"thinking is along the lines of *\"Oh, it's just like rotating in 2D, except "
"now rotations happen in X, Y and Z\"*."
msgstr ""
"Если вы никогда раньше не делали 3D-игр, то работа с вращением в трёх "
"измерениях может сначала сбить с толку. Выходя из 2D, естественный образ "
"мышления лежит по линии *\"О, это как вращение в 2D, за исключением того, "
"что теперь вращения происходят в X, Y и Z \"*."

msgid ""
"At first, this seems easy. For simple games, this way of thinking may even "
"be enough. Unfortunately, it's often incorrect."
msgstr ""
"Поначалу это кажется простым. Для простых игр такого образа мышления может "
"быть даже достаточно. К сожалению, зачастую это неверно."

msgid ""
"Angles in three dimensions are most commonly referred to as \"Euler Angles\"."
msgstr "Углы в трёх измерениях чаще всего называют «углами Эйлера»."

msgid ""
"Euler angles were introduced by mathematician Leonhard Euler in the early "
"1700s."
msgstr ""
"Углы Эйлера были описаны математиком Леонардом Эйлером в начале 1700-х годов."

msgid ""
"This way of representing 3D rotations was groundbreaking at the time, but it "
"has several shortcomings when used in game development (which is to be "
"expected from a guy with a funny hat). The idea of this document is to "
"explain why, as well as outlining best practices for dealing with transforms "
"when programming 3D games."
msgstr ""
"Такой способ представления трехмерных вращений был новаторским в то время, "
"но у него есть несколько недостатков при использовании в разработке игр "
"(чего и следовало ожидать от парня в забавной шляпе). Идея этого документа "
"состоит в том, чтобы объяснить почему, а также в общих чертах изложить "
"передовые методы работы с преобразованиями при программировании 3D-игр."

msgid "Problems of Euler angles"
msgstr "Проблемы углов Эйлера"

msgid ""
"While it may seem intuitive that each axis has a rotation, the truth is that "
"it's just not practical."
msgstr ""
"Хотя может показаться интуитивно понятным, что каждая ось вращается, на "
"самом деле это просто непрактично."

msgid "Axis order"
msgstr "Порядок осей координат"

msgid ""
"The main reason for this is that there isn't a *unique* way to construct an "
"orientation from the angles. There isn't a standard mathematical function "
"that takes all the angles together and produces an actual 3D rotation. The "
"only way an orientation can be produced from angles is to rotate the object "
"angle by angle, in an *arbitrary order*."
msgstr ""
"Основная причина этого в том, что не существует *уникального* способа "
"построения ориентации по углам. Не существует стандартной математической "
"функции, которая складывала бы все углы вместе и производила бы фактическое "
"трехмерное вращение. Единственный способ получить ориентацию по углам - это "
"повернуть объект на угол в *произвольном порядке*."

msgid ""
"This could be done by first rotating in *X*, then *Y* and then in *Z*. "
"Alternatively, you could first rotate in *Y*, then in *Z* and finally in "
"*X*. Anything works, but depending on the order, the final orientation of "
"the object will *not necessarily be the same*. Indeed, this means that there "
"are several ways to construct an orientation from 3 different angles, "
"depending on *the order of the rotations*."
msgstr ""
"Это можно сделать, сначала повернув *X*, затем *Y*, а затем *Z*. В качестве "
"альтернативы вы можете сначала повернуть по *Y*, затем по *Z* и, наконец, по "
"*X*. Все работает, но в зависимости от порядка окончательная ориентация "
"объекта *не обязательно будет одинаковой*. Это означает, что есть несколько "
"способов построить ориентацию с 3 разных углов, в зависимости от *порядка "
"поворотов*."

msgid ""
"Following is a visualization of rotation axes (in X, Y, Z order) in a gimbal "
"(from Wikipedia). As you can see, the orientation of each axis depends on "
"the rotation of the previous one:"
msgstr ""
"Ниже представлена визуализация осей вращения (в порядке X, Y, Z) в подвесе "
"(из Википедии). Как видите, ориентация каждой оси зависит от поворота "
"предыдущей:"

msgid ""
"You may be wondering how this affects you. Let's look at a practical example:"
msgstr ""
"Вам может быть интересно, как это на вас влияет. Давайте посмотрим на "
"практический пример:"

msgid ""
"Imagine you are working on a first-person controller (e.g. an FPS game). "
"Moving the mouse left and right controls your view angle parallel to the "
"ground, while moving it up and down moves the player's view up and down."
msgstr ""
"Представьте, что вы работаете над контроллером от первого лица (например, "
"над игрой FPS). Перемещение мыши влево и вправо управляет углом обзора "
"параллельно земле, а перемещение её вверх и вниз перемещает взгляд игрока "
"вверх и вниз."

msgid ""
"In this case to achieve the desired effect, rotation must be applied first "
"in the *Y* axis (\"up\" in this case, since Godot uses a \"Y-Up\" "
"orientation), followed by rotation in the *X* axis."
msgstr ""
"В этом случае для достижения желаемого эффекта сначала необходимо применить "
"вращение по оси *Y* (в данном случае \"вверх\", поскольку Godot использует "
"ориентацию \"Y-вверх\"), а затем - по оси *X*."

msgid ""
"If we were to apply rotation in the *X* axis first, and then in *Y*, the "
"effect would be undesired:"
msgstr ""
"Если бы мы сначала применили вращение по оси *X*, а затем по *Y*, эффект был "
"бы нежелательным:"

msgid ""
"Depending on the type of game or effect desired, the order in which you want "
"axis rotations to be applied may differ. Therefore, applying rotations in X, "
"Y, and Z is not enough: you also need a *rotation order*."
msgstr ""
"В зависимости от типа игры или желаемого эффекта порядок, в котором вы "
"хотите применить вращение оси, может отличаться. Следовательно, применения "
"вращения по осям X, Y и Z недостаточно: вам также понадобится *порядок "
"вращения*."

msgid "Interpolation"
msgstr "Интерполяция"

msgid ""
"Another problem with using Euler angles is interpolation. Imagine you want "
"to transition between two different camera or enemy positions (including "
"rotations). One logical way to approach this is to interpolate the angles "
"from one position to the next. One would expect it to look like this:"
msgstr ""
"Еще одна проблема с использованием углов Эйлера - интерполяция. Представьте, "
"что вы хотите переключаться между двумя разными позициями камеры или врага "
"(включая поворот). Один из логических способов приблизиться к этому - "
"интерполировать углы от одного положения к другому. Можно было бы ожидать, "
"что это будет выглядеть так:"

msgid "But this does not always have the expected effect when using angles:"
msgstr "Но это не всегда дает ожидаемый эффект при использовании углов:"

msgid "The camera actually rotated the opposite direction!"
msgstr "На самом деле камера вращалась в противоположном направлении!"

msgid "There are a few reasons this may happen:"
msgstr "Это может произойти по нескольким причинам:"

msgid ""
"Rotations don't map linearly to orientation, so interpolating them does not "
"always result in the shortest path (i.e., to go from ``270`` to ``0`` "
"degrees is not the same as going from ``270`` to ``360``, even though the "
"angles are equivalent)."
msgstr ""
"Повороты не отображаются линейно на ориентацию, поэтому их интерполяция не "
"всегда приводит к кратчайшему пути (т.е. Переход от ``270`` к ``0`` градусов "
"- не то же самое, что переход от ``270`` к ``360``, даже если углы "
"эквивалентны)."

msgid ""
"Gimbal lock is at play (first and last rotated axis align, so a degree of "
"freedom is lost). See `Wikipedia's page on Gimbal Lock <https://en.wikipedia."
"org/wiki/Gimbal_lock>`_ for a detailed explanation of this problem."
msgstr ""
"Блокировка подвеса (первая и последняя повернутые оси совпадают, поэтому "
"степень свободы теряется). См. страницу `Википедии о Gimbal Lock <https://en."
"wikipedia.org/wiki/Gimbal_lock>`_ для подробного объяснения этой проблемы."

msgid "Say no to Euler angles"
msgstr "Скажи нет углам Эйлера"

msgid ""
"The result of all this is that you should **not use** the ``rotation`` "
"property of :ref:`class_Spatial` nodes in Godot for games. It's there to be "
"used mainly in the editor, for coherence with the 2D engine, and for simple "
"rotations (generally just one axis, or even two in limited cases). As much "
"as you may be tempted, don't use it."
msgstr ""
"В результате вы **не должны** использовать **свойство ``rotation`` узлов :"
"ref:`class_Spatial` в Godot для игр. Он предназначен в основном для "
"использования в редакторе для согласования с 2D-движком и для простых "
"вращений (обычно только одна ось или даже две в ограниченных случаях). Как "
"ни соблазнительно, не используйте его."

msgid "Instead, there is a better way to solve your rotation problems."
msgstr "Есть более удобный способ решения проблемы с поворотом."

msgid "Introducing transforms"
msgstr "Введение в трансформации"

msgid ""
"Godot uses the :ref:`class_Transform` datatype for orientations. Each :ref:"
"`class_Spatial` node contains a ``transform`` property which is relative to "
"the parent's transform, if the parent is a Spatial-derived type."
msgstr ""
"Godot использует тип данных :ref:`class_Transform` для ориентации. Каждый "
"узел :ref:`class_Spatial` имеет свойство ``transform``, которое "
"отсчитывается от родительской трансформации, если родительский тип является "
"производным от Spatial."

msgid ""
"It is also possible to access the world coordinate transform via the "
"``global_transform`` property."
msgstr ""
"Также возможно получить доступ к трансформациям в мировых координатах через "
"свойство ``global_transform``."

msgid ""
"A transform has a :ref:`class_Basis` (transform.basis sub-property), which "
"consists of three :ref:`class_Vector3` vectors. These are accessed via the "
"``transform.basis`` property and can be accessed directly by ``transform."
"basis.x``, ``transform.basis.y``, and ``transform.basis.z``. Each vector "
"points in the direction its axis has been rotated, so they effectively "
"describe the node's total rotation. The scale (as long as it's uniform) can "
"also be inferred from the length of the axes. A *basis* can also be "
"interpreted as a 3x3 matrix and used as ``transform.basis[x][y]``."
msgstr ""
"Преобразование имеет :ref:`class_Basis` (подсвойство transform.basis), "
"которое состоит из трех векторов :ref:`class_Vector3`. К ним можно получить "
"доступ через свойство ``transform.basis``, либо напрямую к каждой оси через "
"``transform.basis.x``, ``transform.basis.y`` и ``transform.basis.z``. Каждый "
"вектор указывает направление вращения его оси, поэтому они эффективно "
"описывают полное вращение узла. Масштаб (если он однородный) также можно "
"определить по длине осей. *Базис* также можно интерпретировать как матрицу "
"3x3 и использовать как ``transform.basis[x][y]``."

msgid "A default basis (unmodified) is akin to:"
msgstr "Базис по умолчанию (без изменений) похож на:"

msgid "This is also an analog of a 3x3 identity matrix."
msgstr "Это также аналог единичной матрицы 3x3."

msgid ""
"Following the OpenGL convention, ``X`` is the *Right* axis, ``Y`` is the "
"*Up* axis and ``Z`` is the *Forward* axis."
msgstr ""
"По соглашениям, принятым в OpenGL, ``X`` - это ось *вправо*, ``Y`` - ось "
"*вверх*, а ``Z`` - ось *вперёд*."

msgid ""
"Together with the *basis*, a transform also has an *origin*. This is a "
"*Vector3* specifying how far away from the actual origin ``(0, 0, 0)`` this "
"transform is. Combining the *basis* with the *origin*, a *transform* "
"efficiently represents a unique translation, rotation, and scale in space."
msgstr ""
"Вместе с *базисом* преобразование также имеет *точку опоры*. Это *Vector3*, "
"определяющий, насколько далеко от фактической точки опоры ``(0, 0, 0)`` "
"находится это преобразование. Комбинируя *базис* с *точкой опоры*, "
"*преобразование* эффективно представляет собой уникальный перенос, поворот и "
"масштаб в пространстве."

msgid ""
"One way to visualize a transform is to look at an object's 3D gizmo while in "
"\"local space\" mode."
msgstr ""
"Один из способов визуализировать преобразование - это посмотреть на "
"трехмерный гизмо объекта в режиме \"локального пространства\"."

msgid ""
"The gizmo's arrows show the ``X``, ``Y``, and ``Z`` axes (in red, green, and "
"blue respectively) of the basis, while the gizmo's center is at the object's "
"origin."
msgstr ""
"Стрелки гизмо показывают оси ``X``, ``Y`` и ``Z`` (красным, зелёным и синим "
"цветом соответственно) основы, а центр гизмо находится в точке опоры объекта."

msgid ""
"For more information on the mathematics of vectors and transforms, please "
"read the :ref:`doc_vector_math` tutorials."
msgstr ""
"Для получения дополнительной информации о математике векторов и "
"преобразований, пожалуйста, прочтите руководства :ref:`doc_vector_math`."

msgid "Manipulating transforms"
msgstr "Управление преобразованиями"

msgid ""
"Of course, transforms are not as straightforward to manipulate as angles and "
"have problems of their own."
msgstr ""
"Конечно, преобразованиями не так просто манипулировать, как углами, и у них "
"есть свои собственные проблемы."

msgid ""
"It is possible to rotate a transform, either by multiplying its basis by "
"another (this is called accumulation), or by using the rotation methods."
msgstr ""
"Можно повернуть преобразование либо путем умножения его базиса на другой "
"(это называется накоплением), либо с помощью методов поворота."

msgid "A method in Spatial simplifies this:"
msgstr "Метод в Spatial упрощает это:"

msgid "This rotates the node relative to the parent node."
msgstr "Таким образом поворачивается узел относительно родительского узла."

msgid ""
"To rotate relative to object space (the node's own transform), use the "
"following:"
msgstr ""
"Для поворота относительно пространства объекта (собственное преобразование "
"узла) используйте следующее:"

msgid "Precision errors"
msgstr "Ошибки точности"

msgid ""
"Doing successive operations on transforms will result in a loss of precision "
"due to floating-point error. This means the scale of each axis may no longer "
"be exactly ``1.0``, and they may not be exactly ``90`` degrees from each "
"other."
msgstr ""
"Выполнение последовательных операций с преобразованиями приведет к потере "
"точности из-за ошибок вычислений с плавающей запятой. Это означает, что "
"масштаб каждой оси больше не может быть строго ``1.0``, и они могут не быть "
"повёрнуты строго на ``90`` градусов относительно друг от друга."

msgid ""
"If a transform is rotated every frame, it will eventually start deforming "
"over time. This is unavoidable."
msgstr ""
"Если поворот осуществляется каждый кадр, со временем накапливается ошибка "
"точности. Это неизбежно."

msgid ""
"There are two different ways to handle this. The first is to "
"*orthonormalize* the transform after some time (maybe once per frame if you "
"modify it every frame):"
msgstr ""
"Есть два разных способа справиться с этим. Первый - *ортонормировать* "
"преобразование через некоторое время (возможно, один раз за кадр, если вы "
"изменяете его каждый кадр):"

msgid ""
"This will make all axes have ``1.0`` length again and be ``90`` degrees from "
"each other. However, any scale applied to the transform will be lost."
msgstr ""
"В результате все оси снова будут иметь длину ``1.0`` и будут повёрнуты на "
"``90`` градусов друг относительно друга. Однако любой масштаб, примененный к "
"преобразованию, будет утерян."

msgid ""
"It is recommended you not scale nodes that are going to be manipulated; "
"scale their children nodes instead (such as MeshInstance). If you absolutely "
"must scale the node, then re-apply it at the end:"
msgstr ""
"Рекомендуется не масштабировать узлы, которыми будут манипулировать; вместо "
"этого масштабируйте их дочерние узлы (например, MeshInstance). Если вам "
"абсолютно необходимо масштабировать узел, повторно примените его в конце:"

msgid "Obtaining information"
msgstr "Получение информации"

msgid ""
"You might be thinking at this point: **\"Ok, but how do I get angles from a "
"transform?\"**. The answer again is: you don't. You must do your best to "
"stop thinking in angles."
msgstr ""
"В этот момент вы можете подумать: **\"Хорошо, но как мне получить углы при "
"трансформации?\"**. И снова ответ: вам это не нужно. Вы должны любыми "
"способами избегать мыслей об углах."

msgid ""
"Imagine you need to shoot a bullet in the direction your player is facing. "
"Just use the forward axis (commonly ``Z`` or ``-Z``)."
msgstr ""
"Представьте, что вам нужно выстрелить в направлении, в котором смотрит ваш "
"игрок. Просто используйте ось, направленную вперёд (обычно ``Z`` или ``-Z``)."

msgid ""
"Is the enemy looking at the player? Use the dot product for this (see the :"
"ref:`doc_vector_math` tutorial for an explanation of the dot product):"
msgstr ""
"Враг смотрит на игрока? Используйте для этого скалярное произведение (см. "
"Руководство :ref:`doc_vector_math` для объяснения скалярного произведения):"

msgid "Strafe left:"
msgstr "Атака слева:"

msgid "Jump:"
msgstr "Прыжок:"

msgid "All common behaviors and logic can be done with just vectors."
msgstr ""
"Всё обычное поведение и логику можно реализовать с помощью одних только "
"векторов."

msgid "Setting information"
msgstr "Установка информации"

msgid ""
"There are, of course, cases where you want to set information to a "
"transform. Imagine a first person controller or orbiting camera. Those are "
"definitely done using angles, because you *do want* the transforms to happen "
"in a specific order."
msgstr ""
"Конечно, есть случаи, когда вы хотите установить информацию для "
"преобразования. Представьте себе контроллер от первого лица или движущуюся "
"по орбите камеру. Это определенно делается с использованием углов, потому "
"что вы *действительно хотите*, чтобы преобразования происходили в "
"определенном порядке."

msgid ""
"For such cases, keep the angles and rotations *outside* the transform and "
"set them every frame. Don't try to retrieve and re-use them because the "
"transform is not meant to be used this way."
msgstr ""
"В таких случаях сохраняйте углы и повороты *вне* преобразования и "
"устанавливайте их каждый кадр. Не пытайтесь получить и повторно использовать "
"их, потому что преобразование не предназначено для использования таким "
"образом."

msgid "Example of looking around, FPS style:"
msgstr "Пример осмотра вокруг в стиле FPS:"

msgid ""
"As you can see, in such cases it's even simpler to keep the rotation "
"outside, then use the transform as the *final* orientation."
msgstr ""
"Как видите, в таких случаях ещё проще сохранить вращение снаружи, а затем "
"использовать преобразование в качестве *окончательной* ориентации."

msgid "Interpolating with quaternions"
msgstr "Интерполяция с кватернионами"

msgid ""
"Interpolating between two transforms can efficiently be done with "
"quaternions. More information about how quaternions work can be found in "
"other places around the Internet. For practical use, it's enough to "
"understand that pretty much their main use is doing a closest path "
"interpolation. As in, if you have two rotations, a quaternion will smoothly "
"allow interpolation between them using the closest axis."
msgstr ""
"Интерполяция между двумя преобразованиями может эффективно выполняться с "
"помощью кватернионов. Более подробную информацию о том, как работают "
"кватернионы, можно найти в других местах в Интернете. Для практического "
"использования достаточно понять, что в основном они используются для "
"интерполяции кратчайшего пути. Например, если у вас есть два поворота, "
"кватернион плавно выполнит интерполяцию между ними с использованием "
"ближайшей оси."

msgid "Converting a rotation to quaternion is straightforward."
msgstr "Преобразовать вращение в кватернион несложно."

msgid ""
"The :ref:`class_Quat` type reference has more information on the datatype "
"(it can also do transform accumulation, transform points, etc., though this "
"is used less often). If you interpolate or apply operations to quaternions "
"many times, keep in mind they need to be eventually normalized. Otherwise, "
"they will also suffer from numerical precision errors."
msgstr ""
"В документации :ref:`class_Quat` содержится дополнительная информация об "
"этом типе данных (он также может выполнять накопление преобразований, точки "
"преобразования и т.д., хотя это используется реже). Если вы много раз "
"интерполируете или применяете операции к кватернионам, имейте в виду, что "
"они должны быть в конечном итоге нормализованы. В противном случае они также "
"будут иметь ошибки числовой точности."

msgid ""
"Quaternions are useful when doing camera/path/etc. interpolations, as the "
"result will always be correct and smooth."
msgstr ""
"Кватернионы полезны при выполнении интерполяции камеры, пути и т.д., так как "
"результат всегда будет правильным и плавным."

msgid "Transforms are your friend"
msgstr "Трансформации - твои друзья"

msgid ""
"For most beginners, getting used to working with transforms can take some "
"time. However, once you get used to them, you will appreciate their "
"simplicity and power."
msgstr ""
"Для большинства новичков привыкание к работе с преобразованиями может занять "
"некоторое время. Однако, как только вы к ним привыкнете, вы оцените их "
"простоту и мощность."

msgid ""
"Don't hesitate to ask for help on this topic in any of Godot's `online "
"communities <https://godotengine.org/community>`_ and, once you become "
"confident enough, please help others!"
msgstr ""
"Не стесняйтесь обращаться за помощью по этой теме в любое из `онлайн-"
"сообществ Godot <https://godotengine.org/community>`_ и, как только вы "
"станете достаточно уверенными в теме, пожалуйста, помогите другим!"

msgid "Translation status"
msgstr "Translation status (статус перевода)"
