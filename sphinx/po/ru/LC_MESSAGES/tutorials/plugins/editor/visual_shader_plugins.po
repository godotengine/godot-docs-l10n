# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Visual Shader plugins"
msgstr "Плагин Визуального Шейдера"

msgid ""
"Visual Shader plugins are used to create custom :ref:`class_VisualShader` "
"nodes in GDScript."
msgstr ""

msgid ""
"The creation process is different from usual editor plugins. You do not need "
"to create a ``plugin.cfg`` file to register it; instead, create and save a "
"script file and it will be ready to use, provided the custom node is "
"registered with ``class_name``."
msgstr ""

#, fuzzy
msgid ""
"This short tutorial will explain how to make a Perlin-3D noise node "
"(original code from this `GPU noise shaders plugin <https://github.com/curly-"
"brace/Godot-3.0-Noise-Shaders/blob/master/assets/gpu_noise_shaders/"
"classic_perlin3d.tres>`_."
msgstr ""
"Это короткое руководство объяснит как сделать узел 3D-шума Перлина (код взят "
"из https://github.com/curly-brace/Godot-3.0-Noise-Shaders/blob/master/assets/"
"gpu_noise_shaders/classic_perlin3d.tres)."

#, fuzzy
msgid ""
"Create a Sprite and assign a :ref:`class_ShaderMaterial` to its material "
"slot:"
msgstr ""
"Создайте спрайт и присвойте :ref:`ShaderMaterial <class_ShaderMaterial>` к "
"слоту материала:"

#, fuzzy
msgid "Assign :ref:`class_VisualShader` to the shader slot of the material:"
msgstr ""
"Установите :ref:`VisualShader <class_VisualShader>` в шейдерный слот "
"материала:"

#, fuzzy
msgid ""
"Don't forget to change its mode to \"CanvasItem\" (if you are using a "
"Sprite):"
msgstr "Не забудьте изменить режим на CanvasItem (если вы используете спрайт):"

#, fuzzy
msgid ""
"Create a script which derives from :ref:`class_VisualShaderNodeCustom`. This "
"is all you need to initialize your plugin."
msgstr ""
"Создайте скрипт который наследуется от :ref:`VisualShaderNodeCustom "
"<class_VisualShaderNodeCustom>`. Это все что вам необходимо для "
"инициализации своего плагина."

#, fuzzy
msgid ""
"Save it and open the Visual Shader. You should see your new node type within "
"the member's dialog (if you can't see your new node, try restarting the "
"editor):"
msgstr ""
"Сохраните его и откройте визуальный шейдер. Вы должны увидеть новый узел "
"внутри диалога узлов (если вы не видите его, попытайтесь перезапустить "
"редактор):"

msgid "Place it on a graph and connect the required ports:"
msgstr "Поместите его в граф и соедините требуемые порты:"

#, fuzzy
msgid ""
"That is everything you need to do, as you can see it is easy to create your "
"own custom VisualShader nodes!"
msgstr ""
"Это все что необходимо сделать, как вы можете видеть это очень просто "
"сделать ваши собственные узлы Визуальных Шейдеров!"

msgid "Translation status"
msgstr "Translation status (статус перевода)"
