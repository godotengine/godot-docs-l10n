# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Idle and Physics Processing"
msgstr "Обработка физики"

msgid ""
"Games run in a loop. Each frame, you need to update the state of your game "
"world before drawing it on screen. Godot provides two virtual methods in the "
"Node class to do so: :ref:`Node._process() <class_Node_method__process>` "
"and :ref:`Node._physics_process() <class_Node_method__physics_process>`. If "
"you define either or both in a script, the engine will call them "
"automatically."
msgstr ""
"Игра запускается в цикле. Каждый кадр вам необходимо обновлять состояние "
"вашего игрового мира перед тем, как отрисовать его на экране. Godot "
"поддерживает два виртуальных метода в классе Node, чтоб сделать это: :ref:"
"`Node._process() <class_Node_method__process>` и :ref:`Node."
"_physics_process() <class_Node_method__physics_process>`. если вы определите "
"один или оба в скрипте, движок будет вызывать их автоматически."

msgid "There are two types of processing available to you:"
msgstr "Существует два типа обработки, которые доступны вам:"

msgid ""
"**Idle processing** allows you to run code that updates a node every frame, "
"as often as possible."
msgstr ""
"**Idle processing** позволяет вам запускать код, который обновляет узел "
"каждый кадр, так часто, как это возможно."

msgid ""
"**Physics processing** happens at a fixed rate, 60 times per second by "
"default. This is independent of your game's actual framerate, and keeps "
"physics running smoothly. You should use it for anything that involves the "
"physics engine, like moving a body that collides with the environment."
msgstr ""
"**Physics processing** происходит с фиксированной скоростью, 60 раз в "
"секунду по умолчанию. Это не зависит от фактической частоты кадров в вашей "
"игре и обеспечивает бесперебойную обработку физики. Вы должны использовать "
"это для всего, что предполагает использование физического движка, как "
"например движение тел, которые сталкиваются с окружением."

#, fuzzy
msgid ""
"You can activate idle processing by defining the ``_process()`` method in a "
"script. You can turn it off and back on by calling :ref:`Node.set_process() "
"<class_Node_method_set_process>`."
msgstr ""
"Обработка простоя начинается, когда метод :ref:`Node._process() "
"<class_Node_method__process>` найден в скрипте. Его можно отключить и "
"включить с помощью функции :ref:`Node.set_process() "
"<class_Node_method_set_process>`."

msgid "The engine calls this method every time it draws a frame:"
msgstr ""

#, fuzzy
msgid ""
"Keep in mind that the frequency at which the engine calls ``_process()`` "
"depends on your application's framerate, which varies over time and across "
"devices."
msgstr ""
"Важно помнить, что частота, с которой будет вызываться функция "
"``_process()``, зависит от количества кадров в секунду (FPS), на котором "
"работает ваше приложение. Эта скорость может изменяться с течением времени и "
"устройствами."

msgid ""
"The function's ``delta`` parameter is the time elapsed in seconds since the "
"previous call to ``_process()``. Use this parameter to make calculations "
"independent of the framerate. For example, you should always multiply a "
"speed value by ``delta`` to animate a moving object."
msgstr ""

msgid ""
"Physics processing works with a similar virtual function: "
"``_physics_process()``. Use it for calculations that must happen before each "
"physics step, like moving a character that collides with the game world. As "
"mentioned above, ``_physics_process()`` runs at fixed time intervals as much "
"as possible to keep the physics interactions stable. You can change the "
"interval between physics steps in the Project Settings, under Physics -> "
"Common -> Physics Fps. By default, it's set to run 60 times per second."
msgstr ""
"Обработка физики работает с помощью аналогичной виртуальной функции: "
"``_physics_process()``. Используйте её для вычислений, которые должны "
"происходить перед каждым шагом физики, например, для перемещения персонажа, "
"который сталкивается с игровым миром. Как упоминалось выше, "
"``_physics_process()`` выполняется с фиксированными временными интервалами, "
"насколько это возможно, чтобы сохранить стабильность физических "
"взаимодействий. Вы можете изменить интервал между шагами физики в Настройках "
"проекта, в разделе Physics -> Common -> Physics Fps По умолчанию он "
"установлен на 60 раз в секунду."

#, fuzzy
msgid ""
"The function ``_process()`` is not synchronized with physics. Its rate "
"depends on hardware and game optimization. It also runs after the physics "
"step in single-threaded games."
msgstr ""
"Однако, функция ``_process()`` не синхронизируется с физикой. Ее частота "
"кадров не является постоянной и зависит от аппаратной и игровой оптимизации. "
"В однопоточных играх ее выполнение осуществляется после этапа физики."

#, fuzzy
msgid ""
"You can see the ``_process()`` function at work by creating a scene with a "
"single Label node, with the following script attached to it:"
msgstr ""
"Простой способ посмотреть функцию ``_process()`` в работе - это создать "
"сцену с одним узлом типа Label со следующим скриптом:"

#, fuzzy
msgid "When you run the scene, you should see a counter increasing each frame."
msgstr ""
"Он будет показывать счетчик, который будет увеличиваться на каждом кадре."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
