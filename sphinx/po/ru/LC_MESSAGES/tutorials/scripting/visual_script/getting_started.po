# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Getting started with Visual Scripting"
msgstr "Начало работы с Визуальным Программированием"

msgid ""
"As with everything in Godot, we prioritize a good experience over copying or "
"integrating third party solutions which might not fit nicely in the current "
"workflow. This led us to write our own version of how we believe this "
"feature would work best with the engine."
msgstr ""
"Как и во всем остальном в Godot, мы отдаем предпочтение хорошему опыту, а не "
"копированию или интеграции сторонних решений, которые могут не вписаться в "
"текущий рабочий процесс. Это привело нас к написанию собственной версии "
"того, как, по нашему мнению, эта функция будет лучше всего работать с "
"движком."

msgid ""
"In Godot, a Visual Script fits smoothly together with regular scripts in the "
"Editor tab"
msgstr ""
"В Godot Визуальное Программирование легко сочетается с обычными скриптами на "
"вкладке Редактора"

msgid ""
"In fact, Visual Scripting integrates so well to Godot that it's hard to "
"believe it was added only in version 3.0. This is because, when editing, the "
"rest of Godot panels and docks act like a palette from where you can drag "
"and drop all sorts of information to the script canvas:"
msgstr ""
"На самом деле Визуальное Программирование настолько хорошо интегрируется с "
"Godot, что трудно поверить, что его добавили только в версии 3.0. Это "
"происходит потому, что при редактировании остальные панели и док-станции "
"Godot действуют как палитра, откуда можно перетаскивать на холст "
"всевозможную информацию:"

msgid "Creating a script"
msgstr "Создание скрипта"

msgid ""
"Creating scripts works the same as with other scripting languages: Select "
"any node in the scene and push the \"New Script\" button at the top right "
"corner of the Scene Tree dock:"
msgstr ""
"Создание скриптов работает так же, как и для других языками "
"программирования: выберите любой узел в сцене и нажмите кнопку \"Новый "
"Скрипт\" в верхнем правом углу панели Дерева Сцен:"

msgid ""
"Once it opens, the script type \"Visual Script\" must be selected from the "
"drop down list. The script extension must be \".vs\" (for Visual Script!)."
msgstr ""
"После того, как меню откроется, необходимо выбрать тип \"Визуальный Скрипт\" "
"из выпадающего списка. Расширение сценария должно быть \".vs\" (сокращение "
"для Visual Script!)."

msgid ""
"Finally, the Script Editor will open, allowing you to start editing the "
"visual script:"
msgstr ""
"Наконец, откроется Редактор Скриптов, позволяющий начать редактирование "
"Визуального Скрипта:"

msgid "Adding a function"
msgstr "Добавление функции"

msgid ""
"Unlike other visual scripting implementations, Visual Scripting in Godot is "
"heavily based on functions. This happens because it uses the same interface "
"to communicate with the engine as other scripting engines. In Godot, the "
"scripting interface is universal and all implementations conform to it."
msgstr ""
"В отличии от других реализаций визуального скриптинга, Визуальный Скриптинг "
"в Godot в основном базируется на функциях. Это произошло потому что он "
"использует тот же интерфейс для связи с движком как другие скриптовые "
"движки. В Godot, интерфейс скриптинга универсален и все реализации "
"соответствуют ему."

msgid "A function is an individual canvas with nodes connected."
msgstr "Функция отдельного холста с подключенными нодами."

msgid ""
"A single script can contain many functions, each of which will have a canvas "
"of its own, allowing for more organization."
msgstr ""
"Один скрипт может содержать множество функций, каждая из которых имеет свое "
"полотно, что позволяет добиться большей организации."

msgid "There are three main ways to add functions in a script:"
msgstr "Существует три основных способа добавления функций в скрипт:"

msgid "Overriding a virtual function"
msgstr "Переопределение виртуальной функции"

msgid ""
"Most types of nodes and other types of objects in Godot contain virtual "
"functions. These are functions that will be called (run your code) when "
"something happens and can be looked up in the reference. Virtual functions "
"are listed when pressing the \"Override\" icon in the member panel:"
msgstr ""
"Большинство типов узлов и других типов объектов в Godot содержат виртуальные "
"функции. Это функции, которые будут вызываться (запускать ваш код), когда "
"что-то происходит, и их можно посмотреть в справочнике. Виртуальные функции "
"отображаются при нажатии значка «Переопределить» на панели элементов:"

msgid ""
"In the following example, a function will be executed when the node is "
"loaded and added to the running scene. For this, the _ready() virtual method "
"will be overridden:"
msgstr ""
"В следующем примере, функция будет выполнена когда узел загрузится и "
"добавится в запущенную сцену. Для этого, будет перегружен виртуальный метод "
"_ready():"

msgid "Finally, a canvas appears for this function, showing the override:"
msgstr "Наконец, канва функции появляется, указывая переопределение:"

msgid ""
"As some functions expect you to return a value, they will also add a return "
"node where such value is supposed to be provided:"
msgstr ""
"Так как некоторые функции ожидают ответа, они также добавят узел в который "
"должен поступить ответ:"

msgid "Connecting a signal to a function"
msgstr "Подключение сигналов к функции"

msgid ""
"Nodes in a tree emit signals when something happens. Godot uses signals for "
"all sorts of things. A typical example would be a button that emits a "
"\"pressed\" signal when actually pressed."
msgstr ""
"Узлы дерева испускают сигнал когда что-то происходит. Godot использует "
"сигналы повсеместно. Простым примером является кнопка которая при нажатии "
"излучает сигнал \"pressed\"."

msgid ""
"For this, a node must be selected and the Node tab opened. This will allow "
"inspecting the signals. Once they are displayed, connect the \"pressed\" "
"signal:"
msgstr ""
"Для этого нужно выбрать узел и открыть вкладку Сигналы. Это позволит увидеть "
"имеющиеся сигналы. Когда они отобразятся, присоедините сигнал \"pressed\":"

msgid ""
"This will open the connection dialog. In this dialog, you must select the "
"node where the signal will be connected to, and the function that will "
"receive the signal:"
msgstr ""
"Это откроет окно соединения. В этом окне вам нужно выбрать узел к которому "
"будет подключен сигнал, и функцию которая его получит:"

msgid ""
"If this is done right, a new function will be created in our script and a "
"signal will automatically be connected to it:"
msgstr ""
"Если все сделано правильно, то в нашем скрипте будет создана новая функция и "
"сигнал автоматически подключится к ней:"

msgid "Creating a function manually"
msgstr "Создание функции вручную"

msgid ""
"The last way to create functions is to do it manually. In general, this is "
"not as common unless you really need it. Custom functions work when another "
"(or the same) script calls them manually. The main use cases for this are "
"breaking a larger function up into several manageable chunks and reusing "
"your visual code."
msgstr ""
"Последний способ создания функций - вручную. В целом это не самая "
"распространенная практика, к которой строит прибегать только в том случае, "
"если вам это действительно нужно. Пользовательские функции запускаются если "
"другой (или тот же) скрипт вызывает их вручную. Основными примерами "
"использования являются разбиение более крупной функции на несколько "
"управляемых фрагментов и повторное использование визуального кода."

msgid ""
"To create a function manually, push the big \"Plus\" button, and a new "
"function will be added with a default name:"
msgstr ""
"Чтобы создать функцию вручную, нажмите большую кнопку \"Плюс\", и новая "
"функция будет добавлена с именем по умолчанию:"

msgid ""
"This will add a new function, which can be renamed by simply double clicking "
"its name:"
msgstr ""
"Это позволит добавить новую функцию, которая может быть переименована просто "
"двойным нажатием мышкой на ее имя:"

msgid ""
"To edit the \"arguments\" this function can get (the values you pass to it "
"when you call this function), simply click the Function node and check the "
"inspector:"
msgstr ""
"Чтобы отредактировать \"аргументы\", которые может получать эта функция "
"(значения, которые вы передаете ей при вызове), просто нажмите на узел "
"Function и проверьте инспектор:"

msgid "More on that will be explained later in this document."
msgstr "Подробнее об этом будет рассказано позже в этом документе."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
