# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# basics"
msgstr "Основы C#"

msgid "Introduction"
msgstr "Введение"

msgid ""
"C# support is a new feature available since Godot 3.0. As such, you may "
"still run into some issues, or find spots where the documentation could be "
"improved. Please report issues with C# in Godot on the `engine GitHub page "
"<https://github.com/godotengine/godot/issues>`_, and any documentation "
"issues on the `documentation GitHub page <https://github.com/godotengine/"
"godot-docs/issues>`_."
msgstr ""
"Поддержка C# была введена в Godot 3.0. Из-за новизны, вы можете столкнуться "
"с какими-то проблемами, или найти места где документация может быть "
"улучшена. Пожалуйста сообщайте о проблемах с C# в Godot на `странице движка "
"на GitHub <https://github.com/godotengine/godot/issues>`_, а о проблемах с "
"документацией на `странице GitHub документации <https://github.com/"
"godotengine/godot-docs/issues>`_."

msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>` and (re)visit "
"the :ref:`Scripting section <doc_scripting>` of the step-by-step tutorial."
msgstr ""
"Эта страница предоставляет краткое введение в C#, о том что это и как "
"использовать его в Godot. После, вас может заинтересовать чтение о том :ref:"
"`как использовать особые возможности <doc_c_sharp_features>`, о :ref:"
"`различиях между C# и GDScript API <doc_c_sharp_differences>` и "
"(пере)посещение :ref:`Секции скриптинга <doc_scripting>` для пошагового "
"руководства."

msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with the Mono 6.x .NET framework, including full support for "
"C# 8.0. Mono is an open source implementation of Microsoft's .NET Framework "
"based on the ECMA standards for C# and the Common Language Runtime. A good "
"starting point for checking its capabilities is the `Compatibility <http://"
"www.mono-project.com/docs/about-mono/compatibility/>`_ page in the Mono "
"documentation."
msgstr ""
"C# это высокоуровневый язык программирования разработанный Microsoft. В "
"Godot, он встроен с использованием фреймворка Mono 6.x .NET, включающий "
"полную поддержку C# 8.0. Mono - это реализация Microsoft .NET Framework с "
"открытым исходным кодом, базирующаяся на стандартах ECMA для C# и Common "
"Language Runtime(CLR). Для изучения его возможностей смотрите страницу "
"`Совместимость <http://www.mono-project.com/docs/about-mono/compatibility/"
">`_ в документации Mono."

msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"Это **не** полномасштабное руководство по целому языку C#. Если вы не "
"знакомы с его синтаксисом или возможностями, посмотрите `Microsoft C# "
"руководство <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ или "
"поищите подходящее введение где-нибудь ещё."

msgid "Setting up C# for Godot"
msgstr "Настройка C# для Godot"

msgid "Prerequisites"
msgstr "Требования"

#, fuzzy
msgid ""
"Install the latest stable version of the `.NET SDK <https://dotnet.microsoft."
"com/download>`__, previously known as the .NET Core SDK."
msgstr ""
"Установите последнюю стабильную версию `.NET Core SDK <https://dotnet."
"microsoft.com/download/dotnet-core>`__ (3.1 на момент написания)."

msgid ""
"From Godot 3.2.3 onwards, installing Mono SDK is not a requirement anymore, "
"except it is required if you are building the engine from source."
msgstr ""
"Начиная с Godot 3.2.3 и далее, установка Mono SDK больше не является "
"требованием, за исключением случаев, когда вы собираете движок из исходных "
"текстов."

#, fuzzy
msgid ""
"Godot bundles the parts of Mono needed to run already compiled games. "
"However, Godot does not bundle the tools required to build and compile "
"games, such as MSBuild and the C# compiler. These are included in the .NET "
"SDK, which needs to be installed separately."
msgstr ""
"Godot объединяет части Mono, необходимые для запуска уже скомпилированных "
"игр, однако Godot не включает инструменты, требуемые для сборки и компиляции "
"игр, такие как MSBuild. Эти инструменты необходимо устанавливать отдельно. "
"Требуемые инструменты включены в .NET Core SDK. MSBuild также включен в Mono "
"SDK, но он не может создавать проекты C# с новым форматом ``csproj``, "
"поэтому для Godot 3.2.3+ требуется .NET Core SDK."

#, fuzzy
msgid ""
"In summary, you must have installed the .NET SDK **and** the Mono-enabled "
"version of Godot."
msgstr ""
"В итоге, у вас должны быть установлены .NET Core SDK **и** версия Godot с "
"поддержкой Mono."

msgid "Additional notes"
msgstr "Дополнительные заметки"

msgid ""
"Be sure to install the 64-bit version of the SDK(s) if you are using the 64-"
"bit version of Godot."
msgstr ""
"Обязательно установите 64-битную версию SDK, если вы используете 64-битную "
"версию Godot."

msgid ""
"If you are building Godot from source, install the latest stable version of "
"`Mono <https://www.mono-project.com/download/stable/>`__, and make sure to "
"follow the steps to enable Mono support in your build as outlined in the :"
"ref:`doc_compiling_with_mono` page."
msgstr ""
"Если вы собираете Godot из исходников, установите последнюю стабильную "
"версию `Mono <https://www.mono-project.com/download/stable/>`__, и убедитесь "
"что следуете шагам для включения поддержки Mono в вашей сборке на странице :"
"ref:`doc_compiling_with_mono`."

msgid "Configuring an external editor"
msgstr "Настройка внешнего редактора"

msgid ""
"C# support in Godot's built-in script editor is minimal. Consider using an "
"external IDE or editor, such as  `Visual Studio Code <https://code."
"visualstudio.com/>`__ or MonoDevelop. These provide autocompletion, "
"debugging, and other useful features for C#. To select an external editor in "
"Godot, click on **Editor → Editor Settings** and scroll down to **Mono**. "
"Under **Mono**, click on **Editor**, and select your external editor of "
"choice. Godot currently supports the following external editors:"
msgstr ""
"Godot имеет собственный редактор скриптов, его поддержка C# минимальна; "
"вместо этого рекомендовано использовать отдельную IDE или редактор, такой "
"как `Visual Studio Code <https://code.visualstudio.com/>`_ или MonoDevelop. "
"Они поддерживают авто-завершение кода, отладку и другие возможности полезные "
"при разработке на C#. Для установки их в Godot, кликните по **Editor → "
"Editor Settings** и прокрутите вниз к настройкам **Mono**. Под **Mono**, "
"кликните по **Editor** и выберите внешний редактор на выбор:"

msgid "Visual Studio 2019"
msgstr "Visuаl Studio 2019"

msgid "Visual Studio Code"
msgstr "Visuаl Studio Code"

msgid "MonoDevelop"
msgstr "MonоDevelop"

msgid "Visual Studio for Mac"
msgstr "Visual Studio для MacOS"

msgid "JetBrains Rider"
msgstr "JetBrains rider"

msgid "See the following sections for how to configure an external editor:"
msgstr "См. cледующие разделы, чтобы узнать, как настроить внешний редактор:"

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."
msgstr ""
"Прочитав раздел «Предварительные требования», вы можете загрузить и "
"установить `JetBrains Rider <https://www.jetbrains.com/rider/download>`__."

msgid "In Godot's **Editor → Editor Settings** menu:"
msgstr "В меню **Редактор→ Настройки редактора** Godot:"

msgid ""
"Set **Mono** -> **Editor** -> **External Editor** to **JetBrains Rider**."
msgstr ""
"Установите **Mono** -> **Editor** -> **External Editor** на **JetBrains "
"Rider**."

msgid "Set **Mono** -> **Builds** -> **Build Tool** to **dotnet CLI**."
msgstr "Установите **Mono** -> **Builds** -> **Build Tool** на **dotnet CLI**."

msgid "In Rider:"
msgstr "В Rider:"

msgid "Set **MSBuild version** to **.NET Core**."
msgstr "Установите **MSBuild version** на **.NET Core**."

msgid "Install the **Godot support** plugin."
msgstr "Установите плагин **Godot support**(**Поддержка Godot**)."

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (aka VS "
"Code)."
msgstr ""
"После прочтения раздела \"Предварительные условия\" вы можете загрузить и "
"установить ` Visual Studio Code <https://code.visualstudio.com/download>`__ "
"(он же VS Code)."

msgid ""
"Set **Mono** -> **Editor** -> **External Editor** to **Visual Studio Code**."
msgstr ""
"Установите **Mono** -> **Editor** -> **External Editor** на **Visual Studio "
"Code**."

msgid "In Visual Studio Code:"
msgstr "В Visual Studio Code:"

msgid ""
"Install the `C# <https://marketplace.visualstudio.com/items?itemName=ms-"
"dotnettools.csharp>`__ extension."
msgstr ""
"Установите расширение `C# <https://marketplace.visualstudio.com/items?"
"itemName=ms-dotnettools.csharp>`__ ."

msgid ""
"Install the `Mono Debug <https://marketplace.visualstudio.com/items?"
"itemName=ms-vscode.mono-debug>`__ extension."
msgstr ""
"Установите расширение `Mono Debug <https://marketplace.visualstudio.com/"
"items?itemName=ms-vscode.mono-debug>`__ ."

msgid ""
"Install the `C# Tools for Godot <https://marketplace.visualstudio.com/items?"
"itemName=neikeq.godot-csharp-vscode>`__ extension."
msgstr ""
"Установите расширение `C# Tools for Godot <https://marketplace.visualstudio."
"com/items?itemName=neikeq.godot-csharp-vscode>`__."

msgid ""
"If you are using Linux you need to install the `Mono SDK <https://www.mono-"
"project.com/download/stable/#download-lin>`__ for the C# tools plugin to "
"work."
msgstr ""
"Если вы используете Linux, вам необходимо установить `Mono SDK <https://www."
"mono-project.com/download/stable/#download-lin> `__ для работы плагина "
"инструментов C#."

msgid ""
"To configure a project for debugging open the Godot project folder in VS "
"Code. Go to the Run tab and click on **Add Configuration...**. Select **C# "
"Godot** from the dropdown menu. Open the ``tasks.json`` and ``launch.json`` "
"files that were created. Change the executable setting in ``launch.json`` "
"and  command settings in ``tasks.json`` to your Godot executable path. Now, "
"when you start the debugger in VS Code, your Godot project will run."
msgstr ""
"Чтобы сконфигурировать проект для отладки, откройте папку проекта Godot в VS "
"Code. Перейдите на вкладку Run и нажмите на **Add Configuration...**. "
"Выберите **C# Godot** из выпадающего меню. Откройте созданные файлы ``tasks."
"json`` и ``launch.json``. Измените настройки исполняемого файла в ``launch."
"json`` и команды в ``tasks.json`` на путь к исполняемому файлу Godot. "
"Теперь, когда вы запустите отладчик в VS Code, ваш проект Godot будет "
"запущен."

msgid "Visual Studio (Windows only)"
msgstr "Visual Studio (Только windows)"

msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio will include the "
"required SDKs if you have the correct workloads selected, so you don't need "
"to manually install the things listed in the \"Prerequisites\" section."
msgstr ""
"Загрузите и установите последнюю версию Visual Studio <https://visualstudio."
"microsoft.com/downloads/>`__. Visual Studio будет включать необходимые SDK, "
"если у вас выбраны правильные рабочие нагрузки, поэтому вам не нужно вручную "
"устанавливать вещи, перечисленные в разделе \"Предварительные условия\"."

msgid "While installing Visual Studio, select these workloads:"
msgstr "При установке Visual Studio, выберите эти нагрузки:"

msgid "Mobile development with .NET"
msgstr "Мобильная разработка с .NET"

msgid ".NET Core cross-platform development"
msgstr "Кросс-платформенная разработка .NET Core"

msgid "Set **Mono** -> **Editor** -> **External Editor** to **Visual Studio**."
msgstr ""
"Установите **Mono** -> **Editor** -> **External Editor** на **Visual "
"Studio**."

#, fuzzy
msgid ""
"Next, you can download the Godot Visual Studio extension from github `here "
"<https://github.com/godotengine/godot-csharp-visualstudio/releases>`__. "
"Double click on the downloaded file and follow the installation process."
msgstr ""
"Затем вам необходимо загрузить расширение Godot Visual Studio с github "
"`здесь <https://github.com/godotengine/godot-csharp-visualstudio/"
"releases>`__. Дважды щелкните загруженный файл и следуйте процессу установки."

msgid ""
"The option to debug your game in Visual Studio may not appear after "
"installing the extension. To enable debugging, there is a `workaround for "
"Visual Studio 2019 <https://github.com/godotengine/godot-csharp-visualstudio/"
"issues/10#issuecomment-720153256>`__. There is `a separate issue about this "
"problem in Visual Studio 2022 <https://github.com/godotengine/godot-csharp-"
"visualstudio/issues/28>`__."
msgstr ""

msgid ""
"If you see an error like \"Unable to find package Godot.NET.Sdk\", your "
"NuGet configuration may be incorrect and need to be fixed."
msgstr ""

msgid ""
"A simple way to fix the NuGet configuration file is to regenerate it. In a "
"file explorer window, go to ``%AppData%\\NuGet``. Rename or delete the "
"``NuGet.Config`` file. When you build your Godot project again, the file "
"will be automatically created with default values."
msgstr ""

msgid "Creating a C# script"
msgstr "Создание C# скрипта"

msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting **Attach Script** in the context menu of a node in "
"your scene:"
msgstr ""
"После успешной настройки C# в Godot, вы должны увидеть новую опцию выбора — "
"из контекстного меню прикрепляемого к сцене скрипта:"

msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some places in the "
"documentation still lack C# examples, most concepts can be transferred "
"easily from GDScript."
msgstr ""
"Заметьте что хотя некоторые особенности изменились, большинство остались "
"теми же во время использования C# для скриптинга. Если вы новичок в Godot, "
"вы возможно захотите поизучать руководства из :ref:`doc_scripting` на этом "
"месте. Тогда как в некоторых местах документации ещё отсутствуют примеры для "
"C#, большинство концептов могут быть легко перенесены из GDScript."

msgid "Project setup and workflow"
msgstr "Настройка проекта и рабочего процесса"

msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.mono`` and ``Properties/AssemblyInfo.cs``). All of these but ``.mono`` "
"are important and should be committed to your version control system. ``."
"mono`` can be safely added to the ignore list of your VCS. When "
"troubleshooting, it can sometimes help to delete the ``.mono`` folder and "
"let it regenerate."
msgstr ""
"Когда вы создали ваш первый скрипт C#, Godot инициализирует его проектными "
"файлами C# для вашего проекта. Это включает генерацию решения(solution) C# "
"(``.sln``) и проектного файла (``.csproj``), а также создаются ещё некоторые "
"файлы и папки (``.mono`` и ``Properties/AssemblyInfo.cs``). Все они (кроме "
"``.mono``) важны и должны быть включены в вашу систему контроля версий. ``."
"mono`` можно спокойно добавить в лист исключений вашего VCS. Когда вы ищите "
"проблему, иногда может помочь удаление папки ``.mono`` которая затем "
"самовосстановится."

msgid "Example"
msgstr "Пример"

msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""
"Это пустой C# скрипт с некоторыми комментариями, чтобы продемонстрировать, "
"как он работает."

msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` class which is part of the "
"``Godot`` namespace. For a list of methods in the ``GD`` class, see the "
"class reference pages for :ref:`@GDScript <class_@gdscript>` and :ref:"
"`@GlobalScope <class_@globalscope>`."
msgstr ""
"Как вы можете видеть, функции, обычно находящиеся в глобальной области "
"видимости в GDScript, такие как функция Godot ``print``, доступны в классе "
"``GD``, который является частью пространства имен ``Godot``. Список методов "
"класса ``GD`` смотрите в справочных страницах классов :ref:`@GDScript "
"<class_@gdscript>` и :ref:`@GlobalScope <class_@globalscope>`."

msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error "
"and won't be able to run the scene: *\"Cannot find class XXX for script "
"res://XXX.cs\"*"
msgstr ""
"Помните, что класс, который вы хотите присоединить к вашему узлу, должен "
"иметь то же имя, что и файл `` .cs``. В противном случае вы получите "
"следующую ошибку и не сможете запустить сцену: *«Не удается найти класс XXX "
"для сценария res://XXX.cs»*"

msgid "General differences between C# and GDScript"
msgstr "Основные различия между C# и GDScript"

msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"В языке C# всё API использует стиль записи ``PascalCase`` вместо "
"``snake_case``, принятого в GDScript/C++. Поля и getters/setters "
"представленны в виде свойств, там где это допустимо. В целом, Godot API на "
"C# стримится быть наиболее наглядным, насколько это возможно."

msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr ""
"За дополнительно информацией, обратитесь к странице: :ref:"
"`doc_c_sharp_differences`."

msgid ""
"You need to (re)build the project assemblies whenever you want to see new "
"exported variables or signals in the editor. This build can be manually "
"triggered by clicking the word **Build** in the top right corner of the "
"editor. You can also click **Mono** at the bottom of the editor window to "
"reveal the Mono panel, then click the **Build Project** button."
msgstr ""
"Вам необходимо каждый раз (пере)собирать проект, чтобы видеть новые "
"экспортируемые переменные и сигналы в редакторе . Эта сборка может быть "
"запущена нажатием на **Build**, в правом верхнем углу окна редактора. Также "
"вы можете нажать **Mono** в нижней части окна редактора для открытия панели "
"Mono, после кликнуть на кнопку **Build Project**."

msgid ""
"You will also need to rebuild the project assemblies to apply changes in "
"\"tool\" scripts."
msgstr ""
"Вам также потребуется перестроить сборки проекта, чтобы применить изменения "
"в скриптовых \"инструментах\"."

msgid "Current gotchas and known issues"
msgstr "Текущие ограничения и известные проблемы"

msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for Mono issues <https://github.com/"
"godotengine/godot/labels/topic%3Amono>`_."
msgstr ""
"Поскольку поддержка C# введена относительно недавно, в ней всё ещё "
"присутствуют \"детские болячки\" и проблемы, которые необходимо устранить. "
"Ниже вы найдёте список наиболее важных проблем, о существовании которых вам "
"следовало бы знать, при использовании C# вместе с Godot. Если есть какие-то "
"сомнения, вы также можете заглянуть на `официальный трекер проблем/запросов "
"Mono <https://github.com/godotengine/godot/labels/topic%3Amono>`_."

msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr ""
"Написание плагинов для редактора возможно, но в настоящее время это довольно "
"затруднительно."

msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"В данный момент, при выполнении горячей-перезагруки, состояние не "
"сохраняется и не восстанавливается, за исключением экспортируемых переменных."

msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"Прикрепленные C# скрипты должны относиться к классу, который имеет имя "
"класса, соответствующее имени файла."

msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation."
msgstr ""
"Есть некоторые методы, такие как ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` и метод соединения сигналов ``Connect()``, которые "
"полагаются на соглашениях именования API ``snake_case`` от Godot. Так, "
"например, при использовании ``CallDeferred(\"AddChild\")``, ``AddChild`` не "
"будет работать, потому что API ожидает исходную ``snake_case`` версию "
"``add_child``. Однако вы можете использовать любые пользовательские свойства "
"или методы без этого ограничения."

msgid ""
"Exporting Mono projects is supported for desktop platforms (Linux, Windows "
"and macOS), Android, HTML5, and iOS. The only platform not supported yet is "
"UWP."
msgstr ""
"Экспорт Mono проектов поддерживается для настольных платформ (Linux, Windows "
"и macOS), Android, HTML5 и iOS. Единственная платформа, которая еще не "
"поддерживается, - это UWP."

msgid "Performance of C# in Godot"
msgstr "Производительность C# в Godot"

msgid ""
"According to some preliminary `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, the performance of C# in Godot — while generally in the same "
"order of magnitude — is roughly **~4×** that of GDScript in some naive "
"cases. C++ is still a little faster; the specifics are going to vary "
"according to your use case. GDScript is likely fast enough for most general "
"scripting workloads. C# is faster, but requires some expensive marshalling "
"when talking to Godot."
msgstr ""
"Согласно некоторым предварительным `бенчмарк-тестам <https://github.com/cart/"
"godot3-bunnymark>`_, производительность C# в Godot — пусть и находится в "
"пределах одной величины — что приблизительно **в ~4 раза** выше, чем в "
"GDScript в некоторых наивных случаях. Но C++ до сих пор немного быстрее; "
"производительность будет зависеть от вашего варианта использования. Но "
"помните, что быстродействия GDScript будет вполне достаточно для большинства "
"основных задач по написанию сценариев. Хоть C# и производительнее, но он "
"требует выполнение достаточно дорогостоящего маршалинга, когда речь заходит "
"об использовании C# в Godot."

msgid "Using NuGet packages in Godot"
msgstr "Использование пакетов NuGet в Godot"

msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"`NuGet <https://www.nuget.org/>`_ пакеты могут быть установлены и "
"использованы вместе с Godot, как и в любом другом C# проекте. Множество IDE "
"способны добавлять пакеты напрямую. Если необходимо, вы можете добавить их "
"вручную, добавив ссылку на пакет в ``.csproj`` файл, который расположен в "
"корне проекта:"

msgid ""
"As of Godot 3.2.3, Godot automatically downloads and sets up newly added "
"NuGet packages the next time it builds the project."
msgstr ""
"Начиная с Godot 3.2.3, Godot автоматически загружает и устанавливает недавно "
"добавленные пакеты NuGet при следующей сборке проекта."

msgid "Profiling your C# code"
msgstr "Профилирование вашего C# кода"

msgid ""
"`Mono log profiler <https://www.mono-project.com/docs/debug+profile/profile/"
"profiler/>`_ is available for Linux and macOS. Due to a Mono change, it does "
"not work on Windows currently."
msgstr ""
"`Mono log profiler (Mono профайлер логов) <https://www.mono-project.com/docs/"
"debug+profile/profile/profiler/>`_ доступен для Linux и macOS. Из-за "
"изменения Mono, он не работает на Windows на данный момент."

msgid ""
"External Mono profiler like `JetBrains dotTrace <https://www.jetbrains.com/"
"profiler/>`_ can be used as described `here <https://github.com/godotengine/"
"godot/pull/34382>`_."
msgstr ""
"Внешний Mono профилировщик, такой как `JetBrains dotTrace <https://www."
"jetbrains.com/profiler/>`_, можно использовать, как описано `здесь <https://"
"github.com/godotengine/godot/pull/34382>`_."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
