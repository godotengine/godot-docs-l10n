# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Resources"
msgstr "Ресурсы"

msgid "Nodes and resources"
msgstr "Узлы и Ресурсы"

msgid ""
"Up to this tutorial, we focused on the :ref:`Node <class_Node>` class in "
"Godot as that's the one you use to code behavior and most of the engine's "
"features rely on it. There is another datatype that is just as important: :"
"ref:`Resource <class_Resource>`."
msgstr ""
"До этого урока мы были сосредоточены на классе :ref:`Node <class_Node>` в "
"Godot, так как именно его вы используете для написания поведения и "
"большинство функций движка полагаются на него. Есть еще один тип данных, "
"который так же важен: :ref:`Resource <class_Resource>`."

msgid ""
"*Nodes* give you functionality: they draw sprites, 3D models, simulate "
"physics, arrange user interfaces, etc. **Resources** are **data "
"containers**. They don't do anything on their own: instead, nodes use the "
"data contained in resources."
msgstr ""
"*Узлы* дают вам функциональность: они рисуют спрайты, 3D модели, моделируют "
"физику, организовывают UI и т.д. **Ресурсы** являются **контейнерами "
"данных**. Они ничего не делают сами по себе: вместо этого узлы используют "
"данные, содержащиеся в ресурсах."

msgid ""
"Anything Godot saves or loads from disk is a resource. Be it a scene (a ``."
"tscn`` or an ``.scn`` file), an image, a script... Here are some "
"``Resource`` examples: :ref:`Texture <class_Texture>`, :ref:`Script "
"<class_Script>`, :ref:`Mesh <class_Mesh>`, :ref:`Animation "
"<class_Animation>`, :ref:`AudioStream <class_AudioStream>`, :ref:`Font "
"<class_Font>`, :ref:`Translation <class_Translation>`."
msgstr ""
"Все, что Godot сохраняет на диск или загружает с него, является ресурсом. "
"Будь то сцена (``.tscn`` или ``.scn`` файл), изображение, скрипт... Вот "
"несколько примеров ``Ресурсов`` : :ref:`Текстура <class_Texture>`, :ref:"
"`Скрипт <class_Script>`, :ref:`Сетка <class_Mesh>`, :ref:`Анимация "
"<class_Animation>`, :ref:`Аудиопоток <class_AudioStream>`, :ref:`шрифт "
"<class_Font>`, :ref:`Перевод <class_Translation>`."

msgid ""
"When the engine loads a resource from disk, **it only loads it once**. If a "
"copy of that resource is already in memory, trying to load the resource "
"again will return the same copy every time. As resources only contain data, "
"there is no need to duplicate them."
msgstr ""
"Когда движок загружает ресурс с диска, **он загружает его только один раз**. "
"Если копия ресурса уже находится в памяти, при попытке загрузить его снова "
"будет каждый раз возвращаться одна и та же копия. Поскольку ресурсы содержат "
"только данные, нет необходимости их дублировать."

msgid ""
"Every object, be it a Node or a Resource, can export properties. There are "
"many types of Properties, like String, integer, Vector2, etc., and any of "
"these types can become a resource. This means that both nodes and resources "
"can contain resources as properties:"
msgstr ""
"Каждый объект, будь то Узел или Ресурс, может экспортировать свойства. "
"Существует множество типов свойств, таких как String, integer, Vector2 и т."
"д., и любой из этих типов может стать ресурсом. Это означает, что и узлы, и "
"ресурсы могут содержать ресурсы словно они свойства:"

msgid "External vs built-in"
msgstr "Внешние против Встроенных(Build-it)"

msgid "There are two ways to save resources. They can be:"
msgstr "Существует два способа сохранения ресурсов. Они могут быть:"

msgid "**External** to a scene, saved on the disk as individual files."
msgstr "**Внешний** сохраненный в виде отдельных файлов."

msgid ""
"**Built-in**, saved inside the ``.tscn`` or the ``.scn`` file they're "
"attached to."
msgstr ""
"**Встроенный** сохраненный в ``.tscn`` или ``.scn`` файле, к которому они "
"прикреплены."

msgid ""
"To be more specific, here's a :ref:`Texture <class_Texture>` in a :ref:"
"`Sprite <class_Sprite>` node:"
msgstr ""
"Если быть более точным, вот свойство :ref:`Texture <class_Texture>` в узле :"
"ref:`Sprite <class_Sprite>`:"

msgid ""
"Clicking the resource preview allows us to view and edit the resource's "
"properties."
msgstr ""
"Нажатие на ссылку предварительного просмотра ресурса позволяет нам "
"просматривать и редактировать свойства ресурса."

msgid ""
"The path property tells us where the resource comes from. In this case, it "
"comes from a PNG image called ``robi.png``. When the resource comes from a "
"file like this, it is an external resource. If you erase the path or this "
"path is empty, it becomes a built-in resource."
msgstr ""
"Свойство Path говорит нам, откуда берется ресурс. В данном случае речь идет "
"об PNG изображении, получившем название ``robi.png``. Когда ресурс поступает "
"из такого файла, он является внешним ресурсом. Если вы удалите этот путь или "
"этот путь пуст, он станет встроенным ресурсом."

msgid ""
"The switch between built-in and external resources happens when you save the "
"scene. In the example above, if you erase the path ``\"res://robi.png\"`` "
"and save, Godot will save the image inside the ``.tscn`` scene file."
msgstr ""
"Переключение между встроенными и внешними ресурсами происходит при "
"сохранении сцены. В приведенном выше примере, если вы удалите путь ``\"res://"
"robi.png\"`` и сохраните, Godot сохранит изображение в файле сцены в "
"формате .tscn."

msgid ""
"Even if you save a built-in resource, when you instance a scene multiple "
"times, the engine will only load one copy of it."
msgstr ""
"Даже если вы сохраните встроенный ресурс, при многократном копировании "
"сцены, движок загрузит только одну ее копию."

msgid "Loading resources from code"
msgstr "Загрузка ресурсов из кода"

msgid ""
"There are two ways to load resources from code. First, you can use the "
"``load()`` function anytime:"
msgstr ""
"Существует два способа загрузки ресурсов из кода. Во-первых, можно "
"воспользоваться функцией ``load()``:"

msgid ""
"You can also ``preload`` resources. Unlike ``load``, this function will read "
"the file from disk and load it at compile-time. As a result, you cannot call "
"preload with a variable path: you need to use a constant string."
msgstr ""
"Вы также можете ``preload`` (предварительно загрузить) ресурсы. В отличие от "
"``load``, эта функция будет читать файл с диска и загружать его во время "
"компиляции. В результате, вы не можете вызвать ``preload`` с путём к ресурсу "
"в переменной: вам нужно использовать постоянную строку."

msgid "Loading scenes"
msgstr "Загрузка сцен"

msgid ""
"Scenes are also resources, but there is a catch. Scenes saved to disk are "
"resources of type :ref:`PackedScene <class_PackedScene>`. The scene is "
"packed inside a resource."
msgstr ""
"Сцены также являются ресурсами, но есть подвох. Сцены, записанные на диск, "
"представляют собой ресурсы типа :ref:`PackedScene <class_PackedScene>`. "
"Сцена упакована в ресурс."

msgid ""
"To get an instance of the scene, you have to use the :ref:`PackedScene."
"instance() <class_PackedScene_method_instance>` method."
msgstr ""
"Для получения экземпляра сцены используйте метод :ref:`PackedScene."
"instance() <class_PackedScene_method_instance>`."

msgid ""
"This method creates the nodes in the scene's hierarchy, configures them, and "
"returns the root node of the scene. You can then add it as a child of any "
"other node."
msgstr ""
"Этот метод создает узлы в иерархии сцены, настраивает их и возвращает "
"корневой узел сцены.Вы можете добавить его в качестве ребенка любого другого "
"узла."

msgid ""
"The approach has several advantages. As the :ref:`PackedScene.instance() "
"<class_PackedScene_method_instance>` function is fast, you can create new "
"enemies, bullets, effects, etc. without having to load them again from disk "
"each time. Remember that, as always, images, meshes, etc. are all shared "
"between the scene instances."
msgstr ""
"Такой подход имеет ряд преимуществ. Поскольку функция :ref:`PackedScene."
"instance() <class_PackedScene_method_instance>` работает довольно быстро, вы "
"можете создавать новых врагов, пули, эффекты и т.д. без необходимости каждый "
"раз загружать их с диска. Помните, что, как всегда, все изображения, "
"полисетки, и т.д. являются общими для всех экземпляров сцены."

msgid "Freeing resources"
msgstr "Очистка(освобождение) ресурсов"

msgid ""
"When a ``Resource`` is no longer in use, it will automatically free itself. "
"Since, in most cases, Resources are contained in Nodes, when you free a "
"node, the engine frees all the resources it owns as well if no other node "
"uses them."
msgstr ""
"Когда ``Resource`` перестает использоваться, он автоматически очищается. "
"Поскольку, в большинстве случаев, Ресурсы содержатся в узлах, когда вы "
"освобождаете узел, механизм освобождает все ресурсы, которыми он владеет, а "
"также если ни один другой узел не использует их."

msgid "Creating your own resources"
msgstr "Создание собственных ресурсов"

msgid ""
"Like any Object in Godot, users can also script Resources. Resource scripts "
"inherit the ability to freely translate between object properties and "
"serialized text or binary data (\\*.tres, \\*.res). They also inherit the "
"reference-counting memory management from the Reference type."
msgstr ""
"Как и любой объект в Godot, пользователи также могут создавать скрипты "
"Ресурсов. Скрипты ресурса наследуют возможность свободного перемещения между "
"свойствами объекта и сериализованным текстом или двоичными данными (\\*."
"tres, \\*.res). Они также наследуют управление памятью подсчета ссылок из "
"ссылочного типа."

msgid ""
"This comes with many distinct advantages over alternative data structures, "
"such as JSON, CSV, or custom TXT files. Users can only import these assets "
"as a :ref:`Dictionary <class_Dictionary>` (JSON) or as a :ref:`File "
"<class_File>` to parse. What sets Resources apart is their inheritance of :"
"ref:`Object <class_Object>`, :ref:`Reference <class_Reference>`, and :ref:"
"`Resource <class_Resource>` features:"
msgstr ""
"Это дает много явных преимуществ по сравнению с альтернативными структурами "
"данных, такими как JSON, CSV или пользовательские TXT-файлы. Пользователи "
"могут импортировать эти ресурсы только в виде :ref:`Dictionary "
"<class_Dictionary>` (JSON) или как :ref:`File <class_File>` для парсинга. "
"Отличительной особенностью Ресурсов является наследование характеристик :ref:"
"`Object <class_Object>`, :ref:`Reference <class_Reference>`, и :ref:"
"`Resource <class_Resource>`:"

msgid ""
"They can define constants, so constants from other data fields or objects "
"are not needed."
msgstr ""
"Они могут определять константы, поэтому константы из других полей данных или "
"объектов не нужны."

msgid ""
"They can define methods, including setter/getter methods for properties. "
"This allows for abstraction and encapsulation of the underlying data. If the "
"Resource script's structure needs to change, the game using the Resource "
"need not also change."
msgstr ""
"Они могут определять методы, включая методы setter/getter для свойств. Это "
"позволяет абстрагироваться и инкапсулировать исходные данные. Если структура "
"скрипта ресурса должна измениться, то игра, использующая ресурс, не должна."

msgid ""
"They can define signals, so Resources can trigger responses to changes in "
"the data they manage."
msgstr ""
"Они могут определять сигналы, чтобы Ресурсы могли инициировать реакцию на "
"изменения в данных, которыми они управляют."

msgid ""
"They have defined properties, so users know 100% that their data will exist."
msgstr ""
"Они имеют определенные свойства, поэтому пользователи знают на 100%, что их "
"данные будут существовать."

msgid ""
"Resource auto-serialization and deserialization is a built-in Godot Engine "
"feature. Users do not need to implement custom logic to import/export a "
"resource file's data."
msgstr ""
"Ресурсы автоматически сериализуются и десериализуются — это встроенная "
"функция движка Godot. Поэтому пользователям не требуется самостоятельно "
"реализовывать логику импорта/экспорта файлов ресурсов."

msgid ""
"Resources can even serialize sub-Resources recursively, meaning users can "
"design even more sophisticated data structures."
msgstr ""
"Кроме того, ресурсы могут рекурсивно сериализовывать вложенные ресурсы. Это "
"значит, что пользователи могут проектировать ещё более сложные структуры "
"данных."

msgid ""
"Users can save Resources as version-control-friendly text files (\\*.tres). "
"Upon exporting a game, Godot serializes resource files as binary files (\\*."
"res) for increased speed and compression."
msgstr ""
"Пользователи могут сохранять ресурсы как текстовые файлы (\\*.tres) для "
"лучшей совместимости с системами контроля версий. При экспорте игры Godot "
"сериализует ресурсы в бинарные файлы (\\*.res) для увеличения быстродействия "
"и экономии места."

msgid ""
"Godot Engine's Inspector renders and edits Resource files out-of-the-box. As "
"such, users often do not need to implement custom logic to visualize or edit "
"their data. To do so, double-click the resource file in the FileSystem dock "
"or click the folder icon in the Inspector and open the file in the dialog."
msgstr ""
"Инспектор Godot Engine осуществляет рендеринг и редактирование файлов "
"ресурсов \"из коробки\". Таким образом, пользователям часто не требуется "
"придумывать собственную логику для визуализации или редактирования своих "
"данных. Для этого дважды щелкните по файл ресурса в файловой системе или на "
"значок папки в Инспекторе и выберите файл в диалоговом окне."

msgid ""
"They can extend **other** resource types besides just the base Resource."
msgstr ""
"Они могут расширять **другие** виды ресурсов, помимо простого базового "
"ресурса."

msgid "Godot makes it easy to create custom Resources in the Inspector."
msgstr "Godot облегчает создание пользовательских ресурсов в Инспекторе."

msgid ""
"Create a plain Resource object in the Inspector. This can even be a type "
"that derives Resource, so long as your script is extending that type."
msgstr ""
"Создайте простой объект ресурса в Инспекторе. Это может быть даже тип, "
"производный от ресурса, если сценарий расширяет этот тип."

msgid "Set the ``script`` property in the Inspector to be your script."
msgstr "Установите в свойстве ``script`` в Инспекторе Ваш собственный скрипт."

msgid ""
"The Inspector will now display your Resource script's custom properties. If "
"one edits those values and saves the resource, the Inspector serializes the "
"custom properties too! To save a resource from the Inspector, click the "
"Inspector's tools menu (top right), and select \"Save\" or \"Save As...\"."
msgstr ""
"Инспектор теперь отобразит пользовательские свойства вашего скрипта "
"ресурсов. Если отредактировать эти значения и сохранить ресурс, Инспектор "
"также выполнит сериализацию пользовательских свойств! Для сохранения ресурса "
"Инспектора щелкните на меню инструментов Инспектора (вверху справа) и "
"выберите \"Сохранить\" или \"Сохранить как...\"."

#, fuzzy
msgid ""
"If the script's language supports :ref:`script classes "
"<doc_gdscript_basics_class_name>`, then it streamlines the process. Defining "
"a name for your script alone will add it to the Inspector's creation dialog. "
"This will auto-add your script to the Resource object you create."
msgstr ""
"Если язык скрипта поддерживает :ref:`script classes "
"<doc_scripting_continued_class_name>`, то это упрощает процесс. Определение "
"имени для вашего скрипта добавит его в диалог создания инспектора. Это "
"автоматически добавит ваш скрипт в объект Ресурс, который вы создадите."

msgid "Let's see some examples."
msgstr "Давайте рассмотрим некоторые примеры."

msgid ""
"Resource scripts are similar to Unity's ScriptableObjects. The Inspector "
"provides built-in support for custom resources. If desired though, users can "
"even design their own Control-based tool scripts and combine them with an :"
"ref:`EditorPlugin <class_EditorPlugin>` to create custom visualizations and "
"editors for their data."
msgstr ""
"Скрипты Ресурсов похожи на Unity's ScriptableObjects. Инспектор обеспечивает "
"встроенную поддержку пользовательских ресурсов. При желании пользователи "
"могут даже создавать собственные скрипты инструментов на основе Control и "
"комбинировать их с :ref:`EditorPlugin <class_EditorPlugin>` для создания "
"собственных визуализаций и редакторов для своих данных."

msgid ""
"Unreal Engine 4's DataTables and CurveTables are also easy to recreate with "
"Resource scripts. DataTables are a String mapped to a custom struct, similar "
"to a Dictionary mapping a String to a secondary custom Resource script."
msgstr ""
"Таблицы данных и таблицы кривых Unreal Engine 4 также легко воссоздаются с "
"помощью скриптов Ресурсов. Таблицы данных - это строка, сопоставленная с "
"пользовательской структурой, подобно Словарю, сопоставляющему строку со "
"вторичным пользовательским сценарием ресурса."

msgid ""
"Instead of just inlining the Dictionary values, one could also, "
"alternatively..."
msgstr ""
"Вместо того, чтобы просто подставлять значения словаря, можно также, в "
"качестве альтернативы..."

msgid ""
"Import a table of values from a spreadsheet and generate these key-value "
"pairs, or..."
msgstr ""
"Импортируйте табличные значения из электронной версии таблицы и создайте эти "
"пары ключ-значение, или...."

msgid ""
"Design a visualization within the editor and create a simple plugin that "
"adds it to the Inspector when you open these types of Resources."
msgstr ""
"Разработайте визуализацию в редакторе и создайте простой плагин, который "
"добавит его в Инспектор, когда вы откроете такие типы ресурсов."

msgid ""
"CurveTables are the same thing, except mapped to an Array of float values or "
"a :ref:`Curve <class_Curve>`/:ref:`Curve2D <class_Curve2D>` resource object."
msgstr ""
"CurveTables - это то же самое, за исключением сопоставления с массивом "
"значений с плавающей запятой или ресурсным объектом :ref:`Curve "
"<class_Curve>`/:ref:`Curve2D <class_Curve2D>`."

msgid ""
"Beware that resource files (\\*.tres/\\*.res) will store the path of the "
"script they use in the file. When loaded, they will fetch and load this "
"script as an extension of their type. This means that trying to assign a "
"subclass, i.e. an inner class of a script (such as using the ``class`` "
"keyword in GDScript) won't work. Godot will not serialize the custom "
"properties on the script subclass properly."
msgstr ""
"Помните, что ресурсные файлы (\\*.tres/\\*.res) будут содержать путь к "
"скрипту, который они используют. При загрузке они будут получать и загружать "
"этот скрипт в качестве расширения своего типа. Это означает, что попытка "
"присвоить подкласс, т.е. внутренний класс скрипта (например, с помощью "
"ключевого слова ``class`` в GDScript'') не сработает. Godot не будет должным "
"образом сериализовать пользовательские свойства в подклассе сценариев."

msgid ""
"In the example below, Godot would load the ``Node`` script, see that it "
"doesn't extend ``Resource``, and then determine that the script failed to "
"load for the Resource object since the types are incompatible."
msgstr ""
"В примере ниже, Godot загрузил скрипт ``Node``, увидел, что он не расширяет "
"``Resource``, а затем определил, что скрипт не загрузился для объекта "
"Resource, поскольку типы несовместимы."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
