# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript style guide"
msgstr "Руководство по стилю GDScript"

msgid ""
"This style guide lists conventions to write elegant GDScript. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""
"В этом руководстве по стилю перечислены соглашения для написания элегантного "
"кода на GDScript. Цель заключается в том, чтобы вдохновить писать чистый, "
"читаемый код и способствовать согласованности между проектами, обсуждениями "
"и учебными материалами. Надеемся, это также будет способствовать разработке "
"инструментов автоматического форматирования."

msgid ""
"Since GDScript is close to Python, this guide is inspired by Python's `PEP 8 "
"<https://www.python.org/dev/peps/pep-0008/>`__ programming style guide."
msgstr ""
"Поскольку GDScript очень близок к Python, это руководство вдохновлено "
"руководством по стилю программирования на Python`PEP 8 <https://www.python."
"org/dev/peps/pep-0008/>."

msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""
"Руководства по стилю не являются жестким сводом правил. Иногда у вас не "
"будет возможности применить ниже приведенные рекомендации. Когда это "
"случится, поступайте по своему усмотрению и попросите коллег-разработчиков "
"поделиться своими соображениями."

msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""
"В целом, поддержание согласованности кода в ваших проектах и в команде "
"важнее, чем следование этому руководству."

msgid ""
"Godot's built-in script editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""
"Встроенный в Godot редактор скриптов использует большинство этих соглашений "
"по умолчанию. Позвольте ему помочь вам."

msgid "Here is a complete class example based on these guidelines:"
msgstr "Вот полный пример класса основанный на этих рекомендациях:"

msgid "Formatting"
msgstr "Форматирование"

msgid "Encoding and special characters"
msgstr "Кодирование и специальные символы"

msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr ""
"Используйте символы подачи строк (**LF**) для разрыва строк, а не CRLF или "
"CR. *(редактор по умолчанию)*"

msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""
"Используйте символ перевода строки в конце каждого файла. *(editor default)*"

msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""
"Используйте кодировку **UTF-8** без `маркера последовательности байтов "
"<https://ru.wikipedia.org/wiki/Маркер_последовательности_байтов>`_. "
"*(редактор по умолчанию)*"

msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr ""
"Используйте **табы** вместо пробелов для отступов. *(редактор по умолчанию)*"

msgid "Indentation"
msgstr "Отступ"

msgid "Each indent level should be one greater than the block containing it."
msgstr ""
"Каждый уровень отступов должен быть на один больше чем у блока, в котором он "
"содержится."

msgid "**Good**:"
msgstr "**Хорошо**:"

msgid "**Bad**:"
msgstr "**Плохо**:"

msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""
"Используйте 2 уровня отступа, чтобы отличать строки продолжения от обычных "
"блоков кода."

msgid ""
"Exceptions to this rule are arrays, dictionaries, and enums. Use a single "
"indentation level to distinguish continuation lines:"
msgstr ""
"Исключением из этого правила являются массивы, словари, и перечисления. "
"Используйте один уровень отступа, чтобы различать продолжение строк:"

msgid "Trailing comma"
msgstr "Висящая запятая (Последняя запятая)"

msgid ""
"Use a trailing comma on the last line in arrays, dictionaries, and enums. "
"This results in easier refactoring and better diffs in version control as "
"the last line doesn't need to be modified when adding new elements."
msgstr ""
"Используйте висящую запятую на последней строке в массивах, словарях, и "
"перечислениях. Такой подход позволяет упростить рефакторинг и улучшить "
"сравнение в контроле версий, так как последняя строка не нуждается в "
"изменении, когда добавляются новые элементы."

msgid ""
"Trailing commas are unnecessary in single-line lists, so don't add them in "
"this case."
msgstr ""
"Висящие запятые не нужны в однострочных списках, поэтому в этом случае не "
"добавляйте их."

msgid "Blank lines"
msgstr "Пустые строки"

msgid "Surround functions and class definitions with two blank lines:"
msgstr "Окружите функции и определения классов двумя пустыми строками:"

msgid "Use one blank line inside functions to separate logical sections."
msgstr ""
"Используйте одну пустую строку внутри функций для отделения логических "
"частей друг от друга."

msgid ""
"We use a single line between classes and function definitions in the class "
"reference and in short code snippets in this documentation."
msgstr ""

msgid "Line length"
msgstr "Длина строки"

msgid "Keep individual lines of code under 100 characters."
msgstr "Придерживайтесь длине строк кода не более 100 символов."

msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two scripts opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""
"Если можете, постарайтесь придерживаться длине строк в 80 символов. Это "
"поможет читать код на небольших дисплеях и с двумя скриптами открытыми бок о "
"бок в стороннем текстовом редакторе. Например, чтобы посмотреть на различия."

msgid "One statement per line"
msgstr "Одно выражение на строку"

msgid ""
"Never combine multiple statements on a single line. No, C programmers, not "
"even with a single line conditional statement."
msgstr ""
"Никогда не объединяйте несколько выражений в одну строку. Нет, программисты "
"C, не надо писать условные выражения в одну строку (за исключением "
"тернарного оператора)."

msgid "The only exception to that rule is the ternary operator:"
msgstr "Единственным исключением из этого правила является тернарный оператор:"

msgid "Format multiline statements for readability"
msgstr "Форматирование многострочных операторов для удобства чтения"

msgid ""
"When you have particularly long ``if`` statements or nested ternary "
"expressions, wrapping them over multiple lines improves readability. Since "
"continuation lines are still part of the same expression, 2 indent levels "
"should be used instead of one."
msgstr ""
"Когда у вас особенно длинные операторы ``if`` или вложенные тернарные "
"выражения, их перенос на несколько строк улучшает читаемость. Поскольку "
"строки продолжения по-прежнему являются частью одного и того же выражения, "
"следует использовать 2 уровня отступа вместо одного."

msgid ""
"GDScript allows wrapping statements using multiple lines using parentheses "
"or backslashes. Parentheses are favored in this style guide since they make "
"for easier refactoring. With backslashes, you have to ensure that the last "
"line never contains a backslash at the end. With parentheses, you don't have "
"to worry about the last line having a backslash at the end."
msgstr ""
"GDScript позволяет заключать инструкции в несколько строк, используя круглые "
"скобки или обратную косую черту. В этом руководстве по стилю рекомендуется "
"использовать круглые скобки, поскольку они упрощают рефакторинг. Используя "
"обратную косую черту, вы должны убедиться, что последняя строка никогда не "
"содержит обратной косой черты в конце. С круглыми скобками вам не нужно "
"беспокоиться о том, что последняя строка будет иметь обратную косую черту в "
"конце."

msgid ""
"When wrapping a conditional expression over multiple lines, the ``and``/"
"``or`` keywords should be placed at the beginning of the line continuation, "
"not at the end of the previous line."
msgstr ""
"При переносе условного выражения на несколько строк ключевые слова ``and``/"
"``or`` следует размещать в начале продолжения строки, а не в конце "
"предыдущей строки."

msgid "Avoid unnecessary parentheses"
msgstr "Избегайте лишних скобок"

msgid ""
"Avoid parentheses in expressions and conditional statements. Unless "
"necessary for order of operations or wrapping over multiple lines, they only "
"reduce readability."
msgstr ""
"Избегайте скобок в выражениях и условных операторах. Если это не требуется "
"для порядка операций или переноса на несколько строк, они только ухудшают "
"читаемость."

msgid "Boolean operators"
msgstr "Логические операторы"

msgid ""
"Prefer the plain English versions of boolean operators, as they are the most "
"accessible:"
msgstr ""
"Отдавайте предпочтение простым английским версиям логических операторов, так "
"как они наиболее доступны:"

msgid "Use ``and`` instead of ``&&``."
msgstr "Используйте `` and`` вместо `` && ``."

msgid "Use ``or`` instead of ``||``."
msgstr "Используйте ``or`` вместо ``||``."

msgid ""
"You may also use parentheses around boolean operators to clear any "
"ambiguity. This can make long expressions easier to read."
msgstr ""
"Вы также можете использовать круглые скобки вокруг логических операторов во "
"избежание неоднозначностей. Это может облегчить чтение длинных выражений."

msgid "Comment spacing"
msgstr "Интервал в комментариях"

msgid ""
"Regular comments should start with a space, but not code that you comment "
"out. This helps differentiate text comments from disabled code."
msgstr ""
"Обычные комментарии должны начинаться с пробела, но не с кода, который вы "
"комментируете. Это помогает отличить текстовые комментарии от отключенного "
"кода."

msgid ""
"In the script editor, to toggle the selected code commented, press :kbd:"
"`Ctrl + K`. This feature adds a single # sign at the start of the selected "
"lines."
msgstr ""
"В редакторе скриптов, чтобы закомментировать выбранный код, нажмите :kbd:"
"`Ctrl + K`. Это добавит один символ # в начале выбранных строк."

msgid "Whitespace"
msgstr "Пробел"

msgid ""
"Always use one space around operators and after commas. Also, avoid extra "
"spaces in dictionary references and function calls."
msgstr ""
"Всегда используйте один пробел до и после операторов, а также после запятых. "
"Кроме того, избегайте лишних пробелов в ссылках на словарь и вызовах функций."

msgid "Don't use spaces to align expressions vertically:"
msgstr "Не используйте пробелы для вертикального выравнивания выражений:"

msgid "Quotes"
msgstr "Кавычки"

msgid ""
"Use double quotes unless single quotes make it possible to escape fewer "
"characters in a given string. See the examples below:"
msgstr ""
"Используйте двойные кавычки, если одинарные кавычки не позволяют "
"экранировать меньше символов в данной строке. Смотрите примеры ниже:"

msgid "Numbers"
msgstr "Номера"

msgid ""
"Don't omit the leading or trailing zero in floating-point numbers. "
"Otherwise, this makes them less readable and harder to distinguish from "
"integers at a glance."
msgstr ""
"Не пропускайте нули в числах с плавающей точкой. Это делает их менее "
"читаемыми, и более сложно отличимыми от обычных чисел."

msgid "**Good**::"
msgstr "**Хорошо**:"

msgid "**Bad**::"
msgstr "**Плохо**:"

msgid ""
"Use lowercase for letters in hexadecimal numbers, as their lower height "
"makes the number easier to read."
msgstr ""
"Используйте нижний регистр в записи шестнадцатеричных чисел, так их "
"становится проще прочесть."

msgid ""
"Take advantage of GDScript's underscores in literals to make large numbers "
"more readable."
msgstr ""
"Используйте преимущество использования нижнего подчеркивания в переменных "
"GDScript чтобы сделать большие числа более читаемыми."

msgid "Naming conventions"
msgstr "Соглашения об именовании"

msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code."
msgstr ""
"Эти соглашения об именовании следуют стилю Godot Engine. Нарушение этих "
"правил приведет к конфликту вашего кода со встроенными соглашениями об "
"именовании, что приведет к противоречивому коду."

msgid "File names"
msgstr "Имена файлов"

msgid ""
"Use snake_case for file names. For named classes, convert the PascalCase "
"class name to snake_case::"
msgstr ""
"Используйте snake_case (слова из маленьких букв с подчеркиваниями) для имен "
"файлов. Для именованных классов преобразуйте имя класса PascalCase (слова с "
"заглавными буквами) в snake_case::"

msgid ""
"This is consistent with how C++ files are named in Godot's source code. This "
"also avoids case sensitivity issues that can crop up when exporting a "
"project from Windows to other platforms."
msgstr ""
"Это согласуется с тем, как файлы C++ называются в исходном коде Godot. Это "
"также позволяет избежать проблем с чувствительностью к регистру, которые "
"могут возникнуть при экспорте проекта из Windows на другие платформы."

msgid "Classes and nodes"
msgstr "Классы и узлы"

msgid "Use PascalCase for class and node names:"
msgstr "Используйте PascalCase для имен классов и узлов:"

msgid "Also use PascalCase when loading a class into a constant or a variable:"
msgstr ""
"Также используйте PascalCase (слова с заглавными буквами) при загрузке "
"класса в константу или переменную:"

msgid "Functions and variables"
msgstr "Функции и переменные"

msgid "Use snake\\_case to name functions and variables:"
msgstr "Используйте snake\\_case для именования функций и переменных:"

msgid ""
"Prepend a single underscore (\\_) to virtual methods functions the user must "
"override, private functions, and private variables:"
msgstr ""
"Добавьте одно нижнее подчеркивание (\\_) к наименованию виртуальных методов "
"(функции, которые пользователь должен переопределить), приватных функций и "
"приватных переменных:"

msgid "Signals"
msgstr "Сигналы"

msgid "Use the past tense to name signals:"
msgstr "Используйте прошедшее время в именах сигналов:"

msgid "Constants and enums"
msgstr "Константы и перечисления"

msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr ""
"Пишите константы с CONSTANT\\_CASE, все большими буквами, с нижним "
"подчеркиванием (\\_) в качестве разделителя слов:"

msgid ""
"Use PascalCase for enum *names* and CONSTANT\\_CASE for their members, as "
"they are constants:"
msgstr ""
"Используйте PascalCase для имен перечислений и CONSTANT\\_CASE для их "
"значений, поскольку они являются константами:"

msgid "Code order"
msgstr "Порядок кода"

msgid ""
"This first section focuses on code order. For formatting, see :ref:"
"`formatting`. For naming conventions, see :ref:`naming_conventions`."
msgstr ""
"Это первый раздел сфокусированный на порядке кода. Для форматирования "
"смотрите :ref:`formatting`. Для соглашений по именованию смотрите :ref:"
"`naming_conventions`."

msgid "We suggest to organize GDScript code this way:"
msgstr "Мы предлагаем организовывать код на GDScript таким образом:"

msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""
"Мы оптимизировали порядок, чтобы упростить чтение кода сверху вниз и помочь "
"разработчикам, которые читают этот код впервые, понять, как он работает и "
"избежать ошибок, связанных с порядком объявления переменных."

msgid "This code order follows four rules of thumb:"
msgstr ""
"Этот порядок кода следует четырем правилам большого пальца (эмпирическая "
"закономерность):"

msgid "Properties and signals come first, followed by methods."
msgstr "Свойства и сигналы идут первыми, сопровождаемые методами."

msgid "Public comes before private."
msgstr "Модификатор public идет перед модификатором private."

msgid "Virtual callbacks come before the class's interface."
msgstr "Виртуальные функции обратного вызова идут перед интерфейсом класса."

msgid ""
"The object's construction and initialization functions, ``_init`` and "
"``_ready``, come before functions that modify the object at runtime."
msgstr ""
"Создание объектов и инициализация функций, ``_init`` и ``_ready``, идут "
"перед функциями, которые изменяют объект во время выполнения."

msgid "Class declaration"
msgstr "Объявление класса"

msgid ""
"If the code is meant to run in the editor, place the ``tool`` keyword on the "
"first line of the script."
msgstr ""
"Если код предназначен для запуска в редакторе, поместите ключевое слово `` "
"tool`` в первую строку скрипта."

msgid ""
"Follow with the `class_name` if necessary. You can turn a GDScript file into "
"a global type in your project using this feature. For more information, see :"
"ref:`doc_gdscript`."
msgstr ""
"При необходимости используйте `class_name`. С помощью этого свойства вы "
"можете превратить файл GDScript в глобальный тип вашего проекта. Для "
"получения дополнительной информации см.:ref:`doc_gdscript`."

msgid "Then, add the `extends` keyword if the class extends a built-in type."
msgstr ""
"Теперь, добавьте ключевое слово `extends`, если класс расширяет встроенный "
"тип."

msgid ""
"Following that, you should have the class's optional docstring as comments. "
"You can use that to explain the role of your class to your teammates, how it "
"works, and how other developers should use it, for example."
msgstr ""
"После этого, у вас должны быть строки документации (docstring) класса в виде "
"комментариев. Вы можете использовать их, например, чтобы объяснить вашим "
"товарищам по команде роль класса, как он работает и как другим разработчикам "
"следует использовать его."

msgid "Signals and properties"
msgstr "Сигналы и свойства"

msgid ""
"Write signal declarations, followed by properties, that is to say, member "
"variables, after the docstring."
msgstr ""
"Пишите объявления сигналов, затем свойства, иными словами, переменные-члены "
"после строки документации."

msgid ""
"Enums should come after signals, as you can use them as export hints for "
"other properties."
msgstr ""
"Перечисления должны идти после сигналов, так как вы можете использовать их в "
"качестве подсказок экспорта для других свойств."

msgid ""
"Then, write constants, exported variables, public, private, and onready "
"variables, in that order."
msgstr ""
"Затем, пишите константы, экспортированные переменные, модификаторы public, "
"private, и инициализированные переменные, в таком порядке."

msgid ""
"The GDScript compiler evaluates onready variables right before the "
"``_ready`` callback. You can use that to cache node dependencies, that is to "
"say, to get child nodes in the scene that your class relies on. This is what "
"the example above shows."
msgstr ""
"Компилятор GDScript вычисляет инициализированные переменные прямо перед "
"обратным вызовом``_ready``. Вы можете использовать это для кэширования "
"зависимости узлов, иными словами, получить дочерние узлы в сцене, на которую "
"опирается ваш класс. Пример выше показывает это."

msgid "Member variables"
msgstr "Переменные-члены"

msgid ""
"Don't declare member variables if they are only used locally in a method, as "
"it makes the code more difficult to follow. Instead, declare them as local "
"variables in the method's body."
msgstr ""
"Не объявляйте переменные-члены, если они используются только локально в "
"методе, так как это затрудняет выполнение кода. Вместо этого объявите их как "
"локальные переменные в теле метода."

msgid "Local variables"
msgstr "Локальные переменные"

msgid ""
"Declare local variables as close as possible to their first use. This makes "
"it easier to follow the code, without having to scroll too much to find "
"where the variable was declared."
msgstr ""
"Объявляйте локальные переменные как можно ближе к их первому использованию. "
"Это облегчает отслеживание кода, не требуя слишком большой прокрутки, чтобы "
"найти, где была объявлена переменная."

msgid "Methods and static functions"
msgstr "Методы и статические функции"

msgid "After the class's properties come the methods."
msgstr "После свойств класса идут методы."

msgid ""
"Start with the ``_init()`` callback method, that the engine will call upon "
"creating the object in memory. Follow with the ``_ready()`` callback, that "
"Godot calls when it adds a node to the scene tree."
msgstr ""
"Начните с метода обратного вызова ``_init()``, который будет вызван движком "
"при создании объекта в памяти. Затем следует обратный вызов `` _ready () ``, "
"который Godot вызывает при добавлении узла в дерево сцены."

msgid ""
"These functions should come first because they show how the object is "
"initialized."
msgstr ""
"Эти функции должны следовать первыми, так как они показывают, как "
"инициализируется объект."

msgid ""
"Other built-in virtual callbacks, like ``_unhandled_input()`` and "
"``_physics_process``, should come next. These control the object's main loop "
"and interactions with the game engine."
msgstr ""
"Другие встроенные виртуальные обратные вызовы, такие как "
"``_unhandled_input()`` и ``_physics_process``, должны следовать дальше. Они "
"контролируют основной цикл объекта и взаимодействие с игровым движком."

msgid ""
"The rest of the class's interface, public and private methods, come after "
"that, in that order."
msgstr ""
"Остальной интерфейс класса, публичные и приватные методы — следуют после, в "
"указанном порядке."

msgid "Static typing"
msgstr "Статическая типизация"

msgid ""
"Since Godot 3.1, GDScript supports :ref:`optional static "
"typing<doc_gdscript_static_typing>`."
msgstr ""
"Начиная с версии Godot 3.1, GDScript поддерживает :ref:`optional static "
"typing<doc_gdscript_static_typing>`."

msgid "Declared types"
msgstr "Объявленные типы"

msgid "To declare a variable's type, use ``<variable>: <type>``:"
msgstr ""
"Для объявление типа переменной, используйте конструкцию ``<переменная>: "
"<тип>``:"

msgid "To declare the return type of a function, use ``-> <type>``:"
msgstr ""
"Для объявления возвращаемого типа функции, используйте конструкцию ``-> "
"<тип>``:"

msgid "Inferred types"
msgstr "Определяемые типы"

msgid "In most cases you can let the compiler infer the type, using ``:=``:"
msgstr ""
"В большинстве случаев, вы можете позволить компилятору самому определять "
"типы, указав конструкцией ``:=``:"

msgid ""
"However, in a few cases when context is missing, the compiler falls back to "
"the function's return type. For example, ``get_node()`` cannot infer a type "
"unless the scene or file of the node is loaded in memory. In this case, you "
"should set the type explicitly."
msgstr ""
"В случаях, когда контекст отсутствует — компилятор прерывает работу и "
"указывает на неверный возвращаемый тип функции. К примеру, ``get_node()`` не "
"может вывести тип, если сцена или файл узла не прогружены. В этом случае, "
"задайте тип явно."

msgid ""
"Alternatively, you can use the ``as`` keyword to cast the return type, and "
"that type will be used to infer the type of the var."
msgstr ""
"В качестве альтернативы вы можете использовать ключевое слово ``as`` для "
"приведения типа возвращаемого значения, и этот тип будет использоваться для "
"определения типа переменной."

msgid ""
"This option is also considered more :ref:`type-"
"safe<doc_gdscript_static_typing_safe_lines>` than the first."
msgstr ""
"Этот вариант также считается больше :ref:`type-safe "
"<doc_gdscript_static_typing_safe_lines>`, чем первый."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
