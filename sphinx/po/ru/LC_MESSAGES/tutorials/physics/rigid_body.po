# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using RigidBody"
msgstr "Использование RigidBody"

msgid "What is a rigid body?"
msgstr "Что такое твёрдое тело?"

msgid ""
"A rigid body is one that is directly controlled by the physics engine in "
"order to simulate the behavior of physical objects. In order to define the "
"shape of the body, it must have one or more :ref:`Shape <class_Shape>` "
"objects assigned. Note that setting the position of these shapes will affect "
"the body's center of mass."
msgstr ""
"Твёрдое тело — это тело, которое непосредственно управляется физическим "
"движком для моделирования поведения физических объектов. Для определения "
"формы тела ему должен быть назначен один или несколько объектов :ref:`Shape "
"<class_Shape>`. Обратите внимание, что установка положения этих форм "
"повлияет на центр масс тела."

msgid "How to control a rigid body"
msgstr "Как управлять твёрдым телом"

msgid ""
"A rigid body's behavior can be altered by setting its properties, such as "
"mass and weight. A physics material needs to be added to the rigid body to "
"adjust its friction and bounce, and set if it's absorbent and/or rough. "
"These properties can be set in the Inspector or via code. See :ref:"
"`RigidBody <class_RigidBody>` and :ref:`PhysicsMaterial "
"<class_PhysicsMaterial>` for the full list of properties and their effects."
msgstr ""
"Поведение жесткого тела можно изменить, задав его свойства, такие как масса "
"и вес. Чтобы настроить трение и отскок, а так же установить, является ли он "
"поглощающим и/или твёрдым, к твёрдому телу необходимо добавить физический "
"материал. Эти свойства можно задать в инспекторе или с помощью кода. Полный "
"список свойств и их эффектов см. в разделах :ref:`RigidBody "
"<class_RigidBody>` и :ref:`PhysicsMaterial <class_PhysicsMaterial>`."

msgid ""
"There are several ways to control a rigid body's movement, depending on your "
"desired application."
msgstr ""
"Существует несколько способов управления движением твёрдого тела в "
"зависимости от потребности приложения."

msgid ""
"If you only need to place a rigid body once, for example to set its initial "
"location, you can use the methods provided by the :ref:`Spatial "
"<class_Spatial>` node, such as ``set_global_transform()`` or ``look_at()``. "
"However, these methods cannot be called every frame or the physics engine "
"will not be able to correctly simulate the body's state. As an example, "
"consider a rigid body that you want to rotate so that it points towards "
"another object. A common mistake when implementing this kind of behavior is "
"to use ``look_at()`` every frame, which breaks the physics simulation. "
"Below, we'll demonstrate how to implement this correctly."
msgstr ""
"Если Вам нужно поместить твёрдое тело только один раз, например, чтобы "
"задать его начальное местоположение, Вы можете использовать методы, "
"предоставляемые узлом :ref:`Spatial <class_Spatial>`, такие как "
"``set_global_transform()`` или ``look_at()``. Однако, эти методы нельзя "
"вызывать каждый кадр, иначе физический движок не сможет правильно "
"смоделировать состояние тела. В качестве примера рассмотрим твёрдое тело, "
"которое Вы хотите повернуть так, чтобы оно указывало на другой объект. "
"Распространенной ошибкой при реализации такого поведения является "
"использование ``look_at()`` каждый кадр, что нарушает физическую симуляцию. "
"Ниже мы покажем, как правильно реализовать это."

msgid ""
"The fact that you can't use ``set_global_transform()`` or ``look_at()`` "
"methods doesn't mean that you can't have full control of a rigid body. "
"Instead, you can control it by using the ``_integrate_forces()`` callback. "
"In this method, you can add *forces*, apply *impulses*, or set the "
"*velocity* in order to achieve any movement you desire."
msgstr ""
"Тот факт, что Вы не можете использовать методы ``set_global_transform()`` "
"или ``look_at()``, не означает, что вы не можете иметь полный контроль над "
"твёрдым телом. Вместо этого можно управлять им с помощью обратного вызова "
"``_integrate_forces ()``. В этом методе можно добавлять *силы*, прикладывать "
"*импульсы*, или задавать *скорость* для достижения любого нужного движения."

msgid "The \"look at\" method"
msgstr "Метод «look at»"

msgid ""
"As described above, using the Spatial node's ``look_at()`` method can't be "
"used each frame to follow a target. Here is a custom ``look_at()`` method "
"that will work reliably with rigid bodies:"
msgstr ""
"Как описано выше, метод ``look_at()`` узла Spatial нельзя использовать "
"каждый кадр для следования за целью. Вот пользовательский метод ``look_at "
"()``, который будет надежно работать с твёрдыми телами:"

msgid ""
"This method uses the rigid body's ``set_angular_velocity()`` method to "
"rotate the body. It first calculates the difference between the current and "
"desired angle and then adds the velocity needed to rotate by that amount in "
"one frame's time."
msgstr ""
"Этот метод использует метод твёрдого тела ``set_angular_velocity()`` для "
"поворота. Сначала вычисляется разность между текущим и требуемым углом, а "
"затем добавляется скорость, необходимая для поворота на эту величину за одно "
"время кадра."

msgid ""
"This script will not work with rigid bodies in *character mode* because "
"then, the body's rotation is locked. In that case, you would have to rotate "
"the attached mesh node instead using the standard Spatial methods."
msgstr ""
"Этот скрипт не будет работать с твёрдыми телами в *режиме персонажа*, потому "
"что в этом случае поворот тела заблокирован. Вместо этого необходимо "
"повернуть присоединенный узел сетки с помощью стандартных методов Spatial."

msgid "Translation status"
msgstr "Translation status (статус перевода)"
