# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Particle shaders"
msgstr "Частицы"

msgid ""
"Particle shaders are a special type of vertex shader that runs before the "
"object is drawn. They are used for calculating material properties such as "
"color, position, and rotation. They are drawn with any regular material for "
"CanvasItem or Spatial, depending on whether they are 2D or 3D."
msgstr ""

msgid ""
"Particle shaders are unique because they are not used to draw the object "
"itself; they are used to calculate particle properties, which are then used "
"by the CanvasItem of Spatial shader. They contain only a vertex processor "
"function that outputs multiple properties (see built-ins below)."
msgstr ""

msgid ""
"Particle shaders use a transform feedback shader, which is a special type of "
"vertex shader that runs on its own. It takes in data in a buffer like a "
"regular vertex shader does, but it also outputs to data buffers instead of "
"outputting to the fragment shader for pixel-processing. Because of this, "
"transform feedback shaders can build on themselves each run, unlike other "
"shaders that discard the data they have calculated once they draw to the "
"frame buffer."
msgstr ""
"Шейдеры частиц используют шейдер обратной связи с трансформацией, который "
"представляет собой особый тип вершинного шейдера, работающего "
"самостоятельно. Он принимает данные в буфер, как обычный вершинный шейдер, "
"но также выводит их в буфер данных, а не в шейдер фрагментов для обработки "
"пикселей. Благодаря этому шейдеры с обратной связью могут наращивать свои "
"данные при каждом запуске, в отличие от других шейдеров, которые отбрасывают "
"вычисленные ими данные после отрисовки в буфер кадра."

msgid ""
"Particle shaders are only available in the GLES3 backend. If you need "
"particles in GLES2, use :ref:`CPUParticles <class_CPUParticles>`."
msgstr ""

msgid "Render modes"
msgstr "Режимы визуализации"

#, fuzzy
msgid "Render mode"
msgstr "Опции Отрисовки"

msgid "Description"
msgstr "Описание"

msgid "**keep_data**"
msgstr "**kеep_data**"

msgid "Do not clear previous data on restart."
msgstr ""

msgid "**disable_force**"
msgstr "**disаble_force**"

msgid "Disable attractor force. (Not currently implemented in 3.1)"
msgstr ""

msgid "**disable_velocity**"
msgstr "**disаble_velocity**"

msgid "Ignore **VELOCITY** value."
msgstr ""

#, fuzzy
msgid "Built-ins"
msgstr "Встроенный"

msgid ""
"Values marked as \"in\" are read-only. Values marked as \"out\" are for "
"optional writing and will not necessarily contain sensible values. Values "
"marked as \"inout\" provide a sensible default value, and can optionally be "
"written to. Samplers are not subjects of writing and they are not marked."
msgstr ""

#, fuzzy
msgid "Global built-ins"
msgstr "Векторные встроенные типы"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

msgid "Built-in"
msgstr "Встроенный"

msgid "in float **TIME**"
msgstr ""

msgid "Global time, in seconds."
msgstr ""

#, fuzzy
msgid "Vertex built-ins"
msgstr "Векторные встроенные типы"

msgid ""
"In order to use the ``COLOR`` variable in a SpatialMaterial, set "
"``use_vertex_as_albedo`` to ``true``. In a ShaderMaterial, access it with "
"the ``COLOR`` variable."
msgstr ""

msgid "inout vec4 **COLOR**"
msgstr ""

msgid ""
"Particle color, can be written to and accessed in mesh's vertex function."
msgstr ""

msgid "inout vec3 **VELOCITY**"
msgstr ""

msgid "Particle velocity, can be modified."
msgstr ""

msgid "out float **MASS**"
msgstr ""

msgid "Particle mass, use for attractors (not implemented in 3.1)."
msgstr ""

msgid "inout bool **ACTIVE**"
msgstr ""

msgid "``true`` when Particle is active, can be set to ``false``."
msgstr ""

msgid "in bool **RESTART**"
msgstr ""

msgid "``true`` when particle must restart (lifetime cycled)."
msgstr ""

msgid "inout vec4 **CUSTOM**"
msgstr ""

msgid ""
"Custom particle data. Accessible from shader of mesh as **INSTANCE_CUSTOM**."
msgstr ""

msgid "inout mat4 **TRANSFORM**"
msgstr ""

msgid "Particle transform."
msgstr ""

msgid "in float **LIFETIME**"
msgstr ""

msgid "Particle lifetime."
msgstr ""

msgid "in float **DELTA**"
msgstr ""

msgid "Delta process time."
msgstr ""

msgid "in uint **NUMBER**"
msgstr ""

msgid "Unique number since emission start."
msgstr ""

msgid "in int **INDEX**"
msgstr ""

msgid "Particle index (from total particles)."
msgstr ""

msgid "in mat4 **EMISSION_TRANSFORM**"
msgstr ""

msgid "Emitter transform (used for non-local systems)."
msgstr ""

msgid "in uint **RANDOM_SEED**"
msgstr ""

msgid "Random seed used as base for random."
msgstr ""

msgid "Translation status"
msgstr "Translation status (статус перевода)"
