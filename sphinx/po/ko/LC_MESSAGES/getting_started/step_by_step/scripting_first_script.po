# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Creating your first script"
msgstr "스크립트 만들기(Creating a script)"

msgid ""
"In this lesson, you will code your first script to make the Godot icon turn "
"in circles using GDScript. As we mentioned :ref:`in the introduction <toc-"
"learn-introduction>`, we assume you have programming foundations. The "
"equivalent C# code has been included in another tab for convenience."
msgstr ""
"이번 레슨에서는 GDScript를 사용하여 Godot 아이콘이 원을 그리며 회전하는 첫 번"
"째 스크립트를 코딩해 보겠습니다. 소개 <toc-learn-introduction>`에서 :ref:`를 "
"언급했듯이, 당신이 프로그래밍 기초 지식이 있는 상태라고 가정합니다. 편의를 위"
"해, 동일한 동작을 하는 C# 코드가 다른 탭에 있습니다."

msgid ""
"To learn more about GDScript, its keywords, and its syntax, head to the :ref:"
"`GDScript reference<doc_gdscript>`."
msgstr ""
"GDScript의 키워드와 문법에 대해 좀 더 알아보려면 :ref:`GDScript 참조"
"<doc_gdscript>`를 참조하세요."

#, fuzzy
msgid ""
"To learn more about C#, head to the :ref:`C# basics <doc_c_sharp>` page."
msgstr "더 자세한 내용은, :ref:`doc_c_sharp_differences` 페이지를 참고하세요."

msgid "Project setup"
msgstr "프로젝트 설정하기"

msgid ""
"Please create a new project to start with a clean slate. Your project should "
"contain one picture: the Godot icon, which we often use for prototyping in "
"the community."
msgstr ""
"초기 상태에서 시작하기 위해 새 프로젝트를 만드세요. 당신의 프로젝트에는 하나"
"의 그림이 포함되어야 합니다: 우리가 커뮤니티에서 프로토타이핑에 자주 사용하"
"는 Godot 아이콘입니다."

msgid ""
"We need to create a Sprite node to display it in the game. In the Scene "
"dock, click the Other Node button."
msgstr ""
"게임에 표시하기 위해 Sprite 노드를 만들어야 합니다. 씬 독에서 기타(Other) 노"
"드 버튼을 클릭합니다."

msgid ""
"Type \"Sprite\" in the search bar to filter nodes and double-click on Sprite "
"to create the node."
msgstr ""
"검색 창에 \"Sprite\"를 입력하여 노드를 필터링하고 Sprite를 두 번 클릭하여 노"
"드를 만듭니다."

msgid "Your Scene tab should now only have a Sprite node."
msgstr "현재 씬 탭에는 Sprite 노드만 있어야 합니다."

msgid ""
"A Sprite node needs a texture to display. In the Inspector on the right, you "
"can see that the Texture property says \"[empty]\". To display the Godot "
"icon, click and drag the file ``icon.png`` from the FileSystem dock onto the "
"Texture slot."
msgstr ""
"Sprite 노드에는 표시할 텍스처가 필요합니다. 오른쪽 Inspector에서 Texture 속성"
"에 \"[empty]\"라고 표시된 것을 볼 수 있습니다. Godot 아이콘을 표시하려면 "
"FileSystem 독에서 ``icon.png`` 파일을 클릭하여 텍스처 슬롯으로 드래그하세요."

msgid ""
"You can create Sprite nodes automatically by dragging and dropping images on "
"the viewport."
msgstr ""
"뷰포트에 이미지를 드래그 앤 드롭하여 Sprite 노드를 자동으로 생성할 수 있습니"
"다."

msgid ""
"Then, click and drag the icon in the viewport to center it in the game view."
msgstr ""
"그런 다음 뷰포트에서 아이콘을 클릭하고 드래그하여 게임 뷰 중앙에 배치합니다."

#, fuzzy
msgid "Creating a new script"
msgstr "스크립트 만들기(Creating a script)"

msgid ""
"To create and attach a new script to our node, right-click on Sprite in the "
"scene dock and select \"Attach Script\"."
msgstr ""
"새 스크립트를 생성하고 노드에 연결하려면 씬 독에서 Sprite를 마우스 오른쪽 버"
"튼으로 클릭하고 \"스크립트 연결\"을 선택하세요."

#, fuzzy
msgid ""
"The Attach Node Script window appears. It allows you to select the script's "
"language and file path, among other options."
msgstr ""
"스크립트 생성 대화 상자가 나타납니다. 여기서 스크립트 언어, 클래스 이름 및 기"
"타 관련 옵션을 설정할 수 있습니다."

msgid ""
"Change the Template from Default to Empty to start with a clean file. Leave "
"the other options by default and click the Create button to create the "
"script."
msgstr ""
"초기 상태의 파일로 시작하려면 템플릿을 '기본값'에서 '비어 있음'으로 변경하세"
"요. 다른 옵션은 기본으로 두고 생성 버튼을 클릭하여 스크립트를 생성합니다."

msgid ""
"The Script workspace should appear with your new ``Sprite.gd`` file open and "
"the following line of code:"
msgstr ""
"스크립트 작업공간은 새 ``Sprite.gd`` 파일이 열려 있고 다음 코드 줄이 나타나"
"야 합니다:"

msgid ""
"Every GDScript file is implicitly a class. The ``extends`` keyword defines "
"the class this script inherits or extends. In this case, it's ``Sprite``, "
"meaning our script will get access to all the properties and functions of "
"the Sprite node, including classes it extends, like ``Node2D``, "
"``CanvasItem``, and ``Node``."
msgstr ""
"모든 GDScript 파일은 암시적으로 클래스입니다. ``extends`` 키워드는 이 스크립"
"트가 상속하거나 확장하는 클래스를 정의합니다. 지금 예시에서는 ``Sprite``입니"
"다. 즉, 스크립트는 ``Node2D``, ``CanvasItem`` 및 ``Node2D``, ``CanvasItem`` "
"및 ``Node 등의 확장되는 클래스를 포함하여 Sprite 노드의 모든 속성과 기능에 액"
"세스할 수 있습니다. ``."

msgid ""
"In GDScript, if you omit the line with the ``extends`` keyword, your class "
"will implicitly extend :ref:`Reference <class_Reference>`, which Godot uses "
"to manage your application's memory."
msgstr ""
"GDScript에서 ``extends`` 키워드가 있는 줄을 생략하면 클래스는 Godot가 애플리"
"케이션의 메모리를 관리하는 데 사용하는 :ref:`Reference <class_Reference>`를 "
"암시적으로 확장합니다."

msgid ""
"Inherited properties include the ones you can see in the Inspector dock, "
"like our node's ``texture``."
msgstr ""
"상속된 속성에는 노드의 ``텍스처``와 같이 인스펙터 독에서 볼 수 있는 속성이 포"
"함됩니다."

msgid ""
"By default, the Inspector displays a node's properties in \"Title Case\", "
"with capitalized words separated by a space. In GDScript code, these "
"properties are in \"snake_case\", which is lowercase with words separated by "
"an underscore."
msgstr ""
"기본적으로 인스펙터는 노드의 속성을 \"Title Case\"(공백으로 구분되며 대문자"
"로 시작하는 단어 형태)로 표시합니다. GDScript 코드에서 이러한 속성은 "
"\"snake_case\"(밑줄로 구분되며 소문자로 이루어진 단어 형태)로 표기됩니다."

msgid ""
"You can hover any property's name in the Inspector to see a description and "
"its identifier in code."
msgstr ""
"인스펙터에서 속성 이름에 마우스 커서를 올리면 속성에 대한 설명과, 코드 상에서"
"의 식별자를 볼 수 있습니다."

#, fuzzy
msgid "Hello, world!"
msgstr "Hello, friend!"

msgid ""
"Our script currently doesn't do anything. Let's make it print the text "
"\"Hello, world!\" to the Output bottom panel to get started."
msgstr ""
"우리 스크립트는 현재 아무것도 하지 않습니다. 시작으로 하단의 Output 패널에 "
"\"Hello, world!\"라는 텍스트를 출력해 보겠습니다."

msgid "Add the following code to your script:"
msgstr "다음 코드를 스크립트에 추가하세요:"

msgid ""
"Let's break it down. The ``func`` keyword defines a new function named "
"``_init``. This is a special name for our class's constructor. The engine "
"calls ``_init()`` on every object or node upon creating it in memory, if you "
"define this function."
msgstr ""
"내용을 분석해 봅시다. ``func`` 키워드는 ``_init``이라는 이름의 새로운 함수를 "
"정의합니다. 이는 우리 클래스 생성자에서 사용하는 특별한 이름입니다. 이 함수"
"를 정의하면 엔진은 메모리에 생성된 모든 개체나 노드에 대해 ``_init()``를 호출"
"합니다."

msgid ""
"GDScript is an indent-based language. The tab at the start of the line that "
"says ``print()`` is necessary for the code to work. If you omit it or don't "
"indent a line correctly, the editor will highlight it in red and display the "
"following error message: \"Indented block expected\"."
msgstr ""
"GDScript는 들여쓰기 기반의 언어입니다. ``print()``가 작성된 라인의 시작 부분"
"의 탭은 코드가 동작하기 위해 반드시 필요합니다. 이를 생략하거나 줄을 알맞게 "
"들여쓰지 않으면 편집기에서 해당 항목을 빨간색으로 강조 표시하고 다음과 같은 "
"오류 메시지를 표시합니다:\"들여쓰기 된 블록이 필요합니다\"."

msgid ""
"Save the scene if you haven't already, then press :kbd:`F6` (:kbd:`Cmd + R` "
"on macOS) to run it. Look at the **Output** bottom panel that expands. It "
"should display \"Hello, world!\"."
msgstr ""
"아직 저장하지 않았다면 씬을 저장한 다음 :kbd:`F6`(macOS에서는:kbd:`Cmd + R`)"
"을 눌러 실행하세요. 하단의 **Output** 패널을 살펴보세요. \"Hello, world!\"가 "
"표시되어야 합니다."

msgid ""
"Delete the ``_init()`` function, so you're only left with the line ``extends "
"Sprite``."
msgstr "``_init()`` 함수를 삭제해 ``extends Sprite`` 줄만 남깁니다."

msgid "Turning around"
msgstr "되돌아보기"

msgid ""
"It's time to make our node move and rotate. To do so, we're going to add two "
"member variables to our script: the movement speed in pixels per second and "
"the angular speed in radians per second."
msgstr ""
"이제 노드를 움직이고 회전시킬 차례입니다. 이를 위해 스크립트에 두 개의 멤버 "
"변수, 즉 초당 픽셀 이동 속도와 초당 라디안 각속도를 추가하겠습니다."

msgid ""
"Member variables sit near the top of the script, after any \"extends\" "
"lines, but before functions. Every node instance with this script attached "
"to it will have its own copy of the ``speed`` and ``angular_speed`` "
"properties."
msgstr ""
"멤버 변수는 스크립트 상단 부근의 \"extends\" 줄 보다는 뒤에, 함수 보다는 앞"
"에 위치합니다. 이 스크립트가 첨부된 모든 노드 인스턴스는 ``speed`` 및 "
"``angular_speed`` 속성의 복사본을 갖게 됩니다."

msgid ""
"Angles in Godot work in radians by default, but you have built-in functions "
"and properties available if you prefer to calculate angles in degrees "
"instead."
msgstr ""
"Godot에서 각도는 기본적으로 라디안으로 동작하지만, 각도를 도 단위로 계산하는 "
"것을 선호하는 경우 사용할 수 있는 내장 함수와 속성도 있습니다."

msgid ""
"To move our icon, we need to update its position and rotation every frame in "
"the game loop. We can use the ``_process()`` virtual function of the "
"``Node`` class. If you define it in any class that extends the Node class, "
"like Sprite, Godot will call the function every frame and pass it an "
"argument named ``delta``, the time elapsed since the last frame."
msgstr ""
"아이콘을 이동하기 위해서는, 게임 루프에서 매 프레임마다 아이콘의 위치와 방향"
"을 업데이트해야 합니다. 이를 위해 ``Node`` 클래스의 가상 함수인"
"``_process()`` 함수를 사용할 수 있습니다. Node 클래스를 확장하는 클래스"
"(Sprite 등)에서 정의하면 Godot는 매 프레임마다 함수를 호출하고, 마지막 프레"
"임 이후 경과된 시간인 ``delta``라는 인수를 전달합니다."

msgid ""
"Games work by rendering many images per second, each called a frame, and "
"they do so in a loop. We measure the rate at which a game produces images in "
"Frames Per Second (FPS). Most games aim for 60 FPS, although you might find "
"figures like 30 FPS on slower mobile devices or 90 to 240 for virtual "
"reality games."
msgstr ""
"게임은 초당 많은 이미지(각각을 프레임이라 부름)를 렌더링하는 방식으로 작동하"
"며, 반복해서 동작합니다. 우리는 초당 프레임 수(FPS)로 게임이 이미지를 생성하"
"는 속도를 측정합니다. 대부분의 게임은 60FPS를 목표로 하지만 느린 모바일 장치"
"에서는 30FPS, 가상 현실 게임에서는 90~240FPS와 정도의 수치를 볼 수 있습니다."

msgid ""
"The engine and game developers do their best to update the game world and "
"render images at a constant time interval, but there are always small "
"variations in frame render times. That's why the engine provides us with "
"this delta time value, making our motion independent of our framerate."
msgstr ""
"엔진과 게임 개발자는 일정한 시간 간격으로 게임 세계를 업데이트하고 이미지를 "
"렌더링하기 위해 최선을 다하지만, 프레임 렌더링 시간에는 항상 작은 차이가 있습"
"니다. 이것이 바로 엔진이 우리에게 델타 시간 값을 제공하여 움직임을 프레임 속"
"도와 독립적으로 만드는 이유입니다."

msgid "At the bottom of the script, define the function:"
msgstr "스크립트 하단에, 아래와 같은 함수를 정의합니다:"

msgid ""
"The ``func`` keyword defines a new function. After it, we have to write the "
"function's name and arguments it takes in parentheses. A colon ends the "
"definition, and the indented blocks that follow are the function's content "
"or instructions."
msgstr ""
"``func`` 키워드는 새로운 함수를 정의합니다. 이 키워드 뒤에는 함수의 이름과 인"
"수를 괄호 안에 적어야 합니다. 콜론으로 정의를 끝내고, 이후의 들여쓰기 된 블록"
"은 함수의 내용이나 명령입니다."

msgid ""
"Notice how ``_process()``, like ``_init()``, starts with a leading "
"underscore. By convention, Godot's virtual functions, that is to say, built-"
"in functions you can override to communicate with the engine, start with an "
"underscore."
msgstr ""
"``_init()``과 마찬가지로 ``_process()``가 밑줄로 시작한다는 걸 주목하세요. 관"
"례적으로, Godot의 가상 함수, 즉 엔진과 통신하기 위해 오버라이딩 할 수 있는 내"
"장 함수는 밑줄로 시작합니다."

msgid ""
"The line inside the function, ``rotation += angular_speed * delta``, "
"increments our sprite's rotation every frame. Here, ``rotation`` is a "
"property inherited from the class ``Node2D``, which ``Sprite`` extends. It "
"controls the rotation of our node and works with radians."
msgstr ""
"함수 내부의 ``rotation += angular_speed * delta`` 줄은 매 프레임마다 스프라이"
"트의 회전을 증가시킵니다. 여기서 ``rotation``은 ``Sprite``가 상속하는 "
"``Node2D`` 클래스에서 상속된 프로퍼티입니다. 이 프로퍼티는 노드의 회전을 제어"
"하며 라디안(radians)으로 작동합니다."

msgid ""
"In the code editor, you can ctrl-click on any built-in property or function "
"like ``position``, ``rotation``, or ``_process`` to open the corresponding "
"documentation in a new tab."
msgstr ""
"코드 에디터에서, ``position``, ``rotation`` 또는 ``_process``와 같은 내장된 "
"속성 혹은 함수 위에서 Ctrl + 클릭을 하면 관련된 문서가 새로운 탭으로 나타납니"
"다."

msgid "Run the scene to see the Godot icon turn in-place."
msgstr "씬을 실행하여 Godot 아이콘이 제자리에서 돌아가는 것을 확인하세요."

#, fuzzy
msgid "Moving forward"
msgstr "앞으로"

msgid ""
"Let's now make the node move. Add the following two lines to the "
"``_process()`` function, ensuring the new lines are indented the same way as "
"the one before them."
msgstr ""
"이제 노드를 이동시켜 보겠습니다. 새 줄이 이전 줄과 같은 방식으로 들여쓰기 되"
"도록 유의하며 ``_process()`` 함수에 다음 두 줄을 추가합니다."

msgid ""
"As we already saw, the ``var`` keyword defines a new variable. If you put it "
"at the top of the script, it defines a property of the class. Inside a "
"function, it defines a local variable: it only exists within the function's "
"scope."
msgstr ""
"이미 살펴보았듯이 ``var`` 키워드는 새로운 변수를 정의합니다. 이를 스크립트 상"
"단에 넣으면, 클래스의 속성을 정의합니다. 함수 내부에서는 지역 변수(함수 범위 "
"내에서만 존재)를 정의합니다."

msgid ""
"We define a local variable named ``velocity``, a 2D vector representing both "
"a direction and a speed. To make the node move forward, we start from the "
"Vector2 class's constant Vector2.UP, a vector pointing up, and rotate it by "
"calling the ``Vector2.rotated()`` method. This expression, ``Vector2.UP."
"rotated(rotation)``, is a vector pointing forward relative to our icon. "
"Multiplied by our ``speed`` property, it gives us a velocity we can use to "
"move the node forward."
msgstr ""
"방향과 속도를 모두 나타내는 2D 벡터인 'velocity'라는 지역 변수를 정의합니다. "
"노드가 앞으로 이동하도록 하려면 위쪽을 가리키는 벡터인 Vector2 클래스의 상수"
"인 Vector2.UP에서 ``Vector2.rotated()`` 메서드를 호출하여 이를 회전시킵니다. "
"``Vector2.UP.rotated(rotation)``라는 표현은 아이콘을 기준으로 앞으로 향하는 "
"벡터입니다. ``speed`` 속성을 곱하면 노드를 앞으로 이동하기 위한 속도가 적용됩"
"니다."

msgid ""
"We add ``velocity * delta`` to the node's ``position`` to move it. The "
"position itself is of type :ref:`Vector2 <class_Vector2>`, a built-in type "
"in Godot representing a 2D vector."
msgstr ""
"노드의 ``position``에 ``velocity * delta``를 더하여 이동합니다. position 자체"
"는 2D 벡터를 나타내는 Godot에 내장된 타입인 :ref:`Vector2 <class_Vector2>` 타"
"입입니다."

msgid "Run the scene to see the Godot head run in circles."
msgstr "씬을 실행하여 Godot 머리가 원을 그리며 움직이는 것을 확인하세요."

msgid ""
"Moving a node like that does not take into account colliding with walls or "
"the floor. In :ref:`doc_your_first_2d_game`, you will learn another approach "
"to moving objects while detecting collisions."
msgstr ""
"지금의 노드 이동은 벽이나 바닥과의 충돌을 고려하지 않고 있습니다. :ref:"
"`doc_your_first_2d_game`에서는 충돌을 감지하면서 물체를 움직이는 또 다른 접"
"근 방식을 배워볼 것입니다."

msgid ""
"Our node currently moves by itself. In the next part :ref:"
"`doc_scripting_player_input`, we'll use player input to control it."
msgstr ""
"우리 노드는 현재 스스로 움직입니다. 다음 파트 :ref:"
"`doc_scripting_player_input`에서는 플레이어 입력을 사용하여 제어합니다."

#, fuzzy
msgid "Complete script"
msgstr "GDScript 예제"

msgid "Here is the complete ``Sprite.gd`` file for reference."
msgstr "참조용 전체 ``Sprite.gd`` 파일은 다음과 같습니다."

msgid "Translation status"
msgstr "번역 상태"
