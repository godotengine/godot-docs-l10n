# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up the project"
msgstr "프로젝트 설정하기"

msgid "In this short first part, we'll set up and organize the project."
msgstr ""

#, fuzzy
msgid "Launch Godot and create a new project."
msgstr "새 프로젝트 만들기"

msgid "GDScript"
msgstr "GDScript"

#, fuzzy
msgid ""
"Download :download:`dodge_assets.zip <files/dodge_assets.zip>`. The archive "
"contains the images and sounds you'll be using to make the game. Extract the "
"archive and move the ``art/`` and ``fonts/`` directories to your project's "
"directory."
msgstr ""
"Godot를 실행하고 새 프로젝트를 만드세요. 그런 다음 :download:`dodge_assets."
"zip <files/dodge_assets.zip>`\\ 을 다운로드하세요. 여기에는 게임에 쓸 이미지"
"와 소리가 포함되어 있습니다. 프로젝트 폴더에서 압축을 풀어줍니다."

msgid "C#"
msgstr "C#"

msgid ""
"Ensure that you have the required dependencies to use C# in Godot. You need "
"the .NET Core 3.1 SDK, and an editor such as VS Code. See :ref:"
"`doc_c_sharp_setup`."
msgstr ""

#, fuzzy
msgid "GDNative C++"
msgstr "GDNative / C++"

msgid ""
"Download :download:`dodge_assets_with_gdnative.zip <files/"
"dodge_assets_with_gdnative.zip>`. The archive contains the images and sounds "
"you'll be using to make the game. It also contains a starter GDNative "
"project including a ``SConstruct`` file, a ``dodge_the_creeps.gdnlib`` file, "
"a ``player.gdns`` file, and an ``entry.cpp`` file."
msgstr ""

msgid ""
"Ensure that you have the required dependencies to use GDNative C++. You need "
"a C++ compiler such as GCC or Clang or MSVC that supports C++14. On Windows "
"you can download Visual Studio 2019 and select the C++ workload. You also "
"need SCons to use the build system (the SConstruct file). Then you need to "
"`download the Godot C++ bindings <https://github.com/godotengine/godot-"
"cpp>`_ and place them in your project."
msgstr ""

#, fuzzy
msgid "Your project folder should look like this."
msgstr "씬 트리는 다음과 같아야 합니다:"

#, fuzzy
msgid ""
"This game is designed for portrait mode, so we need to adjust the size of "
"the game window. Click on *Project -> Project Settings* to open the project "
"settings window and in the left column, open the *Display -> Window* tab. "
"There, set \"Width\" to ``480`` and \"Height\" to ``720``."
msgstr ""
"이 게임은 세로 모드를 사용합니다. 따라서 게임 창의 크기를 조정해야 합니다. 프"
"로젝트(Project) -> 프로젝트 설정(Project Settings) -> Display -> Window를 클"
"릭하고 \"Width\"를 ``480``\\ 으로, \"Height\"을 ``720``\\ 으로 설정하세요."

#, fuzzy
msgid ""
"Also, scroll down to the bottom of the section and, under the \"Stretch\" "
"options, set ``Mode`` to \"2d\" and ``Aspect`` to \"keep\". This ensures "
"that the game scales consistently on different sized screens."
msgstr ""
"또한 이 섹션의 \"Stretch\" 옵션에서 ``Mode``\\ 를 \"2d\"로, ``Aspect``\\ 를 "
"\"keep\"으로 설정하세요. 이렇게 하면 게임이 다양한 크기의 화면에서 일관되게 "
"확장됩니다."

msgid "Organizing the project"
msgstr "프로젝트 조직하기"

msgid ""
"In this project, we will make 3 independent scenes: ``Player``, ``Mob``, and "
"``HUD``, which we will combine into the game's ``Main`` scene."
msgstr ""

#, fuzzy
msgid ""
"In a larger project, it might be useful to create folders to hold the "
"various scenes and their scripts, but for this relatively small game, you "
"can save your scenes and scripts in the project's root folder, identified by "
"``res://``. You can see your project folders in the FileSystem dock in the "
"lower left corner:"
msgstr ""
"이 프로젝트에서는 ``Player``, ``Mob``, ``HUD``\\ 의 3개의 독립적인 씬을 만들"
"고 게임의 ``Main`` 씬으로 결합할 것입니다. 더 큰 프로젝트에서는 다양한 씬과 "
"해당 스크립트를 저장할 폴더를 만드는 것이 유용할 수 있지만 이와 같이 비교적 "
"작은 게임의 경우 ``res://``\\ 로 식별되는 프로젝트의 루트 폴더에 씬과 스크립"
"트를 저장할 수 있습니다. 왼쪽 아래의 파일시스템(FileSystem) 독에서 프로젝트 "
"폴더를 볼 수 있습니다:"

msgid ""
"With the project in place, we're ready to design the player scene in the "
"next lesson."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
