# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "The main game scene"
msgstr "씬 테스트하기"

msgid ""
"Now it's time to bring everything we did together into a playable game scene."
msgstr ""

#, fuzzy
msgid ""
"Create a new scene and add a :ref:`Node <class_Node>` named ``Main``. (The "
"reason we are using Node instead of Node2D is because this node will be a "
"container for handling game logic. It does not require 2D functionality "
"itself.)"
msgstr ""
"이제 모든 것을 하나로 모을 때입니다. 새 장면을 만들고 ``Main``\\ 이라는 이름"
"의 :ref:`Node <class_Node>`\\ 를 추가하세요. Node2D가 아닌 **Node**\\ 를 만들"
"어야 합니다. \"인스턴스화(Instance)\" 버튼을 클릭하고 저장된 ``Player."
"tscn``\\ 을 선택하세요."

msgid ""
"Click the **Instance** button (represented by a chain link icon) and select "
"your saved ``Player.tscn``."
msgstr ""

msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"``Main`` 의 자식으로 다음의 노드들을 추가하고, 설명대로 이름을 지으세요 (값"
"은 초 단위입니다):"

msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (``MobTimer`` 라고 이름지음) - 얼마나 자주 몹이 스"
"폰하는지를 조절하기 위해 사용"

msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (``ScoreTimer`` 라고 이름지음) - 매 초마다 점수를 "
"증가시키기 위해 사용"

msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (``StratTimer`` 라고 이름지음) - 시작하기 전에 지"
"연시간을 주기 위해 사용"

msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (``StartPosition`` 이라고 이름지음) - 플"
"레이어의 시작 지점을 표시하기 위해 사용"

msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr "각 ``Timer``\\ 마다 ``Wait Time`` 속성을 다음과 같이 설정하세요:"

msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"그리고, ``StartTimer`` 속성의 ``One Shot``\\ 을 \"사용(On)\"으로 설정하고 "
"``StartPosition`` 노드의 ``Position``\\ 을 ``(240, 450)`` 으로 설정하세요."

msgid "Spawning mobs"
msgstr "몹 스폰하기"

msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"메인 노드는 새로운 몹을 스폰할 것이고 우리는 몹이 화면 모서리 아무 위치에서"
"나 나타나도록 만들고 싶습니다. :ref:`Path2D <class_Path2D>` 노드를 "
"``Main``\\ 의 자식으로 추가하고 ``MobPath``\\ 라고 이름지으세요. "
"``Path2D``\\ 를 선택하면 편집기 위쪽에 새로운 버튼들이 나타납니다:"

msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Use Grid Snap\" and \"Use Snap\" are both selected. These options can "
"be found to the left of the \"Lock\" button, appearing as a magnet next to "
"some dots and intersecting lines, respectively."
msgstr ""
"가운데 버튼 \"점 추가(Add Point)\"을 선택하고 점을 추가하기 위해 표시된 모서"
"리를 클릭해서 경로를 그리세요. 점이 그리드에 스냅(snap)되도록 하려면 \"격자 "
"스냅 사용(Use Grid Snap)\" 및 \"스냅 사용(Use Snap)\"이 모두 선택되어 있는지 "
"확인하세요. 이 옵션은 \"잠금(Lock)\" 버튼 왼쪽에서 찾을 수 있으며, 각각 점과 "
"교차선 옆에 자석이 있는 모양입니다."

msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"*시계 방향* 으로 그리세요, 그렇지 않으면 몹들은 *안쪽* 이 아닌 *바깥쪽* 으로 "
"향할 것입니다!"

msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"이미지에서 ``4``\\ 개의 점을 찍고 난 후, \"곡선 닫기(Close Curve)\" 버튼을 누"
"르면 곡선이 완성됩니다."

msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"이제 경로를 정의하기 위해 :ref:`PathFollow2D <class_PathFollow2D>` 노드를 "
"``MobPath``\\ 의 자식으로 추가한 후 ``MobSpawnLocation``\\ 이라고 이름지으세"
"요. 이 노드는 자동으로 회전하고 이동하면서 경로를 따라갈 것입니다, 그러므로 "
"경로를 따라 임의의 위치와 방향을 선택하기 위해 이것을 사용할 수 있습니다."

msgid "Your scene should look like this:"
msgstr "씬 트리는 다음과 같아야 합니다:"

msgid "Main script"
msgstr "메인 스크립트"

msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"``Main``\\ 에 스크립트를 추가합니다. 스크립트의 위에 ``export "
"(PackedScene)``\\ 를 사용해서 우리가 인스턴스화하길 원하는 몹 씬을 고를 수 있"
"도록 만듭니다."

msgid ""
"We also add a call to ``randomize()`` here so that the random number "
"generator generates different random numbers each time the game is run:"
msgstr ""

#, fuzzy
msgid ""
"Click the ``Main`` node and you will see the ``Mob Scene`` property in the "
"Inspector under \"Script Variables\"."
msgstr ""
"``Main`` 노드를 클릭하면 인스펙터(Inspector)의 \"Script Variables\" 아래에서 "
"``Mob`` 속성을 볼 수 있습니다."

msgid "You can assign this property's value in two ways:"
msgstr "다음 두 가지 방법으로 이 속성의 값을 할당할 수 있습니다:"

#, fuzzy
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" dock and drop it in the **Mob "
"Scene** property."
msgstr ""
"\"파일시스템(FileSystem)\" 패널에서 ``Mob.tscn``\\ 을 ``Main`` 노드의 스크립"
"트 속성 아래 ``Mob`` 속성에 끌어다 놓으세요."

msgid ""
"Click the down arrow next to \"[empty]\" and choose \"Load\". Select ``Mob."
"tscn``."
msgstr ""
"\"[비었음]([empty])\" 옆에 있는 아래쪽 화살표를 클릭하고 \"불러오기"
"(Load)\"를 선택하세요. ``Mob.tscn``\\ 을 선택하세요."

msgid ""
"Next, select the ``Player`` node in the Scene dock, and access the Node dock "
"on the sidebar. Make sure to have the Signals tab selected in the Node dock."
msgstr ""
"다음으로 씬(Scene) 독에서 ``Player`` 노드를 선택하고 사이드바에서 노드(Node) "
"독에 접근하세요. 노드(Node) 독에서 시그널(Signal) 탭을 선택하세요."

msgid ""
"You should see a list of the signals for the ``Player`` node. Find and "
"double-click the ``hit`` signal in the list (or right-click it and select "
"\"Connect...\"). This will open the signal connection dialog. We want to "
"make a new function named ``game_over``, which will handle what needs to "
"happen when a game ends. Type \"game_over\" in the \"Receiver Method\" box "
"at the bottom of the signal connection dialog and click \"Connect\". Add the "
"following code to the new function, as well as a ``new_game`` function that "
"will set everything up for a new game:"
msgstr ""
"``Player`` 노드에 대한 시그널 목록이 표시되어야 합니다. 목록에서 ``hit`` 시그"
"널을 찾아 두 번 클릭하세요(또는 마우스 오른쪽 단추로 클릭하고 \"연결..."
"(Connect...)\" 선택). 그러면 시그널 연결 대화 상자가 열립니다. 우리는 게임이 "
"끝났을 때 일어날 일을 처리할 ``game_over``\\ 라는 새로운 함수를 만들고 싶습니"
"다. 신호 연결 대화 상자 아래쪽의 \"받는 메서드(Receiver Method)\" 상자에 "
"\"game_over\"를 입력하고 \"연결(Connect)\"을 클릭하세요. 다음 코드를 새 함수"
"에 추가하고 새 게임에 대한 모든 것을 설정하는 ``new_game`` 함수를 추가합니다:"

msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` , and ``MobTimer``) to the main script. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"이제 각 Timer 노드(``StartTimer``, ``ScoreTimer`` 및 ``MobTimer``)의 "
"``timeout()`` 시그널을 메인 스크립트에 연결하세요. ``StartTimer``\\ 는 다른 "
"두 타이머를 작동시킵니다. ``ScoreTimer``\\ 는 점수를 1씩 증가시킵니다."

#, fuzzy
msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position. When "
"we spawn a mob, we'll pick a random value between ``150.0`` and ``250.0`` "
"for how fast each mob will move (it would be boring if they were all moving "
"at the same speed)."
msgstr ""
"``_on_MobTimer_timeout()``\\ 에서 우리는 몹 인스턴스를 만들고, ``Path2D``\\ "
"에 따라 무작위 시작점을 결정하고, 몹이 움직이도록 설정할 것입니다. "
"``PathFollow2D`` 노드는 자동으로 경로를 따라 돌기 때문에 몹들의 위치와 방향"
"을 선택하기 위해서 사용할 수 있습니다."

msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr "새로운 인스턴스는 ``add_child()``\\ 를 사용해야 추가할 수 있습니다."

#, fuzzy
msgid ""
"Why ``PI``? In functions requiring angles, Godot uses *radians*, not "
"degrees. Pi represents a half turn in radians, about ``3.1415`` (there is "
"also ``TAU`` which is equal to ``2 * PI``). If you're more comfortable "
"working with degrees, you'll need to use the ``deg2rad()`` and ``rad2deg()`` "
"functions to convert between the two."
msgstr ""
"왜 ``PI``\\ 인가요? 각도가 필요한 함수에서 GDScript는 디그리(degree)가 아닌 "
"라디안(*radians*)을 사용합니다. 디그리를 가지고 작업하는 것이 더 편하다면 "
"``deg2rad()``\\ 와 ``rad2deg()`` 함수를 사용해 변환해야 합니다."

msgid "Testing the scene"
msgstr "씬 테스트하기"

#, fuzzy
msgid ""
"Let's test the scene to make sure everything is working. Add this "
"``new_game`` call to ``_ready()``:"
msgstr ""
"모든 것이 제대로 작동하는지 확인하기 위해 씬을 테스트해 보겠습니다. "
"``_ready()``\\ 에 다음을 추가합니다:"

msgid ""
"Let's also assign ``Main`` as our \"Main Scene\" - the one that runs "
"automatically when the game launches. Press the \"Play\" button and select "
"``Main.tscn`` when prompted."
msgstr ""
"게임이 시작될 때 자동으로 실행되는 \"Main Scene\"으로 ``Main``\\ 을 지정해 보"
"겠습니다. \"재생(Play)\" 버튼을 누르고 메시지가 표시되면 ``Main.tscn``\\ 을 "
"선택하세요."

msgid ""
"If you had already set another scene as the \"Main Scene\", you can right "
"click ``Main.tscn`` in the FileSystem dock and select \"Set As Main Scene\"."
msgstr ""

msgid ""
"You should be able to move the player around, see mobs spawning, and see the "
"player disappear when hit by a mob."
msgstr ""
"플레이어를 움직이고, 몹들이 스폰되는 것을 보고, 플레이어가 몹과 충돌할 때 사"
"라지는 것을 볼 수 있어야 합니다."

msgid ""
"When you're sure everything is working, remove the call to ``new_game()`` "
"from ``_ready()``."
msgstr ""
"모든 것이 제대로 작동한다고 확신한다면 '_ready()'에서 ``new_game()`` 함수 호"
"출을 제거하세요."

msgid ""
"What's our game lacking? Some user interface. In the next lesson, we'll add "
"a title screen and display the player's score."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
