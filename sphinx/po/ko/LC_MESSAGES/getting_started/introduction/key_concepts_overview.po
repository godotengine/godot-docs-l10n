# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Overview of Godot's key concepts"
msgstr "Godot의 주요 개념 개요"

msgid ""
"Every game engine revolves around abstractions you use to build your "
"applications. In Godot, a game is a **tree** of **nodes** that you group "
"together into **scenes**. You can then wire these nodes so they can "
"communicate using **signals**."
msgstr ""
"모든 게임 엔진은 어플리케이션을 구축하는 데 사용하는 추상화 개념을 중심으로 "
"동작합니다. Godot에서는 게임이 **노드(nodes)**의 **트리(tree)**로 구성되며, "
"이러한 노드들을 **씬(scenes)**으로 그룹화합니다. 그런 다음 이러한 노드들을 **"
"시그널(signals)**을 사용하여 서로 통신할 수 있도록 연결할 수 있습니다."

msgid ""
"These are the four concepts you will learn here. We're going to look at them "
"briefly to give you a sense of how the engine works. In the getting started "
"series, you will get to use them in practice."
msgstr ""
"엔진의 작동 방식에 대해 감을 잡기 위해 이 네 가지 개념을 간략히 살펴보겠습니"
"다. 이 시리즈에서는 이러한 개념들을 실제로 활용할 수 있을 것입니다."

msgid "Scenes"
msgstr "씬"

msgid ""
"In Godot, you break down your game in reusable scenes. A scene can be a "
"character, a weapon, a menu in the user interface, a single house, an entire "
"level, or anything you can think of. Godot's scenes are flexible; they fill "
"the role of both prefabs and scenes in some other game engines."
msgstr ""
"Godot에서는 게임을 재사용 가능한 씬(scene)으로 구성합니다. 씬(scene)은 캐릭"
"터, 무기, 사용자 인터페이스의 메뉴, 하나의 집, 전체 레벨 또는 상상할 수 있는 "
"모든 것이 될 수 있습니다. Godot의 씬(scene)은 유연하며, 다른 일부 게임 엔진에"
"서의 프리팹(prefab)과 씬(scene)의 역할을 모두 수행합니다."

msgid ""
"You can also nest scenes. For example, you can put your character in a "
"level, and drag and drop a scene as a child of it."
msgstr ""
"또한 씬(scene)을 중첩할 수도 있습니다. 예를 들어 캐릭터를 레벨에 배치하고, 씬"
"(scene)을 해당 캐릭터의 자식(child)으로 끌어다 놓을 수 있습니다."

msgid "Nodes"
msgstr "노드"

msgid ""
"A scene is composed of one or more **nodes**. Nodes are your game's smallest "
"building blocks that you arrange into trees. Here's an example of a "
"character's nodes."
msgstr ""
"씬(scene)은 하나 이상의 **노드**(nodes)로 구성됩니다. 노드는 게임의 가장 작"
"은 구성 요소로, 이를 트리(tree)로 배열합니다. 다음은 캐릭터의 노드 예시입니"
"다."

msgid ""
"It is made of a ``KinematicBody2D`` node named \"Character\", a ``Sprite``, "
"a ``Camera2D``, and a ``CollisionShape2D``."
msgstr ""
"캐릭터 씬은 \"Character\"라는 이름을 가진 ``KinematicBody2D`` 노드와, "
"``Sprite``, ``Camera2D``, 그리고 ``CollisionShape2D``로 구성됩니다."

msgid ""
"The node names end with \"2D\" because this is a 2D scene. Their 3D "
"counterpart have names that end with \"3D\"."
msgstr ""
"노드 이름이 \"2D\"로 끝나는 이유는 이것이 2D 씬이기 때문입니다. 3D 씬에서는 "
"이와 대응하는 노드 이름이 \"3D\"로 끝납니다."

msgid ""
"Notice how nodes and scenes look the same in the editor. When you save a "
"tree of nodes as a scene, it then shows as a single node, with its internal "
"structure hidden in the editor."
msgstr ""
"노드와 씬이 에디터에서 동일하게 보인다는 점에 주목하세요. 노드 트리를 씬으로 "
"저장하면, 에디터에서는 내부 구조가 숨겨진 단일 노드(single node)로 표시됩니"
"다."

msgid ""
"Godot provides an extensive library of base node types you can combine and "
"extend to build more powerful ones. 2D, 3D, or user interface, you will do "
"most things with these nodes."
msgstr ""
"Godot은 결합하고 확장하여 보다 강력한 노드를 구축할 수 있는 광범위한 기본 노"
"드 유형 라이브러리를 제공합니다. 2D, 3D 또는 사용자 인터페이스를 사용하면 대"
"부분의 작업을 이 노드에서 수행할 수 있습니다."

msgid "The scene tree"
msgstr "씬 트리"

msgid ""
"All your game's scenes come together in the **scene tree**, literally a tree "
"of scenes. And as scenes are trees of nodes, the scene tree also is a tree "
"of nodes. But it's easier to think of your game in terms of scenes as they "
"can represent characters, weapons, doors, or your user interface."
msgstr ""
"게임의 모든 씬은 씬 트리(scene tree)에서 함께 구성됩니다. 씬은 노드 트리로 구"
"성되기 때문에, 씬 트리도 노드 트리의 형태를 가지게 됩니다. 그러나 캐릭터, 무"
"기, 문 또는 사용자 인터페이스와 같은 요소를 나타낼 수 있는 씬으로 게임을 생각"
"하는 것이 더 쉬울 것입니다."

msgid "Signals"
msgstr "신호"

msgid ""
"Nodes emit signals when some event occurs. This feature allows you to make "
"nodes communicate without hard-wiring them in code. It gives you a lot of "
"flexibility in how you structure your scenes."
msgstr ""
"노드(Nodes)는 어떤 이벤트가 발생할 때 신호(signals)를 발생시킵니다. 이 기능"
"을 통해 노드 간에 코드에서 직접 연결하지 않고도 통신할 수 있습니다. 이는 씬"
"을 구성하는 방식에 대한 유연성을 제공합니다."

msgid ""
"Signals are Godot's version of the *observer* pattern. You can read more "
"about it here: https://gameprogrammingpatterns.com/observer.html"
msgstr ""
"Signals는 *observer* 패턴의 Godot 버전입니다. 더 많은 정보는 여기에서 볼 수 "
"있습니다: http://gameprogrammingpatterns.com/observer.html"

msgid ""
"For example, buttons emit a signal when pressed. You can connect to this "
"signal to run code in reaction to this event, like starting the game or "
"opening a menu."
msgstr ""
"예를 들어, 버튼은 눌릴 때 시그널을 발생시킵니다. 이 시그널에 연결하여 게임을 "
"시작하거나 메뉴 열기와 같은 코드를 실행할 수 있습니다."

msgid ""
"Other built-in signals can tell you when two objects collided, when a "
"character or monster entered a given area, and much more. You can also "
"define new signals tailored to your game."
msgstr ""
"내장된 다른 시그널들은 두 객체가 충돌했을 때, 캐릭터나 몬스터가 특정 영역에 "
"들어왔을 때 등 다양한 상황을 알려줄 수 있습니다. 또한 게임에 맞게 사용자 정"
"의 시그널을 정의할 수도 있습니다."

msgid "Summary"
msgstr "요약"

msgid ""
"Nodes, scenes, the scene tree, and signals are four core concepts in Godot "
"that you will manipulate all the time."
msgstr ""
"노드, 씬, 씬 트리, 그리고 시그널은 Godot에서 항상 다루게 되는 네 가지 핵심 개"
"념입니다."

msgid ""
"Nodes are your game's smallest building blocks. You combine them to create "
"scenes that you then combine and nest into the scene tree. You can then use "
"signals to make nodes react to events in other nodes or different scene tree "
"branches."
msgstr ""
"노드는 게임의 가장 작은 구성 요소입니다. 이러한 노드들을 결합하여 씬을 만들"
"고, 이를 결합하고 중첩하여 씬 트리를 구성합니다. 그런 다음 신호를 사용하여 노"
"드를 다른 노드나 씬 트리의 다른 가지에서 발생하는 이벤트에 반응하도록 할 수 "
"있습니다."

msgid ""
"After this short breakdown, you probably have many questions. Bear with us "
"as you will get many answers throughout the getting started series."
msgstr ""
"이 간략한 설명 이후에 여러분이 궁금증을 가질 수도 있습니다. 이 시리즈를 통해 "
"많은 질문에 대한 답을 얻게 될 것이니 조금만 참고 계시기 바랍니다."

msgid "Translation status"
msgstr "번역 상태"
