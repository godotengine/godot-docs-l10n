# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot's design philosophy"
msgstr "Godot의 디자인 철학"

msgid "Now that you've gotten your feet wet, let's talk about Godot's design."
msgstr "슬슬 Godot에 익숙해졌으니 Godot이 어떻게 디자인 되었는지 얘기해봅시다."

msgid ""
"**Every game engine is different and fits different needs.** Not only do "
"they offer a range of features, but the design of each engine is unique. "
"This leads to different workflows and different ways to form your games' "
"structures. This all stems from their respective design philosophies."
msgstr ""
"**모든 게임 엔진은 다르며 서로 다른 요구사항에 알맞습니다.** 다양한 기능을 제"
"공할뿐만 아니라 각 엔진은 디자인도 독특합니다. 이는 게임의 구조를 형성하는 다"
"양한 방법과 다양한 워크플로로 이어집니다. 게임 엔진의 디자인은 모두 각자의 디"
"자인 철학에서 비롯되었습니다."

msgid ""
"This page is here to help you understand how Godot works, starting with some "
"of its core pillars. It is not a list of available features, nor is it an "
"engine comparison. To know if any engine can be a good fit for your project, "
"you need to try it out for yourself and understand its design and "
"limitations."
msgstr ""
"이 페이지는 Godot의 작동방식을 이해하도록 돕기 위해, 여러 핵심 기둥으로부터 "
"시작합니다. 이 페이지는 사용가능한 기능의 목록이 아닐 뿐더러, 엔진을 비교하"
"는 문서도 아닙니다. 프로젝트에 적합한 엔진이 있는지 확인하려면 여러분 스스로 "
"시도하고 엔진의 디자인과 한계를 이해해야 합니다."

msgid ""
"Please watch `Godot explained in 5 minutes <https://www.youtube.com/watch?"
"v=KjX5llYZ5eQ>`_ if you're looking for an overview of the engine's features."
msgstr ""
"이 엔진의 전체 특징을 보고싶다면 `Godot explained in 5 minutes <https://www."
"youtube.com/watch?v=KjX5llYZ5eQ>`_ 이 영상을 시청해주세요."

msgid "Object-oriented design and composition"
msgstr "객체 지향 디자인과 구성"

msgid ""
"Godot embraces object-oriented design at its core with its flexible scene "
"system and Node hierarchy. It tries to stay away from strict programming "
"patterns to offer an intuitive way to structure your game."
msgstr ""
"Godot는 유연한 씬 시스템과 노드 계층 구조로 이루어진 객체 지향 디자인을 핵심"
"으로 받아들입니다. 이로인해 엄격한 프로그래밍 패턴을 피하고 직관적인 방법으"
"로 게임을 구성하도록 했습니다."

msgid ""
"For one, Godot lets you **compose or aggregate** scenes. It's like nested "
"prefabs: you can create a BlinkingLight scene and a BrokenLantern scene that "
"uses the BlinkingLight. Then, create a city filled with BrokenLanterns. "
"Change the BlinkingLight's color, save, and all the BrokenLanterns in the "
"city will update instantly."
msgstr ""
"예를 들어 Godot를 사용하면 씬을 **구성하거나 집합**할 수 있습니다. 중첩된 조"
"립식 건물과 같습니다. BrinkingLight 씬과 BrinkingLight를 사용하는 "
"BrokenLantern 씬을 만들 수 있습니다. 그런 다음 BrokenLanterns로 가득 찬 도시"
"를 만드세요. BrinkingLight의 색상을 변경하고 저장하면 도시의 모든 "
"BrokenLanterns가 즉시 업데이트됩니다."

msgid "On top of that, you can **inherit** from any scene."
msgstr "게다가 어떤 씬에서든지 **상속**\\ 할 수 있습니다."

msgid ""
"A Godot scene could be a Weapon, a Character, an Item, a Door, a Level, part "
"of a level… anything you'd like. It works like a class in pure code, except "
"you're free to design it by using the editor, using only the code, or mixing "
"and matching the two."
msgstr ""
"Godot 씬은 무기, 캐릭터, 아이템, 문, 레벨, 레벨의 일부… 원하는 모든 것이 될 "
"수 있습니다. 에디터를 사용하거나, 코드만 사용하거나, 둘을 혼합하여 일치시켜 "
"자유롭게 디자인할 수 있다는 점을 제외하고는 순수 코드의 클래스처럼 작동합니"
"다."

msgid ""
"It's different from prefabs you find in several 3D engines, as you can then "
"inherit from and extend those scenes. You may create a Magician that extends "
"your Character. Modify the Character in the editor and the Magician will "
"update as well. It helps you build your projects so that their structure "
"matches the game's design."
msgstr ""
"씬은 상속하고 확장할 수 있기 때문에 여러 3D 엔진에서 찾을 수 있는 프리팹"
"(prefab)과는 다릅니다. 여러분은 여러분의 캐릭터를 확장해서 마술사(Magician)"
"로 만들 수 있습니다. 에디터에서 캐릭터를 수정하면 Magician도 업데이트됩니다. "
"이는 구조가 게임 디자인과 일치하도록 프로젝트를 빌드하는 데 도움이 됩니다."

msgid "|image0|"
msgstr "|image0|"

msgid "image0"
msgstr "image0"

msgid ""
"Also note that Godot offers many different types of objects called nodes, "
"each with a specific purpose. Nodes are part of a tree and always inherit "
"from their parents up to the Node class. Although the engine does feature "
"some nodes like collision shapes that a parent physics body will use, most "
"nodes work independently from one another."
msgstr ""
"또한 Godot은 노드라고 불리는 다양한 형태의 오브젝트를 제공한다는 것을 기억하"
"세요. 각각 특정한 목적으로 쓰이는 노드는 트리의 파트이며, 언제나 노드 클래스"
"라고 하는 부모에게 상속되어 있습니다. 그러므로 충돌을 구현할 때 쓰이는 콜리전"
"과 같은 특정 노드라도 다른 노드들과는 분리되어 작동합니다."

msgid ""
"In other words, Godot's nodes do not work like components in some other game "
"engines."
msgstr ""
"다시말해, Godot에서의 노드는 다른 일부 게임 엔진에서의 요소와는 조금 다르게 "
"작동합니다."

msgid "|image1|"
msgstr "|image1|"

msgid "image1"
msgstr "image1"

msgid ""
"Sprite is a Node2D, a CanvasItem and a Node. It has all the properties and "
"features of its three parent classes, like transforms or the ability to draw "
"custom shapes and render with a custom shader."
msgstr ""
"스프라이트는 Node2D, CanvasItem, 그리고 노드로 이루어집니다. 이러한 노드는 "
"세 부모 클래스가 가지는 변환, 모형 생성, 커스텀 셰이더의 렌더와 같은 속성과 "
"특징을 그대로 가집니다."

msgid "All-inclusive package"
msgstr "올인원 패키지"

msgid ""
"Godot tries to provide its own tools to answer most common needs. It has a "
"dedicated scripting workspace, an animation editor, a tilemap editor, a "
"shader editor, a debugger, a profiler, the ability to hot-reload locally and "
"on remote devices, etc."
msgstr ""
"Godot는 가장 일반적인 요구 사항을 위해 자체 툴을 제공하려고 합니다. 전용 스크"
"립팅 작업 공간, 애니메이션 편집기, 타일맵 편집기, 셰이더 편집기, 디버거, 프로"
"파일러, 로컬 및 원격 장치에서 핫 리로드 등의 기능이 있습니다."

msgid "|image2|"
msgstr "|image2|"

msgid "image2"
msgstr "image2"

msgid ""
"The goal is to offer a full package to create games and a continuous user "
"experience. You can still work with external programs as long as there is an "
"import plugin for it. Or you can create one, like the `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`__."
msgstr ""
"저희의 목표는 게임과 지속적인 사용자 경험을 만들기 위한 전체 패키지를 제공하"
"는 것입니다. 가져오기 플러그인이 있는 한 외부 프로그램으로 계속 작업할 수 있"
"습니다. 또는 `Tiled Map Importer <https://github.com/vnen/godot-tiled-"
"importer>`__\\ 처럼 여러분이 하나를 만들 수도 있습니다."

msgid ""
"That is also partly why Godot offers its own programming languages GDScript "
"and VisualScript, along with C#. They're designed for the needs of game "
"developers and game designers, and they're tightly integrated in the engine "
"and the editor."
msgstr ""
"이것이 Godot이 C#과 함께 자체 프로그래밍 언어인 GDscript 및 VisualScript를 제"
"공하는 이유이기도 합니다. 게임 개발자와 게임 디자이너의 요구에 맞게 설계되었"
"으며, 게임 엔진과 에디터가 하나인 것 처럼 실행됩니다."

msgid ""
"GDScript lets you write code using an indentation-based syntax, yet it "
"detects types and offers a static language's quality of auto-completion. It "
"is also optimized for gameplay code with built-in types like Vectors and "
"Colors."
msgstr ""
"GDScript는 들여쓰기 기반의 문장과 자동 완성, 데이터 타입 감지도 제공합니다. "
"이는 벡터나 색과 같은 빌트인 타입의 코드에도 최적화되어있습니다."

msgid ""
"Note that with GDNative, you can write high-performance code using compiled "
"languages like C, C++, Rust, or Python (using the Cython compiler) without "
"recompiling the engine."
msgstr ""
"GDNative를 사용하면 엔진을 다시 컴파일하지 않고도 C, C++, Rust 또는 "
"Python(Cython 컴파일러 사용)과 같은 컴파일된 언어를 사용해 고성능 코드를 작성"
"할 수 있습니다."

msgid "|image3|"
msgstr "|image3|"

msgid "image3"
msgstr "image3"

msgid ""
"*VisualScript is a node-based programming language that integrates well in "
"the editor. You can drag and drop nodes or resources into the graph to "
"create new code blocks.*"
msgstr ""
"*VisualScript는 편집기에 잘 통합된 노드 기반 프로그래밍 언어입니다. 노드나 리"
"소스를 그래프에 끌어다 놓아서 새 코드 블록을 만들 수 있습니다.*"

msgid ""
"Note that the 3D workspace doesn't feature as many tools as the 2D "
"workspace. You'll need external programs or add-ons to edit terrains, "
"animate complex characters, and so on. Godot provides a complete API to "
"extend the editor's functionality using game code. See `The Godot editor is "
"a Godot game`_ below."
msgstr ""
"3D 작업 공간에는 2D 작업 공간만큼 많은 툴이 없습니다. 지형을 편집하고 복잡한 "
"캐릭터에 애니메이션을 적용하는 등의 작업을 수행하려면 외부 프로그램이나 추가 "
"기능이 필요합니다. Godot는 게임 코드를 사용해 에디터의 기능을 확장하는 완전"
"한 API를 제공합니다. 아래의 `Godot 에디터는 Godot 게임입니다`_\\ 를 참조하세"
"요."

msgid "|image4|"
msgstr "|image4|"

msgid "image4"
msgstr "image4"

msgid ""
"*A State Machine editor plugin in Godot 2 by kubecz3k. It lets you manage "
"states and transitions visually.*"
msgstr ""
"*Godot 엔진 2에서 kubecz3k님이 제작해주신 State Machine editor 플러그인입니"
"다. 이것으로 여러분은 시각적으로 상태와 변화를 다룰 수 있습니다.*"

msgid ""
"`Godot 4.0 will remove VisualScript from core entirely. <https://godotengine."
"org/article/godot-4-will-discontinue-visual-scripting>`__ As a result, "
"creating new projects using visual scripting in Godot is not recommended. "
"Future Godot 4.x releases may have VisualScript reimplemented as an "
"extension."
msgstr ""
"`Godot 4.0은 비주얼스크립트를 완전히 제거할 것입니다. <https://godotengine."
"org/article/godot-4-will-discontinue-visual-scripting>`__ 결과적으로, Godot에"
"서 비주얼 스크립팅을 사용하는 새로운 프로젝트를 만드는 것은 권장되지 않습니"
"다. 추후의 Godot 4.x 릴리즈는 비주얼스크립트를 재구현하는 확장을 포함할 수도 "
"있습니다."

msgid ""
"While Godot 3.x will keep VisualScript supported, we recommend :ref:`trying "
"out GDScript <toc-learn-scripting-gdscript>` instead, especially if you "
"intend to migrate your project to Godot 4."
msgstr ""
"Godot 3.x 는 비주얼스크립트를 계속 지원하지만, 저희는 그 대안으로 :ref:"
"`GDScript를 시도해보는 것을 <toc-learn-scripting-gdscript>` (특히 여러분이 자"
"신의 프로젝트를 Godot 4로 마이그레이션할 생각이 있으시다면) 권장합니다."

msgid "Open source"
msgstr "오픈 소스"

msgid ""
"Godot offers a fully open source codebase under the **MIT license**. This "
"means all the technologies that ship with it have to be Free (as in freedom) "
"as well. For the most part, they're developed from the ground up by "
"contributors."
msgstr ""
"Godot는 **MIT 라이선스**\\ 에 따라 완전한 오픈 소스 코드베이스를 제공합니다. "
"이는 함께 제공되는 모든 기술도 (권리로서의 의미로) 무료여야 함을 의미합니다. "
"대부분의 경우 기여자에 의해 처음부터 개발되었습니다."

msgid ""
"Anyone can plug in proprietary tools for the needs of their projects — they "
"just won't ship with the engine. This may include Google AdMob, or FMOD. Any "
"of these can come as third-party plugins instead."
msgstr ""
"누구나 프로젝트의 요구에 맞게 독점 툴을 연결할 수 있습니다. 여기에는 Google "
"애드모빌 또는 FMOD가 포함될 수 있습니다. 이들 중 어떤 것들은 대신 서드 파티 "
"플러그인으로 연결할 수 있습니다."

msgid ""
"On the other hand, an open codebase means you can **learn from and extend "
"the engine** to your heart's content. You can also debug games easily, as "
"Godot will print errors with a stack trace, even if they come from the "
"engine itself."
msgstr ""
"반면에 오픈 코드베이스는 **엔진에서 배우고 확장**\\ 할 수 있다는 것을 의미합"
"니다. 또한 Godot는 오류가 엔진 자체에서 발생하더라도 스택 추적으로 오류를 출"
"력하므로 게임을 쉽게 디버그할 수 있습니다."

msgid ""
"This **does not affect the work you do with Godot** in any way: there's no "
"strings attached to the engine or anything you make with it."
msgstr ""
"이것은 **여러분이 Godot로 하는 작업에 어떤 식으로든 영향을 미치지 않습니다"
"**: 엔진은 여러분이 엔진으로 만드는 어떤 것과도 연결되어 있지 않습니다."

msgid "Community-driven"
msgstr "커뮤니티 중심"

msgid ""
"**Godot is made by its community, for the community, and for all game "
"creators out there.** It's the needs of the users and open discussions that "
"drive the core updates. New features from the core developers often focus on "
"what will benefit the most users first."
msgstr ""
"**Godot는 커뮤니티에 의해, 커뮤니티를 위해, 모든 게임 제작자를 위해 만들어졌"
"습니다.** 핵심 업데이트를 주도하는 것은 사용자의 요구와 공개 토론입니다. 핵"
"심 개발자들에 의해 개발되는 새로운 기능은 대부분의 사용자에게 가장 먼저 혜택"
"을 주는 것에 초점을 맞추는 경우가 많습니다."

msgid ""
"That said, although a handful of core developers work on it full-time, the "
"project has over 600 contributors at the time of writing. Benevolent "
"programmers work on features they may need themselves, so you'll see "
"improvements in all corners of the engine at the same time in every major "
"release."
msgstr ""
"비록 소수의 핵심 개발자가 하루종일 작업하지만 지금 글을 적고 있는 시점에서 "
"이 프로젝트에는 600명 이상의 기여자가 있습니다. 자비로운 프로그래머는 자신에"
"게 필요할 수 있는 기능에 대해 작업하므로 모든 메이저 릴리스에서 동시에 엔진"
"의 모든 부분에서 개선된 사항을 볼 수 있습니다."

msgid "The Godot editor is a Godot game"
msgstr "Godot 에디터는 Godot 게임입니다"

msgid ""
"The Godot editor runs on the game engine. It uses the engine's own UI "
"system, it can hot-reload code and scenes when you test your projects, or "
"run game code in the editor. This means you can **use the same code** and "
"scenes for your games, or **build plugins and extend the editor.**"
msgstr ""
"Godot 에디터는 게임 엔진에서 실행됩니다. 엔진의 자체 UI 시스템을 사용하므로 "
"프로젝트를 테스트하거나 에디터에서 게임 코드를 실행할 때 코드와 씬을 핫 리로"
"드할 수 있습니다. 즉, 게임에 **동일한 코드와 씬을 사용**\\ 하거나 **플러그인"
"을 빌드하고 에디터를 확장**\\ 할 수 있습니다."

msgid ""
"This leads to a reliable and flexible UI system, as it powers the editor "
"itself. With the ``tool`` keyword, you can run any game code in the editor."
msgstr ""
"이는 에디터 자체에 전원을 공급하기 때문에 안정적이고 유연한 UI 시스템으로 이"
"어집니다. ``tool`` 키워드를 사용하면 에디터에서 모든 게임 코드를 실행할 수 있"
"습니다."

msgid "|image5|"
msgstr "|image5|"

msgid "image5"
msgstr "image5"

msgid ""
"*RPG in a Box is a voxel RPG editor made with Godot 2. It uses Godot's UI "
"tools for its node-based programming system and for the rest of the "
"interface.*"
msgstr ""
"*RPG in a Box는 Godot 2로 만든 복셀 RPG 편집기입니다. 노드 기반 프로그래밍 시"
"스템과 나머지 인터페이스에 Godot의 UI 툴을 사용합니다.*"

msgid ""
"Put the ``tool`` keyword at the top of any GDScript file and it will run in "
"the editor. This lets you import and export plugins, create plugins like "
"custom level editors, or create scripts with the same nodes and API you use "
"in your projects."
msgstr ""
"GDScript 파일의 맨 위에 ``tool`` 키워드를 넣으면 에디터에서 실행됩니다. 이를 "
"통해 플러그인을 가져오거나 내보내고, 커스텀 에디터같은 플러그인을 생성하거"
"나, 프로젝트에서 사용하는 것과 동일한 노드 및 API로 스크립트를 생성할 수 있습"
"니다."

msgid ""
"The editor is fully written in C++ and is statically compiled into the "
"binary. This means you can't import it as a typical project that would have "
"a ``project.godot`` file."
msgstr ""
"Godot 편집기는 완전히 C++로 작성되었으며 바이너리 실행 파일에 정적"
"(statically)으로 컴파일됩니다. 이는 일반적인 ``project.godot`` 파일이 있는 프"
"로젝트처럼 가져올 수 없음을 의미합니다."

msgid "Separate 2D and 3D engines"
msgstr "2D 와 3D 엔진을 분리"

msgid ""
"Godot offers dedicated 2D and 3D rendering engines. As a result, **the base "
"unit for 2D scenes is pixels.** Even though the engines are separate, you "
"can render 2D in 3D, 3D in 2D, and overlay 2D sprites and interfaces over "
"your 3D world."
msgstr ""
"Godot는 전용 2D 및 3D 렌더링 엔진을 제공합니다. 결과적으로 **2D 씬의 기본 단"
"위는 픽셀입니다.** 엔진이 분리되어 있어도 2D를 3D로, 3D를 2D로 렌더링하고 2D "
"스프라이트와 인터페이스를 3D 세계에 오버레이할 수 있습니다."

msgid "Translation status"
msgstr "번역 상태"
