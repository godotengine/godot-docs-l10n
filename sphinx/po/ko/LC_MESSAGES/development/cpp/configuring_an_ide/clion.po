# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "CLion"
msgstr ""

msgid ""
"`CLion <https://www.jetbrains.com/clion/>`_ is a commercial `JetBrains "
"<https://www.jetbrains.com/>`_ IDE for C++."
msgstr ""

msgid "Importing the project"
msgstr ""

msgid ""
"CLion requires a ``CMakeLists.txt`` file as a project file, which is "
"problematic for Godot because it uses the SCons buildsystem instead of "
"CMake. However, there is a ``CMakeLists.txt`` configuration for :ref:"
"`Android Studio <doc_configuring_an_ide_android_studio>` which can also be "
"used by CLion."
msgstr ""

msgid ""
"From the CLion's welcome window choose the option to import an existing "
"project. If you've already opened another project, choose **File > Open** "
"from the top menu."
msgstr ""

msgid ""
"Navigate to ``<Godot root directory>/platform/android/java/"
"nativeSrcsConfigs`` (the ``CMakeLists.txt`` file is located there) and "
"select it (but *not* the ``CMakeLists.txt`` file itself), then click **OK**."
msgstr ""

msgid "The folder containing the ``CMakeLists.txt`` file."
msgstr ""

msgid ""
"If this popup window appears, select **This Window** to open the project:"
msgstr ""

msgid ""
"Choose **Tools > CMake > Change Project Root** from the top menu and select "
"the Godot root folder."
msgstr ""

msgid ""
"You should be now be able to see all the project files. Autocomplete should "
"work once the project has finished indexing."
msgstr ""

#, fuzzy
msgid ""
"If you run into any issues, ask for help in one of `Godot's community "
"channels <https://godotengine.org/community>`__."
msgstr ""
"같은 `Godot 웹사이트 <https://godotengine.org/contact>`_ 페이지에서 참고하세"
"요."

#, fuzzy
msgid "Debugging the project"
msgstr "프로젝트 준비하기"

#, fuzzy
msgid ""
"Since CLion does not support SCons, you won't be able to compile, launch, "
"and debug Godot from CLion in one step. You will first need to `compile "
"godot yourself <https://docs.godotengine.org/en/stable/development/compiling/"
"index.html>`__ and run the binary without CLion. You will then be able to "
"debug Godot by using the `Attach to process <https://www.jetbrains.com/help/"
"clion/attaching-to-local-process.html>`__ feature."
msgstr ""
"CLion이 SCons를 지원하지 않기 때문에 Godot를 Clion에서 한 번에 컴파일하고, 실"
"행하고 디버그할 수 없습니다. 그러기 위해서는 먼저 `godot을 컴파일 <https://"
"docs.godotengine.org/en/stable/development/compiling/index.html>`__\\ 하고, "
"CLion 없이 바이너리를 실행해야 합니다. 그런 다음, `Attach to process "
"<https://www.jetbrains.com/help/clion/attaching-to-local-process.html>`__ 기"
"능을 이용해 Godot를 디버그할 수 있습니다."

msgid "Run the compilation in debug mode by entering ``scons``."
msgstr ""

msgid ""
"Run the binary you have created (in the bin directory). If you want to debug "
"a specific project, run the binary with the following arguments : ``--editor "
"--path path/to/your/godot/project``. To run the project instead of editing "
"it, remove the ``--editor`` argument."
msgstr ""

msgid "In CLion, go to **Run > Attach to Process...**"
msgstr ""

msgid "Find and Select godot in the list (or type the binary name/Process ID)"
msgstr ""

msgid "You can now use the debugging tools from CLion."
msgstr ""

msgid ""
"If you run the binary without any arguments, you will only debug the project "
"manager window. Don't forget to add the ``--path path/to/your/godot/"
"project`` argument to debug a project."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
