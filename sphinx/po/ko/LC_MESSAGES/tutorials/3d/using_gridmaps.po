# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Using GridMaps"
msgstr "GridMap 사용하기"

msgid "Introduction"
msgstr "소개"

msgid ""
":ref:`Gridmaps <class_GridMap>` are a tool for creating 3D game levels, "
"similar to the way :ref:`TileMap <doc_using_tilemaps>` works in 2D. You "
"start with a predefined collection of 3D meshes (a :ref:`class_MeshLibrary`) "
"that can be placed on a grid, as if you were building a level with an "
"unlimited amount of Lego blocks."
msgstr ""
":ref:`GridMap <class_GridMap>`\\ 은 2D 게임의 :ref:`TileMap "
"<doc_using_tilemaps>`\\ 과 유사한 방식으로 3D 게임 레벨을 만드는 툴입니다. 격"
"자 위에 메시를 배치하려면, 미리 정의해 놓은 3D 메시 모음 (:ref:"
"`class_MeshLibrary`)이 필요합니다. 메시 모음은 마치 무한한 레고 블록처럼 사용"
"됩니다."

msgid ""
"Collisions and navigation can also be added to the meshes, just like you "
"would do with the tiles of a tilemap."
msgstr ""
"콜리전과 내비게이션도 메시에 추가될 수 있습니다. TileMap의 타일과 똑같죠."

msgid "Example project"
msgstr "예제 프로젝트"

msgid ""
"To learn how GridMaps work, start by downloading the sample project: :"
"download:`gridmap_demo.zip <files/gridmap_demo.zip>`."
msgstr ""
"어떻게 GridMap이 작동하는지 배우려면, 샘플 프로젝트를 다운로드하세요: :"
"download:`gridmap_demo.zip <files/gridmap_demo.zip>`."

msgid ""
"Unzip this project and add it to the Project Manager using the \"Import\" "
"button."
msgstr ""
"프로젝트 압축을 풀고 \"가져오기(Import)\" 버튼으로 프로젝트 매니저(Project "
"Manager)에 추가하세요."

msgid "Creating a MeshLibrary"
msgstr "MeshLibrary 만들기"

msgid ""
"To begin, you need a :ref:`class_MeshLibrary`, which is a collection of "
"individual meshes that can be used in the gridmap. Open the "
"\"MeshLibrary_Source.tscn\" scene to see an example of how to set up the "
"mesh library."
msgstr ""
"시작하려면 :ref:`class_MeshLibrary`\\ 가 필요합니다. MeshLibrary는 개별 메시"
"들의 모음으로 그리드맵에 쓸 수 있습니다. \"MeshLibrary_Source.tscn\" 씬을 열"
"어서 어떻게 MeshLibrary가 설정되어 있는지 확인하세요."

msgid ""
"As you can see, this scene has a :ref:`class_Spatial` node as its root, and "
"a number of :ref:`class_MeshInstance` node children."
msgstr ""
"보다시피, 이 씬은 루트로 :ref:`class_Spatial` 노드를 갖고 있습니다. 그리고 많"
"은 :ref:`class_MeshInstance` 노드 자손을 갖고 있죠."

msgid ""
"If you don't need any physics in your scene, then you're done. However, in "
"most cases you'll want to assign collision bodies to the meshes."
msgstr ""
"씬에서 물리 엔진이 필요 없다면, 이게 끝입니다. 하지만 대부분의 경우, 메시에 "
"콜리전 바디가 필요할 것입니다."

msgid "Collisions"
msgstr "콜리전(Collision)"

msgid ""
"You can manually assign a :ref:`class_StaticBody` and :ref:"
"`class_CollisionShape` to each mesh. Alternatively, you can use the \"Mesh\" "
"menu to automatically create the collision body based on the mesh data."
msgstr ""
"각 메시마다 일일이 :ref:`class_StaticBody`\\ 와 :ref:"
"`class_CollisionShape`\\ 를 지정할 수 있습니다. 아니면 \"메시(Mesh)\" 메뉴에"
"서 메시 데이터를 기반으로 한 콜리전 바디를 자동으로 만들 수 있습니다."

msgid ""
"Note that a \"Convex\" collision body will work better for simple meshes. "
"For more complex shapes, select \"Create Trimesh Static Body\". Once each "
"mesh has a physics body and collision shape assigned, your mesh library is "
"ready to be used."
msgstr ""
"\"컨벡스\" 콜리전 바디는 단순한 메시에 더 잘 작동합니다. 복잡한 모양이라면 "
"\"Trimesh Static Body 만들기(Create Trimesh Static Body)\"를 선택하세요. 각 "
"메시마다 PhysicsBody와 ColliisionShape를 가졌다면, MeshLibrary를 사용할 준비"
"가 되었습니다."

msgid "Materials"
msgstr "머티리얼"

msgid ""
"Only the materials from within the meshes are used when generating the mesh "
"library. Materials set on the node will be ignored."
msgstr ""
"MeshLibrary를 생성할 때는 메시 안에 있는 머티리얼만 사용됩니다. 노드에 설정"
"된 머티리얼은 무시됩니다."

#, fuzzy
msgid "NavigationMeshes"
msgstr "네비게이션 메시."

msgid ""
"Like all mesh instances, MeshLibrary items can be assigned a :ref:"
"`class_NavigationMesh` resource, which can be created manually, or baked as "
"described below."
msgstr ""

msgid ""
"To create the NavigationMesh from a MeshLibrary scene export, place a :ref:"
"`class_NavigationMeshInstance` child node below the main MeshInstance for "
"the GridMap item. Add a valid NavigationMesh resource to the "
"NavigationMeshInstance and some source geometry nodes below and bake the "
"NavigationMesh."
msgstr ""

msgid ""
"With small grid cells it is often necessary to reduce the NavigationMesh "
"properties for agent radius and region minimum size."
msgstr ""

msgid ""
"Nodes below the NavigationMeshInstance are ignored for the MeshLibrary scene "
"export, so additional nodes can be added as source geometry just for baking "
"the navmesh."
msgstr ""

msgid ""
"The baked cell size of the NavigationMesh must match the NavigationServer "
"map cell size to properly merge the navigation meshes of different grid "
"cells."
msgstr ""

msgid "Exporting the MeshLibrary"
msgstr "MeshLibrary 내보내기"

msgid ""
"To export the library, click on Scene -> Convert To.. -> MeshLibrary.., and "
"save it as a resource."
msgstr ""
"MeshLibrary를 내보내려면, 씬(Scene) -> 다음으로 변환하기...(Convert To...) -"
"> 메시 라이브러리(MeshLibrary)를 클릭하고, 리소스로 저장하세요."

msgid ""
"You can find an already exported MeshLibrary in the project named "
"\"MeshLibrary.tres\"."
msgstr ""
"프로젝트에서 내보낸 MeshLibrary를 \"MeshLibrary.tres\"라는 이름으로 볼 수 있"
"습니다."

msgid "Using GridMap"
msgstr "GridMap 사용하기"

msgid ""
"Create a new scene and add a GridMap node. Add the mesh library by dragging "
"the resource file from the FileSystem dock and dropping it in the \"Theme\" "
"property in the Inspector."
msgstr ""
"새 씬을 만들고 GridMap 노드를 추가하세요. 파일 시스템(FileSystem) 독에서 리소"
"스 파일을 드래그한 다음, 인스펙터(Inspector)의 \"Mesh Library\" 속성에 드롭해"
"서 MeshLibrary를 추가하세요."

msgid ""
"The \"Cell/Size\" property should be set to the size of your meshes. You can "
"leave it at the default value for the demo. Set the \"Center Y\" property to "
"\"Off\"."
msgstr ""
"\"Cell/Size\" 속성은 메시의 크기를 설정합니다. 데모에서는 기본 값으로 두어도 "
"됩니다. \"Center Y\" 속성을 끄세요."

#, fuzzy
msgid ""
"Now you can start designing the level by choosing a tile from the palette "
"and placing it with Left-Click in the editor window. To remove a tile, hold :"
"kbd:`Shift` and use Right-click."
msgstr ""
"이제 레벨을 설계할 수 있습니다. 팔레트에서 타일을 선택하고, 편집기 창에서 좌"
"클릭으로 배치합니다. 타일을 지우려면, Shift+우클릭하면 됩니다."

#, fuzzy
msgid ""
"Click on the \"GridMap\" menu to see options and shortcuts. For example, "
"pressing :kbd:`S` rotates a tile around the y-axis."
msgstr ""
"\"그리드맵(GridMap)\" 메뉴를 클릭하면 설정과 단축키를 볼 수 있습니다. 예를 들"
"어, \"S\" 키를 누르면 타일을 Y축으로 회전합니다."

#, fuzzy
msgid ""
"Holding :kbd:`Shift` and dragging with the left mouse button will draw a "
"selection box. You can duplicate or clear the selected area using the "
"respective menu options."
msgstr ""
"<Shift>를 누른 채로 좌클릭 드래그를 하면 선택 항목 상자가 만들어 집니다. 메"
"뉴 설정에서 선택한 영역을 복제하거나 지울 수 있습니다."

msgid ""
"In the menu, you can also change the axis you're drawing on, as well as "
"shift the drawing plane higher or lower on its axis."
msgstr "메뉴에서 타일이 배치되는 격자의 높이와 축도 바꿀 수 있습니다."

msgid "Using GridMap in code"
msgstr "코드로 GridMap 사용하기"

msgid ""
"See :ref:`class_GridMap` for details on the node's methods and member "
"variables."
msgstr ""
"노드의 메서드와 멤버 변수에 대한 자세한 설명은 :ref:`class_GridMap`\\ 을 참고"
"하세요."

msgid "Translation status"
msgstr "번역 상태"
