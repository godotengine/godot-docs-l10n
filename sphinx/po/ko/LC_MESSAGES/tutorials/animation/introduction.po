# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Introduction to the animation features"
msgstr "2D 애니메이션 특징 소개"

msgid ""
"The :ref:`class_AnimationPlayer` node allows you to create anything from "
"simple to complex animations."
msgstr ""
":ref:`class_AnimationPlayer` 노드는 간단한 애니메이션부터 복잡한 애니메이션까"
"지 만들 수 있습니다."

#, fuzzy
msgid "In this guide you learn to:"
msgstr "이 가이드는 다음을 배웁니다:"

#, fuzzy
msgid "Work with the Animation Panel"
msgstr "애니메이션 패널 작업"

#, fuzzy
msgid "Animate any property of any node"
msgstr "노드의 속성 애니메이션하기"

msgid "Create a simple animation"
msgstr "간단한 애니메이션 만들기"

msgid "Call functions with the powerful Call Function Tracks"
msgstr ""

#, fuzzy
msgid ""
"In Godot, you can animate anything available in the Inspector, such as Node "
"transforms, sprites, UI elements, particles, visibility and color of "
"materials, and so on. You can also modify values of script variables and "
"call any function."
msgstr ""
"Godot에서 당신은 인스펙터(Inspecter)의 노드 변형, 스프라이트, UI 요소, 입자, "
"가시성 및 재료 색상 기타 등을 애니메이션 할 수 있습니다. 스크립트 변수 값을 "
"수정하고 임의의 함수를 호출할 수도 있습니다."

msgid "Create an AnimationPlayer node"
msgstr "AnimationPlayer 노드 만들기"

msgid ""
"To use the animation tools we first have to create an :ref:"
"`class_AnimationPlayer` node."
msgstr ""
"애니메이션 툴을 사용하기 위해서는 먼저 :ref:`class_AnimationPlayer` 노드를 만"
"들어야 합니다."

#, fuzzy
msgid ""
"The AnimationPlayer node type is the data container for your animations. One "
"AnimationPlayer node can hold multiple animations, that can automatically "
"transition to one another."
msgstr ""
"AnimationPlayer 노드 유형은 애니메이션의 데이터 컨테이너입니다. "
"AnimationPlayer 노드 하나로 여러 애니메이션을 저장할 수 있으며 자동으로 서로 "
"전환될 수 있습니다."

msgid "The AnimationPlayer node"
msgstr "AnimationPlayer 노드"

#, fuzzy
msgid ""
"After creating one click on the AnimationPlayer node in the Node tab to open "
"the Animation Panel at the bottom of the viewport."
msgstr ""
"노드 탭에서 AnimationPlayer 노드를 클릭해서 뷰포트 하단의 애니메이션 패널을 "
"엽니다."

msgid "The animation panel position"
msgstr "애니메이션 패널 위치"

#, fuzzy
msgid "It consists of four parts:"
msgstr "애니메이션 패널은 5가지 부분으로 구성되어 있습니다:"

msgid "The animation panel"
msgstr "애니메이션 패널"

msgid "Animation controls (i.e. add, load, save, and delete animations)"
msgstr ""

msgid "The tracks listing"
msgstr ""

msgid "The timeline with keyframes"
msgstr ""

msgid ""
"The timeline and track controls, where you can zoom the timeline and edit "
"tracks for example."
msgstr ""

msgid "Computer animation relies on keyframes"
msgstr ""

msgid "A keyframe defines the value of a property at a certain point in time."
msgstr "키프레임은 특정 시점의 속성이 가지는 값을 정의합니다."

msgid ""
"Diamond shapes represent keyframes in the timeline. A line between two "
"keyframes indicates that the value hasn't changed."
msgstr ""

msgid "Keyframes in Godot"
msgstr "Godot에서의 키프레임"

msgid ""
"The engine interpolates values between keyframes, resulting in a gradual "
"change in values over time."
msgstr ""
"엔진은 키프레임 사이의 값을 보간하여 시간이 지남에 따라 값이 점진적으로 변하"
"게 됩니다."

msgid "Two keyframes are all it takes to obtain a smooth motion"
msgstr "두 개의 키프레임만 있으면 부드러운 움직임을 얻을 수 있습니다"

msgid ""
"The timeline lets you insert keyframes and change their timing. It also "
"defines how long the animation is."
msgstr ""
"타임라인을 사용하면 키프레임을 삽입하고 시기를 변경할 수 있습니다. 또한 애니"
"메이션의 길이를 정의합니다."

msgid "The timeline in the animation panel"
msgstr "애니메이션 패널에서의 타임라인"

#, fuzzy
msgid ""
"Each line of the Animation Panel is an animation track. Normal and Transform "
"tracks reference node properties. Their name or id is a path to the node and "
"the affected property."
msgstr ""
"애니메이션 패널의 각각의 줄은 애니메이션 트랙입니다. Normal 과 Transform 은 "
"참조하는 노드 속성을 추적합니다. 이들의 이름이나 아이디는 노드와 영향을 받는 "
"속성의 경로입니다."

msgid "Example of Normal animation tracks"
msgstr ""

msgid ""
"If you animate the wrong property, you can edit a track's path anytime. "
"Double click on it and type the new path. Play the animation using the "
"\"Play from beginning\" button |Play from beginning| (or pressing :kbd:"
"`Shift + D` on keyboard) to see the changes instantly."
msgstr ""

#, fuzzy
msgid "Play from beginning"
msgstr "원점으로부터 멀리"

msgid "Tutorial: Creating a simple animation"
msgstr ""

msgid "Scene setup"
msgstr "씬 설정"

msgid ""
"For this tutorial, we'll create a Sprite node with an AnimationPlayer as its "
"child. We will animate the sprite to move between two points on the screen."
msgstr ""

msgid "Our scene setup"
msgstr ""

msgid ""
"AnimationPlayer inherits from Node instead of Node2D or Spatial, which means "
"that the child nodes will not inherit the transform from the parent nodes "
"due to a bare Node being present in the hierarchy."
msgstr ""

msgid ""
"Therefore, it is not recommended to add nodes that have a 2D/3D transform as "
"a child of an AnimationPlayer node."
msgstr ""

msgid ""
"The sprite holds an image texture. We animate that sprite to move between "
"two points on the screen. For this tutorial, use the default Godot icon as "
"the sprite's texture. As a starting point, move the sprite to a left "
"position on the screen."
msgstr ""

#, fuzzy
msgid ""
"Select the AnimationPlayer node, then click the \"Animation\" button in the "
"animation editor. From the list select \"New\" (|Add Animation|) to add a "
"new animation. And Enter a name for the animation in the dialog box."
msgstr ""
"``AnimationPlayer`` 를 선택하고 \"애니메이션\" 버튼을 클릭한 다음 \"새 파일"
"\"을 클릭하세요. 새 애니메이션을 \"walk\"로 이름을 지으세요. 애니메이션 길이"
"를 ``0.6`` 로 설정하고 \"Loop\" 버튼을 클릭해서 애니메이션이 반복되도록 하세"
"요."

#, fuzzy
msgid "Add Animation"
msgstr "애니메이션"

msgid "Add a new animation"
msgstr ""

msgid "Adding a track"
msgstr ""

msgid ""
"To add a new track for our sprite, select it and take a look in the toolbar:"
msgstr ""

msgid "Convenience buttons"
msgstr ""

msgid ""
"These switches and buttons allow you to add keyframes for the selected "
"node's location, rotation, and scale respectively."
msgstr ""

msgid ""
"Deselect rotation, because we are only interested in the location of our "
"sprite for this tutorial and click on the key button."
msgstr ""

msgid ""
"As we don't have a track already set up for the transform/location property, "
"Godot asks whether it should set it up for us. Click **Create**."
msgstr ""

msgid ""
"This creates a new track and our first keyframe at the beginning of the "
"timeline:"
msgstr ""

msgid "The sprite track"
msgstr ""

msgid "The second keyframe"
msgstr ""

msgid ""
"Now we need to set the destination where our sprite should be headed and how "
"much time it takes to get there."
msgstr ""

msgid ""
"Let's say, we want it to take 2 seconds to go to the other point. By default "
"the animation is set to last only 1 second, so change this in the timeline "
"controls in animation panel's lower panel to 2."
msgstr ""

msgid "Animation length"
msgstr ""

msgid ""
"Click on the timeline header near the 2-second mark and move the sprite to "
"the target destination on the right side."
msgstr ""

msgid ""
"Again, click the key button in the toolbar. This creates our second keyframe."
msgstr ""

msgid "Run the animation"
msgstr ""

msgid "Click on the \"Play from beginning\" (|Play from beginning|) button."
msgstr ""

msgid "Yay! Our animation runs:"
msgstr ""

msgid "The animation"
msgstr ""

msgid "Back and forth"
msgstr ""

msgid ""
"Godot has an additional feature here. Like said before, Godot always "
"calculates the frames between two keyframes. In a loop, the first keyframe "
"is also the last keyframe, if no keyframe is specified at the end."
msgstr ""

msgid "Animation loop"
msgstr ""

msgid ""
"If you set the animation length to 4 seconds now, the animation moves back "
"and forth. You can change this behavior if you change the track's loop mode. "
"This is covered in the next chapter."
msgstr ""

msgid "Track settings"
msgstr ""

msgid ""
"Each track has a settings panel at the end, where you can set the update "
"mode, the track interpolation, and the loop mode."
msgstr ""

msgid ""
"The update mode of a track tells Godot when to update the property values. "
"This can be:"
msgstr ""

msgid "**Continuous:** Update the property on each frame."
msgstr ""

msgid "**Discrete:** Only update the property on keyframes."
msgstr ""

msgid ""
"**Trigger:** Only update the property on keyframes or triggers. Triggers are "
"a type of keyframe used by the ``current_animation`` property of a :ref:"
"`class_AnimationPlayer`, and Animation Playback tracks."
msgstr ""

msgid ""
"**Capture:** If the first keyframe's time is greater than ``0.0``, the "
"current value of the property will be remembered and will be blended with "
"the first animation key. For example, you could use the Capture mode to move "
"a node that's located anywhere to a specific location."
msgstr ""

#, fuzzy
msgid "Track mode"
msgstr "툴 모드"

msgid ""
"In normal animations, you usually use \"Continuous\". The other types are "
"used to script complex animations."
msgstr ""

msgid ""
"The interpolation tells Godot how to calculate the frame values between the "
"keyframes. These interpolation modes are supported:"
msgstr ""

msgid "Nearest: Set the nearest keyframe value"
msgstr ""

msgid ""
"Linear: Set the value based on a linear function calculation between the two "
"keyframes"
msgstr ""

msgid ""
"Cubic: Set the value based on a cubic function calculation between the two "
"keyframes"
msgstr ""

msgid "Track interpolation"
msgstr ""

msgid ""
"Cubic interpolation leads to a more natural movement, where the animation is "
"slower at a keyframe and faster between keyframes. This is usually used for "
"character animation. Linear interpolation creates more of a robotic movement."
msgstr ""

msgid ""
"Godot supports two loop modes, which affect the animation if it's set to "
"loop:"
msgstr ""

msgid "Loop modes"
msgstr ""

msgid ""
"Clamp loop interpolation: When this is selected, the animation stops after "
"the last keyframe for this track. When the first keyframe is reached again, "
"the animation will reset to its values."
msgstr ""

msgid ""
"Wrap loop interpolation: When this is selected, Godot calculates the "
"animation after the last keyframe to reach the values of the first keyframe "
"again."
msgstr ""

msgid "Keyframes for other properties"
msgstr ""

msgid ""
"Godot doesn't restrict you to only edit transform properties. Every property "
"can be used as a track where you can set keyframes."
msgstr ""

msgid ""
"If you select your sprite while the animation panel is visible, you get a "
"small keyframe button for all the sprite's properties. Click on this button "
"and Godot automatically adds a track and keyframe to the current animation."
msgstr ""

msgid "Edit keyframes"
msgstr ""

msgid ""
"For advanced use and to edit keyframes in detail, You can click on them to "
"bring up the keyframe editor in the inspector. You can use this to directly "
"edit its values."
msgstr ""

msgid "Keyframe editor editing a key"
msgstr ""

msgid ""
"Additionally, you can also edit the easing value for this keyframe by "
"clicking and dragging the easing setting. This tells Godot, how to change "
"the property values when it reaches this keyframe."
msgstr ""

msgid ""
"You usually tweak your animations this way, when the movement doesn't \"look "
"right\"."
msgstr ""

msgid "Advanced: Call Method tracks"
msgstr ""

msgid ""
"Godot's animation engine doesn't stop here. If you're already comfortable "
"with Godot's scripting language :ref:`doc_gdscript` and :doc:`/classes/"
"index` you know that each node type is a class and has a bunch of callable "
"methods."
msgstr ""

msgid ""
"For example, the :ref:`class_AudioStreamPlayer` node type has a method to "
"play an audio stream."
msgstr ""

msgid ""
"Wouldn't it be great to use a method at a specific keyframe in an animation? "
"This is where \"Call Method Tracks\" come in handy. These tracks reference a "
"node again, this time without a reference to a property. Instead, a keyframe "
"holds the name and arguments of a method, that Godot should call when it "
"reaches this keyframe."
msgstr ""

msgid ""
"To demonstrate, we're going to use a call method track to play audio at a "
"specific keyframe. Normally to play audio you should use an audio track, but "
"for the sake of demonstrating methods we're going to do it this way."
msgstr ""

msgid ""
"Add a :ref:`class_AudioStreamPlayer` to the Scene Tree and setup a stream "
"using an audio file you put in your project."
msgstr ""

msgid ""
"Click on \"Add track\" (|Add track|) on the animation panel's track controls."
msgstr ""

msgid "Add track"
msgstr ""

msgid "Select \"Add Call Method Track\" from the list of possible track types."
msgstr ""

msgid "Add Call Method Track"
msgstr ""

msgid ""
"Select the :ref:`class_AudioStreamPlayer` node in the selection window. "
"Godot adds the track with the reference to the node."
msgstr ""

msgid "Select AudioStreamPlayer"
msgstr ""

msgid ""
"Right click the timeline where Godot should play the sample and click the "
"\"Insert Key\" option. This will bring up a list of methods that can be "
"called for the AudioStreamPlayer node. Select the first one."
msgstr ""

msgid ""
"When Godot reaches the keyframe, Godot calls the :ref:"
"`class_AudioStreamPlayer` node's \"play\" function and the stream plays."
msgstr ""

msgid ""
"You can change its position by dragging it on the timeline, you can also "
"click on the keyframe and use the keyframe settings in the inspector."
msgstr ""

#, fuzzy
msgid "Using RESET tracks"
msgstr "공백 사용하기"

msgid ""
"You can set up a special *RESET* animation to contain the \"default pose\". "
"This is used to ensure that the default pose is restored when you save the "
"scene and open it again in the editor."
msgstr ""

msgid ""
"For existing tracks, you can add an animation called \"RESET\" (case-"
"sensitive), then add tracks for each property that you want to reset. The "
"only keyframe should be at time 0, and give it the desired default value for "
"each track."
msgstr ""

msgid ""
"If AnimationPlayer's **Reset On Save** property is set to ``true``, the "
"scene will be saved with the effects of the reset animation applied (as if "
"it had been seeked to time ``0.0``). This only affects the saved file – the "
"property tracks in the editor stay where they were."
msgstr ""

msgid ""
"If you want to reset the tracks in the editor, select the AnimationPlayer "
"node, open the **Animation** bottom panel then choose **Apply Reset** in the "
"animation editor's **Animation** dropdown menu."
msgstr ""

msgid ""
"When adding tracks on new animations, the editor will ask you to "
"automatically create a RESET track when using the keyframe icon next to a "
"property in the inspector. This does not apply on tracks created with Godot "
"versions prior to 3.4, as the animation reset track feature was added in 3.4."
msgstr ""

msgid "Translation status"
msgstr "번역 상태"
