# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Interpolation"
msgstr "보간"

msgid ""
"Interpolation is a very basic operation in graphics programming. It's good "
"to become familiar with it in order to expand your horizons as a graphics "
"developer."
msgstr ""
"보간법은 그래픽 프로그래밍에서 매우 기본적인 작업입니다. 그래픽 개발자로써의 "
"시야를 넓히기 위해 이와 익숙해지는 것이 좋습니다."

msgid ""
"The basic idea is that you want to transition from A to B. A value ``t``, "
"represents the states in-between."
msgstr ""
"기본적인 개념은 상태 A를 B로 전환하는 것입니다. 이 때, 값 ``t`` 는 그 둘 사이"
"의 상태를 나타냅니다."

msgid ""
"As an example if ``t`` is 0, then the state is A. If ``t`` is 1, then the "
"state is B. Anything in-between is an *interpolation*."
msgstr ""
"예를 들어 값 ``t`` 가 0이라면, 그에 해당하는 상태는 A입니다. 마찬가지로 값 "
"``t`` 가 1이라면 해당하는 상태는 B가 됩니다. 이 둘 사이의 모든 값들을 *보간값"
"* 이라고 합니다."

msgid ""
"Between two real (floating-point) numbers, a simple interpolation is usually "
"described as:"
msgstr ""
"두 실수(부동소수점)에 대해서, 단순한 보간식은 보통 다음과 같이 기술됩니다:"

msgid "And often simplified to:"
msgstr "또한 종종 다음과 같이 간략화됩니다:"

msgid ""
"The name of this type of interpolation, which transforms a value into "
"another at *constant speed* is *\"linear\"*. So, when you hear about *Linear "
"Interpolation*, you know they are referring to this simple formula."
msgstr ""
"한 값을 다른 값으로, *일정한 속도* 로 전환하는 이러한 보간법을 *선형적 "
"(linear)* 이라고 합니다. 즉, *선형 보간법 (Linear Interpolation)* 이라고 하"
"면 위의 단순한 식을 의미한다고 할 수 있습니다."

msgid ""
"There are other types of interpolations, which will not be covered here. A "
"recommended read afterwards is the :ref:`Bezier <doc_beziers_and_curves>` "
"page."
msgstr ""
"이 밖에도 여러 종류의 보간법이 있지만, 여기에선 설명하지 않겠습니다. 이 글을 "
"읽은 뒤에 :ref:`Bezier <doc_beziers_and_curves>` 를 읽어보는 것을 권장합니다."

msgid "Vector interpolation"
msgstr "벡터 보간"

msgid ""
"Vector types (:ref:`Vector2 <class_Vector2>` and :ref:`Vector3 "
"<class_Vector3>`) can also be interpolated, they come with handy functions "
"to do it :ref:`Vector2.linear_interpolate() "
"<class_Vector2_method_linear_interpolate>` and :ref:`Vector3."
"linear_interpolate() <class_Vector3_method_linear_interpolate>`."
msgstr ""
"벡터 값 (:ref:`Vector2 <class_Vector2>` 와 :ref:`Vector3 <class_Vector3>`) 또"
"한 보간될 수 있습니다. 이들은 보간을 수행하는 편리한 함수들을 갖추고 있는데, "
"각각 :ref:`Vector2.linear_interpolate() "
"<class_Vector2_method_linear_interpolate>` 와 :ref:`Vector3."
"linear_interpolate() <class_Vector3_method_linear_interpolate>` 가 있습니다."

msgid ""
"For cubic interpolation, there are also :ref:`Vector2.cubic_interpolate() "
"<class_Vector2_method_cubic_interpolate>` and :ref:`Vector3."
"cubic_interpolate() <class_Vector3_method_cubic_interpolate>`, which do a :"
"ref:`Bezier <doc_beziers_and_curves>` style interpolation."
msgstr ""
"삼차 보간법의 경우엔, :ref:`Vector2.cubic_interpolate() "
"<class_Vector2_method_cubic_interpolate>`와 :ref:`Vector3."
"cubic_interpolate() <class_Vector3_method_cubic_interpolate>`를 사용할 수 있"
"습니다. 이들은 :ref:`베지어<doc_beziers_and_curves>` 스타일의 보간을 수행합니"
"다."

msgid ""
"Here is simple pseudo-code for going from point A to B using interpolation:"
msgstr "다음은 점 A를 점 B로 이동하는 간단한 의사 코드입니다:"

msgid "It will produce the following motion:"
msgstr "위의 코드는 다음과 같은 모션을 보여줍니다:"

msgid "Transform interpolation"
msgstr "변형 보간"

msgid ""
"It is also possible to interpolate whole transforms (make sure they have "
"either uniform scale or, at least, the same non-uniform scale). For this, "
"the function :ref:`Transform.interpolate_with() "
"<class_Transform_method_interpolate_with>` can be used."
msgstr ""
"변형 전체를 보간하는 것도 가능합니다 (이 경우 균일한 스케일, 또는 적어도 같"
"은 비균일한 스케일을 가지고 있는지 확인하세요). 이 때는, :ref:`Transform."
"interpolate_with() <class_Transform_method_interpolate_with>` 함수를 사용할 "
"수 있습니다."

msgid ""
"Here is an example of transforming a monkey from Position1 to Position2:"
msgstr "아래는 원숭이 모델을 Position1에서 Position2로 변형하는 예입니다:"

msgid "Using the following pseudocode:"
msgstr "다음 의사 코드를 사용하면:"

msgid "And again, it will produce the following motion:"
msgstr "아래와 같은 모션을 볼 수 있습니다:"

msgid "Smoothing motion"
msgstr "부드러운 모션 만들기"

msgid ""
"Interpolation can be used to smooth movement, rotation, etc. Here is an "
"example of a circle following the mouse using smoothed motion:"
msgstr ""
"보간법은 움직임이나 회전 등을 부드럽게 하는 데에도 사용할 수 있습니다. 아래"
"는 마우스 커서를 부드럽게 따라다니는 원을 만드는 예시입니다:"

msgid "Here is how it looks:"
msgstr "결과는 다음과 같습니다:"

msgid ""
"This useful for smoothing camera movement, allies following you (ensuring "
"they stay within a certain range), and many other common game patterns."
msgstr ""
"이것은 부드러운 카메라 움직임, 여러분을 일정 거리 내에서 따라다니는 동료, 그 "
"밖의 수많은 일반적인 게임 패턴을 구현하는 데 도움이 됩니다."

msgid "Translation status"
msgstr "번역 상태"
