# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Using RigidBody"
msgstr "RigidBody2D 사용하기"

msgid "What is a rigid body?"
msgstr "리지드 바디(rigid body)란?"

msgid ""
"A rigid body is one that is directly controlled by the physics engine in "
"order to simulate the behavior of physical objects. In order to define the "
"shape of the body, it must have one or more :ref:`Shape <class_Shape>` "
"objects assigned. Note that setting the position of these shapes will affect "
"the body's center of mass."
msgstr ""
"리지드 바디는 물리적 오브젝트의 행동을 시뮬레이션 하기 위해 물리 엔진으로 직"
"접 다루는 바디입니다. 바디의 모양을 정의하려면 하나 이상의 :ref:`Shape "
"<class_Shape>` 오브젝트가 지정되어 있어야 합니다. 이러한 모양의 위치를 설정하"
"면 바디의 무게 중심에 영향을 미칩니다."

msgid "How to control a rigid body"
msgstr "리지드 바디를 제어하는 방법"

#, fuzzy
msgid ""
"A rigid body's behavior can be altered by setting its properties, such as "
"mass and weight. A physics material needs to be added to the rigid body to "
"adjust its friction and bounce, and set if it's absorbent and/or rough. "
"These properties can be set in the Inspector or via code. See :ref:"
"`RigidBody <class_RigidBody>` and :ref:`PhysicsMaterial "
"<class_PhysicsMaterial>` for the full list of properties and their effects."
msgstr ""
"리지드 바디의 동작은 마찰, 질량, 바운스 등의 속성을 설정하여 변경할 수 있습니"
"다. 이러한 속성은 인스펙터(Inspecter)나 코드를 통해 설정할 수 있습니다. 속성"
"과 그 효과의 전체 목록은 :ref:`RigidBody <class_RigidBody>`\\ 를 참고하세요."

msgid ""
"There are several ways to control a rigid body's movement, depending on your "
"desired application."
msgstr ""
"원하는 용도에 따라 리지드 바디의 움직임을 제어하는 몇 가지 방법이 있습니다."

msgid ""
"If you only need to place a rigid body once, for example to set its initial "
"location, you can use the methods provided by the :ref:`Spatial "
"<class_Spatial>` node, such as ``set_global_transform()`` or ``look_at()``. "
"However, these methods cannot be called every frame or the physics engine "
"will not be able to correctly simulate the body's state. As an example, "
"consider a rigid body that you want to rotate so that it points towards "
"another object. A common mistake when implementing this kind of behavior is "
"to use ``look_at()`` every frame, which breaks the physics simulation. "
"Below, we'll demonstrate how to implement this correctly."
msgstr ""
"예를 들어, 초기 위치를 설정하기 위해 리지드 바디를 한 번만 배치해야 된다면 "
"``set_global_transform()`` 또는 ``look_at()``\\ 과 같은 :ref:`Spatial "
"<class_Spatial>` 노드가 제공하는 메서드를 사용할 수 있습니다. 그러나 이 메서"
"드들이 모든 프레임을 호출하지 못하거나 물리 엔진이 바디 상태를 정확하게 시뮬"
"레이션 할 수 없을 것입니다. 예를 들어, 다른 물체를 가리키도록 회전할 리지드 "
"바디를 고려하는것이 있습니다. 이런 행동을 시행할 때 흔히 저지르는 실수는 "
"``look_at()``\\ 을 모든 프레임에 사용하는 것인데 이것은 물리학적 시뮬레이션"
"을 깨뜨리게 됩니다. 아래에서는, 이를 올바르게 구현하는 방법을 시연합니다."

msgid ""
"The fact that you can't use ``set_global_transform()`` or ``look_at()`` "
"methods doesn't mean that you can't have full control of a rigid body. "
"Instead, you can control it by using the ``_integrate_forces()`` callback. "
"In this method, you can add *forces*, apply *impulses*, or set the "
"*velocity* in order to achieve any movement you desire."
msgstr ""
"``set_global_transform()``\\ 이나 ``look_at()``\\ 의 방법을 사용할 수 없다는 "
"사실이 리지드 바디를 완전히 통제할 수 없다는 것을 의미하지는 않습니다. 대신 "
"``_integrate_forces()`` 콜백을 사용하여 제어할 수 있습니다. 이 기능에서 원하"
"는 이동을 달성하기 위해 *forces*\\ 를 추가하거나 *impulses*\\ 를 적용하거나 "
"*velocity*\\ 를 설정할 수 있습니다."

msgid "The \"look at\" method"
msgstr "\"look at\" 메서드"

msgid ""
"As described above, using the Spatial node's ``look_at()`` method can't be "
"used each frame to follow a target. Here is a custom ``look_at()`` method "
"that will work reliably with rigid bodies:"
msgstr ""
"위에서 설명한 것처럼, Spatial 노드의 ``look_at()``\\ 을 각 프레임에 사용하여 "
"대상을 따라가도록 할 수는 없습니다. 다음은 리지드 바디에서 안정적으로 작동하"
"는 맞춤 ``look_at()`` 함수입니다:"

msgid ""
"This method uses the rigid body's ``set_angular_velocity()`` method to "
"rotate the body. It first calculates the difference between the current and "
"desired angle and then adds the velocity needed to rotate by that amount in "
"one frame's time."
msgstr ""
"이 함수는 바디를 회전시키기 위해 리지드 바디의 ``set_angular_velocity()`` 메"
"서드를 사용합니다. 먼저 현재와 원하는 각도의 차이를 계산한 다음 한 프레임의 "
"시간에 해당 양만큼 회전하는 데 필요한 속도를 추가합니다."

msgid ""
"This script will not work with rigid bodies in *character mode* because "
"then, the body's rotation is locked. In that case, you would have to rotate "
"the attached mesh node instead using the standard Spatial methods."
msgstr ""
"리지드 바디에서 이 스크립트는 바디의 회전을 잠그는 *character 모드*\\ 이면 작"
"동하지 않을 것입니다. 이 경우 표준 Spatial 메서드를 사용하여 연결된 메시 노드"
"를 회전해야 합니다."

msgid "Translation status"
msgstr "번역 상태"
