# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D movement overview"
msgstr "2D 이동 개요"

msgid "Introduction"
msgstr "소개"

#, fuzzy
msgid ""
"Every beginner has been there: \"How do I move my character?\" Depending on "
"the style of game you're making, you may have special requirements, but in "
"general the movement in most 2D games is based on a small number of designs."
msgstr ""
"모든 초심자는 이런 적이 있습니다: \"내 캐릭터를 움직이려면 어떻게 해야 하나"
"요?\" 만들고 있는 게임의 유형에 따라 특별한 요구 사항이 있을 수 있겠지만 일반"
"적으로 대부분 2D 게임에서 움직임은 적은 수의 디자인을 기반으로 합니다."

msgid ""
"We'll use :ref:`KinematicBody2D <class_KinematicBody2D>` for these examples, "
"but the principles will apply to other node types (Area2D, RigidBody2D) as "
"well."
msgstr ""
"우리는 이번 예제에 :ref:`KinematicBody2D <class_KinematicBody2D>` 를 사용할 "
"겁니다. 하지만 원리는 다른 노드 유형(Area2D, RiqidBody2D)에도 적용할 수 있습"
"니다."

msgid "Setup"
msgstr "설정"

msgid ""
"Each example below uses the same scene setup. Start with a "
"``KinematicBody2D`` with two children: ``Sprite`` and ``CollisionShape2D``. "
"You can use the Godot icon (\"icon.png\") for the Sprite's texture or use "
"any other 2D image you have."
msgstr ""
"아래의 각 예제는 동일한 씬 설정을 사용합니다. ``KinematicBody2D`` 와 자손 노"
"드로 ``Sprite`` 와 ``CollisionShape2D`` 로 시작합니다. 당신은 스프라이트 텍스"
"처로 Godot 아이콘(\"icon.png\")을 사용하거나 가지고 있는 다른 2D 이미지를 사"
"용할 수 있습니다."

msgid ""
"Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add "
"the following input actions (see :ref:`InputEvent <doc_inputevent>` for "
"details):"
msgstr ""
"``프로젝트 -> 프로젝트 설정`` 을 열고 \"입력 설정\" 탭을 선택합니다. 다음의 "
"입력 액션들을 추가하세요 (see :ref:`InputEvent <doc_inputevent>` for "
"details):"

msgid "8-way movement"
msgstr "8 방향 이동"

msgid ""
"In this scenario, you want the user to press the four directional keys (up/"
"left/down/right or W/A/S/D) and move in the selected direction. The name \"8-"
"way movement\" comes from the fact that the player can move diagonally by "
"pressing two keys at the same time."
msgstr ""
"이 시나리오에서는 사용자가 4 방향의 키들(위/왼쪽/아래/오른쪽 또는 W/A/S/D)을 "
"누르고 선택된 방향으로 움직였으면 합니다. \"8 방향 이동\" 명칭은 동시에 두 키"
"를 눌러서 플레이어가 대각선으로 움직이게 되는 것에서 유래합니다."

msgid "Add a script to the kinematic body and add the following code:"
msgstr "kinematic body에 스크립트를 추가하고 다음과 같은 코드를 추가합니다:"

#, fuzzy
msgid ""
"In the ``get_input()`` function, we check for the four key events and sum "
"them up to get the velocity vector. This has the benefit of making two "
"opposite keys cancel each other out, but will also result in diagonal "
"movement being faster due to the two directions being added together."
msgstr ""
"``get_input()`` 함수에서 4키 이벤트를 확인하고 이를 합산해서 속도 벡터를 얻습"
"니다. 두 반대편 키를 서로 상쇄하는 장점이 있지만 두 개의 방향을 함께 추가하"
"기 때문에 대각선 이동이 더 빨라지게 된다."

msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, and multiply by the desired speed."
msgstr ""
"이런 현상은 속도를 *정규화*해서 방지할 수 있습니다. 즉, *길이*를 ``1``로 만"
"든 뒤 원하는 속력 값을 곱해주면 되겠죠."

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""
"벡터 수학을 사용해 본 적이 없거나 재교육이 필요한 경우 :ref:"
"`doc_vector_math` 에서 Godot 내 벡터 사용에 대한 설명을 볼 수 있습니다."

msgid ""
"If the code above does nothing when you press the keys, double-check that "
"you've set up input actions correctly as described in the :ref:"
"`doc_2d_movement_setup` part of this tutorial."
msgstr ""

msgid "Rotation + movement"
msgstr "회전 + 이동"

msgid ""
"This type of movement is sometimes called \"Asteroids-style\" because it "
"resembles how that classic arcade game worked. Pressing left/right rotates "
"the character, while up/down moves it forward or backward in whatever "
"direction it's facing."
msgstr ""
"이러한 이동의 유형은 때때로 \"Asteroids-style\"이라 불립니다. 왜냐하면 고전 "
"아케이드 게임 Asteroids 작동 방식과 닮았기 때문입니다. 왼쪽 또는 오른쪽을 누"
"르면 캐릭터가 회전합니다. 반면에 위 또는 아래를 누르면 보고 있는 방향에 대햐"
"여 전진 하거나 후진합니다."

msgid ""
"Here we've added two new variables to track our rotation direction and "
"speed. Again, pressing both keys at once will cancel out and result in no "
"rotation. The rotation is applied directly to the body's ``rotation`` "
"property."
msgstr ""
"여기에 회전 방향과 속도를 추적하기 위한 새로운 변수 두 개를 추가했습니다. 다"
"시 두 키를 동시에 누르면 취소되고 회전하지 않습니다. 이 회전은 바디의 "
"``rotation`` 속성에 직접 적용됩니다."

msgid ""
"To set the velocity, we use the ``Vector2.rotated()`` method, so that it "
"points in the same direction as the body. ``rotated()`` is a useful vector "
"function that you can use in many circumstances where you would otherwise "
"need to apply trigonometric functions."
msgstr ""
"속도를 설정하기 위해 우리는 ``Vector2.rotated()`` 메서드를 사용해 바디와 같"
"은 방향을 가리키도록 합니다. ``rotated``는 삼각함수를 적용해야 하는 여러 가"
"지 상황에서 사용할 수 있는 유용한 벡터 함수입니다."

msgid "Rotation + movement (mouse)"
msgstr "회전 + 이동 (마우스)"

msgid ""
"This style of movement is a variation of the previous one. This time, the "
"direction is set by the mouse position instead of the keyboard. The "
"character will always \"look at\" the mouse pointer. The forward/back inputs "
"remain the same, however."
msgstr ""
"이번 동작 방식은 이전 동작의 변형입니다. 이번에는 키보드 대신 마우스 위치에 "
"의해 방향이 정해집니다. 캐릭터는 항상 마우스 포인터를 봅니다(\"look at\"). 그"
"러나 전방/후진 입력은 동일하게 유지됩니다."

msgid ""
"Here we're using the :ref:`Node2D <class_Node2D>` ``look_at()`` method to "
"point the player towards a given position. Without this function, you could "
"get the same effect by setting the angle like this:"
msgstr ""
"여기서 우리는 플레이어를 주어진 포지션으로 향하도록 하기 위해 :ref:`Node2D "
"<class_Node2D>` 의 ``look_at()`` 메서드를 사용하고 있습니다. 이 함수가 없으"
"면 각도를 다음과 같이 설정하여 동일한 효과를 얻을 수 있습니다:"

msgid "Click-and-move"
msgstr "클릭과 이동"

msgid ""
"This last example uses only the mouse to control the character. Clicking on "
"the screen will cause the player to move to the target location."
msgstr ""
"이번 마지막 예제는 마우스만 사용하여 캐릭터를 제어합니다. 화면을 클릭하면 플"
"레이어는 지정 위치로 움직입니다."

#, fuzzy
msgid ""
"Note the ``distance_to()`` check we make prior to movement. Without this "
"test, the body would \"jitter\" upon reaching the target position, as it "
"moves slightly past the position and tries to move back, only to move too "
"far and repeat."
msgstr ""
"이동 하기 전에 ``length()`` 로 확인하는 것을 유의하세요. 이 테스트가 없으면 "
"위치를 약간 지나쳐서 되돌아가려 할 때 지정 위치에 도달하고 \"덜덜 떨 것입니다"
"\", only to move too far and repeat."

#, fuzzy
msgid ""
"Uncommenting the ``look_at()`` line will also turn the body to point in its "
"direction of motion if you prefer."
msgstr ""
"원한다면 ``rotation`` 줄의 주석 처리를 제거해서 움직이는 방향으로 몸을 돌리"
"게 할 수 있습니다."

msgid ""
"This technique can also be used as the basis of a \"following\" character. "
"The ``target`` position can be that of any object you want to move to."
msgstr ""

msgid "Summary"
msgstr "요약"

msgid ""
"You may find these code samples useful as starting points for your own "
"projects. Feel free to use them and experiment with them to see what you can "
"make."
msgstr ""
"당신은 이 코드 샘플들이 자신의 프로젝트 시작점으로서 유용하다는 것을 알게 될 "
"것입니다. 자유롭게 그것들을 사용해서 무엇을 만들 수 있을 지 실험해보세요."

msgid ""
"You can download this sample project here: :download:`2D_movement_demo.zip "
"<files/2D_movement_demo.zip>`"
msgstr ""
"여기에서 이 샘플 프로젝트를 다운할 수 있습닌다: :download:`2D_movement_demo."
"zip <files/2D_movement_demo.zip>`"

msgid "Translation status"
msgstr "번역 상태"
