# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# features"
msgstr "C# 기능"

msgid ""
"This page provides an overview of the commonly used features of both C# and "
"Godot and how they are used together."
msgstr ""
"이 페이지는 C#과 Godot에서 일반적으로 사용되는 기능과 어떻게 이 둘이 함께 사"
"용되는 지에 대한 개요입니다."

msgid "Type conversion and casting"
msgstr "형 변환(Type conversion)과 캐스팅(casting)"

msgid ""
"C# is a statically typed language. Therefore, you can't do the following:"
msgstr "C#은 정적으로 타입형 언어입니다. 그러므로 다음을 할 수 없습니다:"

msgid ""
"The method ``GetNode()`` returns a ``Node`` instance. You must explicitly "
"convert it to the desired derived type, ``Sprite`` in this case."
msgstr ""
"``Node`` 인스턴스를 반환하는 ``GetNode()`` 메서드. ``Sprite``\\ 의 경우, 원하"
"는 파생 타입을 명시적으로 변환해야 합니다."

msgid "For this, you have various options in C#."
msgstr "이를 위해, C#에서는 다양한 설정이 있습니다."

msgid "**Casting and Type Checking**"
msgstr "**캐스트(Cast)와 타입 체크(Type Check)하기**"

msgid ""
"Throws ``InvalidCastException`` if the returned node cannot be cast to "
"Sprite. You would use it instead of the ``as`` operator if you are pretty "
"sure it won't fail."
msgstr ""
"반환된 노드를 Sprite로 캐스트 할 수 없는 경우 ``InvalidCastException``\\ 을 "
"발생시킵니다. 실패하지 않는다고 확신하면 ``as`` 연산자 대신에 그것을 사용할 "
"것입니다."

msgid "**Using the AS operator**"
msgstr "**AS 연산자 사용하기**"

msgid ""
"The ``as`` operator returns ``null`` if the node cannot be cast to Sprite, "
"and for that reason, it cannot be used with value types."
msgstr ""
"노드가 Sprite로 캐스트 될 수 없다면 ``as`` 연산자는 null을 반환합니다, 그렇"
"기 때문에 값 타입과는 함께 사용될 수 없습니다."

msgid "**Using the generic methods**"
msgstr "**일반 메서드 사용하기**"

msgid ""
"Generic methods are also provided to make this type conversion transparent."
msgstr "일반 메서드는 이 타입 변환을 투명하게 만들기 위해 제공됩니다."

msgid ""
"``GetNode<T>()`` casts the node before returning it. It will throw an "
"``InvalidCastException`` if the node cannot be cast to the desired type."
msgstr ""
"``GetNode<T>()``\\ 은 반환하기 전에 노드를 캐스트 합니다. 노드가 원하는 타입"
"으로 캐스트 되지 않는다면 ``InvalidCastException``\\ 을 발생시킵니다."

msgid ""
"``GetNodeOrNull<T>()`` uses the ``as`` operator and will return ``null`` if "
"the node cannot be cast to the desired type."
msgstr ""
"``GetNodeOrNull<T>()``\\ 는 ``as`` 연산자를 사용하고 노드가 원하는 타입으로 "
"캐스트 되지 않는다면 ``null``\\ 을 반환합니다."

msgid "**Type checking using the IS operator**"
msgstr "**IS 연산자를 사용하여 타입 체크하기**"

msgid ""
"To check if the node can be cast to Sprite, you can use the ``is`` operator. "
"The ``is`` operator returns false if the node cannot be cast to Sprite, "
"otherwise it returns true."
msgstr ""
"노드가 Sprite로 캐스트 되도록 체크하기 위해, ``is`` 연산자를 사용할 수 있습니"
"다. Sprite가 캐스트 되지 않는다면 ``is`` 연산자는 거짓을 반환하고, 그렇지 않"
"으면 참을 반환합니다."

msgid ""
"For more advanced type checking, you can look into `Pattern Matching "
"<https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching>`_."
msgstr ""
"더 많은 고급 타입 체크하기의 경우, `패턴 일치 <https://docs.microsoft.com/ko-"
"kr/dotnet/csharp/pattern-matching>`_\\ 에서 찾아볼 수 있습니다."

msgid "C# signals"
msgstr "C# 시그널"

msgid ""
"For a complete C# example, see the **Handling a signal** section in the step "
"by step :ref:`doc_scripting` tutorial."
msgstr ""
"완전한 C# 예제를 위해, 단계별 :ref:`doc_scripting` 튜토리얼에서 **시그널 다루"
"기**\\ 를 참고하세요."

msgid ""
"Declaring a signal in C# is done with the ``[Signal]`` attribute on a "
"delegate."
msgstr ""
"C#에서 시그널 선언은 델리게이트(delegate)에서 ``[Signal]`` 속성으로 됩니다."

msgid ""
"These signals can then be connected either in the editor or from code with "
"``Connect``. If you want to connect a signal in the editor, you need to "
"(re)build the project assemblies to see the new signal. This build can be "
"manually triggered by clicking the “Build” button at the top right corner of "
"the editor window."
msgstr ""
"위 시그널들은 에디터 혹은 코드 내에서 ``Connect`` 메소드를 이용해 연결할 수 "
"있습니다. 에디터에서 시그널을 연결할 때, 프로젝트 구성물(assembly) 를 다시 빌"
"드해야 추가된 시그널을 확인할 수 있습니다. 에디터 창 우측 상단 모퉁이의 "
"\"Build\" 버튼을 눌러 직접 빌드할 수 있습니다."

msgid "Emitting signals is done with the ``EmitSignal`` method."
msgstr "``EmitSignal`` 메서드로 시그널을 방출할 수 있습니다."

msgid ""
"Notice that you can always reference a signal name with the ``nameof`` "
"keyword (applied on the delegate itself)."
msgstr ""
"``nameof`` 키워드로 항상 시그널 이름을 참조할 수 있다는 것을 명심하세요 델리"
"게이트 자체에 적용됨)."

#, fuzzy
msgid ""
"It is possible to bind values when establishing a connection by passing a "
"Godot array."
msgstr "객체 배열을 전달함으로써 연결을 지을 때 값들을 묶을 수 있습니다."

msgid ""
"Signals support parameters and bound values of all the `built-in types "
"<https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/"
"built-in-types-table>`_ and Classes derived from :ref:`Godot.Object "
"<class_Object>`. Consequently, any ``Node`` or ``Reference`` will be "
"compatible automatically, but custom data objects will need to extend from "
"`Godot.Object` or one of its subclasses."
msgstr ""
"시그널은 매개변수를 지원하고, 모든 `내장 타입 <https://docs.microsoft.com/en-"
"us/dotnet/csharp/language-reference/keywords/built-in-types-table>`_\\ 의 값"
"들과 :ref:`Godot.Object <class_Object>`\\ 에서 파생된 클래스들을 묶습니다. 결"
"과적으로, 모든 ``Node``\\ 나 ``Reference``\\ 는 자동으로 호환될 것이지만, 맞"
"춤 데이터 오브젝트는 `Godot.Object`\\ 나 그 하위 클래스에서 확장해야 할 것입"
"니다."

msgid ""
"Finally, signals can be created by calling ``AddUserSignal``, but be aware "
"that it should be executed before any use of said signals (with ``Connect`` "
"or ``EmitSignal``)."
msgstr ""
"마침내, 시그널은 ``AddUserSignal``\\ 로 호출하는 것으로 생성될 수 있지만, 시"
"그널을 사용하기 전에 실행되어야 한다는 것을 명심하세요 (``Connect``\\ 나 "
"``EmitSignal``\\ 로 말이죠)."

msgid "Preprocessor defines"
msgstr "전처리기 지시문"

msgid ""
"Godot has a set of defines that allow you to change your C# code depending "
"on the environment you are compiling to."
msgstr ""
"Godot은 컴파일하는 환경에 따라 C# 코드를 변경할 수 있도록 여러 전처리기 지시"
"문을 제공합니다."

msgid ""
"If you created your project before Godot 3.2, you have to modify or "
"regenerate your `csproj` file to use this feature (compare "
"``<DefineConstants>`` with a new 3.2+ project)."
msgstr ""
"Godot 3.2 버전 이전에 프로젝트를 생성했다면, `csproj` 파일을 수정하거나 재생"
"성해야 이 기능(``<DefineConstants>`` 를 3.2 이후의 프로젝트와 비교해보십시오)"
"을 사용할 수 있습니다."

msgid "Examples"
msgstr "예제"

msgid "For example, you can change code based on the platform:"
msgstr "예를 들어, 다음과 같이 플랫폼에 따라 코드를 변경할 수 있습니다:"

msgid ""
"Or you can detect which engine your code is in, useful for making cross-"
"engine libraries:"
msgstr ""
"혹은 여러분의 코드를 실행하는 엔진의 상태를 확인하는데 사용할 수도 있습니다. "
"크로스-엔진 라이브러리를 제작하는데 유용한 기능입니다:"

msgid "Full list of defines"
msgstr "모든 지시문"

msgid "``GODOT`` is always defined for Godot projects."
msgstr "``GODOT`` 은 항상 Godot 프로젝트를 정의합니다."

msgid ""
"One of ``GODOT_64`` or ``GODOT_32`` is defined depending on if the "
"architecture is 64-bit or 32-bit."
msgstr ""
"컴퓨터 환경이 64-bit인지 32-bit인지에 따라서 ``GODOT_64`` 와 ``GODOT_32`` 중 "
"하나가 정의됩니다."

msgid ""
"One of ``GODOT_X11``, ``GODOT_WINDOWS``, ``GODOT_OSX``, ``GODOT_ANDROID``, "
"``GODOT_IOS``, ``GODOT_HTML5``, or ``GODOT_SERVER`` depending on the OS. "
"These names may change in the future. These are created from the "
"``get_name()`` method of the :ref:`OS <class_OS>` singleton, but not every "
"possible OS the method returns is an OS that Godot with Mono runs on."
msgstr ""
"사용중인 운영체제의 종류에 따라서 ``GODOT_X11``, ``GODOT_WINDOWS``, "
"``GODOT_OSX``, ``GODOT_ANDROID``, ``GODOT_IOS``, ``GODOT_HTML5``, 또는 "
"``GODOT_SERVER`` 중 하나가 정의됩니다. 위 이름들은 후에 변경될 수 있습니다. "
"이들은 :ref:`OS <class_OS>` 싱글턴의 ``get_name()`` 메서드로 생성될 수 있지"
"만, 메서드가 반환하는 모든 OS에서 Mono 버전 Godot이 실행될 수 있는 것은 아닙"
"니다."

msgid ""
"When **exporting**, the following may also be defined depending on the "
"export features:"
msgstr ""
"**내보내기** 를 할 때, 내보내기 기능에 따라서 아래의 것들이 정의될 수 있습니"
"다:"

msgid ""
"One of ``GODOT_PC``, ``GODOT_MOBILE``, or ``GODOT_WEB`` depending on the "
"platform type."
msgstr ""
"플랫폼에 따라서 ``GODOT_PC``, ``GODOT_MOBILE``, 또는 ``GODOT_WEB`` 중 하나가 "
"정의됩니다."

msgid ""
"One of ``GODOT_ARM64_V8A`` or ``GODOT_ARMEABI_V7A`` on Android only "
"depending on the architecture."
msgstr ""
"Android 아키텍처에 따라서 ``GODOT_ARM64_V8A`` 와 ``GODOT_ARMEABI_V7A`` 중 하"
"나가 정의됩니다."

msgid ""
"One of ``GODOT_ARM64`` or ``GODOT_ARMV7`` on iOS only depending on the "
"architecture."
msgstr ""
"iOS의 아키텍처에 따라서 ``GODOT_ARM64`` 와 ``GODOT_ARMV7`` 중 하나가 정의됩니"
"다."

msgid ""
"Any of ``GODOT_S3TC``, ``GODOT_ETC``, and ``GODOT_ETC2`` depending on the "
"texture compression type."
msgstr ""
"텍스처 압축 타입에 따라서 ``GODOT_S3TC``, ``GODOT_ETC``, 그리고 "
"``GODOT_ETC2`` 가 정의될 수 있습니다."

msgid ""
"Any custom features added in the export menu will be capitalized and "
"prefixed: ``foo`` -> ``GODOT_FOO``."
msgstr ""
"내보내기 메뉴에서 추가된 커스텀 기능은 다음과 같이 대문자화 된 후 접두사가 붙"
"습니다: ``foo`` -> ``GODOT_FOO``."

msgid ""
"To see an example project, see the OS testing demo: https://github.com/"
"godotengine/godot-demo-projects/tree/master/misc/os_test"
msgstr ""
"예제 프로젝트를 확인하려면 OS 테스트 데모를 확인하세요: https://github.com/"
"godotengine/godot-demo-projects/tree/master/misc/os_test"

msgid "Translation status"
msgstr "번역 상태"
