# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "File system"
msgstr "파일 시스템(File system)"

msgid "Introduction"
msgstr "소개"

msgid ""
"A file system manages how assets are stored and how they are accessed. A "
"well-designed file system also allows multiple developers to edit the same "
"source files and assets while collaborating. Godot stores all assets as "
"files in its file system."
msgstr ""
"파일 시스템은 애셋이 저장되는 방법과 애셋에 접근하는 방법을 관리합니다. 잘 설"
"계된 파일 시스템에서는 여러 개발자가 협업하면서 동일한 소스 파일과 애셋을 편"
"집할 수 있습니다. Godot는 모든 애셋을 파일 시스템에 파일 형태로 저장합니다."

msgid "Implementation"
msgstr "구현"

msgid ""
"The file system stores resources on disk. Anything, from a script, to a "
"scene or a PNG image is a resource to the engine. If a resource contains "
"properties that reference other resources on disk, the paths to those "
"resources are also included. If a resource has sub-resources that are built-"
"in, the resource is saved in a single file together with all the bundled sub-"
"resources. For example, a font resource is often bundled together with the "
"font textures."
msgstr ""
"파일 시스템은 리소스를 디스크에 저장합니다. 스크립트에서 씬이나 PNG 이미지에 "
"이르기까지 모든 것이 엔진의 리소스입니다. 리소스에 디스크의 다른 리소스를 참"
"조하는 속성이 포함된 경우 해당 리소스에 대한 경로도 포함됩니다. 리소스에 내장"
"된 하위 리소스가 있는 경우 해당 리소스는 모든 하위 리소스들과 함께 단일 파일"
"에 저장됩니다. 예를 들어, 폰트 리소스는 자주 폰트 텍스처와 함께 묶여집니다."

msgid ""
"The Godot file system avoids using metadata files. Existing asset managers "
"and VCSs are better than anything we can implement, so Godot tries its best "
"to play along with SVN, Git, Mercurial, Perforce, etc."
msgstr ""
"Godot 파일 시스템은 메타데이터 파일을 사용하지 않습니다. 기존 애셋 관리자와 "
"버전 관리 시스템(VCS)은 저희가 구현할 수 있는 것보다 우수하므로 Godot는 SVN, "
"Git, Mercurial, Perforce 등과 함께 작업할 수 있도록 최선을 다합니다."

msgid "Example of file system contents:"
msgstr "파일 시스템 내용의 예:"

msgid "project.godot"
msgstr "project.godot"

msgid ""
"The ``project.godot`` file is the project description file, and it is always "
"found at the root of the project. In fact, its location defines where the "
"root is. This is the first file that Godot looks for when opening a project."
msgstr ""
"``project.godot`` 파일은 프로젝트 설명 파일이며 항상 프로젝트의 루트에 있습니"
"다. 사실, 파일의 위치가 루트를 정의합니다. 이 파일은 Godot가 프로젝트를 열 "
"때 가장 먼저 찾는 파일입니다."

msgid ""
"This file contains the project configuration in plain text, using the win."
"ini format. Even an empty ``project.godot`` can function as a basic "
"definition of a blank project."
msgstr ""
"이 파일에는 win.ini 형식을 사용하는 텍스트로 된 프로젝트 설정이 포함되어 있습"
"니다. 빈 ``project.godot``\\ 도 빈 프로젝트의 기본 설정으로 기능할 수 있습니"
"다."

msgid "Path delimiter"
msgstr "경로 구분 기호"

msgid ""
"Godot only supports ``/`` as a path delimiter. This is done for portability "
"reasons. All operating systems support this, even Windows, so a path such as "
"``C:\\project\\project.godot`` needs to be typed as ``C:/project/project."
"godot``."
msgstr ""
"Godot는 경로 구분자로 ``/``\\ 만 지원합니다. 이식성을 높이기 위함입니다. "
"Windows를 포함한 모든 운영 체제가 이를 지원하므로 ``C:\\project\\project."
"godot``\\ 같은 경로는 ``C:/project/project.godot``\\ 로 입력해야 합니다."

msgid "Resource path"
msgstr "리소스 경로(Resource path)"

msgid ""
"When accessing resources, using the host OS file system layout can be "
"cumbersome and non-portable. To solve this problem, the special path ``res://"
"`` was created."
msgstr ""
"리소스에 접근할 때 호스트 OS 파일 시스템 레이아웃을 사용하는 것은 번거롭고 이"
"식성이 떨어질 수 있습니다. 이 문제를 해결하기 위해 특수 경로 ``res://``\\ 가 "
"만들어졌습니다."

msgid ""
"The path ``res://`` will always point at the project root (where ``project."
"godot`` is located, so ``res://project.godot`` is always valid)."
msgstr ""
"``res://`` 경로는 항상 프로젝트 루트를 가리킵니다(그곳에는 project.godot가 있"
"고, 그래서 ``res://project.godot`` 경로가 항상 존재합니다)."

msgid ""
"This file system is read-write only when running the project locally from "
"the editor. When exported or when running on different devices (such as "
"phones or consoles, or running from DVD), the file system will become read-"
"only and writing will no longer be permitted."
msgstr ""
"이 파일 시스템은 에디터에서 로컬로 프로젝트를 실행할 때만 읽고 쓸 수 있습니"
"다. 내보내거나 다른 장치(예: 전화, 콘솔, DVD에서)에서 실행하면 파일 시스템이 "
"읽기 전용이 되고 쓰기가 더 이상 허용되지 않습니다."

msgid "User path"
msgstr "사용자 경로(User path)"

msgid ""
"Writing to disk is still needed for tasks such as saving game state or "
"downloading content packs. To this end, the engine ensures that there is a "
"special path ``user://`` that is always writable. This path resolves "
"differently depending on the OS the project is running on. Local path "
"resolution is further explained in :ref:`doc_data_paths`."
msgstr ""
"게임 상태를 저장하거나 콘텐츠 팩을 다운로드하는 것과 같은 작업에는 여전히 디"
"스크에 쓰는 작업이 필요합니다. 이를 위해 엔진은 항상 쓰기 가능한 특수 경로 "
"``user://``가 있는지 확인합니다. 이 경로는 프로젝트가 실행 중인 OS에 따라 다"
"르게 해석됩니다. 로컬 경로 확인은 :ref:`doc_data_paths`\\ 에 자세히 설명되어 "
"있습니다."

msgid "Host file system"
msgstr "호스트 파일 시스템(Host file system)"

msgid ""
"Alternatively host file system paths can also be used, but this is not "
"recommended for a released product as these paths are not guaranteed to work "
"on all platforms. However, using host file system paths can be useful when "
"writing development tools in Godot."
msgstr ""
"호스트 파일 시스템 경로도 사용할 수 있지만 릴리스된 제품에는 이러한 경로가 모"
"든 플랫폼에서 작동하지 않을 수 있으므로 권장하지 않습니다. 그러나 호스트 파"
"일 시스템 경로를 사용하면 Godot에서 개발 툴을 만들 때 유용할 수 있습니다."

msgid "Drawbacks"
msgstr "단점"

msgid ""
"There are some drawbacks to this simple file system design. The first issue "
"is that moving assets around (renaming them or moving them from one path to "
"another inside the project) will break existing references to these assets. "
"These references will have to be re-defined to point at the new asset "
"location."
msgstr ""
"이 단순한 파일 시스템 설계에는 몇 가지 단점이 있습니다. 첫 번째 문제는 애셋"
"을 이동(이름 변경 또는 프로젝트 내의 한 경로에서 다른 경로로 이동)하면 이러"
"한 애셋에 대한 기존 참조가 손상된다는 점입니다. 이러한 참조는 새 애셋 위치를 "
"가리키도록 재정의되어야 합니다."

msgid ""
"To avoid this, do all your move, delete and rename operations from within "
"Godot, on the FileSystem dock. Never move assets from outside Godot, or "
"dependencies will have to be fixed manually (Godot detects this and helps "
"you fix them anyway, but why go the hard route?)."
msgstr ""
"이 문제를 회피하려면, Godot의 파일시스템(FileSystem) 독 안에서 모든 이동, 삭"
"제 및 이름 바꾸기 작업을 수행하세요. 절대로 Godot 외부에서 애셋을 이동시키지 "
"마세요. 그렇지 않으면 종속성을 수동으로 수정해야 합니다(Godot은 이를 감지하"
"고 어쨌든 고칠 수 있도록 도와주지만, 굳이 어려운 길로 갈 필요가 있나요?)."

msgid ""
"The second is that, under Windows and macOS, file and path names are case "
"insensitive. If a developer working in a case insensitive host file system "
"saves an asset as ``myfile.PNG``, but then references it as ``myfile.png``, "
"it will work fine on their platform, but not on other platforms, such as "
"Linux, Android, etc. This may also apply to exported binaries, which use a "
"compressed package to store all files."
msgstr ""
"두 번째는 Windows 및 macOS에서 파일과 경로 이름이 대소문자를 구분하지 않는다"
"는 점입니다. 대소문자를 구분하지 않는 호스트 파일 시스템에서 작업하는 개발자"
"가 애셋을 ``myfile.PNG``\\ 로 저장한 다음 ``myfile.png``\\ 로 참조하는 경우 "
"해당 플랫폼에서는 제대로 작동하지만 다른 플랫폼에서는 작동하지 않습니다. "
"Linux, Android 등과 같이 압축된 패키지를 사용해 모든 파일을 저장하는 내보낸 "
"바이너리에도 이 문제가 적용될 수 있습니다."

msgid ""
"It is recommended that your team clearly define a naming convention for "
"files when working with Godot. One simple fool-proof convention is to only "
"allow lowercase file and path names."
msgstr ""
"Godot로 작업할 때 파일에 대한 명명 규칙을 명확하게 정의하는 것이 좋습니다. "
"한 가지 간단한 실수 방지 규칙은 소문자 파일 및 경로 이름만 허용하는 것입니다."

msgid "Translation status"
msgstr "번역 상태"
