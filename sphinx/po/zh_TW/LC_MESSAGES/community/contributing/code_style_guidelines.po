# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Code style guidelines"
msgstr "程式碼樣式方針"

msgid ""
"When contributing to Godot's source code, you will be expected to follow the "
"style guidelines outlined below. Some of them are checked via the Continuous "
"Integration process and reviewers will ask you to fix potential issues, so "
"best setup your system as outlined below to ensure all your commits follow "
"the guidelines."
msgstr ""
"在參與貢獻 Godot 原始碼時需要遵守下述樣式方針。其中的一些規則會在 CI (持續整"
"合, Continuos Integration) 過程中自動檢查，而審閱者也會要求你修正一些潛在的問"
"題。因此，最好先依照下屬方式設定系統，並確保你的 Commit 都有符合本方針。"

msgid "C++ and Objective-C"
msgstr "C++ 與 Objective-C"

msgid ""
"There are no written guidelines, but the code style agreed upon by the "
"developers is enforced via the `clang-format <http://clang.llvm.org/docs/"
"ClangFormat.html>`__ code beautifier, which takes care for you of all our "
"conventions. To name a few:"
msgstr ""
"C++ 與 Objective-C 沒有明文的方針，但我們有由各個開發者認定的樣式，且會依照 "
"`clang-format <http://clang.llvm.org/docs/ClangFormat.html>`__ 程式碼美化工具"
"強制套用。該工具會處理我們所有的管理。下面舉例幾個："

msgid ""
"Indentation and alignment are both tab based (respectively one and two tabs)"
msgstr "縮排與對齊都是使用 Tab 字元 (分別使用 1 個與 2 個 Tab)"

msgid "One space around math and assignments operators as well as after commas"
msgstr "在數學與賦值運算子的周圍以及逗號後加上 1 個空格"

msgid ""
"Pointer and reference operators are affixed to the variable identifier, not "
"to the type name"
msgstr "指標與參照運算子要加到變數識別項前，而不是型別名稱前"

msgid "See further down regarding header includes"
msgstr "有關標頭檔引用，請繼續閱讀以瞭解詳情"

msgid ""
"The rules used by clang-format are outlined in the `.clang-format <https://"
"github.com/godotengine/godot/blob/master/.clang-format>`__ file of the Godot "
"repository."
msgstr ""
"clang-format 所使用的規則列在 Godot 儲存庫中的 `.clang-format <https://"
"github.com/godotengine/godot/blob/master/.clang-format>`__ 檔案內。"

msgid ""
"As long as you ensure that your style matches the surrounding code and that "
"you not introducing trailing whitespace or space-based indentation, you "
"should be fine. If you plan to contribute regularly however, we strongly "
"advise that you setup clang-format locally to check and automatically fix "
"all your commits."
msgstr ""
"基本上只要確保你寫的程式碼與周圍程式碼的樣式一致、並且行尾沒有多餘的空格、且"
"不使用空格來縮排就沒什麼問題。如果未來還有打算持續參與貢獻的話，我們強烈建議"
"在本機開發環境上安裝 clang-format 以自動檢查並修正所有的 Commit。"

msgid ""
"Godot's code style should *not* be applied to third-party code, i.e. that is "
"included in Godot's source tree but was not written specifically for our "
"project. Such code usually come from different upstream projects with their "
"own style guides (or lack thereof), and don't want to introduce differences "
"that would make syncing with upstream repositories harder."
msgstr ""
"Godot 的程式碼編寫樣式 **不應** 用於第三方程式碼，即 Godot 原始碼中包含但不是"
"特別為 Godot 專案撰寫的程式碼。這些程式通常來自不同的上游專案，有 (或沒有) 各"
"自的樣式指南，且不應套用 Godot 的樣式以避免造成與上游的不同並難以更新。"

msgid ""
"Third-party code is usually included in the ``thirdparty/`` folder and can "
"thus easily be excluded from formatting scripts. For the rare cases where a "
"third-party code snippet needs to be included directly within a Godot file, "
"you can use ``/* clang-format off */`` and ``/* clang-format on */`` to tell "
"clang-format to ignore a chunk of code."
msgstr ""
"第三方程式碼通常放在 ``thirdparty/`` 資料夾內，因此可以輕鬆地在格式化腳本中排"
"除掉。但有些稀有的例子，我們可能會直接在 Godot 的檔案中使用第三方程式碼片端，"
"這時候可以使用 ``/* clang-format off */`` 與 ``/* clang-format on */`` 來讓 "
"clang-format 忽略一段程式碼。"

msgid ""
"These guidelines only cover code formatting. See :ref:"
"`doc_cpp_usage_guidelines` for a list of language features that are "
"permitted in pull requests."
msgstr ""

msgid "Using clang-format locally"
msgstr "在本機上使用 clang-format"

#, fuzzy
msgid ""
"First of all, you will need to install clang-format. As of now, you need to "
"use **clang-format 13** to be compatible with Godot's format. Later versions "
"might be suitable, but previous versions may not support all used options, "
"or format some things differently, leading to style issues in pull requests."
msgstr ""
"首先，必須要安裝 clang-format。目前，必須要使用 **clang-format 8.x** 以相容 "
"Godot 的格式。更新版本可能適用，但較舊版本有 Bug 且會使目前程式碼的格式跑掉。"

msgid "Installation"
msgstr "安裝"

msgid "Here's how to install clang-format:"
msgstr "下列為如何安裝 clang-format："

msgid ""
"Linux: It will usually be available out-of-the-box with the clang toolchain "
"packaged by your distribution. If your distro version is not the required "
"one, you can download a pre-compiled version from the `LLVM website <http://"
"releases.llvm.org/download.html>`__, or if you are on a Debian derivative, "
"use the `upstream repos <http://apt.llvm.org/>`__."
msgstr ""
"Linux：通常直接於發行版的 clang 工具鏈中附帶提供。若你使用的發行版提供了不合"
"需求的版本，可以從 `LLVM 網站 <http://releases.llvm.org/download.html>`__ 上"
"下載預先編譯好的版本。而若使用 Debian 衍生版本，則可以使用這個 `上游軟體倉 "
"<http://apt.llvm.org/>`__ 。"

msgid ""
"macOS and Windows: You can download precompiled binaries from the `LLVM "
"website <http://releases.llvm.org/download.html>`__. You may need to add the "
"path to the binary's folder to your system's ``PATH`` environment variable "
"to be able to call ``clang-format`` out of the box."
msgstr ""
"macOS 與 Windows：可以從 `LLVM 網站 <http://releases.llvm.org/download."
"html>`__ 下載預先編譯好的二進位檔。可能會需要將二進位檔的資料夾加到系統的 "
"``PATH`` 環境路徑中以便直接呼叫 ``clang-format``。"

msgid ""
"You then have different possibilities to apply clang-format to your changes:"
msgstr "要將 clang-format 套用到修改中有幾個方法："

msgid "Manual usage"
msgstr "手動使用"

msgid ""
"You can apply clang-format manually one or more files with the following "
"command:"
msgstr "可以通過下列指令手動將 clang-format 套用至一個或多個檔案："

msgid ""
"``-i`` means that the changes should be written directly to the file (by "
"default clang-format would only output the fixed version to the terminal)."
msgstr ""
"``-i`` 代表改動應直接寫入到檔案內 (clang-format 預設只會將修正後的版本輸出到"
"終端機上)。"

msgid ""
"The path can point to several files, either one after the other or using "
"wildcards like in a typical Unix shell. Be careful when globbing so that you "
"don't run clang-format on compiled objects (.o and .a files) that are in "
"Godot's tree. So better use ``core/*.{cpp,h}`` than ``core/*``."
msgstr ""
"該路徑可指向多個檔案，可以直接指定多個檔案，或是像一般 Unix Shell 一樣使用萬"
"用字元。在使用萬用字元時請注意不要將 clang-format 套用到 Godot 資料夾內編譯後"
"的物件上 (.o 與 .a 檔案)。因此最好使用 ``core/*.{cpp,h}`` 而不是 ``core/"
"*`` 。"

msgid "Pre-commit hook"
msgstr "Pre-commit Hook"

msgid ""
"For ease of use, we provide a pre-commit hook for Git that will run clang-"
"format automatically on all your commits to check them, and let you apply "
"its changes in the final commit."
msgstr ""
"為了更容易使用，我們提供了用於 Git 的 Pre-commit Hook，可以自動在所有 Commit "
"上執行 clang-format 並進行檢查，然後能將其更改套用到最終 Commit 上。"

msgid ""
"This \"hook\" is a script which can be found in ``misc/hooks``, refer to "
"that folder's README.md for installation instructions."
msgstr ""
"這個「Hook」是放在 ``misc/hooks`` 中的腳本，請參考該資料夾的 README.md 以瞭解"
"詳細的安裝步驟。"

msgid ""
"If your clang-format is not in the ``PATH``, you may have to edit the ``pre-"
"commit-clang-format`` to point to the correct binary for it to work. The "
"hook was tested on Linux and macOS, but should also work in the Git Shell on "
"Windows."
msgstr ""
"如果 clang-format 不在 ``PATH`` 中的話，則可能需要編輯 ``pre-commit-clang-"
"format`` 來指向正確的二進位檔才能使用。該 Hook 已在 Linux 與 macOS 上測試過，"
"但在 Windows 上的 Git Shell 應該也可以使用。"

msgid "IDE plugin"
msgstr "IDE 外掛"

msgid ""
"Most IDEs or code editors have beautifier plugins that can be configured to "
"run clang-format automatically, for example each time you save a file."
msgstr ""
"大多數 IDE 或程式碼編輯器都有可以設定自動執行 clang-format 的美化插件，如可以"
"在保存檔案時自動執行。"

msgid "Here is a non-exhaustive list of beautifier plugins for some IDEs:"
msgstr "此處僅列出部分用於一些 IDE 的美化外掛："

msgid ""
"Qt Creator: `Beautifier plugin <http://doc.qt.io/qtcreator/creator-"
"beautifier.html>`__"
msgstr ""
"\\ Qt Creator: `Beautifier plugin <http://doc.qt.io/qtcreator/creator-"
"beautifier.html>`__"

msgid ""
"Visual Studio Code: `Clang-Format <https://marketplace.visualstudio.com/"
"items?itemName=xaver.clang-format>`__"
msgstr ""
"\\ Visual Studio Code: `Clang-Format <https://marketplace.visualstudio.com/"
"items?itemName=xaver.clang-format>`__"

msgid ""
"Visual Studio: `ClangFormat <https://marketplace.visualstudio.com/items?"
"itemName=LLVMExtensions.ClangFormat>`__"
msgstr ""
"\\ Visual Studio: `ClangFormat <https://marketplace.visualstudio.com/items?"
"itemName=LLVMExtensions.ClangFormat>`__"

msgid "vim: `vim-clang-format <https://github.com/rhysd/vim-clang-format>`__"
msgstr ""
"\\ vim: `vim-clang-format <https://github.com/rhysd/vim-clang-format>`__"

msgid ""
"CLion: Starting from version ``2019.1``, no plugin is required. Instead, "
"enable `ClangFormat <https://www.jetbrains.com/help/clion/clangformat-as-"
"alternative-formatter.html#clion-support>`__"
msgstr ""

msgid "(Pull requests welcome to extend this list with tested plugins.)"
msgstr "(歡迎建立 PR 以擴充此列表來包含更多經過測試的外掛。)"

msgid "Header includes"
msgstr "標頭引用"

msgid ""
"When adding new C++ or Objective-C files or including new headers in "
"existing ones, the following rules should be followed:"
msgstr ""
"建立新的 C++ 或 Objective-C 檔案或在現有檔案內引用新標頭檔時，必須遵守下列規"
"則："

msgid ""
"The first lines in the file should be Godot's copyright header and MIT "
"license, copy-pasted from another file. Make sure to adjust the filename."
msgstr ""
"檔案的頭幾行必須為 Godot 的版權標頭與 MIT 授權協議，請從其他檔案內複製過來。"
"請記得更改檔案名稱。"

msgid ""
"In a ``.h`` header, include guards should be used with the form "
"``FILENAME_H``."
msgstr ""
"在 ``.h`` 標頭檔內，Include 防護 (Include Guard) 應為 ``FILENAME_H`` 的格式。"

msgid ""
"In a ``.cpp`` file (e.g. ``filename.cpp``), the first include should be the "
"one where the class is declared (e.g. ``#include \"filename.h\"``), followed "
"by an empty line for separation."
msgstr ""
"在 ``.cpp`` 檔案 (如 ``filename.cpp``) 中，第一個 Include 應為類別定義的檔案 "
"(如 ``#include \"filename.h\"``)，並接上一行空行以作分隔。"

msgid ""
"Then come headers from Godot's own code base, included in alphabetical order "
"(enforced by ``clang-format``) with paths relative to the root folder. Those "
"includes should be done with quotes, e.g. ``#include \"core/object.h\"``. "
"The block of Godot header includes should then be followed by an empty line "
"for separation."
msgstr ""
"接下來的是 Godot 程式碼的其他標頭檔，按字母順序引入 (會由 ``clang-format`` 強"
"制執行)，並使用相對於根目錄的路徑。這些 Include 應以引號包含，如 ``#include "
"\"core/object.h\"`` 。Godot 標頭檔 Include 區塊後方應包含一行空行以作分隔。"

msgid ""
"Finally, third-party headers (either from ``thirdparty`` or from the "
"system's include paths) come next and should be included with the < and > "
"symbols, e.g. ``#include <png.h>``. The block of third-party headers should "
"also be followed by an empty line for separation."
msgstr ""
"最後接著是第三方標頭檔 (也就是從 ``thirdparty`` 或系統 Include 路徑內來的)，"
"應以 < 與 > 符號來 Include，如 ``#include <png.h>`` 。第三方標頭檔區塊後也應"
"加上一行空行以作區隔。"

msgid ""
"Godot and third-party headers should be included in the file that requires "
"them, i.e. in the `.h` header if used in the declarative code or in the `."
"cpp` if used only in the imperative code."
msgstr ""
"Godot 標頭檔與第三方標頭檔都應在需要這些標頭檔的檔案內 Include，也就是當使用"
"宣告式程式碼時應在 **.h** 標頭內，只有使用命令式程式碼時才應在 **.cpp** 內引"
"入。"

msgid "Example:"
msgstr "範例："

msgid "Java"
msgstr "\\ Java"

msgid ""
"Godot's Java code (mostly in ``platform/android``) is also enforced via "
"``clang-format``, so see the instructions above to set it up. Keep in mind "
"that this style guide only applies to code written and maintained by Godot, "
"not third-party code such as the ``java/src/com/google`` subfolder."
msgstr ""
"Godot 的 Java 程式碼 (大部分都在 ``platform/android`` 內) 也會強制由 ``clang-"
"format`` 套用，因此請參考上方的說明設定 clang-format。請注意，樣式指南僅套用"
"至由 Godot 撰寫且由 Godot 維護的程式碼，如 ``java/src/com/google`` 子資料夾內"
"的第三方程式碼則不應套用。"

msgid "Python"
msgstr "\\ Python"

msgid ""
"Godot's SCons buildsystem is written in Python, and various scripts included "
"in the source tree are also using Python."
msgstr ""
"Godot 的 SCons 建置系統是以 Python 撰寫的，而程式碼中還有多個腳本也是使用 "
"Python。"

msgid ""
"For those, we follow the `Black style guide <https://github.com/psf/"
"black#the-black-code-style>`__. Blacken your Python changes using `Black "
"<https://pypi.org/project/black/>`__."
msgstr ""
"這些檔案，我們遵守 `Black style guide <https://github.com/psf/black#the-"
"black-code-style>`__ 。請使用 `Black <https://pypi.org/project/black/>`__ 來"
"黑化你的 Python 程式碼。"

msgid "Using black locally"
msgstr "在本機上使用 Black"

msgid ""
"First of all, you will need to install black. Black requires Python 3.6.0+ "
"to run."
msgstr "首先，必須要先安裝 Black。要執行 Black 需要至少 Python 3.6.0+。"

msgid "Here's how to install black:"
msgstr "安裝 Black："

msgid "You then have different possibilities to apply black to your changes:"
msgstr "接著有幾種方式可以將 Black 套用至修改上："

msgid ""
"You can apply ``black`` manually to one or more files with the following "
"command:"
msgstr "可以使用下列指令手動套用 ``black`` 至一個或多個檔案："

msgid ""
"``-l 120`` means that the allowed number of characters per line is 120. This "
"number was agreed upon by the developers."
msgstr ""
"``-l 120`` 表示每行最多允許 120 個字元。這個數字是由多位開發人員公認的。"

msgid ""
"The path can point to several files, either one after the other or using "
"wildcards like in a typical Unix shell."
msgstr ""
"路徑可以指向多個檔案，可以直接寫出多個檔案，或是使用如一般 Unix Shell 的萬用"
"字元。"

msgid ""
"For ease of use, we provide a pre-commit hook for Git that will run black "
"automatically on all your commits to check them, and let you apply its "
"changes in the final commit."
msgstr ""
"為了簡化使用，我們也提供了用於 Git 的 Pre-commit Hook，會在所有 Commit 上自動"
"執行 Black，並允許將這些修改套用至最終的 Commit 上。"

msgid ""
"This \"hook\" is a script which can be found in ``misc/hooks``. Refer to "
"that folder's ``README.md`` for installation instructions."
msgstr ""
"該「hook」是放在 ``misc/hooks`` 內的一個腳本檔。請參考該資料夾中的 ``README."
"md`` 以瞭解安裝說明。"

msgid "Editor integration"
msgstr "編輯器整合"

msgid ""
"Many IDEs or code editors have beautifier plugins that can be configured to "
"run black automatically, for example each time you save a file. For details "
"you can check `Black editor integration <https://github.com/psf/black#editor-"
"integration>`__."
msgstr ""
"許多 IDE 與程式碼編輯器都有可設定自動執行 Black 的美化外掛，如可在每次保存檔"
"案時自動執行。詳細資訊可參考 `Black editor integration <https://github.com/"
"psf/black#editor-integration>`__ 一頁。"

#, fuzzy
msgid "Comment style guide"
msgstr "C# 風格指南"

msgid ""
"This comment style guide applies to all programming languages used within "
"Godot's codebase."
msgstr ""

msgid ""
"Begin comments with a space character to distinguish them from disabled code."
msgstr ""

msgid ""
"Use sentence case for comments. Begin comments with an uppercase character "
"and always end them with a period."
msgstr ""

msgid "Reference variable/function names and values using backticks."
msgstr ""

msgid "Wrap comments to ~100 characters."
msgstr ""

msgid ""
"You can use ``TODO:``, ``FIXME:``, ``NOTE:``, or ``HACK:`` as adominitions "
"when needed."
msgstr ""

#, fuzzy
msgid "**Example:**"
msgstr "**範例**"

msgid ""
"Don't repeat what the code says in a comment. Explain the *why* rather than "
"*how*."
msgstr ""

#, fuzzy
msgid "**Bad:**"
msgstr "**錯誤例** :"

msgid ""
"You can use Javadoc-style comments above function or macro definitions. It's "
"recommended to use Javadoc-style comments *only* for methods which are not "
"exposed to scripting. This is because exposed methods should be documented "
"in the :ref:`class reference XML <doc_updating_the_class_reference>` instead."
msgstr ""

msgid ""
"For member variables, don't use Javadoc-style comments but use single-line "
"comments instead:"
msgstr ""

msgid "Translation status"
msgstr "翻譯狀態"
