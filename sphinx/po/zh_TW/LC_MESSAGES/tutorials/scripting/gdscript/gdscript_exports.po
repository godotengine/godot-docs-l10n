# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript exports"
msgstr "GDScript的導出"

msgid "Introduction to exports"
msgstr "匯出簡介"

msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``export`` keyword::"
msgstr ""
"在 Godot 中可以匯出類別成員。也就是說匯出成員的數值可以與附加的資源一起保存 "
"(如 :ref:`場景 <class_PackedScene>`) 。匯出成員也能在屬性面板編輯器中編輯。使"
"用 ``export`` 關鍵字來匯出："

msgid ""
"An exported variable must be initialized to a constant expression or have an "
"export hint in the form of an argument to the ``export`` keyword (see the "
"*Examples* section below)."
msgstr ""
"匯出的變數必須以常數運算式來初始化，或必須以 ``export`` 關鍵字的引數來作為匯"
"出提示 (請參考下方**範例** 一節)。"

msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"匯出成員變數的其中一個基本的好處就是能在編輯器中瀏覽並編輯。這樣一來，如美術"
"或遊戲設計師之後就能通過修改數值來更改程式的執行方式。為此有一個特殊的匯出語"
"法。"

#, fuzzy
msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language."
msgstr "也可以在其他語言如 C# 中匯出屬性。匯出的語法因語言而異。"

msgid "Examples"
msgstr "範例"

msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"請特別注意，即使腳本不是在編輯器中執行，匯出屬性依然可以被編輯。這個功能可以"
"與 :ref:`「工具」模式的腳本 <doc_gdscript_tool_mode>` 一起使用。"

msgid "Exporting bit flags"
msgstr "匯出位元旗標"

msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the export hint ``int, FLAGS, ...``, they "
"can be set from the editor::"
msgstr ""
"作為位元旗標的整數可以在單一屬性內儲存多個 ``true``/``false`` (布林) 值。只需"
"要使用匯出提示 ``int, FLAGS, …`` 就可以在編輯器中設定："

msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"必須為每個旗標提供說明字串。在這個例子中， ``Fire`` 的值為 1， ``Water`` 為 "
"2， ``Earth`` 為 4 而 ``Wind`` 則為 8。通常必須定義對應的常數 (如： ``const "
"ELEMENT_WIND = 8`` 等)。"

msgid ""
"Export hints are also provided for the physics and render layers defined in "
"the project settings::"
msgstr "匯出提示在專案設定中也定義了物理與算繪層："

msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr "使用位元旗標會需要理解位元運算子。若不確定的話，則應該使用布林變數。"

msgid "Exporting arrays"
msgstr "匯出陣列"

msgid ""
"Exported arrays can have initializers, but they must be constant expressions."
msgstr "可以在匯出的陣列中使用初始設定式，但只能使用常數運算式。"

msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""
"若匯出的陣列指定了從 Resource 繼承來的型別，則陣列值在屬性面板中就可以從檔案"
"系統中一次拖放多個檔案過來。"

msgid "Setting exported variables from a tool script"
msgstr "從工具腳本中設定匯出變數"

msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` after setting the "
"exported variable's value."
msgstr ""
"從 :ref:`doc_gdscript_tool_mode` 腳本中更改匯出變數值是，顯示在屬性面板上的值"
"不會自動更新。要更新屬性面板上的值，則需要在設定匯出變數值後呼叫 :ref:"
"`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` 。"

msgid "Advanced exports"
msgstr "進階匯出"

msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"為了避免不必要的複雜設計，並非所有匯出型別都有在語言層面上提供。下面說明了一"
"些能使用低階 API 實作的常見匯出功能。"

msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, and :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` methods as described in :ref:"
"`doc_accessing_data_or_logic_from_object`."
msgstr ""
"在進一步閱讀之前，建議您先熟悉屬性的處理方法以及如何使用 :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>` 與 :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` 方法來自定屬性處理，詳細說明可參"
"考 :ref:`doc_accessing_data_or_logic_from_object` 。"

msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"若要在 C++ 中以上述方法繫結屬性，請參考 :ref:"
"`doc_binding_properties_using_set_get_property_list` 。"

msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr "腳本必須為 ``tool`` 模式，才可在編輯器中使用上述方法。"

#, fuzzy
msgid "Properties"
msgstr "屬性。"

msgid ""
"To understand how to better use the sections below, you should understand "
"how to make properties with advanced exports."
msgstr ""

msgid ""
"The ``_get_property_list()`` function gets called by the inspector. You can "
"override it for more advanced exports. You must return an ``Array`` with the "
"contents of the properties for the function to work."
msgstr ""

#, fuzzy
msgid "``name`` is the name of the property"
msgstr "``name`` 是要加入屬性面板中的分類名稱；"

msgid "``type`` is the type of the property from ``Variant.Type``."
msgstr ""

msgid ""
"The ``float`` type is called a real (``TYPE_REAL``) in the ``Variant.Type`` "
"enum."
msgstr ""

#, fuzzy
msgid "Attaching variables to properties"
msgstr "存取區域變數或屬性："

msgid ""
"To attach variables to properties (allowing the value of the property to be "
"used in scripts), you need to create a variable with the exact same name as "
"the property or else you may need to override the :ref:`_set() "
"<class_Object_method__get_property_list>` and :ref:`_get() "
"<class_Object_method__get_property_list>` methods. Attaching a variable to "
"to a property also gives you the ability to give it a default state. ::"
msgstr ""

#, fuzzy
msgid "Adding default values for properties"
msgstr "存取區域變數或屬性："

msgid ""
"To define default values for advanced exports, you need to override the "
"``property_can_revert()`` and ``property_get_revert()`` methods."
msgstr ""

msgid ""
"The ``property_can_revert()`` method takes the name of a property and must "
"return ``true`` if the property can be reverted. This will enable the Revert "
"button next to the property in the inspector."
msgstr ""

msgid ""
"The ``property_get_revert()`` method takes the name of a property and must "
"return the default value for that property."
msgstr ""

msgid "Adding script categories"
msgstr "新增腳本分類"

#, fuzzy
msgid ""
"For better visual distinguishing of properties, a special script category "
"can be embedded into the inspector to act as a separator. ``Script "
"Variables`` is one example of a built-in category. ::"
msgstr ""
"為了在視覺上更好區分各個屬性，可以將一種特殊的腳本分類嵌入至屬性面板中，作為"
"分割線使用。 ``Script Variables`` 就是一個內建分類的範例。"

msgid "``name`` is the name of a category to be added to the inspector;"
msgstr "``name`` 是要加入屬性面板中的分類名稱;"

msgid ""
"Every following property added after the category definition will be a part "
"of the category."
msgstr ""

msgid ""
"``PROPERTY_USAGE_CATEGORY`` indicates that the property should be treated as "
"a script category specifically, so the type ``TYPE_NIL`` can be ignored as "
"it won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_CATEGORY`` 代表這個屬性要作為腳本分類來使用，所以可以忽略型"
"別 ``TYPE_NIL`` ，因為實際上這個型別不會在腳本邏輯內使用，但還是必須要在這裡"
"定義。"

msgid "Grouping properties"
msgstr "建立屬性群組"

#, fuzzy
msgid "A list of properties with similar names can be grouped. ::"
msgstr "可將名稱類似的屬性放在群組內。"

msgid ""
"``name`` is the name of a group which is going to be displayed as "
"collapsible list of properties;"
msgstr "``name`` 是群組名稱，在屬性面板中可以展開摺疊，內包含了一組屬性列表;"

#, fuzzy
msgid ""
"Every following property added after the group property with the prefix "
"(which determined by ``hint_string``) will be shortened. For instance, "
"``rotate_speed`` is going to be shortened to ``speed`` in this case. "
"However, ``movement_speed`` won't be a part of the group and will not be "
"shortened."
msgstr ""
"接下來所有新增的屬性都會被摺疊放在群組中，且會以 ``hint_string`` 索引鍵定義的"
"前置字串來縮短名稱。例如， 在本例中 ``rotate_speed`` 會被縮短為 ``speed`` 。"

msgid ""
"``PROPERTY_USAGE_GROUP`` indicates that the property should be treated as a "
"script group specifically, so the type ``TYPE_NIL`` can be ignored as it "
"won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_GROUP`` 代表這個屬性要被作為腳本群組來使用，所以可以忽略型"
"別 ``TYPE_NIL`` ，因為實際上這個型別不會在腳本邏輯內使用，但還是必須要在這裡"
"定義。"

msgid "Translation status"
msgstr "翻譯狀態"
