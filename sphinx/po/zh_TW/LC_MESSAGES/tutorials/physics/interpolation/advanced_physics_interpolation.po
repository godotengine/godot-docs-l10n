# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Advanced physics interpolation"
msgstr "創建內容"

msgid ""
"Although the previous instructions will give satisfactory results in a lot "
"of games, in some cases you will want to go a stage further to get the best "
"possible results and the smoothest possible experience."
msgstr ""

#, fuzzy
msgid "Exceptions to automatic physics interpolation"
msgstr "創建內容"

msgid ""
"Even with physics interpolation active, there may be some local situations "
"where you would benefit from disabling automatic interpolation for a :ref:"
"`Node<class_Node>` (or branch of the :ref:`SceneTree<class_SceneTree>`), and "
"have the finer control of performing interpolation manually."
msgstr ""

msgid ""
"This is possible using the :ref:`Node."
"physics_interpolation_mode<class_Node_property_physics_interpolation_mode>` "
"property which is present in all Nodes. If you for example, turn off "
"interpolation for a Node, the children will recursively also be affected (as "
"they default to inheriting the parent setting). This means you can easily "
"disable interpolation for an entire subscene."
msgstr ""

msgid ""
"The most common situation where you may want to perform your own "
"interpolation is Cameras."
msgstr ""

msgid "Cameras"
msgstr "攝影機"

msgid ""
"In many cases, a :ref:`Camera<class_Camera>` can use automatic interpolation "
"just like any other node. However, for best results, especially at low "
"physics tick rates, it is recommended that you take a manual approach to "
"Camera interpolation."
msgstr ""

msgid ""
"This is because viewers are very sensitive to Camera movement. For instance, "
"a Camera that realigns slightly every 1/10th of a second (at 10tps tick "
"rate) will often be noticeable. You can get a much smoother result by moving "
"the Camera each frame in ``_process``, and following an interpolated target "
"manually."
msgstr ""

msgid "Manual Camera interpolation"
msgstr ""

msgid "**Ensure the Camera is using global coordinate space**"
msgstr ""

msgid ""
"The very first step when performing manual Camera interpolation is to make "
"sure the Camera transform is specified in *global space* rather than "
"inheriting the transform of a moving parent. This is because feedback can "
"occur between the movement of a parent node of a Camera and the movement of "
"the Camera Node itself, which can mess up the interpolation."
msgstr ""

#, fuzzy
msgid "There are two ways of doing this:"
msgstr "Godot 沒有使用限制"

msgid ""
"Move the Camera so it is independent on its own branch, rather than being a "
"child of a moving object."
msgstr ""

msgid ""
"Call :ref:`Spatial.set_as_toplevel<class_Spatial_method_set_as_toplevel>` "
"and set this to ``true``, which will make the Camera ignore the transform of "
"its parent."
msgstr ""

#, fuzzy
msgid "Typical example"
msgstr "計時器範例"

msgid ""
"A typical example of a custom approach is to use the ``look_at`` function in "
"the Camera every frame in ``_process()`` to look at a target node (such as "
"the player)."
msgstr ""

msgid ""
"But there is a problem. If we use the traditional ``get_global_transform()`` "
"on a Camera \"target\" Node, this transform will only focus the Camera on "
"the target *at the current physics tick*. This is *not* what we want, as the "
"Camera will jump about on each physics tick as the target moves. Even though "
"the Camera may be updated each frame, this does not help give smooth motion "
"if the *target* is only changing each physics tick."
msgstr ""

msgid "get_global_transform_interpolated()"
msgstr ""

msgid ""
"What we really want to focus the Camera on, is not the position of the "
"target on the physics tick, but the *interpolated* position, i.e. the "
"position at which the target will be rendered."
msgstr ""

msgid ""
"We can do this using the :ref:`Spatial."
"get_global_transform_interpolated<class_Spatial_method_get_global_transform_interpolated>` "
"function. This acts exactly like getting :ref:`Spatial."
"global_transform<class_Spatial_property_global_transform>` but it gives you "
"the *interpolated* transform (during a ``_process()`` call)."
msgstr ""

msgid ""
"``get_global_transform_interpolated()`` should only be used once or twice "
"for special cases such as Cameras. It should **not** be used all over the "
"place in your code (both for performance reasons, and to give correct "
"gameplay)."
msgstr ""

msgid ""
"Aside from exceptions like the Camera, in most cases, your game logic should "
"be in ``_physics_process()``. In game logic you should be calling "
"``get_global_transform()`` or ``get_transform()``, which will give the "
"current physics transform (in global or local space respectively), which is "
"usually what you will want for gameplay code."
msgstr ""

#, fuzzy
msgid "Example manual Camera script"
msgstr "GDScript 範例"

msgid ""
"Here is an example of a simple fixed Camera which follows an interpolated "
"target:"
msgstr ""

msgid "Mouse look"
msgstr ""

msgid ""
"Mouse look is a very common way of controlling Cameras. But there is a "
"problem. Unlike keyboard input which can be sampled periodically on the "
"physics tick, mouse move events can come in continuously. The Camera will be "
"expected to react and follow these mouse movements on the next frame, rather "
"than waiting until the next physics tick."
msgstr ""

msgid ""
"In this situation, it can be better to disable physics interpolation for the "
"Camera node (using :ref:`Node."
"physics_interpolation_mode<class_Node_property_physics_interpolation_mode>`) "
"and directly apply the mouse input to the Camera rotation, rather than apply "
"it in ``_physics_process``."
msgstr ""

msgid ""
"Sometimes, especially with Cameras, you will want to use a combination of "
"interpolation and non-interpolation:"
msgstr ""

msgid ""
"A first person camera may position the camera at a player location (perhaps "
"using :ref:`Spatial."
"get_global_transform_interpolated<class_Spatial_method_get_global_transform_interpolated>`), "
"but control the Camera rotation from mouse look *without* interpolation."
msgstr ""

msgid ""
"A third person camera may similarly determine the look at (target location) "
"of the camera using :ref:`Spatial."
"get_global_transform_interpolated<class_Spatial_method_get_global_transform_interpolated>`, "
"but position the camera using mouse look *without* interpolation."
msgstr ""

msgid ""
"There are many permutations and variations of Camera types, but it should be "
"clear that in many cases, disabling automatic physics interpolation and "
"handling this yourself can give a better result."
msgstr ""

#, fuzzy
msgid "Disabling interpolation on other nodes"
msgstr "禁用不需要的模組"

msgid ""
"Although Cameras are the most common example, there are a number of cases "
"when you may wish other nodes to control their own interpolation, or be non-"
"interpolated. Consider for example, a player in a top view game whose "
"rotation is controlled by mouse look. Disabling physics rotation allows the "
"player rotation to match the mouse in real-time."
msgstr ""

#, fuzzy
msgid "MultiMeshes"
msgstr "Meshes - 網格"

msgid ""
"Although most visual Nodes follow the single Node single visual instance "
"paradigm, MultiMeshes can control several instances from the same Node. "
"Therefore, they have some extra functions for controlling interpolation "
"functionality on a *per-instance* basis. You should explore these functions "
"if you are using interpolated MultiMeshes."
msgstr ""

msgid ""
":ref:`MultiMesh."
"reset_instance_physics_interpolation<class_MultiMesh_method_reset_instance_physics_interpolation>`"
msgstr ""

msgid ""
":ref:`MultiMesh."
"set_as_bulk_array_interpolated<class_MultiMesh_method_set_as_bulk_array_interpolated>`"
msgstr ""

msgid ""
"Full details are in the :ref:`MultiMesh<class_MultiMesh>` documentation."
msgstr ""

msgid "Translation status"
msgstr "翻譯狀態"
