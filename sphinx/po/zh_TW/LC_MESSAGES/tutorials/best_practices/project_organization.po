# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Project organization"
msgstr "組織專案"

msgid "Introduction"
msgstr "簡介"

msgid ""
"Since Godot has no restrictions on project structure or filesystem usage, "
"organizing files when learning the engine can seem challenging. This "
"tutorial suggests a workflow which should be a good starting point. We will "
"also cover using version control with Godot."
msgstr ""
"由於 Godot 並沒有限制專案架構與如何使用檔案系統，在學習使用 Godot 時，如何組"
"織檔案便很有挑戰性。本教學建議的工作流程是一個不錯的開始。我們也會介紹如何配"
"合 Godot 使用版本控制。"

msgid "Organization"
msgstr "組織"

msgid ""
"Godot is scene-based in nature, and uses the filesystem as-is, without "
"metadata or an asset database."
msgstr ""
"Godot 本質基於場景，並按照檔案系統原本的樣子來使用，不使用後設資料或素材資料"
"庫。"

msgid ""
"Unlike other engines, many resources are contained within the scene itself, "
"so the amount of files in the filesystem is considerably lower."
msgstr ""
"與其他遊戲引擎不同，許多資源都包含在場景內，因此在檔案系統中的檔案數量也就比"
"較少。"

msgid ""
"Considering that, the most common approach is to group assets as close to "
"scenes as possible; when a project grows, it makes it more maintainable."
msgstr ""
"因此，常見的做法是儘量將素材放得靠近場景。隨著專案成長，這樣也比較容易管理。"

msgid ""
"As an example, one can usually place into a single folder their basic "
"assets, such as sprite images, 3D model meshes, materials, and music, etc. "
"They can then use a separate folder to store built levels that use them."
msgstr ""
"例如，我們通常會將基本素材如 Sprite 圖片、3D 模型網格、材質與音樂…等放在單一"
"資料夾內。接著可以使用各個不同的資料夾來儲存各個做好的關卡會使用到的素材。"

msgid "Style guide"
msgstr "風格指南"

msgid ""
"For consistency across projects, we recommend following these guidelines:"
msgstr "為了在各專案間保持一貫性，我們建議依照下列方針："

msgid ""
"Use **snake_case** for folder and file names (with the exception of C# "
"scripts). This sidesteps case sensitivity issues that can crop up after "
"exporting a project on Windows. C# scripts are an exception to this rule, as "
"the convention is to name them after the class name which should be in "
"PascalCase."
msgstr ""
"資料夾與檔案名稱使用 **snake_case** (除了 C# 腳本例外)。這樣一來也同時解決了"
"從 Windows 上匯出專案後可能會出現的區分大小寫功能。C# 腳本為本規則的例外，因"
"為 C# 腳本的準則為以類別名稱命名檔名，而類別名稱應該為 PascalCase。"

msgid ""
"Use **PascalCase** for node names, as this matches built-in node casing."
msgstr "節點名稱應為 **PascalCase** ，該命名方式與內建節點一樣。"

msgid ""
"In general, keep third-party resources in a top-level ``addons/`` folder, "
"even if they aren't editor plugins. This makes it easier to track which "
"files are third-party. There are some exceptions to this rule; for instance, "
"if you use third-party game assets for a character, it makes more sense to "
"include them within the same folder as the character scenes and scripts."
msgstr ""
"一般來說，就算不是編輯器外掛，也儘量將第三方資源放在最上層的 ``addons/`` 資料"
"夾中。這樣可以更容易追蹤哪些檔案是第三方。但本規則也有一些例外，如，若在角色"
"上使用第三方遊戲素材，則放到跟角色場景與腳本相同的資料夾內比較合理。"

msgid "Importing"
msgstr "匯入"

msgid ""
"Godot versions prior to 3.0 did the import process from files outside the "
"project. While this can be useful in large projects, it resulted in an "
"organization hassle for most developers."
msgstr ""
"Godot 3.0 版以前，匯入流程會從專案外部讀取檔案。雖然對於大型專案來說很好用，"
"但對許多開發者來說卻難以組織。"

msgid ""
"Because of this, assets are now transparently imported from within the "
"project folder."
msgstr "因此，素材現在可以在專案資料夾內透明地匯入。"

msgid "Ignoring specific folders"
msgstr "忽略特定資料夾"

msgid ""
"To prevent Godot from importing files contained in a specific folder, create "
"an empty file called ``.gdignore`` in the folder (the leading ``.`` is "
"required). This can be useful to speed up the initial project importing."
msgstr ""
"若要防止 Godot 從特定資料夾內匯入檔案，可於該資料夾內建立一個空白檔案 ``."
"gdignore`` (必須以 ``.`` 開頭)。對於初始專案來說能有效提高速度。"

msgid ""
"To create a file whose name starts with a dot on Windows, you can use a text "
"editor such as Notepad++ or use the following command in a command prompt: "
"``type nul > .gdignore``"
msgstr ""
"若要在 Windows 上建立以點開頭的檔案，可使用如 Notepad++ 的文字編輯器，或於命"
"令提示字元使用下列指令： ``type nul > .gdignore``"

#, fuzzy
msgid ""
"Once the folder is ignored, resources in that folder can't be loaded anymore "
"using the ``load()`` and ``preload()`` methods. Ignoring a folder will also "
"automatically hide it from the FileSystem dock, which can be useful to "
"reduce clutter."
msgstr ""
"忽略資料夾後，於該資料夾內的資源將不再可用 ``load()`` 與 ``preload()`` 方法載"
"入。"

msgid ""
"Note that the ``.gdignore`` file's contents are ignored, which is why the "
"file should be empty. It does not support patterns like ``.gitignore`` files "
"do."
msgstr ""

msgid "Case sensitivity"
msgstr "區分大小寫"

msgid ""
"Windows and recent macOS versions use case-insensitive filesystems by "
"default, whereas Linux distributions use a case-sensitive filesystem by "
"default. This can cause issues after exporting a project, since Godot's PCK "
"virtual filesystem is case-sensitive. To avoid this, it's recommended to "
"stick to ``snake_case`` naming for all files in the project (and lowercase "
"characters in general)."
msgstr ""
"Windows 與近期的 macOS 版本預設使用不區分大小寫的檔案系統，而 Linux 發行版則"
"預設使用有區分大小寫的檔案系統。由於 Godot 的 PCK 虛擬檔案系統是區分大小寫"
"的，對於匯出專案來說會導致問題。要避免大小寫問題，建議保持專案內所有檔案都使"
"用 ``snake_case`` (並主要使用小寫文字)。"

msgid ""
"You can break this rule when style guides say otherwise (such as the C# "
"style guide). Still, be consistent to avoid mistakes."
msgstr ""
"當風格指南另有規定時，便可不遵守此規則 (如 C# 風格指南)。但，應維持一致性以避"
"免犯錯。"

msgid ""
"On Windows 10, to further avoid mistakes related to case sensitivity, you "
"can also make the project folder case-sensitive. After enabling the Windows "
"Subsystem for Linux feature, run the following command in a PowerShell "
"window::"
msgstr ""
"為了 Windows 10 中避免區分大小寫的錯誤，也可以將專案資料夾中設定成有區分大小"
"寫。開啟用於 Linux 的 Windows 子系統 (WSL) 後，請於 PowerShell 中執行下列指"
"令："

msgid ""
"If you haven't enabled the Windows Subsystem for Linux, you can enter the "
"following line in a PowerShell window *running as Administrator* then reboot "
"when asked::"
msgstr ""
"若尚未啟用用於 Linux 的 Windows 子系統，請 **以系統管理員身份執行** "
"PowerShell 並輸入下列指令，接著將會詢問是否重開機："

msgid "Translation status"
msgstr "翻譯狀態"
