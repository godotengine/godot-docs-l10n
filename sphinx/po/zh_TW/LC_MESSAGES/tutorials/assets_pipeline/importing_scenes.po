# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Importing 3D scenes"
msgstr "匯入 3D 場景"

msgid "Godot scene importer"
msgstr "Godot 場景匯入工具"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr "Godot 有靈活可設定的 3D 資源匯入工具。"

msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D DCC will be transferred as close as possible."
msgstr ""
"Godot 以 **場景** 來作業。這表示，可以將您慣用的 3D DCC 中整個場景匯入轉換為"
"非常相近的結果。"

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godot 支援下列 3D **場景檔案格式** ："

#, fuzzy
msgid ""
"glTF 2.0 **(recommended)**. Godot has full support for both text (``.gltf``) "
"and binary (``.glb``) formats."
msgstr "glTF 2.0。Godot 完整支援文字與二進位格式。"

msgid "DAE (COLLADA), an older format that is fully supported."
msgstr "DAE (COLLADA)，舊型的檔案格式，完整支援。"

#, fuzzy
msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also fully "
"supported, but pretty limited (no support for pivots, skeletons, animations, "
"PBR materials, ...)."
msgstr "OBJ (Wavefront) 格式。也有完整支援，但效果有限 (不支援樞紐、骨骼…等)。"

#, fuzzy
msgid "ESCN, a Godot-specific format that Blender can export with a plugin."
msgstr "ESCN，Godot 專用格式，可以在 Blender 中通過外掛來匯出。"

msgid ""
"FBX, supported via the Open Asset Import library. However, FBX is "
"proprietary, so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"FBX，通過 Open Asset Import 函式庫提供支援。但，FBX 為專屬軟體，因此若工作流"
"程合用的話，我們建議使用上述列表中的其他格式。"

msgid ""
"Just copy the scene file together with the texture to the project "
"repository, and Godot will do a full import."
msgstr "只需要將場景檔與紋理一起複製到專案儲存庫中，Godot 就會完整匯入。"

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"有一點很重要的是，匯入後的網格並不會被骨骼變形。請確保在匯入前以您慣用的 3D "
"編輯器將骨骼重設至 T-Pose 或預設靜止姿勢。"

msgid "Exporting DAE files from Maya and 3DS Max"
msgstr "在 Maya 或 3DS Max 中匯出 DAE 檔"

msgid ""
"Autodesk added built-in COLLADA support to Maya and 3DS Max, but it's broken "
"by default and should not be used. The best way to export this format is by "
"using the `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`__ plugins. They work well, although they are not always "
"up-to date with the latest version of the software."
msgstr ""
"Autodesk 在 Maya 與 3DS Max 中新增了內建 COLLADA 支援，但預設就不能用，且不應"
"使用。最好的方法是使用 `OpenCollada <https://github.com/KhronosGroup/"
"OpenCOLLADA/wiki/OpenCOLLADA-Tools>`__ 外掛。雖然 OpenCollada 沒有即時與 "
"Maya/3DS Max 最新版對應，但效果最好。"

msgid "Exporting glTF 2.0 files from Blender"
msgstr "在 Blender 中匯出 glTF 2.0 檔案"

msgid ""
"There are three ways to export glTF files from Blender. As a glTF binary (``."
"glb`` file), glTF embedded (``.gltf`` file), and with textures (``gltf`` + "
"``.bin`` + textures)."
msgstr ""
"有三種方法可以在 Blender 中匯出 glTF 檔案。可匯出為 glTF 二進位檔 (``.glb`` "
"檔案)、glTF 嵌入式檔案 (``.gltf`` 檔案) 以及與紋理一起匯出 (``.gltf`` + ``."
"bin`` + 紋理)。"

msgid ""
"glTF binary files are the smallest of the three options. They include the "
"mesh and textures set up in Blender. When brought into Godot the textures "
"are part of the object's material file."
msgstr ""
"glTF 二進位檔是三種方法中最小的一種。glTF 二進位檔包含 Blender 中設定的網格與"
"紋理。將 glTF 放入 Godot 後，紋理會變成物件材質檔的一部分。"

msgid ""
"glTF embedded files function the same way as binary files. They don't "
"provide extra functionality in Godot, and shouldn't be used since they have "
"a larger file size."
msgstr ""
"glTF 嵌入式檔案可以獲得與二進位檔案相同的結果。但在 Godot 中沒有提供額外的功"
"能，而且因為檔案大小比較大，所以也不建議使用。"

msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those "
"glTF binary files are fine."
msgstr ""
"有兩種情況會需要將 glTF 與紋理分別匯入。其中一種情況是需要讓場景由純文字檔來"
"描述、讓二進位資料保存在獨立的二進位檔案中，這樣子便適用於版本控制系統，可以"
"用基於文字的格式來審閱改動。第二種情況是檔需要將紋理與材質檔分開的時候。若沒"
"有需要這兩種情況的話，則用 glTF 二進位檔即可。"

msgid ""
"Blend shape animations cannot be imported - they require manual animation "
"within Godot."
msgstr ""

#, fuzzy
msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Blender 匯出的 glTF 檔不包含放射紋理 (Emissive Texture)。若模型使用放射紋理，"
"則必須分開匯入。"

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""

msgid "Exporting DAE files from Blender"
msgstr "在 Blender 中匯出 DAE 檔"

msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and should not be used as is."
msgstr ""
"Blender 內建 COLLADA 支援，但用起來不是很適合遊戲引擎，所以也不建議直接拿來"
"用。"

msgid ""
"Godot provides a `Blender plugin <https://github.com/godotengine/collada-"
"exporter>`_ that will correctly export COLLADA scenes for use in Godot. It "
"does not work in Blender 2.8 or newer, but there are plans to update it in "
"the future."
msgstr ""
"Godot 有提供一個 `Blender 外掛 <https://github.com/godotengine/collada-"
"exporter>`_ ，會自動校正匯出給 Godot 用的 COLLADA 場景。目前不支援 Blender "
"2.8 與之後的版本，但未來有計劃要更新。"

msgid "Exporting ESCN files from Blender"
msgstr "在 Blender 中匯出 ESCN 檔"

msgid ""
"The most powerful one, called `godot-blender-exporter <https://github.com/"
"godotengine/godot-blender-exporter>`__. It uses a .escn file, which is kind "
"of another name for a .tscn file (Godot scene file); it keeps as much "
"information as possible from a Blender scene. However, it is considered "
"experimental."
msgstr ""
"`godot-blender-exporter <https://github.com/godotengine/godot-blender-"
"exporter>`__ ，ESCN 是最強大的一種格式。該匯出工具使用 .escn 檔案，算是 ."
"tscn 的另一個名字 (Godot 場景檔)。ESCN 會儘量將 Blender 中的所有資訊都保存起"
"來，但目前還算實驗性格式。"

msgid ""
"The ESCN exporter has a detailed `document <escn_exporter/index.html>`__ "
"describing its functionality and usage."
msgstr ""
"有關 ESCN 匯出工具的詳細功能與使用方法，都寫在 `文件 <escn_exporter/index."
"html>`__ 中。"

#, fuzzy
msgid "Exporting textures separately"
msgstr "匯入紋理"

msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures, they can work in Godot. This includes the `Substance suite "
"<https://www.substance3d.com/>`__, `ArmorPaint (open source) <https://"
"armorpaint.org/>`__, and `Material Maker (open source) <https://github.com/"
"RodZill4/material-maker>`__."
msgstr ""

#, fuzzy
msgid ""
"For more information on Godot's materials, see :ref:`doc_spatial_material`."
msgstr "更多有關光照烘焙的資訊，請參考 :ref:`doc_baked_lightmaps` 。"

#, fuzzy
msgid "Exporting considerations"
msgstr "其他建議"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""

msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D DCC triangulate objects on its own. In Blender, "
"this can be done by adding a Triangulate modifier to your objects and making "
"sure **Apply Modifiers** is checked in the export dialog. Alternatively, "
"depending on the exporter, you may be able to find and enable a "
"**Triangulate Faces** option in the export dialog."
msgstr ""

msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D DCC before exporting the scene."
msgstr ""

msgid "Import workflows"
msgstr "匯入工作流程"

msgid ""
"Godot scene importer allows different workflows regarding how data is "
"imported. Depending on many options, it is possible to import a scene with:"
msgstr ""
"Godot 場景匯入工具可依據資料匯入方式的不同使用不同的匯入流程。依據不同選項設"
"定，可以將場景與下列資料一起匯入："

msgid ""
"External materials (default): Where each material is saved to a file "
"resource. Modifications to them are kept."
msgstr ""
"外部材質 (預設)：外部材質將各個材質都保存在檔案資源內。對這些材質所做的變更會"
"保留。"

msgid ""
"External meshes: Where each mesh is saved to a different file. Many users "
"prefer to deal with meshes directly."
msgstr "外部網格：各個網格會保存至不同的檔案中。許多使用者會偏好直接處理網格。"

msgid ""
"External animations: Allowing saved animations to be modified and merged "
"when sources change."
msgstr "外部動畫：可保存動畫，以便之後修改或在原始檔更改時合併回去。"

msgid ""
"External scenes: Save each of the root nodes of the imported scenes as a "
"separate scene."
msgstr "外部場景：將匯入場景的各個根節點保存為個別場景。"

msgid "Single scene: A single scene file with everything built in."
msgstr "單一場景：將所有東西都放在單一場景檔案中。"

msgid ""
"As different developers have different needs, this import process is highly "
"customizable."
msgstr "由於各個開發者都有不同的需求，所以這個匯入流程可高度客製化。"

msgid "Import options"
msgstr "匯入選項"

msgid "The importer has several options, which will be discussed below:"
msgstr "匯入設定有許多選項，將在稍後說明："

msgid "Nodes"
msgstr "節點"

msgid "Root Type"
msgstr "根型別"

msgid ""
"By default, the type of the root node in imported scenes is \"Spatial\", but "
"this can be modified."
msgstr "預設情況下，匯入場景的根節點是「Spatial」，但可修改為不同型別。"

msgid "Root Name"
msgstr "根名稱"

msgid "Allows setting a specific name to the generated root node."
msgstr "可以指定產生的根節點名稱。"

msgid "Root Scale"
msgstr "根縮放"

msgid "The scale of the root node."
msgstr "根節點的縮放 (Scale)。"

msgid "Custom Script"
msgstr "自訂腳本"

msgid ""
"A special script to process the whole scene after import can be provided. "
"This is great for post processing, changing materials, doing funny stuff "
"with the geometry etc."
msgstr ""
"此處可提供一個腳本來在匯入後處理整個場景。該腳本適合拿來做後處理、用來更改材"
"質、或是對幾何做有趣的處理等等。"

msgid "Create a script like this:"
msgstr "建立如下腳本："

msgid ""
"The ``post_import`` function takes the imported scene as argument (the "
"parameter is actually the root node of the scene). The scene that will "
"finally be used must be returned. It can be a different one."
msgstr ""
"``post_import`` 函式會將匯入的場景作為引數 (該參數實際上就是場景的根節點)。必"
"須回傳最終要被使用的場景。回傳的可以是不同場景。"

msgid "Storage"
msgstr "儲存"

msgid ""
"By default, Godot imports a single scene. This option allows specifying that "
"nodes below the root will each be a separate scene and instanced into the "
"imported one."
msgstr ""
"預設情況下，Godot 會匯入單一場景。該選項可以指定根節點下方的節點，並將這些節"
"點做成分別的場景，最後再實體化到匯入的場景中。"

msgid ""
"Of course, instancing such imported scenes in other places manually works, "
"too."
msgstr "當然，也可以手動將匯入場景實體化到其他地方去。"

msgid "Materials"
msgstr "材質"

msgid "Location"
msgstr "位置"

msgid ""
"Godot supports materials in meshes or nodes. By default, materials will be "
"put on each node."
msgstr "Godot 支援網格或節點中的材質。預設情況下，材質會被放到各個節點上。"

msgid ""
"Materials can be stored within the scene or in external files. By default, "
"they are stored in external files so editing them is possible. This is "
"because most 3D DCCs don't have the same material options as those present "
"in Godot."
msgstr ""
"材質可以保存在場景或外部檔案中。預設情況下，材質會保存為外部檔案，所以可以進"
"行編輯。這是因為大多數 3D DDC 並沒有與 Godot 中相同的材質選項。"

msgid ""
"When materials are built-in, they will be lost each time the source scene is "
"modified and re-imported."
msgstr "當使用內建材質，每次原始場景修改與重新匯入後都會遺失這些材質。"

msgid ""
"Godot will not reimport materials that are stored in external files unless "
"you remove the associated ``.material`` file before reimporting."
msgstr ""
"如果沒有在重新匯入前移除相應的 ``.material`` 檔案，則 Godot 不會重複匯入儲存"
"在外部檔案中的素材。"

msgid ""
"To force reimporting materials every time the 3D scene is reimported, change "
"the material storage mode in the 3D scene by selecting it in the FileSystem "
"dock, going to the Import dock then setting **Material > Storage** to "
"**Built-In** instead of **Files**."
msgstr ""
"若要在每次重新匯入 3D 場景後強制重新匯入素材，請更改 3D 場景中的素材儲存模"
"式。要更改素材儲存模式，請先從檔案系統 Dock 中選擇 3D 場景，然後請前往匯入 "
"Dock，並選擇 **Material > Storage** ，將 **Files** 改為 **Built-In**。"

msgid "Keep On Reimport"
msgstr "保持或重新匯入"

msgid ""
"Once materials are edited to use Godot features, the importer will keep the "
"edited ones and ignore the ones coming from the source scene. This option is "
"only present if materials are saved as files."
msgstr ""
"編輯材質並使用 Godot 功能後，匯入工具會保留編輯後的材質，往後原始場景更改後都"
"不會再匯入材質。該選項僅在材質保存為檔案時出現。"

msgid "Meshes"
msgstr "網格"

msgid "Compress"
msgstr "壓縮"

msgid ""
"Makes meshes use less precise numbers for multiple aspects of the mesh in "
"order to save space."
msgstr "在各個網格中的網格多面中使用較不精確的數字以節省空間。"

msgid "These are:"
msgstr "被壓縮的數字為："

msgid ""
"Transform Matrix (Location, rotation, and scale)             : 32-bit float "
"to 16-bit signed integer."
msgstr "變換矩陣 (位置、旋轉與縮放)：32 位元浮點數將轉換為 16 位元有號整數。"

msgid ""
"Vertices                                                     : 32-bit float "
"to 16-bit signed integer."
msgstr "頂點：32 位元浮點數將轉換為 16 位元有號整數。"

msgid ""
"Normals                                                      : 32-bit float "
"to 32-bit unsigned integer."
msgstr "法線：32 位元浮點數將轉換為 32 位元無號整數。"

msgid ""
"Tangents                                                     : 32-bit float "
"to 32-bit unsigned integer."
msgstr "切線：32 位元浮點數將轉換為 32 位元無號整數。"

msgid ""
"Vertex Colors                                                : 32-bit float "
"to 32-bit unsigned integer."
msgstr "頂點色：32 位元浮點數將轉換為 32 位元無號整數。"

msgid ""
"UV                                                           : 32-bit float "
"to 32-bit unsigned integer."
msgstr "UV：32 位元浮點數將轉換為 32 位元無號整數。"

msgid ""
"UV2                                                          : 32-bit float "
"to 32-bit unsigned integer."
msgstr "UV2：32 位元浮點數將轉換為 32 位元無號整數。"

msgid ""
"Vertex weights                                               : 32-bit float "
"to 16-bit unsigned integer."
msgstr "頂點權重：32 位元浮點數將轉換為 16 位元無號整數。"

msgid ""
"Armature bones                                               : 32-bit float "
"to 16-bit unsigned integer."
msgstr "骨架骨骼：32 位元浮點數將轉換為 16 位元無號整數。"

msgid ""
"Array index                                                  : 32-bit or 16-"
"bit unsigned integer based on how many elements there are."
msgstr "陣列索引：依據元素的多寡，將轉換為 32 位元或 16 位元無號浮點數。"

msgid "Additional info:"
msgstr "額外訊息："

msgid ""
"UV2 = The second UV channel for detail textures and baked lightmap textures."
msgstr "UV2 = 用於細節紋理與烘焙光照紋理的副 UV 通道。"

msgid ""
"Array index = An array of numbers that number each element of the arrays "
"above; i.e. they number the vertices and normals."
msgstr ""
"陣列索引 = 用來將上述陣列的各元素計數的一組數字陣列。即為頂點或法線的數量。"

msgid ""
"In some cases, this might lead to loss of precision, so disabling this "
"option may be needed. For instance, if a mesh is very big or there are "
"multiple meshes being imported that cover a large area, compressing the "
"import of this mesh(es) may lead to gaps in geometry or vertices not being "
"exactly where they should be."
msgstr ""
"在某些情況下，壓縮可能會導致精度降低，這是便可能需要禁用該選項。如，若網格非"
"常大或匯入覆蓋巨大區域的多網格，則壓縮匯入的網格可能會導致幾何形狀間有空隙，"
"或是頂點不在應在的位置上。"

msgid "Ensure Tangents"
msgstr "確保切線"

#, fuzzy
msgid ""
"If textures with normal mapping are to be used, meshes need to have tangent "
"arrays. This option ensures that these are generated if not present in the "
"source scene. Godot uses `Mikktspace <http://www.mikktspace.com/>`__ for "
"this, but it's always better to have them generated in the exporter."
msgstr ""
"若使用到有法線映射的貼圖，則網格必須要有切線陣列。該選項可以確保當原始場景中"
"沒有時產生切線陣列。Godot 使用 Mikktspace 來產生，但最好能在匯出工具中產生。"

msgid ""
"Meshes can be stored in separate files (resources) instead of built-in. This "
"does not have much practical use unless one wants to build objects with them "
"directly."
msgstr ""
"除了內建網格，也可以將網格保存在獨立的檔案 (資源) 中。但除非有需要使用獨立網"
"格來建立物件外，沒什麼實際用途。"

msgid ""
"This option is provided to help those who prefer working directly with "
"meshes instead of scenes."
msgstr "該選項主要是提供給偏好直接處理網格而不是場景的使用者。"

msgid "Light Baking"
msgstr "光照烘焙"

msgid "Whether or not the mesh is used in baked lightmaps."
msgstr "即網格是否用於烘焙的光照圖中。"

msgid "**Disabled:** The mesh is not used in baked lightmaps."
msgstr "**Disabled - 禁用：** 網格不用於烘焙的光照圖中。"

msgid "**Enable:** The mesh is used in baked lightmaps."
msgstr "**Enable - 啟用：** 網格用於烘焙的光照圖中。"

msgid ""
"**Gen Lightmaps:** The mesh is used in baked lightmaps, and unwraps a second "
"UV layer for lightmaps."
msgstr ""
"** Gen Lightmaps - 產生光照圖：** 網格有在烘焙的光照圖中使用，並為光照圖展開"
"副 UV 層。"

msgid "For more information on light baking see :ref:`doc_baked_lightmaps`."
msgstr "更多有關光照烘焙的資訊，請參考 :ref:`doc_baked_lightmaps` 。"

msgid "External Files"
msgstr "額外檔案"

msgid ""
"Generated meshes and materials can be optionally stored in a subdirectory "
"with the name of the scene."
msgstr "可選擇將產生的網格與材質以場景名稱保存在子資料夾中。"

msgid "Animation options"
msgstr "Animation - 動畫選項"

msgid ""
"Godot provides many options regarding how animation data is dealt with. Some "
"exporters (such as Blender) can generate many animations in a single file. "
"Others, such as 3DS Max or Maya, need many animations put into the same "
"timeline or, at worst, put each animation in a separate file."
msgstr ""
"Godot 中提供了數種選項來控制要如何處理動畫資料。有些匯出工具 (如 Blender 中"
"的) 可以將多個動畫產生在單一檔案中。其他的匯入工具，如 3DS Max 或 Maya 的，則"
"需要將多個動畫放在同一個時間軸上，最糟的情況則會將各個動畫放在個別檔案中。"

msgid "Import of animations is enabled by default."
msgstr "預設有開啟動畫匯入。"

msgid ""
"To modify animations from an imported 3D scene, you need to change the "
"animation storage option from **Built-In** to **Files** in the Import dock. "
"Otherwise, changes made to animations from Godot will be lost when the "
"project is run."
msgstr ""

msgid "FPS"
msgstr "FPS"

msgid ""
"Most 3D export formats store animation timeline in seconds instead of "
"frames. To ensure animations are imported as faithfully as possible, please "
"specify the frames per second used to edit them. Failing to do this may "
"result in shaky animations."
msgstr ""
"多數 3D 匯出格式都將動畫時間軸保存為秒而非影格。為了儘量確保動畫能按照原本的"
"樣子匯入，請設定編輯時用的 FPS。若未設定則可能導致動畫不穩定。"

msgid "Filter Script"
msgstr "篩選腳本"

msgid ""
"It is possible to specify a filter script in a special syntax to decide "
"which tracks from which animations should be kept."
msgstr "也可以指定一個特殊格式的過濾腳本，用來判斷哪些動畫中的哪些軌道要保留。"

msgid ""
"The filter script is executed against each imported animation. The syntax "
"consists of two types of statements, the first for choosing which animations "
"to filter, and the second for filtering individual tracks within the matched "
"animation. All name patterns are performed using a case insensitive "
"expression match, using ``?`` and ``*`` wildcards (using ``String.matchn()`` "
"under the hood)."
msgstr ""
"過濾腳本會依據每個匯入的動畫上執行。腳本的格式由兩種陳述式組成，第一種陳述式"
"是用來選擇要過濾哪些動畫，第二種則是用在符合的動畫上過濾個別軌道。名稱的模式"
"使用不區分大小寫的表示式來配對，使用 ``?`` 與 ``*`` 字元作為萬用字元 (內部使"
"用 ``String.matchn()`` )。"

msgid ""
"The script must start with an animation filter statement (as denoted by the "
"line beginning with an ``@``). For example, if we would like to apply "
"filters to all imported animations which have a name ending in "
"``\"_Loop\"``::"
msgstr ""
"腳本必須以動畫過濾陳述式來開頭 (表示為以 ``@`` 為首的行)。舉例來說，若要套用"
"過濾到所有名稱以 ``\"_Loop\"`` 結尾的匯入動畫："

msgid ""
"Similarly, additional patterns can be added to the same line, separated by "
"commas. Here is a modified example to additionally *include* all animations "
"with names that begin with ``\"Arm_Left\"``, but also *exclude* all "
"animations which have names ending in ``\"Attack\"``::"
msgstr ""
"同樣地，也可以在同一行中加上其他模式，並以逗號來分隔。下列修改後的範例也會 **"
"包含** 所有以 ``\"Arm_Left\"`` 開頭的動畫，但同時 **排除** 所有名稱以 "
"``\"Attach\"`` 結尾的動畫："

msgid ""
"Following the animation selection filter statement, we add track filtering "
"patterns to indicate which animation tracks should be kept or discarded. If "
"no track filter patterns are specified, then all tracks within the matched "
"animations will be discarded!"
msgstr ""
"緊接著用來選擇動畫的過濾陳述式之後，要寫的便是用來判斷哪些軌道要保留，哪些要"
"放棄的過濾模式。若沒有指定過濾模式，則相符動畫中的所有軌道都會被放棄！"

msgid ""
"It's important to note that track filter statements are applied in order for "
"each track within the animation, this means that one line may include a "
"track, a later rule can still discard it. Similarly, a track excluded by an "
"early rule may then be re-included once again by a filter rule further down "
"in the filter script."
msgstr ""
"有一點需要注意的是軌道過濾陳述式會依據動畫中各個軌道的順序來套用，這表示一行"
"選擇了保留軌道的陳述式之後可能出現另一個規則來放棄保留軌道。同樣地，若先前的"
"規律條件排除了一個軌道，過濾腳本後方的規則仍然可以將該軌道重新包含進來。"

msgid ""
"For example: include all tracks in animations with names ending in "
"``\"_Loop\"``, but discard any tracks affecting a ``\"Skeleton\"`` which end "
"in ``\"Control\"``, unless they have ``\"Arm\"`` in their name::"
msgstr ""
"舉例來說：包含動畫中所有名稱以 ``\"_Loop\"`` 結尾的動畫，但放棄所有以 "
"``\"Control\"`` 結尾且會對 ``\"Skeleton\"`` 造成效果的動畫，除非名稱中有 "
"``\"Arm\"`` ："

msgid ""
"In the above example, tracks like ``\"Skeleton:Leg_Control\"`` would be "
"discarded, while tracks such as ``\"Skeleton:Head\"`` or ``\"Skeleton:"
"Arm_Left_Control\"`` would be retained."
msgstr ""
"在上述例子中，如 ``”Skeleton:Leg_Control\"`` 軌道會被放棄，而如 ``\"Skeleton:"
"Head\"`` 或 ``\"Skeleton:Arm_Left_Control\"`` 軌道則會被保留。"

msgid ""
"Any track filter lines that do not begin with a ``+`` or ``-`` are ignored."
msgstr "不以 ``+`` 或 ``-`` 開頭的軌道過濾規則會被忽略。"

msgid ""
"By default, animations are saved as built-in. It is possible to save them to "
"a file instead. This allows adding custom tracks to the animations and "
"keeping them after a reimport."
msgstr ""
"預設情況下，動畫會以內建形式保存。也可以將動畫儲存於檔案中。這樣即使重新匯入"
"後，在動畫中新增的自定軌道也能被保留。"

msgid "Optimizer"
msgstr "最佳化器"

msgid ""
"When animations are imported, an optimizer is run, which reduces the size of "
"the animation considerably. In general, this should always be turned on "
"unless you suspect that an animation might be broken due to it being enabled."
msgstr ""
"動畫匯入後會執行最佳化工具。最佳化工具能有效降低動畫的大小。一般來說，應該維"
"持開啟最佳化工具，除非遇到動畫疑似因為最佳化而損壞的情況。"

msgid "Clips"
msgstr "動畫片段"

msgid ""
"It is possible to specify multiple animations from a single timeline as "
"clips. For this to work, the model must have only one animation that is "
"named ``default``. To create clips, change the clip amount to something "
"greater than zero. You can then name a clip, specify which frames it starts "
"and stops on, and choose whether the animation loops or not."
msgstr ""
"可以指定來自單一時間軸中的多個動畫作為剪輯。模型必須只能有一個命名為 "
"``default`` 的動畫才能建立剪輯。要建立剪輯，請將剪輯數量調整為大於零的任意"
"數。接著便能為剪輯命名、選擇開始與結尾的影格、以及選擇動畫是否要循環。"

msgid "Scene inheritance"
msgstr "場景繼承"

msgid ""
"In many cases, it may be desired to make modifications to the imported "
"scene. By default, this is not possible because if the source asset changes "
"(source ``.dae``, ``.gltf``, ``.obj`` file re-exported from 3D modelling "
"app), Godot will re-import the whole scene."
msgstr ""
"許多情況下我們會希望能更改匯入的場景。但在預設情況下無法更改，因為若修改了原"
"始素材 (重新從 3D 模型程式中匯出的原始 ``.dae``, ``.gltf``, ``.obj`` 檔案)，"
"Godot 會重新匯入整個場景。"

msgid ""
"It is possible, however, to make local modifications by using *Scene "
"Inheritance*. Try to open the imported scene and the following dialog will "
"appear:"
msgstr ""
"但，我們可以通過 **場景繼承** 來建立區域修改。試著打開匯入場景，會顯示下列視"
"窗："

msgid "In inherited scenes, the only limitations for modifications are:"
msgstr "繼承場景中，修改只有下列限制："

msgid "Nodes can't be removed (but can be added anywhere)."
msgstr "節點無法移除 (但可以在任何地方新增節點)。"

msgid ""
"Sub-Resources can't be edited (save them externally as described above for "
"this)"
msgstr "子資源無法編輯 (可以使用上面說明的方法將子資源保存在外部)"

msgid "Other than that, everything is allowed!"
msgstr "除此之外，可以對繼承場景做任何事！"

msgid "Import hints"
msgstr "匯入小提示"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr "編輯完場景後，我們往往會需要在匯出後執行下列常見任務："

msgid "Adding collision detection to objects."
msgstr "為物件加上碰撞偵測。"

msgid "Setting objects as navigation meshes."
msgstr "將物件設為導航網格。"

msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modelling)."
msgstr "刪除遊戲引擎中未使用到的節點 (如用於建模的特定光照)。"

msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modelling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"為了簡化此一工作流程，Godot 提供了一些可以在 3D 建模軟體中放在物件名稱後的後"
"置詞。匯入時，Godot 會偵測出這些名稱後置詞並自動執行操作。"

msgid "All the suffixes described below are *case-sensitive*."
msgstr "下方介紹的所有後置詞都 **有區分大小寫** 。"

msgid "Remove nodes (-noimp)"
msgstr "刪除節點 (-noimp)"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"無論是什麼型別的物件，匯入時，名稱中有 ``-noimp`` 後置詞的節點都會被移除。這"
"些節點不會出現在匯入的場景中。"

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "建立碰撞 (-col, -convcol, -colonly, -convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"``-col` 選項只適用於網格 (Mesh) 物件。若偵測到該選項，則會加上子靜態碰撞節"
"點，並使用相同的幾何體作為網格。這個選項會建立三角網格碰撞區域，建立過程很"
"慢，但作為碰撞偵測來說時很精準的選項。該選項通常適用於等級幾何 (也請一併參考"
"下方的 ``colonly``)。"

msgid ""
"The option ``-convcol`` will create a :ref:`class_convexpolygonshape` "
"instead of a :ref:`class_concavepolygonshape`. Unlike triangle meshes which "
"can be concave, a convex shape can only accurately represent a shape that "
"doesn't have any concave angles (a pyramid is convex, but a hollow box is "
"concave). Due to this, convex collision shapes are generally not suited for "
"level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"``-convcol`` 會建立 :ref:`class_convexpolygonshape` 而非 :ref:"
"`class_concavepolygonshape` 。與三角網格不同，三角網格可以是凹型的 "
"(Concave)，凸型 (Convex) 只能在形狀沒有凸角時精準地呈現形狀 (金字塔是凸型，而"
"空心盒 (Hallow Box) 是凹形)。因此，凸型碰撞區域通常不適合等級幾何。當要呈現比"
"較簡單的網格時，凸型比起三角碰撞區域有更佳的效能。該選項適合用於需要精準碰撞"
"偵測的簡單或動態的物件。"

#, fuzzy
msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"然而，在這兩種情況，通常視覺幾何要拿來作為碰撞形體都太複雜且太不平滑了。這樣"
"會造成物理故障並不必要地降低引擎的速度。"

msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_staticbody` collision instead. "
"This helps the visual mesh and actual collision to be separated."
msgstr ""
"``-colony`` 修飾詞就是為了解決這個問題，使用該後置詞會在匯入時將網格移除，並"
"改而建立 :ref:`class_staticbody` 碰撞區域。如此便有助於分開視覺化網格與實際的"
"碰撞區域。"

msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_convexpolygonshape` instead."
msgstr ""
"使用 ``-convcolonly`` 選項會改而建立 :ref:`class_convexpolygonshape` 。"

msgid ""
"The option ``-colonly`` can also be used with Blender's empty objects. On "
"import, it will create a :ref:`class_staticbody` with a collision node as a "
"child. The collision node will have one of a number of predefined shapes, "
"depending on Blender's empty draw type:"
msgstr ""
"``-colonly`` 也可與 Blender 的空體一起使用。匯入時，會建立一個有碰撞子節點"
"的 :ref:`class_staticbody`。不同繪製型別的 Blender 空體所建立的碰撞節點會是數"
"種預定義形狀之一："

msgid "Single arrow will create a :ref:`class_rayshape`."
msgstr "單箭頭會建立 :ref:`class_rayshape` 。"

msgid "Cube will create a :ref:`class_boxshape`."
msgstr "立方體會建立 :ref:`class_boxshape` 。"

msgid "Image will create a :ref:`class_planeshape`."
msgstr "影像會建立 :ref:`class_planeshape` 。"

msgid ""
"Sphere (and the others not listed) will create a :ref:`class_sphereshape`."
msgstr "球體 (與其他未列出的形狀) 會建立 :ref:`class_sphereshape` 。"

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"如果可能的話， **請儘量使用初形碰撞區域** 來代替三角網格或凸型。初形通常有較"
"好的效能並較可靠。"

msgid ""
"For better visibility in Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them in Blender's "
"**User Preferences > Themes > 3D View > Empty**."
msgstr ""
"為了提高 Blender 編輯器中的可見性，可以開啟碰撞空體的「X-Ray」選項，並於 "
"**[使用者偏好設定] / [主題] / [3D 視圖] / [空體]** 中為空體設定不同的顏色。"

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr "有關碰撞區域更全面的概覽，請參考 :ref:`doc_collision_shapes_3d` 。"

msgid "Create navigation (-navmesh)"
msgstr "建立導航 (-navmesh)"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"有 ``-navmesh`` 後置詞的網格節點會被轉換為導航網格。原始的網格物件將會在匯入"
"時被刪除。"

msgid "Create a VehicleBody (-vehicle)"
msgstr "建立 VehicleBody (-vehicle)"

msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody` node."
msgstr ""
"有 ``-vehicle`` 後置詞的網格節點會被匯入為 :ref:`class_VehicleBody` 節點的子"
"節點。"

msgid "Create a VehicleWheel (-wheel)"
msgstr "建立 VehicleWheel (-wheel)"

msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel` node."
msgstr ""
"有 ``-wheel`` 後置詞的網格節點會被匯入為 :ref:`class_VehicleWheel` 節點的子節"
"點。"

msgid "Rigid Body (-rigid)"
msgstr "剛體 (-rigid)"

msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody`."
msgstr ""
"有 ``-rigid`` 後置詞的網格節點會被匯入為 :ref:`class_RigidBody` 節點的子節"
"點。"

msgid "Animation loop (-loop, -cycle)"
msgstr "動畫循環 (-loop, -cycle)"

msgid ""
"Animation clips in the COLLADA document that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot Animation with the loop "
"flag set. **Unlike the other suffixes described above, this does not require "
"a hyphen.**"
msgstr ""
"在 COLLADA 文件中以 ``loop`` 或 ``cycle`` 結尾的動畫片段會被匯入為開啟循環旗"
"標的 Godot Animation。**於這裡介紹的其他後置詞不同，這個後置詞不需要加減號"
"** 。"

msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"在 Blender 中，需要使用 NLA 編輯器，並以 ``loop`` 或 ``cycle`` 前置或後置詞來"
"命名動作。"

msgid "Translation status"
msgstr "翻譯狀態"
