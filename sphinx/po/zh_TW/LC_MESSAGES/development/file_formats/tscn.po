# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "TSCN file format"
msgstr "TSCN 檔案格式"

#, fuzzy
msgid ""
"The TSCN (text scene) file format represents a single scene tree inside "
"Godot. Unlike binary SCN files, TSCN files have the advantage of being "
"mostly human-readable and easy for version control systems to manage."
msgstr ""
"TSCN (Text SCeNe) 檔案格式代表 Godot 內的單一節點樹。TSCN 檔具有人類可讀取且"
"適合用於版本控制系統的特點。匯出時，TSCN 檔會被編譯為保存在 .import 資料夾內"
"的二進位格式 ``.scn`` 檔，以減少資料大小並加速載入。"

#, fuzzy
msgid ""
"The ESCN (exported scene) file format is identical to the TSCN file format, "
"but is used to indicate to Godot that the file has been exported from "
"another program and should not be edited by the user from within Godot. "
"Unlike SCN and TSCN files, during import, ESCN files are compiled to binary "
"SCN files stored inside the ``.import/`` folder. This reduces the data size "
"and speeds up loading, as binary formats are faster to load compared to text-"
"based formats."
msgstr ""
"ESCN (Exported SCeNe) 的檔案格式與 TSCN 檔案格式完全相容，但對 Godot 來說則表"
"示該檔案是從另一個程式匯出的，且無法從 Godot 內進行編輯。"

msgid ""
"For those looking for a complete description, the parsing is handled in the "
"file `resource_format_text.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/resources/resource_format_text.cpp>`_ in the "
"``ResourceFormatLoaderText`` class."
msgstr ""
"若需要完整的說明，請參考 ``ResourceFormatLoaderText`` 中負責剖析該格式的 "
"`resource_format_text.cpp <https://github.com/godotengine/godot/blob/master/"
"scene/resources/resource_format_text.cpp>`_ 檔案。"

msgid "File structure"
msgstr "檔案結構"

msgid "There are five main sections inside the TSCN file:"
msgstr "在 TSCN 檔中主要有五個區塊："

msgid "File Descriptor"
msgstr "檔案描述元"

msgid "External resources"
msgstr "外部資源"

msgid "Internal resources"
msgstr "內部資源"

msgid "Nodes"
msgstr "節點"

msgid "Connections"
msgstr "連接"

#, fuzzy
msgid ""
"The file descriptor looks like ``[gd_scene load_steps=3 format=2]`` and "
"should be the first entry in the file. The ``load_steps`` parameter is equal "
"to the total amount of resources (internal and external) plus one (for the "
"file itself). If the file has no resources, ``load_steps`` is omitted. The "
"engine will still load the file correctly if ``load_steps`` is incorrect, "
"but this will affect loading bars and any other piece of code relying on "
"that value."
msgstr ""
"檔案描述資源類似 ``[gd_scene load_steps=1 format=2]`` ，且應放在檔案的最前"
"面。``load_steps`` 參數 (理論上) 應為該檔案內含資源的數量。但，實務上，該值為"
"多少應該無影響。"

msgid ""
"These sections should appear in order, but it can be hard to distinguish "
"them. The only difference between them is the first element in the heading "
"for all of the items in the section. For example, the heading of all "
"external resources should start with ``[ext_resource .....]``."
msgstr ""
"這些區塊應照會順序排列，但要區分出各個段落可能有點困難。在這些區塊間的主要差"
"異就是各個段落中所有項目標題的第一項元素。舉例來說，所有外部資源的標題都應以 "
"``[ext_resource ......]`` 開頭。"

msgid ""
"A TSCN file may contain single-line comments starting with a semicolon (``;"
"``). However, comments will be discarded when saving the file using the "
"Godot editor."
msgstr ""
"TSCN 檔案可以包含以分號 (``;``) 開頭的單行註解。但，以 Godot 編輯器保存時會移"
"除註解。"

msgid "Entries inside the file"
msgstr "檔案內的項目"

msgid ""
"A heading looks like ``[<resource_type> key=value key=value key=value ...]`` "
"where resource_type is one of:"
msgstr ""
"當 resource_type 為下列其一時，標題看起來會像 ``[<resource_type> key=value "
"key=value key=value ...]`` ："

msgid "``ext_resource``"
msgstr "\\ ``ext_resource``"

msgid "``sub_resource``"
msgstr "\\ ``sub_resource``"

msgid "``node``"
msgstr "\\ ``node``"

msgid "``connection``"
msgstr "\\ ``connection``"

msgid ""
"Below every heading comes zero or more ``key = value`` pairs. The values can "
"be complex datatypes such as Arrays, Transforms, Colors, and so on. For "
"example, a spatial node looks like:"
msgstr ""
"在每個標題後都會有 0 或多個 ``key = value`` 索引鍵／值組。數值可以是複雜的資"
"料型別，如 Array, Transform, Color …等。舉例來說，Spatial 節點可能會類似："

msgid "The scene tree"
msgstr "場景樹"

msgid ""
"The scene tree is made up of… nodes! The heading of each node consists of "
"its name, parent and (most of the time) a type. For example ``[node "
"type=\"Camera\" name=\"PlayerCamera\" parent=\"Player/Head\"]``"
msgstr ""
"場景樹是由……節點構成的！各個節點的標題都是由名稱、母節點與 (大多數時候還會"
"有) 型別所組成的。如， ``[node type=\"Camera\" name=\"PlayerCamera\" "
"parent=\"Player/Head\"]``"

msgid "Other valid keywords include:"
msgstr "其他有效的關鍵字包含："

msgid "``instance``"
msgstr "\\ ``instance``"

msgid "``instance_placeholder``"
msgstr "\\ ``instance_placeholder``"

msgid "``owner``"
msgstr "\\ ``owner``"

msgid ""
"``index`` (sets the order of appearance in the tree. If absent, inherited "
"nodes will take precedence over plain ones)"
msgstr ""

msgid "``groups``"
msgstr "\\ ``groups``"

msgid ""
"The first node in the file, which is also the scene root, must not have a "
"``parent=Path/To/Node`` entry in its heading. All scene files should have "
"exactly *one* scene root. If it doesn't, Godot will fail to import the file. "
"The parent path of other nodes should be absolute, but shouldn't contain the "
"scene root's name. If the node is a direct child of the scene root, the path "
"should be ``\".\"``. Here is an example scene tree (but without any node "
"content):"
msgstr ""
"檔案中的第一個節點同時也是根節點，該節點的標題不得包含 ``parent=Path/To/"
"Node`` 項目。所有的場景檔案都必須只有 **一個** 根節點，否則 Godot 將無法匯入"
"該檔案。其他結點的母級節點必須使用絕對路徑，但不得包含場景的根名稱。若某個節"
"點為場景根節點的直接子節點，則路徑為 `「 . 」``。下列為範例場景樹 (但無任何節"
"點內容)："

msgid ""
"Similar to the internal resource, the document for each node is currently "
"incomplete. Fortunately, it is easy to find out because you can simply save "
"a file with that node in it. Some example nodes are:"
msgstr ""
"跟內部資源一樣，有關各個節點的說明文件還不完整。但幸運的是，我們只要將節點保"
"存到檔案後就能看到各個節點。下列為一些範例節點："

msgid "NodePath"
msgstr "\\ NodePath"

msgid ""
"A tree structure is not enough to represent the whole scene. Godot uses a "
"``NodePath(Path/To/Node)`` structure to refer to another node or attribute "
"of the node anywhere in the scene tree. For instance, MeshInstance uses "
"``NodePath()`` to point to its skeleton. Likewise, Animation tracks use "
"``NodePath()`` to point to node properties to animate."
msgstr ""
"使用樹狀結構並無法代表完整的場景。Godot 使用 ``NodePath(Path/To/Node)`` 結構"
"來參照場景樹中的某個節點或節點的屬性。舉例來說，MeshInstance 使用 "
"``NodePoint()`` 來指向其骨架。同樣地，動畫軌使用 ``NodePath()`` 來指向動畫的"
"節點屬性。"

msgid "Skeleton"
msgstr "骨架"

msgid ""
"The Skeleton node inherits the Spatial node, but also may have a list of "
"bones described in key-value pairs in the format ``bones/Id/"
"Attribute=Value``. The bone attributes consist of:"
msgstr ""
"Skeleton 節點繼承自 Spatial 節點，但同時 Skeleton 也以 ``bones/Id/"
"Attribute=Value`` 這樣的格式來儲存一組索引鍵／值格式的骨頭列表。骨頭屬性由下"
"列這幾個屬性構成："

msgid "``name``"
msgstr ""

msgid "``parent``"
msgstr "\\ ``parent``"

msgid "``rest``"
msgstr "\\ ``rest``"

msgid "``pose``"
msgstr "\\ ``pose``"

msgid "``enabled``"
msgstr "\\ ``enabled``"

msgid "``bound_children``"
msgstr "\\ ``bound_children``"

msgid "``name`` must be the first attribute of each bone."
msgstr "``name`` 必須為各個骨頭的第一個屬性。"

msgid ""
"``parent`` is the index of parent bone in the bone list, with parent index, "
"the bone list is built to a bone tree."
msgstr ""
"``parent`` 為骨頭列表中母級骨頭的索引。有了母級骨頭的索引，就能將骨頭列表建立"
"成骨頭樹。"

msgid "``rest`` is the transform matrix of bone in its \"resting\" position."
msgstr "``rest`` 為將骨骼轉換為「靜止」(Resting) 姿勢用的變換矩陣。"

msgid "``pose`` is the pose matrix; use ``rest`` as the basis."
msgstr "``pose`` 為姿勢矩陣，以 ``rest`` 作為基礎。"

msgid ""
"``bound_children`` is a list of ``NodePath()`` which point to "
"BoneAttachments belonging to this bone."
msgstr ""
"``bound_children`` 為一組由 ``NodePath()`` 組成的列表，用來指向該骨骼的 "
"BoneAttachment。"

msgid "Here's an example of a skeleton node with two bones:"
msgstr "下列為有兩個骨頭的骨骼節點範例："

msgid "BoneAttachment"
msgstr "\\ BoneAttachment"

msgid ""
"BoneAttachment node is an intermediate node to describe some node being "
"parented to a single bone in a Skeleton node. The BoneAttachment has a "
"``bone_name=NameOfBone`` attribute, and the corresponding bone being the "
"parent has the BoneAttachment node in its ``bound_children`` list."
msgstr ""
"BoneAttachment 節點為用來描述某個節點屬於某 Skeleton 節點的單一骨頭之子節點。"
"BoneAttachment 有一個 ``bone_name=NameOfBone`` 屬性，而對應為母節點的骨頭之 "
"``bound_children`` 列表中則有 BoneAttachment 節點。"

msgid "An example of one MeshInstance parented to a bone in Skeleton:"
msgstr "下列為 Skeleton 中有骨頭母節點的 MeshInstance 範例："

msgid "AnimationPlayer"
msgstr "\\ AnimationPlayer"

msgid ""
"AnimationPlayer works as an animation library. It stores animations listed "
"in the format ``anim/Name=SubResource(ResourceId)``; each line refers to an "
"Animation resource. All the animation resources use the root node of "
"AnimationPlayer. The root node is stored as ``root_node=NodePath(Path/To/"
"Node)``."
msgstr ""
"AnimationPlayer 提供動畫函式庫的功能。AnimationPlayer 將各個動畫以 ``anim/"
"Name=SubResource(ResourceId)`` 這樣的格式來儲存一組動畫列表。其中，每一行都代"
"表一個 Animation 資源。所有的動畫都使用 AnimationPlayer 的根節點。根節點儲存"
"為 ``root_node=NodePath(Path/To/Node)`` 。"

msgid "Resources"
msgstr "資源"

msgid ""
"Resources are components that make up the nodes. For example, a MeshInstance "
"node will have an accompanying ArrayMesh resource. The ArrayMesh resource "
"may be either internal or external to the TSCN file."
msgstr ""
"資源是組成各個節點的元件。舉例來說，MeshInstance 節點中會有附帶的 ArrayMesh "
"資源。該 ArrayMesh 資源可以在 TSCN 檔的內部或外部。"

msgid ""
"References to the resources are handled by ``id`` numbers in the resource's "
"heading. External resources and internal resources are referred to with "
"``ExtResource(id)`` and ``SubResource(id)``, respectively. Because there "
"have different methods to refer to internal and external resources, you can "
"have the same ID for both an internal and external resource."
msgstr ""
"資源的參照是以資源標題中的 ``id`` 數字來參照的。外部資源與內部資源分別使用 "
"``ExtResource(id)`` 與 ``SubResource(id)`` 來參照。由於用來參照內部與外部資源"
"有不同的方法，因此同一個 ID 可能參照到不同的內部或外部資源。"

msgid ""
"For example, to refer to the resource ``[ext_resource id=3 "
"type=\"PackedScene\" path=....]``, you would use ``ExtResource(3)``."
msgstr ""
"舉例來說，若要參照到資源 ``[ext_resource id=3 type=\"PackedScene\" "
"path=....]`` ，則可使用 ``ExtResource(3)`` 。"

msgid ""
"External resources are links to resources not contained within the TSCN file "
"itself. An external resource consists of a path, a type and an ID."
msgstr ""
"外部資源會連結不包含 TSCN 檔自身的資源。外部資源由路徑、型別與 ID 組成。"

msgid ""
"Godot always generates absolute paths relative to the resource directory and "
"thus prefixed with ``res://``, but paths relative to the TSCN file's "
"location are also valid."
msgstr ""
"Godot 會產生相對於資源目錄的絕對路徑，並以 ``res://`` 開頭。但也可以使用相對"
"於 TSCN 檔位置的相對路徑。"

msgid "Some example external resources are:"
msgstr "一些外部資源的範例："

msgid ""
"Like TSCN files, a TRES file may contain single-line comments starting with "
"a semicolon (``;``). However, comments will be discarded when saving the "
"resource using the Godot editor."
msgstr ""
"與 TSCN 檔類似，TRES 檔可以包含使用分號 (``;``) 開頭的單行註解。但，在使用 "
"Godot 編輯器保存資源時，註解會被移除。"

msgid ""
"A TSCN file can contain meshes, materials and other data. These are "
"contained in the *internal resources* section of the file. The heading for "
"an internal resource looks similar to those of external resources, except "
"that it doesn't have a path. Internal resources also have ``key=value`` "
"pairs under each heading. For example, a capsule collision shape looks like:"
msgstr ""
"一個 TSCN 檔可以包含網格、材質與其他資料。這些資料都放在 TSCN 檔中的 **內部資"
"源** 區塊中。內部資源區塊的標題看起來與外部資源的標題類似，但內部資源的標題不"
"含路徑。內部資源中的各個標題中也有 ``key=value`` 索引鍵／值組。舉例來說，膠囊"
"型碰撞區域會像這樣："

msgid ""
"Some internal resources contain links to other internal resources (such as a "
"mesh having a material). In this case, the referring resource must appear "
"*before* the reference to it. This means that order matters in the file's "
"internal resources section."
msgstr ""
"有的內部資源會包含指向另一個內部資源的連結 (如網格會具有材質)。這種情況下，被"
"參照的資源的資源必須要放在參照 **之前** 。這表示，在 TSCN 檔中，要注意檔案內"
"部資源區塊的順序。"

msgid ""
"Unfortunately, documentation on the formats for these subresources isn't "
"complete. Some examples can be found by inspecting saved resource files, but "
"others can only be found by looking through Godot's source."
msgstr ""
"不幸的是，有關這些子資源格式的說明文件還不完整。雖然可以通過檢視保存後的資源"
"檔案來找到範例，但有的子資源格式只能在 Godot 原始碼中看到。"

msgid "ArrayMesh"
msgstr ""

msgid ""
"ArrayMesh consists of several surfaces, each in the format "
"``surface\\Index={}``. Each surface is a set of vertices and a material."
msgstr ""
"ArrayMesh 是由數個表面組成的，各個表面的格式都為 ``surface\\Index={}`` 。每個"
"表面都是一組頂點與材質的組合。"

msgid "TSCN files support two surface formats:"
msgstr "TSCN 檔支援兩種表面格式："

msgid "For the old format, each surface has three essential keys:"
msgstr "對於舊版格式，各個表面都有三種主要的索引鍵："

msgid "``primitive``"
msgstr "\\ ``primitive``"

msgid "``arrays``"
msgstr "\\ ``arrays``"

msgid "``morph_arrays``"
msgstr "\\ ``morph_arrays``"

msgid ""
"``primitive`` is an enumerate variable, ``primitive=4`` which is "
"``PRIMITIVE_TRIANGLES`` is frequently used."
msgstr ""
"``primitive`` 為列舉類型變數，常用代表 ``PRIMITIVE_TRIANGLES`` 的 "
"``primitive=4`` 。"

msgid "``arrays`` is a two-dimensional array, it contains:"
msgstr "``array`` 為 2D 陣列，包含："

msgid "Vertex positions array"
msgstr "頂點位置陣列"

#, fuzzy
msgid "Normals array"
msgstr "本地坐標"

msgid "Tangents array"
msgstr "切線陣列"

msgid "Vertex colors array"
msgstr "頂點色彩陣列"

msgid "UV array 1"
msgstr "UV 陣列 1"

msgid "UV array 2"
msgstr "UV 陣列 2"

msgid "Bone indexes array"
msgstr "骨頭索引陣列"

msgid "Bone weights array"
msgstr "骨頭權重陣列"

msgid "Vertex indexes array"
msgstr "頂點索引陣列"

msgid ""
"``morph_arrays`` is an array of morphs. Each morph is exactly an ``arrays`` "
"without the vertex indexes array."
msgstr ""
"``morph_arrays`` 為 Morph 陣列。各個 Morph 都恰好為沒有頂點索引陣列的 "
"``arrays`` 。"

msgid "An example of ArrayMesh:"
msgstr "下列為一 ArrayMesh 範例："

msgid "Animation"
msgstr "動畫"

msgid ""
"An animation resource consists of tracks. Besides, it has ``length``, "
"``loop`` and ``step`` applied to all the tracks."
msgstr ""
"動畫資源是由許多軌道組成的。另外，動畫資源的所有軌道都還有 ``length``, "
"``loop`` 與 ``step`` 。"

msgid "``length`` and ``step`` are both durations in seconds."
msgstr "``length`` 與 ``step`` 都是以秒為單位的時間長度。"

msgid ""
"Each track is described by a list of key-value pairs in the format ``tracks/"
"Id/Attribute``. Each track includes:"
msgstr ""
"每個軌道都是由一組索引鍵／值配對所組成的，其格式為 ``tracks/Id/Attribute`` 。"
"每個軌道都包含了："

msgid "``type``"
msgstr "\\ ``type``"

msgid "``path``"
msgstr "\\ ``path``"

msgid "``interp``"
msgstr "\\ ``interp``"

msgid "``keys``"
msgstr "\\ ``keys``"

msgid "``loop_wrap``"
msgstr "\\ ``loop_wrap``"

msgid "``imported``"
msgstr "\\ ``imported``"

msgid ""
"The ``type`` must be the first attribute of each track. The value of "
"``type`` can be:"
msgstr "``type`` 必須為各個軌道的第一個屬性。``type`` 的值可以為下列其一："

msgid "``transform``"
msgstr "\\ ``transform``"

msgid "``value``"
msgstr "\\ ``value``"

msgid "``method``"
msgstr "\\ ``method``"

msgid ""
"The ``path`` has the format ``NodePath(Path/To/Node:attribute)``. It's the "
"path to the animated node or attribute, relative to the root node defined in "
"the AnimationPlayer."
msgstr ""
"``path`` 的格式為 ``NodePath(Path/To/Node:attribute)`` 。``path`` 為動畫化節"
"點或屬性的路徑，相對於 AnimationPlayer 中定義的根節點。"

msgid ""
"The ``interp`` is the method to interpolate frames from the keyframes. It is "
"an enum variable with one of the following values:"
msgstr ""
"``interp`` 為從關鍵影格中進行插值影格的方法。``interp`` 為一列舉類型的變數，"
"其值為下列其一："

msgid "``0`` (constant)"
msgstr "``0`` (常數)"

msgid "``1`` (linear)"
msgstr "``1`` (線性)"

msgid "``2`` (cubic)"
msgstr "``2`` (三次方)"

msgid ""
"The ``keys`` correspond to the keyframes. It appears as a "
"``PoolRealArray()``, but may have a different structure for tracks with "
"different types."
msgstr ""
"``keys`` 則對應關鍵影格。以 ``PoolRealArray()`` 來表示，但對於不同型別的軌"
"道，可能會有不同的架構。"

msgid ""
"A Transform track uses every 12 real numbers in the ``keys`` to describe a "
"keyframe. The first number is the timestamp. The second number is the "
"transition followed by a 3-number translation vector, followed by a 4-number "
"rotation quaternion (X, Y, Z, W) and finally a 3-number scale vector. The "
"default transition in a Transform track is 1.0."
msgstr ""
"Transform 軌道在 ``keys`` 中使用整整 12 個實數來表示關鍵影格。第一個數字為時"
"戳。第二個數字為變換，再接上 3 個數字的變換向量，然後是 4 個數字的旋轉四元數 "
"(X, Y, Z, W)，最後則是 3 個數字的縮放向量。在 Transform 軌道中預設的變換為 "
"1.0。"

msgid "Translation status"
msgstr "翻譯狀態"
