# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Android"
msgstr "為 Android 進行編譯"

msgid ""
"This page describes how to compile Android export template binaries from "
"source. If you're looking to export your project to Android instead, read :"
"ref:`doc_exporting_for_android`."
msgstr ""

msgid "Note"
msgstr "請注意"

msgid ""
"In most cases, using the built-in deployer and export templates is good "
"enough. Compiling the Android APK manually is mostly useful for custom "
"builds or custom packages for the deployer."
msgstr ""
"在大多數情況下，使用內建的部署工具與匯出樣板就勾勒。手動編譯 Android APK 通常"
"適用於自定建置或為部署工具自定套件的情況。"

msgid ""
"Also, you still need to follow the steps mentioned in the :ref:"
"`doc_exporting_for_android` tutorial before attempting to build a custom "
"export template."
msgstr ""
"另外，在建置自定匯出樣板前，依然必須依照 :ref:`doc_exporting_for_android` 中"
"所提到的步驟進行。"

msgid "Requirements"
msgstr "系統需求"

msgid "For compiling under Windows, Linux or macOS, the following is required:"
msgstr "要在 Windows, Linux 或 macOS 下進行編譯，則必須滿足下列條件："

msgid "`Python 3.5+ <https://www.python.org/downloads/>`_."
msgstr "`Python 3.5+ <https://www.python.org/downloads/>`_ 。"

msgid "`SCons 3.0+ <https://scons.org/pages/download.html>`_ build system."
msgstr "`SCons 3.0+ <https://scons.org/pages/download.html>`_ 建置系統。"

msgid ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ "
"(command-line tools are sufficient)."
msgstr ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ (命令行"
"工具即可)。"

#, fuzzy
msgid "Required SDK components will be automatically installed."
msgstr "所需的 SDK 元件會由 Gradle 自動安裝 (除了 NDK)。"

msgid ""
"On Linux, **do not use an Android SDK provided by your distribution's "
"repositories as it will often be outdated**."
msgstr ""

msgid "Gradle (will be downloaded and installed automatically if missing)."
msgstr "Gradle (若尚未安裝，會自動下載並安裝)。"

#, fuzzy
msgid "JDK 11 (either OpenJDK or Oracle JDK)."
msgstr "JDK 8 (OpenJDK 或 Oracle JDK 擇一)。"

msgid ""
"You can download a build from `ojdkbuild <https://github.com/ojdkbuild/"
"ojdkbuild>`_."
msgstr "可以從 `ojdkbuild <https://github.com/ojdkbuild/ojdkbuild>`_ 中下載。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有關配合 Godot 使用 SCons 的一般說明，請參考 :ref:"
"`doc_introduction_to_the_buildsystem` 。"

msgid "Setting up the buildsystem"
msgstr "設定建置系統"

msgid ""
"Set the environment variable ``ANDROID_SDK_ROOT`` to point to the Android "
"SDK. If you downloaded the Android command-line tools, this would be the "
"folder where you extracted the contents of the ZIP archive."
msgstr ""

msgid "Install the necessary SDK components in this folder:"
msgstr ""

msgid ""
"Accept the SDK component licenses by running the following command where "
"``android_sdk_path`` is the path to the Android SDK, then answering all the "
"prompts with ``y``:"
msgstr ""

msgid ""
"Complete setup by running the following command where ``android_sdk_path`` "
"is the path to the Android SDK."
msgstr ""

#, fuzzy
msgid ""
"To set the environment variable on Windows, press :kbd:`Windows + R`, type "
"\"control system\", then click on **Advanced system settings** in the left "
"pane, then click on **Environment variables** on the window that appears."
msgstr ""
"若要在 Windows 下設定環境變數，請點擊 :kbd:`Windows + R` ，然後輸入「control "
"system」，接著點擊左側面板的「進階系統設定」，然後在出現的視窗中點擊 **環境變"
"數** 。"

#, fuzzy
msgid ""
"To set the environment variable on Linux or macOS, use ``export "
"ANDROID_SDK_ROOT=/path/to/android-sdk`` where ``/path/to/android-sdk`` "
"points to the root of the SDK directories."
msgstr ""
"若要在 Linux 或 macOS 中設定這些環境變數，請使用 ``export ANDROID_HOME=/path/"
"to/android-sdk`` 與 ``export ANDROID_NDK_ROOT=/path/to/android-ndk`` ，其中，"
"``/path/to/android-sdk`` 與 ``/path/to/android-ndk`` 代表 SDK 與 NDK 資料夾的"
"根目錄。"

msgid "Building the export templates"
msgstr "建置匯出樣板"

msgid ""
"Godot needs two export templates for Android: the optimized \"release\" "
"template (``android_release.apk``) and the debug template (``android_debug."
"apk``). As Google will require all APKs to include ARMv8 (64-bit) libraries "
"starting from August 2019, the commands below will build an APK containing "
"both ARMv7 and ARMv8 libraries."
msgstr ""
"Godot 會需要兩個 Android 匯出樣板：一個經過最佳化的「release」樣板 "
"(``android_release.apk``) 以及除錯樣板 (``android_debug.apk``)。由於 Google "
"自 2019 年八月開始要求所有 APK 都必須包含 ARMv8 (64 位元) 函式庫，因此下方的"
"指令會建置同時包含 ARMv7 與 ARMv8 函式庫的 APK。"

msgid ""
"Compiling the standard export templates is done by calling SCons from the "
"Godot root directory with the following arguments:"
msgstr "可以通過在 Godot 根目錄以下列引數來呼叫 SCons 來編譯標準匯出樣板："

msgid ""
"Release template (used when exporting with **Debugging Enabled** unchecked)"
msgstr "釋出樣板 (用於匯出時有勾選 **Debugging Enabled** 時)"

msgid "The resulting APK will be located at ``bin/android_release.apk``."
msgstr "產生的 APK 會放在 ``bin/android_release.apk``。"

msgid "Debug template (used when exporting with **Debugging Enabled** checked)"
msgstr "除錯樣板 (用於匯出時有勾選 **Debugging Enabled** 時)"

msgid "The resulting APK will be located at ``bin/android_debug.apk``."
msgstr "產生的 APK 會放在 ``bin/android_debug.apk``。"

msgid "Adding support for x86 devices"
msgstr "加上對 x86 裝置的支援"

msgid ""
"If you also want to include support for x86 and x86-64 devices, run the "
"SCons command a third and fourth time with the ``android_arch=x86``, and "
"``android_arch=x86_64`` arguments before building the APK with Gradle. For "
"example, for the release template:"
msgstr ""
"若想包含對 x86 與 x86-64 裝置的支援，則請在使用 Gradle 建置 APK 前以 "
"``android_arch=x86`` 與 ``android_arch=x86_64`` 引數來執行第三次與第四次 "
"SCons。舉例來說，對於釋出樣板："

msgid ""
"This will create a fat binary that works on all platforms. The final APK "
"size of exported projects will depend on the platforms you choose to support "
"when exporting; in other words, unused platforms will be removed from the "
"APK."
msgstr ""
"這樣會產生一個很大的二進位檔案，可用於所有平台。最終用於匯出專案的 APK 大小會"
"依據匯出時選擇要支援的平台而定。也就是說，未使用的平台會從 APK 中被移除。"

msgid "Cleaning the generated export templates"
msgstr "清理產生的匯出樣板"

msgid ""
"You can use the following commands to remove the generated export templates:"
msgstr "可以使用下列指令來移除產生的匯出樣板："

msgid "Using the export templates"
msgstr "使用匯出樣板"

msgid ""
"Godot needs release and debug APKs that were compiled against the same "
"version/commit as the editor. If you are using official binaries for the "
"editor, make sure to install the matching export templates, or build your "
"own from the same version."
msgstr ""
"Godot 需要使用與編輯器相同版本／Commit 編譯的釋出與除錯 APK。若使用官方的編輯"
"器執行檔，請確定與安裝的匯出樣板版本相同，或是自行以相同的版本建置。"

msgid ""
"When exporting your game, Godot opens the APK, changes a few things inside "
"and adds your files."
msgstr ""
"匯出遊戲時，Godot 會開啟 APK，並在 APK 內部修改一些東西，然後加上專案檔案。"

msgid "Installing the templates"
msgstr "安裝樣板"

msgid ""
"The newly-compiled templates (``android_debug.apk`` and ``android_release."
"apk``) must be copied to Godot's templates folder with their respective "
"names. The templates folder can be located in:"
msgstr ""
"必須將新編譯的樣板 (``android_debug.apk`` and ``android_release.apk``) 複製"
"到 Godot 的樣板路徑中，並命名為對應的名稱。樣板資料夾位於："

msgid "Windows: ``%APPDATA%\\Godot\\templates\\<version>\\``"
msgstr "Windows: ``%APPDATA%\\Godot\\templates\\<版本>\\``"

msgid "Linux: ``$HOME/.local/share/godot/templates/<version>/``"
msgstr "Linux: ``$HOME/.local/share/godot/templates/<版本>/``"

msgid "macOS: ``$HOME/Library/Application Support/Godot/templates/<version>/``"
msgstr "macOS: ``$HOME/Library/Application Support/Godot/templates/<版本>/``"

msgid ""
"``<version>`` is of the form ``major.minor[.patch].status`` using values "
"from ``version.py`` in your Godot source repository (e.g. ``3.0.5.stable`` "
"or ``3.1.dev``). You also need to write this same version string to a "
"``version.txt`` file located next to your export templates."
msgstr ""
"``<版本>`` 的格式是與 Godot 原始碼儲存庫中 ``version.py`` 相同的值，為 "
"``major.minor[.patch].status`` 這樣的格式 (如 ``3.0.5.stable`` 或 ``3.1."
"dev``)。另外還必須在匯出樣板旁放置一個寫著相同版本的 ``version.txt`` 檔案。"

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your APKs as custom export templates here:"
msgstr ""
"但若你使用自定模組或自定 C++ 程式碼，可能需要在此處將自定匯出樣板設為自定 "
"APK："

msgid ""
"You don't even need to copy them, you can just reference the resulting file "
"in the ``bin\\`` directory of your Godot source folder, so that the next "
"time you build you will automatically have the custom templates referenced."
msgstr ""
"這種情況下甚至不需要複製這些檔案，只需要將這些檔案參照至 Godot 原始碼目錄中"
"的 ``bin\\`` 資料夾即可。這樣一來下次建置時就會自動參照到自定樣板。"

msgid "Troubleshooting"
msgstr "疑難排解"

msgid "Platform doesn't appear in SCons"
msgstr "SCons 中未顯示平台"

#, fuzzy
msgid ""
"Double-check that you've set the ``ANDROID_SDK_ROOT`` environment variable. "
"This is required for the platform to appear in SCons' list of detected "
"platforms. See :ref:`Setting up the buildsystem "
"<doc_android_setting_up_the_buildsystem>` for more information."
msgstr ""
"請再次檢查 ``ANDROID_HOME`` 與 ``ANDROID_NDK_ROOT`` 環境變數是否都有設定。必"
"須要有設定好環境變數，才會出現在 SCons 偵測到的平台列表中。更多資訊請參考 :"
"ref:`設定建置系統 <doc_android_setting_up_the_buildsystem>` 。"

msgid "Application not installed"
msgstr "應用程式無法安裝"

msgid ""
"Android might complain the application is not correctly installed. If so:"
msgstr "Android 可能會提示應用程式未正確安裝。這時："

msgid "Check that the debug keystore is properly generated."
msgstr "請檢查除錯 (Debug) 金鑰儲存區是否有正確產生。"

msgid "Check that the jarsigner executable is from JDK 8."
msgstr "請檢查 jarsigner 執行檔是否為 JDK 8 中的。"

msgid ""
"If it still fails, open a command line and run `logcat <https://developer."
"android.com/studio/command-line/logcat>`_:"
msgstr ""
"若依然失敗，請開啟命令行並執行 `logcat <https://developer.android.com/studio/"
"command-line/logcat>`_ ："

msgid ""
"Then check the output while the application is installed; the error message "
"should be presented there. Seek assistance if you can't figure it out."
msgstr ""
"接著在應用程式安裝時檢查輸出。錯誤訊息應該會顯示在此處。若無法解決，請尋找支"
"援。"

msgid "Application exits immediately"
msgstr "應用程式馬上退出"

msgid ""
"If the application runs but exits immediately, this might be due to one of "
"the following reasons:"
msgstr "若應用程式可執行，但會馬上退出的話，可能是由於下列原因導致："

msgid ""
"Make sure to use export templates that match your editor version; if you use "
"a new Godot version, you *have* to update the templates too."
msgstr ""
"請確保匯出樣板的版本符合編輯器版本。若使用較新的 Godot 版本，則 **必須** 一併"
"更新樣板的版本。"

msgid ""
"``libgodot_android.so`` is not in ``libs/<android_arch>/`` where "
"``<android_arch>`` is the device's architecture."
msgstr ""
"``libs/<android_arch>/`` 中沒有 ``libgodot_android.so`` 。其中，"
"``<android_arch>`` 是裝置的架構。"

msgid ""
"The device's architecture does not match the exported one(s). Make sure your "
"templates were built for that device's architecture, and that the export "
"settings included support for that architecture."
msgstr ""
"專案的架構與匯出樣板的架構不同。請確定有使用裝置的架構來建置樣板，並確認匯出"
"設定有包含對該架構的支援。"

msgid "In any case, ``adb logcat`` should also show the cause of the error."
msgstr "不論哪種情況，``adb logcat`` 應該也會顯示錯誤的原因。"

msgid "Translation status"
msgstr "翻譯狀態"
