# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Windows"
msgstr "為 Windows 進行編譯"

msgid ""
"This page describes how to compile Windows editor and export template "
"binaries from source. If you're looking to export your project to Windows "
"instead, read :ref:`doc_exporting_for_windows`."
msgstr ""

msgid "Requirements"
msgstr "系統需求"

msgid "For compiling under Windows, the following is required:"
msgstr "若要在 Windows 下進行編譯，需要滿足下列條件："

msgid ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_, "
"version 2017 or later. VS 2019 is recommended. **Make sure to read "
"\"Installing Visual Studio caveats\" below or you will have to run/download "
"the installer again.**"
msgstr ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_ 2017 "
"版或更新版本。建議使用 VS 2019。 **請務必閱讀下方的「Visual Studio 安裝須"
"知」，否則會需要重新執行或下載安裝程式。**"

msgid ""
"`MinGW-w64 <http://mingw-w64.org/>`__ with GCC can be used as an alternative "
"to Visual Studio. Be sure to install/configure it to use the ``posix`` "
"thread model."
msgstr ""
"配有 GCC 的 `MinGW-w64 <http://mingw-w64.org/>`__ 可用來代替 Visual Studio。"
"請確定有以 ``posix`` 執行緒模型來進行安裝或設定。"

msgid ""
"`Python 3.5+ <https://www.python.org/downloads/windows/>`_. **Make sure to "
"enable the option to add Python to the ``PATH`` in the installer.**"
msgstr ""

msgid ""
"`SCons <https://www.scons.org/>`_ build system. Using the latest release is "
"recommended, especially for proper support of recent Visual Studio releases."
msgstr ""

msgid ""
"If you have `Scoop <https://scoop.sh/>`_ installed, you can easily install "
"MinGW and other dependencies using the following command::"
msgstr ""
"若有安裝 ``Scoop <https://scoop.sh/>`_ ，則可以通過下列指令來輕鬆安裝 MinGW "
"以及其他相依性套件："

msgid ""
"If you have `MSYS2 <https://www.msys2.org/>`_ installed, you can easily "
"install MinGW and other dependencies using the following command::"
msgstr ""
"若有安裝 `MSYS2 <https://www.msys2.org/>`_ ，則可以通過下列指令輕鬆安裝 "
"MinGW 以及其他相依性套件："

#, fuzzy
msgid ""
"For each MSYS2 MinGW subsystem, you should then run `pip3 install scons` in "
"its shell."
msgstr "必須於各個 MSYS2 MinGW 子系統的 Shell 中執行 `pip install scons` 。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有關配合 Godot 使用 SCons 的一般說明，請參考 :ref:"
"`doc_introduction_to_the_buildsystem` 。"

msgid "Setting up SCons"
msgstr "設定 SCons"

#, fuzzy
msgid ""
"To install SCons, open the command prompt and run the following command::"
msgstr "若要安裝 SCons，請開啟命令提示字元並輸入下列指令。"

msgid ""
"If you are prompted with the message ``Defaulting to user installation "
"because normal site-packages is not writeable``, you may have to run that "
"command again using elevated permissions. Open a new command prompt as an "
"Administrator then run the command again to ensure that SCons is available "
"from the ``PATH``."
msgstr ""

msgid ""
"To check whether you have installed Python and SCons correctly, you can type "
"``python --version`` and ``scons --version`` into a command prompt (``cmd."
"exe``)."
msgstr ""
"若要檢查是否有正確安裝 Python 與 SCons，可以在命令提示字元 (``cmd.exe``) 中輸"
"入 ``python --version`` 與 ``scons --version`` 。"

msgid ""
"If the commands above don't work, make sure to add Python to your ``PATH`` "
"environment variable after installing it, then check again. You can do so by "
"running the Python installer again and enabling the option to add Python to "
"the ``PATH``."
msgstr ""
"若上述指令執行失敗，請確定有在安裝 Python 後將 Python 加至 ``PATH`` 環境變數"
"中，然後再試一次。要將 Python 加入 ``PATH`` 環境變數，可以再次執行 Python 安"
"裝程式，並開啟將 Python 加至 ``PATH`` 的選項。"

msgid ""
"If SCons cannot detect your Visual Studio installation, it might be that "
"your SCons version is too old. Update it to the latest version with ``python "
"-m pip install --upgrade scons``."
msgstr ""

msgid "Installing Visual Studio caveats"
msgstr "Visual Studio 安裝須知"

msgid ""
"If installing Visual Studio 2017 or 2019, make sure to enable **C++** in the "
"list of workflows to install."
msgstr ""
"若安裝的 Visual Studio 是 2017 或 2019，請確定有在工作流程列表中開啟 **C+"
"+** 。"

msgid ""
"If installing Visual Studio 2015, make sure to run a **Custom** installation "
"instead of **Typical** and select **C++** as a language there."
msgstr ""
"若安裝的 Visual Studio 是 2015，請不要使用 **自定** 安裝，請選擇 **自定** 安"
"裝，然後選擇語言為 **C++** 。"

msgid ""
"If you've already made the mistake of installing Visual Studio without C++ "
"support, run the installer again; it should present you a **Modify** button. "
"Running the installer from *Add/Remove Programs* will only give you a "
"**Repair** option, which won't let you install C++ tools."
msgstr ""
"若已經安裝好 Visual Studio 卻沒有開啟 C++ 支援的話，請重新執行安裝程式。重新"
"執行安裝程式時應該有一個 **修改** 按鈕。若從 **新增或移除程式** 中執行安裝程"
"式則只會出現 **修復** 選項，修復選項無法用於安裝 C++ 工具。"

msgid "Downloading Godot's source"
msgstr "下載 Godot 原始碼"

#, fuzzy
msgid "Refer to :ref:`doc_getting_source` for detailed instructions."
msgstr "更多資訊請參考 :ref:`doc_exporting_projects` 。"

msgid ""
"The tutorial will assume from now on that you placed the source code in ``C:"
"\\godot``."
msgstr "本教學假設原始碼放置於 ``C:\\godot`` 中。"

msgid ""
"To prevent slowdowns caused by continuous virus scanning during compilation, "
"add the Godot source folder to the list of exceptions in your antivirus "
"software."
msgstr ""

msgid ""
"For Windows Defender, hit the :kbd:`Windows` key, type \"Windows Defender "
"Settings\" then hit :kbd:`Enter`. Under **Virus & threat protection**, go to "
"**Virus & threat protection setting** and scroll down to **Exclusions**. "
"Click **Add or remove exclusions** then add the Godot source folder."
msgstr ""

msgid "Compiling"
msgstr "編譯"

msgid "Selecting a compiler"
msgstr "選擇編譯器"

#, fuzzy
msgid ""
"SCons will automatically find and use an existing Visual Studio "
"installation. If you do not have Visual Studio installed, it will attempt to "
"use MinGW instead. If you already have Visual Studio installed and want to "
"use MinGW, pass ``use_mingw=yes`` to the SCons command line. Note that MSVC "
"builds cannot be performed from the MSYS2 or MinGW shells. Use either ``cmd."
"exe`` or PowerShell instead."
msgstr ""
"SCons 會自動找到並使用現有的 Visual Studio 安裝。若尚未安裝 Visual Studio，"
"則 SCons 會試著使用 MinGW 來代替。若有安裝 Visual Studio，但想使用 MinGW 的"
"話，可以在命令行中將 ``use_mingw=yes`` 傳給 SCons。"

msgid ""
"During development, using the Visual Studio compiler is usually a better "
"idea, as it links the Godot binary much faster than MinGW. However, MinGW "
"can produce more optimized binaries using link-time optimization (see "
"below), making it a better choice for production use."
msgstr ""
"在開發時，最好選擇使用 Visual Studio 編譯器，因為 Visual Studio 編譯器連結到 "
"Godot 二進位檔的速度比 MinGW 快多了。但，MinGW 通過使用連結時期最佳化 (詳見下"
"方)，能產生更加最佳化的二進位檔，因此對於正式使用，MinGW 比起 Visual Studio "
"編譯器來得更好。"

msgid "Running SCons"
msgstr "執行 SCons"

msgid ""
"After opening a command prompt, change to the root directory of the engine "
"source code (using ``cd``) and type::"
msgstr ""
"開啟命令提示字元後，請 (使用 ``cd``) 將目錄更改至 Godot 原始碼的根目錄，然後"
"輸入："

msgid ""
"When compiling with multiple CPU threads, SCons may warn about pywin32 being "
"missing. You can safely ignore this warning."
msgstr ""
"當使用多個 CPU 執行緒進行編譯，SCons 可能會提示缺少 pywin32。可以安心地忽略這"
"個警告。"

msgid ""
"If all goes well, the resulting binary executable will be placed in ``C:"
"\\godot\\bin\\`` with the name ``godot.windows.tools.32.exe`` or ``godot."
"windows.tools.64.exe``. By default, SCons will build a binary matching your "
"CPU architecture, but this can be overridden using ``bits=64`` or "
"``bits=32``."
msgstr ""
"若沒出現什麼問題的話，最後產生的二進位可執行檔會放置於 ``C:\\godot\\bin\\`` "
"中，檔名為 ``godot.windows.tools.32.exe`` 或 ``godot.windows.tools.64."
"exe`` 。預設情況下，SCons 會使用與你的 CPU 相同的架構來建置二進位檔，但可以通"
"過 ``bits=64`` 或 ``bits=32`` 選項來複寫此一自動偵測。"

msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Running it will bring up the Project Manager."
msgstr ""
"該執行檔包含了完整的 Godot 遊戲引擎，並且不需任何相依性套件即可執行。執行這個"
"檔案會開啟專案管理員。"

msgid ""
"If you are compiling Godot for production use, then you can make the final "
"executable smaller and faster by adding the SCons option "
"``target=release_debug``."
msgstr ""
"若是要為正式環境編譯 Godot，則可以通過加上 ``target=release_debug`` SCons 選"
"項來讓最終產生的可執行檔更小且更快速。"

#, fuzzy
msgid ""
"If you are compiling Godot with MinGW, you can make the binary even smaller "
"and faster by adding the SCons option ``use_lto=yes``. As link-time "
"optimization is a memory-intensive process, this will require about 7 GB of "
"available RAM while compiling."
msgstr ""
"若使用 MinGW 來編譯 Godot，還可以通過 ``use_lto=yes`` 選項來讓產生的二進位檔"
"案更小更快。由於連結時期最佳化是一項消耗記憶體的過程，因此在編譯時會需要至少 "
"3GB 的可用記憶體。"

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"若想在客製化建置上使用與 Godot 官方釋出版本不同的編輯器設定，可以通過在 "
"``bin/`` 資料夾中建立檔名為 ``._sc_`` 或 ``_sc_`` 的檔案來開啟 :ref:"
"`doc_data_paths_self_contained_mode` 。"

#, fuzzy
msgid "Development in Visual Studio"
msgstr "使用 Visual Studio 或其他 IDE 來進行開發"

msgid ""
"Using an IDE is not required to compile Godot, as SCons takes care of "
"everything. But if you intend to do engine development or debugging of the "
"engine's C++ code, you may be interested in configuring a code editor or an "
"IDE."
msgstr ""

msgid ""
"Folder-based editors don't require any particular setup to start working "
"with Godot's codebase. To edit projects with Visual Studio they need to be "
"set up as a solution."
msgstr ""

msgid ""
"You can create a Visual Studio solution via SCons by running SCons with the "
"``vsproj=yes`` parameter, like this::"
msgstr ""
"可以通過 SCons 來建立 Visual Studio 解決方案。要建立解決方案，請使用 "
"``vsproj=yes`` 參數來執行 SCons，如："

msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, and "
"able to build Godot using Visual Studio's **Build** button."
msgstr ""
"現在可以在 Visual Studio 解決方案中開啟 Godot 原始碼了，然後可以通過 Visual "
"Studio 的 **建置** 按鈕來建置 Godot。"

#, fuzzy
msgid "See :ref:`doc_configuring_an_ide_vs` for further details."
msgstr "SCons 3.0+ (詳情請參考 :ref:`doc_compiling_for_windows`)。"

msgid "Cross-compiling for Windows from other operating systems"
msgstr "從其他作業系統上為 Windows 進行交叉編譯"

msgid ""
"If you are a Linux or macOS user, you need to install `MinGW-w64 <https://"
"mingw-w64.org/doku.php>`__, which typically comes in 32-bit and 64-bit "
"variants. The package names may differ based on your distribution, here are "
"some known ones:"
msgstr ""
"若你使用 Linux 或 macOS，則需要安裝 `MinGW-w64 <https://mingw-w64.org/doku."
"php>`__ 。MinGW-w64 通常會有 32 位元與 64 位元的版本。依據發行版不同，可能會"
"有不同的套件名稱。下列為一些已知的套件名稱："

msgid "**Arch Linux**"
msgstr "\\ **Arch Linux**"

msgid "Install `mingw-w64-gcc from the AUR`_."
msgstr "`從 AUR 安裝 mingw-w64-gcc`_ 。"

msgid "**Debian** / **Ubuntu**"
msgstr "\\ **Debian** / **Ubuntu**"

msgid "**Fedora**"
msgstr "\\ **Fedora**"

msgid "**macOS**"
msgstr "\\ **macOS**"

msgid "**Mageia**"
msgstr "\\ **Mageia**"

msgid ""
"Before attempting the compilation, SCons will check for the following "
"binaries in your ``PATH`` environment variable::"
msgstr "在嘗試編譯前，SCons 會在 ``PATH`` 環境變數中檢查下列二進位檔："

msgid ""
"If the binaries are not located in the ``PATH`` (e.g. ``/usr/bin``), you can "
"define the following environment variables to give a hint to the build "
"system::"
msgstr ""
"若這些二進位檔沒有放在 ``PATH`` 中 (如 ``/usr/bin``) ，則必須定義下列變數來讓"
"建置系統找到："

msgid ""
"To make sure you are doing things correctly, executing the following in the "
"shell should result in a working compiler (the version output may differ "
"based on your system)::"
msgstr ""
"若要確定是否有正確設定，可以通過在 Shell 中執行下列指令來確認是否有可使用的編"
"譯器 (輸出的版本可能會依據不同系統而有所不同)："

msgid "Troubleshooting"
msgstr "疑難排解"

msgid ""
"Cross-compiling from some Ubuntu versions may lead to `this bug <https://"
"github.com/godotengine/godot/issues/9258>`_, due to a default configuration "
"lacking support for POSIX threading."
msgstr ""
"在某些 Ubuntu 版本中進行交叉編譯可能會出現 `這個 Bug <https://github.com/"
"godotengine/godot/issues/9258>`_ ，這是因為預設的設定未包含 POSIX 執行緒支"
"援。"

msgid ""
"You can change that configuration following those instructions, for 64-bit::"
msgstr "可以通過如下說明來更改此一設定。64 位元："

msgid "And for 32-bit::"
msgstr "32 位元："

msgid "Creating Windows export templates"
msgstr "建立 Windows 匯出樣板"

msgid ""
"Windows export templates are created by compiling Godot without the editor, "
"with the following flags::"
msgstr ""
"可以通過編譯不含編輯器的 Godot 來建立 Windows 匯出樣板。請使用下列旗標："

msgid ""
"If you plan on replacing the standard export templates, copy these to the "
"following location, replacing ``<version>`` with the version identifier "
"(such as ``3.1.1.stable`` or ``3.2.dev``)::"
msgstr ""
"若之後有準備要取代標準匯出樣板，請將這些檔案複製到下列位置。請將其中的 "
"``<version>`` 改為版本識別項 (如 ``3.1.1.stable`` 或 ``3.2.dev``)："

msgid "With the following names::"
msgstr "並改為下列名稱："

msgid ""
"However, if you are using custom modules or custom engine code, you may "
"instead want to configure your binaries as custom export templates here:"
msgstr ""
"但是，如果使用自定模組或自定引擎原始碼，則可能會需要在此將自定二進位檔設為自"
"定匯出樣板："

msgid ""
"You don't need to copy them in this case, just reference the resulting files "
"in the ``bin\\`` directory of your Godot source folder, so the next time you "
"build, you will automatically have the custom templates referenced."
msgstr ""
"這種情況下則不需要複製檔案，只需要將產生的檔案參照進 Godot 原始碼資料夾的 "
"``bin\\`` 目錄中即可。這樣一來，下次進行建置時，便會自動參照自定樣板。"

msgid "Translation status"
msgstr "翻譯狀態"
