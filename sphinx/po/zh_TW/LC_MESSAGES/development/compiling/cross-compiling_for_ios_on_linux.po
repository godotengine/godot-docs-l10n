# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-compiling for iOS on Linux"
msgstr "在 Linux 上為 iOS 進行交叉編譯"

msgid ""
"The procedure for this is somewhat complex and requires a lot of steps, but "
"once you have the environment properly configured it will be easy to compile "
"Godot for iOS anytime you want."
msgstr ""
"為 iOS 交叉編譯的步驟有點複雜，並需要許多步驟。但正確設定好環境後，便能隨時輕"
"鬆為 iOS 編譯 Godot。"

msgid "Disclaimer"
msgstr "免責聲明"

msgid ""
"While it is possible to compile for iOS on a Linux environment, Apple is "
"very restrictive about the tools to be used (especially hardware-wise), "
"allowing pretty much only their products to be used for development. So this "
"is **not official**. However, a `statement from Apple in 2010 <http://www."
"apple.com/pr/library/2010/09/09Statement-by-Apple-on-App-Store-Review-"
"Guidelines.html>`__ says they relaxed some of the `App Store review "
"guidelines <https://developer.apple.com/app-store/review/guidelines/>`__ to "
"allow any tool to be used, as long as the resulting binary does not download "
"any code, which means it should be OK to use the procedure described here "
"and cross-compiling the binary."
msgstr ""
"雖然可以在 Linux 上為 iOS 平台編譯，但 Apple 對於使用的工具有嚴格的限制 (特別"
"是硬體方面)，幾乎只允許使用 Apple 自家產品進行開發。因此，這裡提到的方法 **並"
"非官方的** 。但是，依據 `Apple 在 2010 年發表的一篇聲明 <http://www.apple."
"com/pr/library/2010/09/09Statement-by-Apple-on-App-Store-Review-Guidelines."
"html>`__ 提到，Apple 放寬了一些 `App Store 審查方針 <https://developer.apple."
"com/app-store/review/guidelines/>`__ ，只要最終產生的二進位檔不會下載任何程式"
"碼，就可以使用任何的工具。這表示，依照本頁的說明來交叉編譯二進位執行檔應該沒"
"什麼問題。"

msgid "Requirements"
msgstr "系統需求"

msgid ""
"`XCode with the iOS SDK <https://developer.apple.com/xcode/download>`__ (a "
"dmg image)"
msgstr ""
"`包含 iOS SDK 的 XCode <https://developer.apple.com/xcode/download>`__ (DMG "
"映像檔)"

msgid ""
"`Clang >= 3.5 <http://clang.llvm.org>`__ for your development machine "
"installed and in the ``PATH``. It has to be version >= 3.5 to target "
"``arm64`` architecture."
msgstr ""
"`Clang >= 3.5 <http://clang.llvm.org>`__ ，安裝於用於開發的機器上，並且需放置"
"於 ``PATH`` 內。版本必須 >= 3.5 才能處理 ``arm64`` 架構的建置目標。"

msgid ""
"`Fuse <https://github.com/libfuse/libfuse>`__ for mounting and umounting the "
"dmg image."
msgstr ""
"`Fuse <https://github.com/libfuse/libfuse>`__ ，用於掛載與取消掛載 DMG 映像。"

msgid ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__, which needs to "
"be built from source. The procedure for that is explained below."
msgstr ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__ ，必須從原始碼編"
"譯。編譯方法會在稍後說明。"

msgid ""
"For building darling-dmg, you'll need the development packages of the "
"following libraries: fuse, icu, openssl, zlib, bzip2."
msgstr ""
"要建置 darling-dmg，則必須要有下列幾個函式庫的開發套件：fuse, icu, openssl, "
"zlib, bzip2。"

msgid ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ for the "
"needed build tools. The procedure for building is quite peculiar and is "
"described below."
msgstr ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ 用於所需的建"
"置工具。編譯的過程很特別，會在稍後說明。"

msgid "This also has some extra dependencies: automake, autogen, libtool."
msgstr "還有一些額外的相依性套件：automake, autogen, libtool。"

msgid "Configuring the environment"
msgstr "設定環境"

msgid "darling-dmg"
msgstr "\\ darling-dmg"

msgid "Clone the repository on your machine:"
msgstr "將儲存庫 Clone 到機器上："

msgid "Build it:"
msgstr "建置："

msgid "Preparing the SDK"
msgstr "準備 SDK"

msgid "Mount the XCode image:"
msgstr "掛載 XCode 映像："

msgid "Extract the iOS SDK:"
msgstr "解壓縮 iOS SDK："

msgid "Pack the SDK:"
msgstr "打包 SDK："

msgid "Toolchain"
msgstr "\\ Toolchain"

msgid "Build cctools:"
msgstr "建置 cctools："

msgid ""
"Copy the tools to a nicer place. Note that the SCons scripts for building "
"will look under ``usr/bin`` inside the directory you provide for the "
"toolchain binaries, so you must copy to such subdirectory, akin to the "
"following commands:"
msgstr ""
"複製該工具至適當的地方。請注意，用於建置的 SCons 腳本會在所提供的 Toolchain "
"二進位檔資料夾中的 ``usr/bin`` 中搜尋，因此必須複製到這樣的子資料夾中，如下列"
"指令："

msgid ""
"Now you should have the iOS toolchain binaries in ``/home/user/iostoolchain/"
"usr/bin``."
msgstr ""
"現在 iOS Toolchain 二進位檔應該放在 ``/home/user/iostoolchain/usr/bin`` 中。"

msgid "Compiling Godot for iPhone"
msgstr "為 iPhone 編譯 Godot"

msgid ""
"Once you've done the above steps, you should keep two things in your "
"environment: the built toolchain and the iPhoneOS SDK directory. Those can "
"stay anywhere you want since you have to provide their paths to the SCons "
"build command."
msgstr ""
"完成上述步驟後，需要將兩樣東西保留在開發環境中：建置 Toolchain 以及 iPhoneOS "
"SDK 資料夾。因為儲存路徑需要在建置時主動提供給 SCons，所以這兩樣東西可以放在"
"任何地方。"

msgid ""
"For the iPhone platform to be detected, you need the ``OSXCROSS_IOS`` "
"environment variable defined to anything."
msgstr ""
"為了能偵測到 iPhone 平台，必須定義 ``OSXCROSS_IOS`` 環境變數，內容不拘。"

msgid ""
"Now you can compile for iPhone using SCons like the standard Godot way, with "
"some additional arguments to provide the correct paths:"
msgstr ""
"現在可以通過與一般編譯 Godot 相同的方法來用 SCons 為 iPhone 進行編譯，但需要"
"在一些額外的引數中提供正確路徑："

msgid "Producing fat binaries"
msgstr "建置 Fat Binary"

msgid ""
"Apple requires a fat binary with both architectures (``armv7`` and "
"``arm64``) in a single file. To do this, use the ``arm-apple-darwin11-lipo`` "
"executable. The following example assumes you are in the root Godot source "
"directory:"
msgstr ""
"Apple 要求必須要在單一執行檔內包含 Fat Binary，即包含兩種架構 (``armv7`` 與 "
"``arm64``)。要製作 Fat Binary，請使用 ``arm-apple-darwin11-lipo`` 執行檔。下"
"列範例假設已在 Godot 原始碼根目錄中："

msgid "Then you will have iOS fat binaries in ``bin`` directory."
msgstr "接著 iOS 的 Fat Binary 應位於 ``bin`` 資料夾中。"

msgid "Translation status"
msgstr "翻譯狀態"
