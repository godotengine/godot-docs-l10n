# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling with Mono"
msgstr "通過 Mono 進行編譯"

msgid "Requirements"
msgstr "系統需求"

#, fuzzy
msgid "Mono 6.12.0 or greater"
msgstr "Mono 5.12.0 或更新版本"

msgid "MSBuild"
msgstr "\\ MSBuild"

msgid "NuGet"
msgstr "\\ NuGet"

msgid "**On Linux/macOS only:** pkg-config"
msgstr "**使用 Linux/macOS 時：** pkg-config"

msgid ""
"You may need to import necessary certificates for NuGet to perform HTTPS "
"requests."
msgstr "可能需要為 NuGet 匯入必要的憑證，以進行 HTTPS 查詢。"

#, fuzzy
msgid ""
"The recommended method is to use **curl**'s CA (Certificate Authorities) "
"certificate bundle."
msgstr "建議的方法為使用 **curl** 的 CA (Certificate Autorities) 憑證捆綁。"

msgid ""
"Run the following commands to download and import it. On Windows, you can "
"run it from the Mono command line prompt (or the regular prompt if you added "
"Mono's ``bin`` directory to your ``PATH`` environment variable)::"
msgstr ""
"執行下列指令來下載並匯入該捆綁。在 Windows 上，需要從 Mono 命令提示字元中執"
"行 (或當有將 Mono 的 ``bin`` 資料夾加至 ``PATH`` 環境變數時，可使用一般的命令"
"提示字元)："

msgid ""
"Alternatively, you can use the following command, though it's deprecated and "
"may not work correctly::"
msgstr ""
"另外，也可以使用下列指令。雖然下列指令已不推薦使用，且可能無法正常運作："

msgid "Environment variables"
msgstr "環境變數"

msgid ""
"By default, SCons will try to find Mono in the Windows Registry on Windows "
"or via ``pkg-config`` on other platforms. You can specify a different "
"installation directory by passing the ``mono_prefix`` command-line option to "
"SCons; e.g. ``scons [...] mono_prefix=%ProgramFiles%/Mono``."
msgstr ""
"預設情況下，SCons 在 Windows 上會從 Windows 登錄機碼中找到 Mono 的安裝位置，"
"其他平台上則會通過 ``pkg-config`` 。可以通過傳入 ``mono_prefix`` 命令行選項"
"給 SCons 來指定不同的安裝資料夾。如， ``scons [...] "
"mono_prefix=%ProgramFiles%/Mono`` 。"

msgid ""
"This is the directory that contains the subdirectories ``include`` and "
"``lib``."
msgstr "該資料夾中包含了 ``include`` 與 ``lib`` 子資料夾。"

msgid "Enable the Mono module"
msgstr "開啟 Mono 模組"

msgid ""
"By default, the Mono module is disabled when building. To enable it, add the "
"option ``module_mono_enabled=yes`` to the SCons command line."
msgstr ""
"預設情況下，Mono 模組在建置時沒有被啟用。若要開啟 Mono 模組，請在 SCons 命令"
"行加上 ``module_mono_enabled=yes`` 選項。"

msgid "Generate the glue"
msgstr "產生 Glue"

msgid ""
"Glue sources are the wrapper functions that will be called by managed "
"methods. These source files must be generated before building your final "
"binaries. In order to generate them, first, you must build a temporary Godot "
"binary with the options ``tools=yes`` and ``mono_glue=no``::"
msgstr ""
"Glue 原始檔是包裝函式，會被受管理的方法呼叫。這些原始檔案必須在建置最終的二進"
"位檔前產生。要產生 Glue 原始檔，首先必須先通過 ``tools=yes`` 與 "
"``mono_glue=no`` 選項建置一個臨時的 Godot 二進位檔："

msgid ""
"After the build finishes, you need to run the compiled executable with the "
"parameter ``--generate-mono-glue`` followed by the path to an output "
"directory. This path must be ``modules/mono/glue`` in the Godot directory::"
msgstr ""
"建置完成後，需要使用 ``--generate-mono-glue`` 參數接上輸出路徑來執行編譯好的"
"可執行檔。該路徑必須為 Godot 資料夾中的 ``modules/mono/glue`` ："

#, fuzzy
msgid ""
"This command will tell Godot to generate the file ``modules/mono/glue/"
"mono_glue.gen.cpp``, the C# solution for the Godot API at ``modules/mono/"
"glue/GodotSharp/GodotSharp/Generated``, and the C# solution for the editor "
"tools at ``modules/mono/glue/GodotSharp/GodotSharpEditor/Generated``. Once "
"these files are generated, you can build Godot for all the desired targets "
"without having to repeat this process."
msgstr ""
"該指令會讓 Godot 產生 ``modules/mono/glue/mono_glue.gen.cpp`` 檔案，以及用於 "
"Godot API 的 C# 解決方案，位於 ``modules/mono/glue/Managed/Generated`` 。產生"
"好這些檔案後，就可以為所有需要的建置目標建置 Godot，而無需重複此一過程。"

msgid ""
"``<godot_binary>`` refers to the tools binary you compiled above with the "
"Mono module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.tools.<bits>."
"mono``, e.g. ``bin/godot.x11.tools.64.mono`` or ``bin/godot.windows.tools.64."
"mono.exe``. Be especially aware of the **.mono** suffix! If you've "
"previously compiled Godot without Mono support, you might have similarly "
"named binaries without this suffix. These binaries can't be used to generate "
"the Mono glue."
msgstr ""
"``<godot_binary>`` 表示剛才啟用 Mono 模組編譯出來的 Tools 二進位檔。實際的名"
"稱會依據作業系統與設定檔而定，但格式應該是 ``bin/godot.<平台>.tools.<位元>."
"mono`` ，如 ``bin/godot.x11.tools.64.mono`` 或 ``bin/godot.windows.tools.64."
"mono.exe`` 。但請特別注意最後的 **mono** ！若剛才編譯 Godot 時沒有啟用 Mono "
"支援，則產生的二進位檔後面不會有 mono，且將無法用於產生 Mono Glue。"

msgid "Notes"
msgstr "請注意"

msgid ""
"**Do not build your final binaries with** ``mono_glue=no``. This disables C# "
"scripting. This option must be used only for the temporary binary that will "
"generate the glue. Godot will print a warning at startup if it was built "
"without the glue sources."
msgstr ""
"**編譯最終二進位檔時請勿使用** ``mono_glue=no`` ，否則會禁用 C# 程式功能。該"
"選項只能用於產生 Glue 時作為臨時之用。若建置未包含 Glue 原始檔，Godot 會在啟"
"動時顯示警告。"

msgid ""
"The glue sources must be regenerated every time the ClassDB-registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameters of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""
"每次更改註冊在 ClassDB 上的 API 時都必須重新產生 Glue 原始檔。這種情況如，向"
"腳本 API 註冊新方法或其中一個向 ClassDB 註冊的方法需要更改參數時。若 ClassDB "
"與 Glue 原始檔註冊的 API 有出入，Godot 會在啟動時顯示錯誤。"

msgid "Rebuild with Mono glue"
msgstr "使用 Mono Glue 來重新建置"

msgid ""
"Once you have generated the Mono glue, you can build the final binary with "
"``mono_glue=yes``. This is the default value for ``mono_glue``, so you can "
"also omit it. To build a Mono-enabled editor::"
msgstr ""
"產生 Mono Glue 後，便可通過 ``mono_glue=yes`` 來編譯最終的二進位檔。 ``yes`` "
"就是 ``mono_glue`` 的預設值，因此可省略。若要建置有啟用 Mono 的編輯器："

msgid "And Mono-enabled export templates::"
msgstr "以及包含 Mono 的匯出樣板："

msgid ""
"If everything went well, apart from the normal output, SCons should have "
"created the following files in the ``bin`` directory:"
msgstr ""
"如果沒遇到問題的話，除了一般的輸出之外，SCons 還會在 ``bin`` 資料夾中建立下列"
"檔案："

msgid ""
"If you're not linking the Mono runtime statically, the build script will "
"place the Mono runtime shared library (``monosgen-2.0``) next to the Godot "
"binary in the output directory. Make sure to include this library when "
"distributing Godot. When targeting Android, no extra steps are required as "
"this library is automatically copied to ``#platform/android/java/libs`` and "
"Gradle takes care of the rest."
msgstr ""
"若沒有靜態連結 Mono 執行環境，則建置腳本會將 Mono 執行環境的共享函式庫 "
"(``monosgen-2.0``) 與 Godot 二進位檔一起放在輸出目錄內。在發佈 Godot 時請確保"
"有將該函式庫一起發佈。當建置目標為 Android 時，該函式庫會自動複製到 "
"``#platform/android/java/libs`` 內，然後 Gradle 會處理剩下的步驟，因此不需要"
"額外處理。"

msgid ""
"Unlike \"classical\" Godot builds, when building with the Mono module "
"enabled (and depending on the target platform), a data directory may be "
"created both for the editor and for export templates. This directory is "
"important for proper functioning and must be distributed together with "
"Godot. More details about this directory in :ref:`Data "
"directory<compiling_with_mono_data_directory>`."
msgstr ""
"與「經典」Godot 建置不同，當建置啟用了 Mono 模組 (並根據不同的目標平台)，有可"
"能會為編輯器與匯出樣板產生資料目錄。該資料夾對於能否正常使用 Godot 來說很重"
"要，在發佈 Godot 時必須一同發佈。有關該資料夾的詳情請參考 :ref:`資料目錄 "
"<compiling_with_mono_data_directory>` 。"

msgid "Examples"
msgstr "範例"

msgid "Example (Windows)"
msgstr "範例 (Windows)"

msgid "Example (X11)"
msgstr "範例 (X11)"

msgid "Data directory"
msgstr "資料目錄"

msgid ""
"The data directory is a dependency for Godot binaries built with the Mono "
"module enabled. It contains important files for the correct functioning of "
"Godot. It must be distributed together with the Godot executable."
msgstr ""
"資料目錄在 Godot 二進位檔編譯時啟用 Mono 目錄時的相依性。該資料夾包含了一些重"
"要的檔案，且會影響 Godot 能否正確運作。在發佈 Godot 執行檔時必須一同發佈。"

msgid ""
"The information below doesn't apply for Android, iOS and WASM, as there is "
"no data directory for these platforms."
msgstr "下列的資訊並不適用於 Android, iOS 與 WASM，因為這些平台並無資料目錄。"

msgid "Export templates"
msgstr "匯出樣板"

msgid ""
"The name of the data directory for an export template differs based on the "
"configuration it was built with. The format is ``data.mono.<platform>.<bits>."
"<target>``, e.g. ``data.mono.x11.32.release_debug`` or ``data.mono."
"windows.64.release``."
msgstr ""
"用於匯出樣板的資料目錄名稱會依據建置時的設定而有所不同。格式為 ``data.mono.<"
"平台>.<位元>.<建置目標>`` 。如 ``data.mono.x11.32.release_debug`` 或 ``data."
"mono.windows.64.release`` 。"

msgid ""
"This directory must be placed with its original name next to the Godot "
"export templates. When exporting a project, Godot will also copy this "
"directory with the game executable but the name will be changed to "
"``data_<APPNAME>``, where ``<APPNAME>`` is the application name as specified "
"in the project setting ``application/config/name``."
msgstr ""
"該資料夾必須以其原始名稱與 Godot 匯出樣板放在一起。匯出專案時，Godot 也會將該"
"資料夾複製到遊戲可執行檔旁，並將資料夾名稱改為 ``data_<APPNAME>`` ，其中， "
"``<APPNAME>`` 為在專案設定 ``application/config/name`` 中設定的應用程式名稱。"

msgid ""
"In the case of macOS, where the export template is compressed as a ZIP "
"archive, the contents of the data directory can be placed in the following "
"locations inside the ZIP archive:"
msgstr ""
"macOS 上的匯出樣板為 ZIP 壓縮檔格式，資料目錄的內容會被放在 ZIP 壓縮檔中的下"
"列路徑："

msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/lib``"
msgstr "``bin/data.mono.<平台>.<位元>.<建置目標>/Mono/lib``"

msgid "``/osx_template.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr "``/osx_template.app/Contents/Frameworks/GodotSharp/Mono/lib``"

msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/etc``"
msgstr "``bin/data.mono.<平台>.<位元>.<建置目標>/Mono/etc``"

msgid "``/osx_template.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr "``/osx_template.app/Contents/Resources/GodotSharp/Mono/etc``"

msgid "Editor"
msgstr "編輯器"

msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. The contents of this directory are the following:"
msgstr ""
"用於 Godot 編輯器的資料目錄名稱保持為 ``GodotSharp`` 。該資料夾包含下列內容："

msgid "``Api``"
msgstr "``Api``"

msgid "``Mono`` (optional)"
msgstr "``Mono`` (可選)"

msgid "``Tools``"
msgstr "``Tools``"

msgid ""
"The ``Api`` subdirectory contains the Godot API assemblies. On macOS, if the "
"Godot editor is distributed as a bundle, the contents of the data directory "
"may be placed in the following locations:"
msgstr ""
"``Api`` 子資料夾包含 Godot 的 API 組建。在 macOS 上時，若 Godot 編輯器以捆綁"
"方式發佈，則資料目錄的內容可能會被放在下列位置："

msgid "``bin/data.mono.<platform>.<bits>.<target>/Api``"
msgstr "``bin/data.mono.<平台>.<位元>.<建置目標>/Api``"

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Api``"
msgstr "``<捆綁名稱>.app/Contents/Frameworks/GodotSharp/Api``"

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr "``<捆綁名稱>.app/Contents/Frameworks/GodotSharp/Mono/lib``"

msgid "``<bundle_name>.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr "``<捆綁名稱>.app/Contents/Resources/GodotSharp/Mono/etc``"

msgid "``bin/data.mono.<platform>.<bits>.<target>/Tools``"
msgstr "``bin/data.mono.<平台>.<位元>.<建置目標>/Tools``"

msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Tools``"
msgstr "``<捆綁名稱>.app/Contents/Frameworks/GodotSharp/Tools``"

msgid ""
"The ``Mono`` subdirectory is optional. It will be needed when distributing "
"the editor, as issues can arise when the user-installed Mono version isn't "
"identical to the one the Godot editor was built with. Pass "
"``copy_mono_root=yes`` to SCons when building the editor in order to create "
"this folder and its contents."
msgstr ""
"``Mono`` 子資料夾為可選。該資料夾在發佈編輯器時必須要存在，當使用者安裝的 "
"Mono 版本與建置 Godot 編輯器時的版本不同時可能會發生問題。請在建置編輯器時將 "
"``copy_mono_root=yes`` 傳給 SCons 以建立該資料夾與其內容。"

msgid ""
"The ``Tools`` subdirectory contains tools required by the editor, like the "
"``GodotTools`` assemblies and its dependencies."
msgstr ""
"``Tools`` 子資料夾包含了編輯器所需的工具，如 ``GodotTools`` 組建與其相依性。"

msgid "Building the Mono runtime"
msgstr "建置 Mono 執行環境"

msgid ""
"When building Godot for the desktop, you will likely use the pre-built Mono "
"runtime that is installed on your system. This likely won't be the case when "
"targeting other platforms like Android, iOS and WebAssembly. You will have "
"to build the Mono runtime yourself for those platforms."
msgstr ""
"為桌面平台建置 Godot 時，我們通常會使用安裝在系統上預先建置好的 Mono 執行環"
"境。但當建置目標為其他如 Android, iOS 與 WebAssembly 的平台時則不同，會需要自"
"行為這些平台建置 Mono 執行環境。"

msgid ""
"We recommend using these `build scripts <https://github.com/godotengine/"
"godot-mono-builds>`_. They simplify this process but also include some "
"patches needed for proper functioning with Godot. See the README on the link "
"above for instructions on how to use the scripts."
msgstr ""
"我們建議使用這些 `建置腳本 <https://github.com/godotengine/godot-mono-"
"builds>`_ 。使用建置腳本可以簡化建置過程，並且，建置腳本中包含了一些要讓 "
"Godot 能正常運作的修補程式。請參考上述連結中的 README 以瞭解如何使用該腳本。"

msgid "Targeting Android"
msgstr "以 Android 作為建置目標"

msgid ""
"Compiling the Android export templates with Mono is a bit simpler than it is "
"for the desktop platforms, as there are no additional steps required after "
"building. There is no need to worry about run-time dependencies like a data "
"directory or the shared library (when dynamically linking) as those are "
"automatically added to the Gradle project."
msgstr ""
"以 Mono 為 Android 編譯匯出樣板比為桌面平台編譯還稍微簡單一點，因為建置完成後"
"不需要進行額外的步驟。也不需要擔心執行階段的相依性，如資料目錄與 (使用動態連"
"結時的) 共享函式庫，因為這些相依性內容都會自動被新增至 Gradle 專案中。"

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"Android<doc_compiling_for_android>` page. Make sure to let SCons know about "
"the location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/android-armeabi-v7a-release\"`` (This path "
"may be different on your system)."
msgstr ""
"建置好 Mono 後，便可通過本頁與 :ref:`為 Android 進行編譯"
"<doc_compiling_for_android>` 一頁中的說明建置 Godot。請確保 SCons 知道所建置"
"的 Mono 執行環境的路徑，如 ``scons [...] mono_prefix=\"$HOME/mono-installs/"
"android-armeabi-v7a-release\"`` (路徑在不同作業系統上可能有所不同)。"

msgid "Targeting iOS"
msgstr "以 iOS 作為建置目標"

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"iOS<doc_compiling_for_ios>` page. Make sure to let SCons know about the "
"location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/ios-arm64-release\"`` (This path may be "
"different on your system)."
msgstr ""
"建置好 Mono 後，便可通過本頁與 :ref:`為 iOS 進行編譯<doc_compiling_for_ios>` "
"一頁中的說明建置 Godot。請確保 SCons 知道所建置的 Mono 執行環境的路徑，如 "
"``scons [...] mono_prefix=\"$HOME/mono-installs/ios-arm64-release\"`` (路徑在"
"不同作業系統上可能有所不同)。"

msgid ""
"After building Godot for each architecture, you will notice SCons has copied "
"the Mono libraries for each of them to the output directory:"
msgstr ""
"為各個架構建置好 Godot 後，會發現 SCons 有將 Mono 函式庫複製到各個架構的輸出"
"目錄內："

msgid ""
"The last three are only for iOS devices and are not available for the iOS "
"simulator."
msgstr "上述最後三個路徑只會出現在 iOS 設備上，iOS 模擬器則沒有。"

msgid ""
"These libraries must be put in universal (multi-architecture) \"fat\" files "
"to be distributed with the export templates."
msgstr ""
"這些函式庫必須要放在 Universal (多架構) —— 也就是「Fat」檔案內，並與匯出樣板"
"一同釋出。"

msgid ""
"The following bash script will create the \"fat\" libraries in the directory "
"``#bin/ios/iphone-mono-libs``:"
msgstr ""
"下列 Bash 腳本會在 ``#bin/ios/iphone-mono-libs`` 資料夾內建立「Fat」函式庫："

msgid ""
"The ``iphone-mono-libs`` folder must be distributed with the export "
"templates. The Godot editor will look for the libraries in ``<templates>/"
"iphone-mono-libs/lib<name>.iphone.fat.a``."
msgstr ""
"``iphone-mono-libs`` 資料夾必須與匯出樣板一同發佈。Godot 編輯器會在 ``<樣板>/"
"iphone-mono-libs/lib<名稱>.iphone.fat.a`` 中尋找函式庫。"

msgid "Targeting WebAssembly"
msgstr "以 WebAssembly 作為建置目標"

msgid ""
"Building for WebAssembly currently involves the same process regardless of "
"whether the Mono module is enabled."
msgstr "目前，建置 WebAssembly 時無論有沒有啟用 Mono 模組，都使用相同的方法。"

msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for the "
"Web<doc_compiling_for_web>` page. Make sure to let SCons know about the "
"location of the Mono runtime you've just built, e.g.: ``scons [...] "
"mono_prefix=\"$HOME/mono-installs/wasm-runtime-release\"`` (This path may be "
"different on your system)."
msgstr ""
"建置好 Mono 後，便可通過本頁與 :ref:`為 Web 平台進行編譯"
"<doc_compiling_for_web>` 一頁中的說明建置 Godot。請確保 SCons 知道所建置的 "
"Mono 執行環境的路徑，如 ``scons [...] mono_prefix=\"$HOME/mono-installs/wasm-"
"runtime-release\"`` (路徑在不同作業系統上可能有所不同)。"

msgid "Base Class Library"
msgstr "基礎類別函式庫 - Base Class Library"

msgid ""
"The export templates must also include the BCL (Base Class Library) for each "
"target platform. Godot looks for the BCL folder at ``<templates>/bcl/"
"<target_platform>``, where ``<target_platform>`` is the same name passed to "
"the SCons ``platform`` option, e.g.: ``<templates>/bcl/windows``, "
"``<templates>/bcl/javascript``."
msgstr ""
"匯出樣板也必須包含用於各個平台的 BCL (基礎類別函式庫, Base Class Library)。"
"Godot 會在 ``<樣板>/bcl/<建置目標平台>`` 內尋找 BCL，其中， ``<建置目標平台"
">`` 為與傳給 SCons ``platform`` 選項相同的名稱，如 ``<樣板>/bcl/windows``, "
"``<樣板>/bcl/javascript`` 。"

msgid "Alternatively, Godot will look for them in the following locations:"
msgstr "除上述路徑外，也可以使用下列路徑，Godot 也會在這些路徑中尋找："

msgid "Android"
msgstr "Android"

msgid "``<templates>/bcl/monodroid``"
msgstr "``<樣板>/bcl/monodroid``"

msgid "iOS"
msgstr "iOS"

msgid "``<templates>/bcl/monotouch``"
msgstr "``<樣板>/bcl/monotouch``"

msgid "WebAssembly"
msgstr "\\ WebAssembly"

msgid "``<templates>/bcl/wasm``"
msgstr "``<樣板>/bcl/wasm``"

msgid "Linux and macOS"
msgstr "Linux 與 macOS"

msgid "``<templates>/bcl/net_4_x``"
msgstr "``<樣板>/bcl/net_4_x``"

msgid "Windows"
msgstr "Windows"

msgid "``<templates>/bcl/net_4_x_win``"
msgstr "``<樣板>/bcl/net_4_x_win``"

msgid ""
"As of now, we're assuming the same BCL profile can be used for both Linux "
"and macOS, but this may change in the future as they're not guaranteed to be "
"the same (as is the case with the Windows BCL)."
msgstr ""
"目前，我們假設可以在 Linux 與 macOS 上使用相同的 BCL 設定檔，但因為設定檔並不"
"能保證相同，因此未來可能會改變 (Windows BCL 也是這樣)。"

msgid ""
"If the target platform is the same as the platform of the Godot editor, then "
"the editor will use the BCL it's running on (``<data_folder>/Mono/lib/"
"mono/4.5``) if it cannot find the BCL in the export templates."
msgstr ""
"若建置目標平台與 Godot 編輯器的平台相同，則編輯器在編輯樣板中找不到 BCL 時會"
"使用目前執行所用的 BCL (``<資料目錄>/Mono/lib/mono/4.5``) 。"

msgid "AOT cross-compilers"
msgstr "AOT 交叉編譯器"

msgid ""
"To perform ahead-of-time (AOT) compilation for other platforms, Godot needs "
"to have access to the Mono cross-compilers for that platform and "
"architecture."
msgstr ""
"若要為其他平台進行 AOT (Ahead-of-Time) 編譯，則 Godot 必須要能存取用於該平台"
"與架構的 Mono 交叉編譯器。"

msgid ""
"Godot will look for the cross-compiler executable in the AOT compilers "
"folder. The location of this folder is ``<data_folder>/Tools/aot-compilers/"
"``."
msgstr ""
"Godot 會在 AOT 編譯器資料夾中尋找跨平台編譯器的執行檔。該資料夾的路徑為 ``<資"
"料目錄>/Tools/aot-compilers/`` 。"

msgid ""
"In order to build the cross-compilers we recommend using these `build "
"scripts <https://github.com/godotengine/godot-mono-builds>`_."
msgstr ""
"若要建置跨平台編譯器，我們建議使用這幾個 `建置腳本 <https://github.com/"
"godotengine/godot-mono-builds>`_ 。"

msgid ""
"After building them, copy the executable to the Godot AOT compilers "
"directory. The executable name is ``<triple>-mono-sgen``, e.g.: ``aarch64-"
"apple-darwin-mono-sgen``."
msgstr ""
"建置完成後，請將執行檔複製至 Godot AOT 編譯器資料夾內。執行檔名稱為 "
"``<triple>-mono-sgen`` ，如 ``aarch64-apple-darwin-mono-sgen`` 。"

msgid "Command-line options"
msgstr "命令行選項"

msgid ""
"The following is the list of command-line options available when building "
"with the Mono module:"
msgstr "下列為在建置 Mono 模組時可用的命令行選項："

msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr "\\ **module_mono_enabled**\\ =yes | **no**"

msgid "Build Godot with the Mono module enabled."
msgstr "開啟 Mono 模組來建置 Godot。"

msgid "**mono_glue**\\ =\\ **yes** | no"
msgstr "\\ **mono_glue**\\ =\\ **yes** | no"

msgid ""
"Whether to include the glue source files in the build and define "
"``MONO_GLUE_DISABLED`` as a preprocessor macro."
msgstr ""
"是否在建置內包含 Glue 原始檔，並將 ``MONO_GLUE_DISABLED`` 定義為預處理巨集。"

msgid "**mono_prefix**\\ =path"
msgstr "**mono_prefix**\\ =路徑"

msgid ""
"Path to the Mono installation directory for the target platform and "
"architecture."
msgstr "用於建置目標平台與架構的 Mono 安裝路徑。"

msgid "**mono_static**\\ =yes | no"
msgstr "\\ **mono_static**\\ =yes | no"

msgid "Whether to link the Mono runtime statically."
msgstr "是否要靜態連結 Mono 執行環境。"

msgid ""
"The default is **yes** for iOS and WASM, and **no** for other platforms."
msgstr "iOS 與 WASM 預設為 **yes** ，其他平台為 **no** 。"

msgid "**copy_mono_root**\\ =yes | **no**"
msgstr "\\ **copy_mono_root**\\ =yes | **no**"

msgid ""
"Whether to copy the Mono framework assemblies and configuration files "
"required by the Godot editor."
msgstr "是否要複製 Godot 編輯器的 Mono 框架組建與組態設定檔。"

msgid "Translation status"
msgstr "翻譯狀態"
