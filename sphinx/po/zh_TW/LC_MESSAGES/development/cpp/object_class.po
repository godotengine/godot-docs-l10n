# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Object class"
msgstr "Object 類別"

msgid ""
"This page describes the C++ implementation of objects in Godot. Looking for "
"the Object class reference? :ref:`Have a look here. <class_Object>`"
msgstr ""
"本頁說明的是 Godot 中 Object 的 C++ 實作。在找 Object 類別的參照文件嗎？ :"
"ref:`請參考這裡。 <class_Object>`"

msgid "General definition"
msgstr "一般性定義"

msgid ""
":ref:`Object <class_object>` is the base class for almost everything. Most "
"classes in Godot inherit directly or indirectly from it. Objects provide "
"reflection and editable properties, and declaring them is a matter of using "
"a single macro like this."
msgstr ""
":ref:`Object <class_object>` 幾乎是所有東西的基礎類別。在 Godot 中幾乎所有的"
"類別都是直接或間接地繼承 Object。Object 提供了反射 (Reflection) 與可編輯的屬"
"性，而定義 Object 就只需要像這樣呼叫單一巨集即可。"

msgid "This makes Objects gain a lot of functionality, like for example"
msgstr "這樣一來可以讓 Object 有更多的功能，如"

msgid "References:"
msgstr "參考資料："

#, fuzzy
msgid ""
"`core/object.h <https://github.com/godotengine/godot/blob/3.x/core/object."
"h>`__"
msgstr ""
"\\ `core/object.h <https://github.com/godotengine/godot/blob/master/core/"
"object.h>`__"

msgid "Registering an Object"
msgstr "註冊 Object"

msgid ""
"ClassDB is a static class that holds the entire list of registered classes "
"that inherit from Object, as well as dynamic bindings to all their methods "
"properties and integer constants."
msgstr ""
"ClassDB 是一個靜態類別，其中保存了一組註冊過的類別列表，這些類別都是從 "
"Object 繼承來的。另外，也保存了這些類別所有的方法屬性與整數常數的動態保定。"

msgid "Classes are registered by calling:"
msgstr "類別在呼叫時會被註冊："

msgid ""
"Registering it will allow the class to be instanced by scripts, code, or "
"creating them again when deserializing."
msgstr "註冊後該類別即可通過腳本、程式碼或在復原序列化時重新建立這些類別。"

msgid "Registering as virtual is the same but it can't be instanced."
msgstr "作為虛擬類別註冊也一樣，但這些類別無法被實體化。"

msgid ""
"Object-derived classes can override the static function ``static void "
"_bind_methods()``. When one class is registered, this static function is "
"called to register all the object methods, properties, constants, etc. It's "
"only called once. If an Object derived class is instanced but has not been "
"registered, it will be registered as virtual automatically."
msgstr ""
"從 Object 沿伸而來的類別可以複寫靜態函式 ``static void _bind_methods()`` 。當"
"某個類別被註冊後，會呼叫該靜態方法來註冊所有物件方法、屬性與常數…等。該方法只"
"會被呼叫一次。若某個由 Object 沿伸來的類別被實體化，但尚未進行註冊的話，該類"
"別會自動被虛擬地進行註冊。"

msgid ""
"Inside ``_bind_methods``, there are a couple of things that can be done. "
"Registering functions is one:"
msgstr "在 ``_bind_methods`` 中可做一些事。其中一項便是註冊函式："

msgid "Default values for arguments can be passed in reverse order:"
msgstr "引數的預設值可以通過相反的順序來傳遞："

msgid ""
"``D_METHOD`` is a macro that converts \"methodname\" to a StringName for "
"more efficiency. Argument names are used for introspection, but when "
"compiling on release, the macro ignores them, so the strings are unused and "
"optimized away."
msgstr ""
"``D_METHOD`` 是用來更有效率地將「methodname」轉換到 StringName 的巨集。引數名"
"稱只是用來自我檢查的，在進行釋出編譯時，該巨集會忽略這些引數名稱，這樣一來這"
"個字串就不會被使用並被進行最佳化。"

msgid "Check ``_bind_methods`` of Control or Object for more examples."
msgstr "更多範例請參考 Control 或 Object 的 ``_bind_methods``。"

msgid ""
"If just adding modules and functionality that is not expected to be "
"documented as thoroughly, the ``D_METHOD()`` macro can safely be ignored and "
"a string passing the name can be passed for brevity."
msgstr ""
"如果只是要新增沒有要加到說明文件裡的模組與功能時，則將 ``D_METHOD()`` 巨集忽"
"略掉也沒關係，然後使用字串來傳遞名稱來讓程式碼更簡潔。"

#, fuzzy
msgid ""
"`core/class_db.h <https://github.com/godotengine/godot/blob/3.x/core/"
"class_db.h>`__"
msgstr ""
"\\ `core/class_db.h <https://github.com/godotengine/godot/blob/master/core/"
"class_db.h>`__"

msgid "Constants"
msgstr "常數"

msgid "Classes often have enums such as:"
msgstr "類別通常也有如下列舉類型："

msgid ""
"For these to work when binding to methods, the enum must be declared "
"convertible to int, for this a macro is provided:"
msgstr ""
"如果要讓列舉類型能繫結到方法上，則必須將列舉類型定義為可轉換為 Int 的形式，為"
"此，可使用這個巨集："

msgid "The constants can also be bound inside ``_bind_methods``, by using:"
msgstr "這些常數也可以在 ``_bind_methods`` 中繫結，使用："

msgid "Properties (set/get)"
msgstr "屬性 (Set/Get)"

msgid "Objects export properties, properties are useful for the following:"
msgstr "Object 可匯出屬性，屬性適用於下列情況："

msgid "Serializing and deserializing the object."
msgstr "序列化與復原序列化物件。"

msgid "Creating a list of editable values for the Object derived class."
msgstr "為由 Object 衍生類別建立一組可編輯數值的列表。"

msgid ""
"Properties are usually defined by the PropertyInfo() class. Usually "
"constructed as:"
msgstr "屬性通常是通過 PropertyInfo() 類別定義的。結構通常如下："

msgid "For example:"
msgstr "如："

msgid ""
"This is an integer property, named \"amount\", hint is a range, range goes "
"from 0 to 49 in steps of 1 (integers). It is only usable for the editor "
"(edit value visually) but won't be serialized."
msgstr ""
"這個範例中製作了一個整數屬性，名為「amount」，Hint 則為一個範圍 (range)，為 "
"0 值 49 且間隔為 1 的值 (整數)。Hint 只會用於編輯器 (用於進行視覺化編輯)，而"
"不會被序列化。"

msgid "Another example:"
msgstr "另一個範例："

msgid ""
"This is a string property, can take any string but the editor will only "
"allow the defined hint ones. Since no usage flags were specified, the "
"default ones are PROPERTY_USAGE_STORAGE and PROPERTY_USAGE_EDITOR."
msgstr ""
"這個範圍是一個字串屬性，其中可以保存任何字串，但編輯器只允許使用在 Hint 中定"
"義的值。由於沒有指定使用旗標 (Usage Flag)，預設的旗標為 "
"PROPERTY_USAGE_STORAGE 與 PROPERTY_USAGE_EDITOR。"

msgid ""
"There are plenty of hints and usage flags available in object.h, give them a "
"check."
msgstr "在 object.h 中還有許多可使用的 Hint 與使用旗標，請參考該檔案瞭解詳情。"

msgid ""
"Properties can also work like C# properties and be accessed from script "
"using indexing, but this usage is generally discouraged, as using functions "
"is preferred for legibility. Many properties are also bound with categories, "
"such as \"animation/frame\" which also make indexing impossible unless using "
"operator []."
msgstr ""
"屬性的運作也與 C# 屬性類似，且能在腳本中通過索引進行存取，但這種使用方法並不"
"推薦，建議使用函式來提升可讀性。許多屬性也會與分類互相關連，如「animation/"
"frame (動畫/幀)」，這時候除非使用 [] 運算元，否則將無法使用索引來存取。"

msgid ""
"From ``_bind_methods()``, properties can be created and bound as long as set/"
"get functions exist. Example:"
msgstr ""
"在 ``_bind_methods()`` 中，只要有 set/get 函式就能建立屬性並進行繫結。如："

msgid "This creates the property using the setter and the getter."
msgstr "這個範例會通過該 Setter 與 Getter 來建立屬性。"

msgid "Binding properties using ``_set``/``_get``/``_get_property_list``"
msgstr "使用 ``_set``/``_get``/``_get_property_list`` 來繫結屬性"

msgid ""
"An additional method of creating properties exists when more flexibility is "
"desired (i.e. adding or removing properties on context)."
msgstr ""
"當有需要更大的靈活性時 (如依據上下文來新增或移除屬性)，還有另一個方法可以用來"
"建立屬性。"

msgid ""
"The following functions can be overridden in an Object derived class, they "
"are NOT virtual, DO NOT make them virtual, they are called for every "
"override and the previous ones are not invalidated (multilevel call)."
msgstr ""
"下列函式可以在由 Object 衍生來的物件中複寫，這些方法 **並非** 虛擬方法，**請"
"勿** 將這些方法宣告為虛擬方法，因為這些方法會在每次複寫時被呼叫，而母級類別中"
"的方法並不會失效 (多層呼叫)。"

msgid ""
"This is also a little less efficient since ``p_property`` must be compared "
"against the desired names in serial order."
msgstr ""
"這種做法也比較沒效率，因為 ``p_property`` 必須要依照順序比較所需的名稱。"

msgid "Dynamic casting"
msgstr "動態型別轉換"

msgid ""
"Godot provides dynamic casting between Object-derived classes, for example:"
msgstr "Godot 提供了在 Object 衍生類別間轉換型別的方法，如："

msgid ""
"If cast fails, NULL is returned. This system uses RTTI, but it also works "
"fine (although a bit slower) when RTTI is disabled. This is useful on "
"platforms where a small binary size is ideal, such as HTML5 or consoles "
"(with low memory footprint)."
msgstr ""
"若轉換型別失敗，會回傳 NULL。該系統使用 RTTI，但當 RTTI 禁用時也可以使用 (雖"
"然會比較慢)。這種做法適用於在需要減少二進位大小的平台上，如 HTML5 或遊戲主機 "
"(有較少使用記憶體)。"

msgid "Signals"
msgstr "訊號"

msgid ""
"Objects can have a set of signals defined (similar to Delegates in other "
"languages). Connecting to them is rather easy:"
msgstr ""
"物件可以定義一系列的訊號 (類似其他語言中的 Delegate)。要連接訊號也很簡單："

msgid ""
"The method ``_node_entered_tree`` must be registered to the class using "
"``ClassDB::bind_method`` (explained before)."
msgstr ""
"``_node_entered_tree`` 方法必須要通過 ``ClassDB::bind_method`` 來註冊 (稍後會"
"說明)。"

msgid ""
"Adding signals to a class is done in ``_bind_methods``, using the "
"``ADD_SIGNAL`` macro, for example:"
msgstr ""
"通過 ``_bind_methods`` 來將訊號加至類別中，使用 ``ADD_SIGNAL`` 巨集，如："

msgid "Notifications"
msgstr "通知"

#, fuzzy
msgid ""
"All objects in Godot have a :ref:`_notification "
"<class_Object_method__notification>` method that allows it to respond to "
"engine level callbacks that may relate to it. More information can be found "
"on the :ref:`doc_godot_notifications` page."
msgstr ""
"Godot 中每個物件都實作了一個 :ref:`_notification "
"<class_Object_method__notification>` 。這個方法的目的是要讓 Object 物件能回應"
"各種來自引擎層級，與該物件有關的回呼。舉例來說，若引擎告要叫 :ref:"
"`CanvasItem <class_CanvasItem>` 進行「繪製 (draw)」，則引擎就會呼叫 "
"``_notification(NOTIFICATION_DRAW)`` 。"

msgid "References"
msgstr "參照"

msgid ""
":ref:`Reference <class_reference>` inherits from Object and holds a "
"reference count. It is the base for reference counted object types. "
"Declaring them must be done using Ref<> template. For example:"
msgstr ""
":ref:`Reference <class_reference>` 是從 Object 繼承來的，內涵了參照計數。該類"
"別為參照計數物件型別的基礎類別。要定義 Reference，必須要使用 Ref<> 樣板。如："

msgid ""
"``myref`` is reference counted. It will be freed when no more Ref<> "
"templates point to it."
msgstr ""
"``myref`` 有進行參照計數。該變數會在沒有任何 Ref<> 樣板指向這個變數時釋放。"

#, fuzzy
msgid ""
"`core/reference.h <https://github.com/godotengine/godot/blob/3.x/core/"
"reference.h>`__"
msgstr ""
"\\ `core/reference.h <https://github.com/godotengine/godot/blob/master/core/"
"reference.h>`__"

msgid "Resources:"
msgstr "資源："

msgid ""
":ref:`Resource <class_resource>` inherits from Reference, so all resources "
"are reference counted. Resources can optionally contain a path, which "
"reference a file on disk. This can be set with ``resource.set_path(path)``. "
"This is normally done by the resource loader though. No two different "
"resources can have the same path, attempt to do so will result in an error."
msgstr ""
":ref:`Resource <class_resource>` 繼承自 Reference，因此所有資源都是參照計數"
"的。資源可以選擇是否要包含路徑，用來參照到硬碟上的檔案。要包含路徑，可以通過 "
"``resource.set_path(path)`` 來設定，但設定路徑通常是由資源加載器來進行的。兩"
"個不同的資源不能具有相同的路徑，如果設定了相同路徑會發生錯誤。"

msgid "Resources without a path are fine too."
msgstr "資源也可以不包含路徑。"

#, fuzzy
msgid ""
"`core/resource.h <https://github.com/godotengine/godot/blob/3.x/core/"
"resource.h>`__"
msgstr ""
"\\ `core/resource.h <https://github.com/godotengine/godot/blob/master/core/"
"resource.h>`__"

msgid "Resource loading"
msgstr "載入資源"

msgid "Resources can be loaded with the ResourceLoader API, like this:"
msgstr "可以通過 ResourceLoader API 來載入資源，如："

msgid ""
"If a reference to that resource has been loaded previously and is in memory, "
"the resource loader will return that reference. This means that there can be "
"only one resource loaded from a file referenced on disk at the same time."
msgstr ""
"如果之前已經有加載過該資源的參照，且該參照仍在記憶體中的話，則資源加載器會直"
"接回傳該參照。者表示，參照到硬碟上同一個檔案的資源一次只能被加載一次。"

msgid "resourceinteractiveloader (TODO)"
msgstr "\\ resourceinteractiveloader (TODO)"

#, fuzzy
msgid ""
"`core/io/resource_loader.h <https://github.com/godotengine/godot/blob/3.x/"
"core/io/resource_loader.h>`__"
msgstr ""
"\\ `core/io/resource_loader.h <https://github.com/godotengine/godot/blob/"
"master/core/io/resource_loader.h>`__"

msgid "Resource saving"
msgstr "保存資源"

msgid "Saving a resource can be done with the resource saver API:"
msgstr "可以通過 ResourceSaver API 來保存資源："

#, fuzzy
msgid ""
"Instance will be saved. Sub resources that have a path to a file will be "
"saved as a reference to that resource. Sub resources without a path will be "
"bundled with the saved resource and assigned sub-IDs, like ``res://"
"someresource.res::1``. This also helps to cache them when loaded."
msgstr ""
"這個範例會保存資源實體。擁有檔案路徑的子資源會被作為參照保存在該資源中。而沒"
"有路徑的子資源則會被捆綁在保存的資源中，並分配一個 Sub-ID，如「res://"
"someresource.res::1」。這樣一來有助於在載入時進行快取。"

#, fuzzy
msgid ""
"`core/io/resource_saver.h <https://github.com/godotengine/godot/blob/3.x/"
"core/io/resource_saver.h>`__"
msgstr ""
"\\ `core/io/resource_saver.h <https://github.com/godotengine/godot/blob/"
"master/core/io/resource_saver.h>`__"

msgid "Translation status"
msgstr "翻譯狀態"
