# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Qt Creator"
msgstr "\\ Qt Creator"

msgid ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ is a free, open "
"source IDE for all desktop platforms."
msgstr ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ 是免費且可用於所有桌面"
"平台的開放原始碼 IDE。"

msgid "Importing the project"
msgstr "匯入專案"

msgid ""
"From the Qt Creator's main screen select **New Project > Import Project > "
"Import Existing Project**."
msgstr ""
"在 Qt Creator 的主畫面中選擇 **New Project > Import Project > Import "
"Existing Project** 。"

msgid "Under **Location** select the Godot root folder."
msgstr "在 **Location** 中，選擇 Godot 的根目錄。"

msgid ""
"Next, you can choose which folders and files will be visible to the project. "
"While C/C++ files are added automatically, other extensions can be "
"potentially useful: ``*.glsl`` for shader files, ``*.py`` for buildsystem "
"files, ``*.java`` for Android platform development, ``*.mm`` for macOS "
"platform development."
msgstr ""
"接著，可以選擇哪些資料夾於檔案要在專案中可見。雖然 C/C++ 檔案會自動新增，但也"
"可以新增其他有用的副檔名，如： 著色器檔案 ``*.glsl`` 、建置系統檔案 ``*."
"py`` 、用於 Android 平台開發的 ``*.java`` 、用於 macOS 平台開發的 ``*.mm`` 。"

msgid ""
"You can change this configuration later by right-clicking on your project "
"and selecting the **Edit Files...** option."
msgstr "之後還能通過右鍵點擊專案並選擇 **Edit Files...** 選項來更改此一設定。"

msgid "Finish the import."
msgstr "完成匯入。"

msgid ""
"Open the ``project_name.includes`` file and add a line containing ``.`` to "
"it to correctly enable the code completion."
msgstr ""
"開啟 ``project_name.includes`` 檔案，並新增一行包含 ``.`` 的內容來正確啟用程"
"式碼補全。"

msgid "From the left-side menu select **Projects** and open the **Build** tab."
msgstr "在左側選單中選擇 **Projects** 然後開啟 **Build** 分頁。"

msgid "Delete the predefined ``make`` build step."
msgstr "刪除預設的 ``make`` 建置設定。"

msgid ""
"Click **Add Build Step > Custom Process Step** to add a new build step with "
"the following settings:"
msgstr ""
"點擊 **Add Build Step > Custom Process Step** 來新增一個新的建置步驟，並填入"
"下列設定："

msgid "Command"
msgstr "Command"

msgid "**scons**"
msgstr "\\ **scons**"

msgid "Arguments"
msgstr ""

msgid ""
"See :ref:`doc_introduction_to_the_buildsystem` for a full list of arguments."
msgstr ""
"有關完整的引數列表，請參考 :ref:`doc_introduction_to_the_buildsystem` 。"

msgid ""
"If the build fails with ``Could not start process \"scons\"``, it can mean "
"that ``scons`` is not in your ``PATH`` environment variable. In this case, "
"you'll have to specify the full path to the SCons binary."
msgstr ""
"若建置時出現如 ``Could not start process \"scons\"`` 這樣的錯誤，則代表 "
"``scons`` 不在 ``PATH``環境變數中。這時，則必須要指定 SCons 二進位檔的完整路"
"徑。"

msgid "Debugging the project"
msgstr "對專案進行除錯"

msgid "From the left-side menu select **Projects** and open the **Run** tab."
msgstr "在左側選單中選擇 **Projects** 並開啟 **Run** 分頁。"

msgid ""
"Under **Executable** specify the path to your executable located in the "
"``<Godot root directory>/bin`` folder. The name depends on your build "
"configuration, e.g. ``godot.x11.tools.64`` for 64-bit X11 platform with "
"``tools`` enabled. You can use ``%{buildDir}`` to reference the project "
"root, e.g: ``%{buildDir}/bin/godot.x11.opt.tools.64``."
msgstr ""
"在 **Executable** 中指定位於 ``<Godot 根目錄>/bin`` 資料夾中的可執行檔。該執"
"行檔的名稱會依據建置設定而有所不同，如有開啟 ``tools`` 的 64 位元 X11 版為 "
"``godot.x11.tools.64`` 。可以使用 ``%{buildDir}`` 來參照專案根目錄，如 "
"``%{buildDir}/bin/godot.x11.opt.tools.64`` 。"

msgid ""
"If you want to run a specific project, specify its root folder under "
"**Working directory**."
msgstr "若想執行特定專案，請在 **Working directory** 中指定專案的根目錄。"

msgid ""
"If you want to run the editor, add ``-e`` to the **Command line arguments** "
"field."
msgstr "若想執行編輯器，請將 ``-e`` 新增至 **Command line arguments** 欄位中。"

msgid ""
"To learn more about command line arguments, refer to the :ref:`command line "
"tutorial <doc_command_line_tutorial>`."
msgstr ""
"更多有關命令行引數的資訊，請參考 :ref:`命令行教學 "
"<doc_command_line_tutorial>` 。"

msgid "Code style configuration"
msgstr "程式碼樣式設定"

msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and the IDE should help them follow it. By "
"default, Qt Creator uses spaces for indentation which doesn't match the "
"Godot code style guidelines. You can change this behavior by changing the "
"**Code Style** in **Tools > Options > C++**."
msgstr ""
"開發人員必須要遵守專案的 :ref:`程式碼樣式 <doc_code_style_guidelines>` ，而 "
"IDE 則可以協助開發人員遵守此一樣式規範。預設情況下，Qt Creator 會使用空格來進"
"行縮排，這樣的設定於 Godot 的程式碼樣式準則並不相符。可以在 **Tools > "
"Options > C++** 中修改 **Code Style** 來更改此一行為。"

msgid ""
"Click on **Edit** to change the current settings, then click on **Copy Built-"
"in Code Style** button to set a new code style. Set a name for it (e.g. "
"Godot) and change the Tab policy to be **Tabs Only**."
msgstr ""
"點擊 **Edit** 來更改目前的設定，然後點擊 **Copy Built-in Code Style** 按鈕來"
"設定新程式碼樣式。為該樣式設定名稱 (如 Godot) 然後更改 Tab 政策為 **Tabs "
"Only** 。"

msgid ""
"If you run into any issues, ask for help in one of `Godot's community "
"channels <https://godotengine.org/community>`__."
msgstr ""
"若遇到任何問題，請在 `任何一個 Godot 的社群頻道 <https://godotengine.org/"
"community>`__ 中尋求幫助。"

msgid "Translation status"
msgstr "翻譯狀態"
