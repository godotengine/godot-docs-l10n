# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom AudioStreams"
msgstr "自定 AudioStream"

msgid "Introduction"
msgstr "簡介"

msgid ""
"AudioStream is the base class of all audio emitting objects. "
"AudioStreamPlayer binds onto an AudioStream to emit PCM data into an "
"AudioServer which manages audio drivers."
msgstr ""
"AudioStream 是所有音訊發射物件的基礎類別。AudioStreamPlayer 繫結到 "
"AudioStream 上，以將 PCM 資料發射至 AudioServer 內。AudioServer 則負責管理音"
"訊驅動程式。"

msgid ""
"All audio resources require two audio based classes: AudioStream and "
"AudioStreamPlayback. As a data container, AudioStream contains the resource "
"and exposes itself to GDScript. AudioStream references its own internal "
"custom AudioStreamPlayback which translates AudioStream into PCM data."
msgstr ""
"所有的音訊資源都需要兩個音訊基礎類別：AudioStream 與 AudioStreamPlayback。作"
"為資料容器，AudioStream 包含了音訊資源，並會將其自身暴露給 GDScript。"
"AudioStream 也會將其自身參照到內部的自定 AudioStreamPlayback，用來將 "
"AudioStream 翻譯至 PCM 資料。"

msgid ""
"This guide assumes the reader knows how to create C++ modules. If not, refer "
"to this guide :ref:`doc_custom_modules_in_c++`."
msgstr ""
"本篇指南假設讀者已瞭解如何建立 C++ 模組。否則，請先參考這篇指南： :ref:"
"`doc_custom_modules_in_c++` 。"

msgid "References:"
msgstr "參考資料："

msgid ""
"`servers/audio/audio_stream.h <https://github.com/godotengine/godot/blob/"
"master/servers/audio/audio_stream.h>`__"
msgstr ""
"\\ `servers/audio/audio_stream.h <https://github.com/godotengine/godot/blob/"
"master/servers/audio/audio_stream.h>`__"

msgid ""
"`scene/audio/audioplayer.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/audio/audio_player.cpp>`__"
msgstr ""
"\\ `scene/audio/audioplayer.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/audio/audio_player.cpp>`__"

msgid "What for?"
msgstr "可以做什麼？"

msgid "Binding external libraries (like Wwise, FMOD, etc)."
msgstr "繫結外部函式庫 (如 Wwise, FMOD…等)。"

msgid "Adding custom audio queues"
msgstr "新增自定音訊佇列"

msgid "Adding support for more audio formats"
msgstr "新增更多音訊格式的支援"

msgid "Create an AudioStream"
msgstr "建立 AudioStream"

msgid ""
"An AudioStream consists of three components: data container, stream name, "
"and an AudioStreamPlayback friend class generator. Audio data can be loaded "
"in a number of ways such as with an internal counter for a tone generator, "
"internal/external buffer, or a file reference."
msgstr ""
"AudioStream 由三個元件組成：資料容器、串流名稱以及 AudioStreamPlayback 友類產"
"生器 (Friend Class Generator)。音訊資料可以通過數種方式載入，如用於音調產生器"
"的內部計數器、內／外部緩衝區或檔案參照。"

msgid ""
"Some AudioStreams need to be stateless such as objects loaded from "
"ResourceLoader. ResourceLoader loads once and references the same object "
"regardless how many times ``load`` is called on a specific resource. "
"Therefore, playback state must be self-contained in AudioStreamPlayback."
msgstr ""
"有的 AudioStream 必須要是無狀態的，如由 ResourceLoader 載入的物件。"
"ResourceLoader 會載入一次，然後無論對特定資源呼叫多少次 ``load`` ，都會參照到"
"相同的物件上。因此，播放狀態必須要在 AudioStreamPlayback 內自封閉。"

msgid "Create an AudioStreamPlayback"
msgstr "建立 AudioStreamPlayback"

msgid ""
"AudioStreamPlayer uses ``mix`` callback to obtain PCM data. The callback "
"must match sample rate and fill the buffer."
msgstr ""
"AudioStreamPlayer 使用 ``mix`` 回呼來取得 PCM 資料。該回呼必須要符合採樣率，"
"並填充緩衝區。"

msgid ""
"Since AudioStreamPlayback is controlled by the audio thread, i/o and dynamic "
"memory allocation are forbidden."
msgstr ""
"由於 AudioStreamPlayback 是由音訊執行緒控制的，因此不可進行 I/O 與動態記憶體"
"分配。"

msgid "Resampling"
msgstr "重新採樣"

msgid ""
"Godot's AudioServer currently uses 44100 Hz sample rate. When other sample "
"rates are needed such as 48000, either provide one or use "
"AudioStreamPlaybackResampled. Godot provides cubic interpolation for audio "
"resampling."
msgstr ""
"Godoto 的 AudioServer 目前使用 44100 Hz 的採樣率。當需要其他如 48000 的採樣率"
"時，則必須要主動提供採樣率，或是使用 AudioStreamPlaybackResampled。Godot 提供"
"了三次方內插補點 (Cubic Interpolation) 用於音訊重新採樣。"

msgid ""
"Instead of overloading ``mix``, AudioStreamPlaybackResampled uses "
"``_mix_internal`` to query AudioFrames and ``get_stream_sampling_rate`` to "
"query current mix rate."
msgstr ""
"AudioStreamPlaybackResampled 不是複寫 ``mix`` ，而是使用 ``_mix_internal`` 來"
"查詢 AudioFrame，並使用 ``get_stream_sampling_rate`` 來查詢目前的混合率。"

msgid ""
"`core/math/audio_frame.h <https://github.com/godotengine/godot/blob/master/"
"core/math/audio_frame.h>`__"
msgstr ""
"\\ `core/math/audio_frame.h <https://github.com/godotengine/godot/blob/"
"master/core/math/audio_frame.h>`__"

msgid "Translation status"
msgstr "翻譯狀態"
