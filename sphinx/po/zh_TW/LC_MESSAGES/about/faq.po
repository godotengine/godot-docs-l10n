# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "FAQ"
msgstr "常見問題"

msgid "Frequently asked questions"
msgstr "常見問題"

msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr "Godot 可以做什麼？要花多少錢？授權條款是什麼？"

msgid ""
"Godot is `Free and Open-Source Software <https://en.wikipedia.org/wiki/"
"Free_and_open-source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godot 是 `自由且開放原始碼的軟體 <https://zh.wikipedia.org/zh-tw/"
"%E8%87%AA%E7%94%B1%E5%8F%8A%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6>`_，"
"以 `由開放原始碼促進協會 (OSI) 所認可的 <https://opensource.org/licenses/"
"MIT>`_ MIT 授權條款釋出。而這裡所指的 Free 就如同「言論自由」與「免費啤酒」的"
"「Free」一樣。"

msgid "In short:"
msgstr "簡單來說："

msgid ""
"You are free to download and use Godot for any purpose: personal, non-"
"profit, commercial, or otherwise."
msgstr "你可以自由下載與使用 Godot，並可用於個人、非盈利或商業性等任何目的。"

msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr ""
"不論理由為何、不管有沒有商業目的，都可以根據需求自由修改、發佈、再發佈，或是"
"重組 Godot。"

msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"這份文件所有內容都以寬鬆的創用CC—姓名標示 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0>`_) 授權條款發佈，作者標示為「Juan "
"Linietsky, Ariel Manzur 與 Godot Engine 社群」。"

msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"Logo 與圖示基本上也是用同一個創用 CC 條款授權。但請注意，Godot 原始碼所包含的"
"一些第三方函式庫可能使用了不同的授權條款。"

msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE."
"txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ "
"files in the Godot repository."
msgstr ""
"詳細資訊請參考 Godot 原始碼 Repository 中的 `COPYRIGHT.txt <https://github."
"com/godotengine/godot/blob/master/COPYRIGHT.txt>`_, `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ 與 `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_。"

msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"另外，也請參考 `Godot 網站上的授權條款頁面 (英文) <https://godotengine.org/"
"license>`_。"

msgid "Which platforms are supported by Godot?"
msgstr "Godot 支援哪些平台？"

msgid "**For the editor:**"
msgstr "**編輯器：**"

msgid "Windows"
msgstr "Windows"

msgid "macOS"
msgstr "macOS"

msgid "X11 (Linux, \\*BSD)"
msgstr "X11 (Linux, \\*BSD)"

msgid ":ref:`Web <doc_using_the_web_editor>`"
msgstr ":ref:`Web <doc_using_the_web_editor>`"

msgid "Android (experimental)"
msgstr "Android (實驗性)"

msgid "**For exporting your games:**"
msgstr "**匯出遊戲：**"

msgid "Windows (and UWP)"
msgstr "Windows (以及 UWP)"

msgid "Android"
msgstr "Android"

msgid "iOS"
msgstr "iOS"

msgid "Web"
msgstr "Web"

msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default."
msgstr "預設使用 64 位元，依情況可同時支援 32 位元與 64 位元的執行檔。"

msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr ""
"部分使用者也在基於 ARM 的 Linux 系統上成功使用 Godot，如 Raspberry Pi。"

msgid ""
"Additionally, there is some unofficial third-party work being done on "
"building for some consoles. However, none of this is included in the default "
"build scripts or export templates at this time."
msgstr ""
"此外，也有些非官方的第三方組織成功將遊戲匯出到主機平台上。不過，預設的建構腳"
"本和匯出模板都並不包含這些平台。"

msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"有關匯出遊戲的詳細資訊請參考 :ref:`匯出 <toc-learn-workflow-export>` 與 :ref:"
"`自行編譯 Godot <toc-devel-compiling>` 章節。"

msgid "Which programming languages are supported in Godot?"
msgstr "Godot 支援哪些程式語言？"

msgid ""
"The officially supported languages for Godot are GDScript, Visual Scripting, "
"C#, and C++. See the subcategories for each language in the :ref:`scripting "
"<toc-learn-scripting>` section."
msgstr ""
"Godot 正式支援的語言有 GDScript、視覺腳本 (Visual Script)、C# 與 C++。請參"
"考 :ref:`撰寫腳本 <toc-learn-scripting>` 章節中關於各個語言的子分類。"

msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"不論你是剛開始使用 Godot，或是剛開始進行遊戲開發，都推薦使用 GDScript，因為 "
"GDScript 是 Godot 的原生語言。雖然腳本語言的效能遠比低階程式語言還低，但在原"
"型設計 (Prototype)、最小可行產品 (MVP, Minimun Viable Product) 或是專注於上市"
"時間 (TTM) 的開發上，GDScript 對於開發遊戲來說是一個快速友好、可靠的選擇。"

msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. Our friendly and hard-working development "
"community is always ready to tackle new problems as they arise, but since "
"this is an open-source project, we recommend that you first do some due "
"diligence yourself. Searching through discussions on `open issues <https://"
"github.com/godotengine/godot/issues>`_ is a great way to start your "
"troubleshooting."
msgstr ""
"請注意，C# 的支援仍然相對較新，因此在使用時可能會遇到一些問題。友好勤奮的開發"
"社群隨時都準備好解決新遇到的問題。但由於 Godot 是開源專案，我們建議你先自己排"
"解問題。不妨搜尋 `未解決的 Issue <https://github.com/godotengine/godot/"
"issues>`_ 中的討論來排解疑難。"

msgid ""
"As for new languages, support is possible via third parties using the "
"GDNative / NativeScript / PluginScript facilities. (See the question about "
"plugins below.) Work is currently underway, for example, on unofficial "
"bindings for Godot to `Python <https://github.com/touilleMan/godot-python>`_ "
"and `Nim <https://github.com/pragmagic/godot-nim>`_."
msgstr ""
"更多語言可以通過 GDNative / NativeScript / PluginScript 搭配第三方套件來支"
"援。(詳細請參考下列關於外掛的問答。) 目前有些正在開發的非官方語言綁定專案如 "
"`Python <https://github.com/touilleMan/godot-python>`_ 與 `Nim <https://"
"github.com/pragmagic/godot-nim>`_ 。"

msgid "What is GDScript and why should I use it?"
msgstr "GDScript 是什麼？為什麼要用 GDScript？"

msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before then you'll feel right at home. For examples, history, "
"and a complete overview of the power GDScript offers you, check out the :ref:"
"`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScript 是與 Godot 整合的腳本語言。是為了以最少的程式碼發揮 Godot 最大的潛能"
"而從 0 打造的，同時也能讓不論新手或專業開發者都能儘可能快速地駕馭 Godot 優"
"勢。若你曾經使用過如 Python 之類的語言，肯定也能快速上手 GDScript。請參考 :"
"ref:`GDScript 腳本編寫指南 <doc_gdscript>` 取得範例程式碼、歷史、以及 "
"GDScript 功能的完整簡介。"

msgid ""
"There are several reasons to use GDScript--especially when you are "
"prototyping, in alpha/beta stages of your project, or are not creating the "
"next AAA title--but the most salient reason is the overall **reduction of "
"complexity**."
msgstr ""
"使用 GDScript 有不少原因——尤其是在進行原型設計、在專案的 alpha/beta 階段、或"
"者專案非 3A 大作——但最大的優勢就是整體\\ **複雜度降低**\\ 。"

msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core--rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"最開始會想從頭客製化一個與 Godot 深度整合的腳本語言主要有兩個原因：首先，自己"
"做的語言做可以降低程式在 Godot 內的啟動與執行時間，能讓開發者更快上手引擎並專"
"注於產品開發；再來，也能降低維護成本與避免遇到複雜問題，讓引擎開發者能專心找"
"出 Bug 並提升引擎核心功能，而不是花一堆時間支援一大堆語言結果只獲得一小撮新功"
"能。"

msgid ""
"Since Godot is an open-source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages--"
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and rapid your development becomes, we think "
"GDScript will grow on you."
msgstr ""
"由於 Godot 是一個開源專案，所以我們的首要考量是更好的整合性與無縫的體驗，而不"
"是支援有名的程式語言來吸引使用者。尤其支援有名的語言卻可能讓使用體驗變得很糟"
"糕。我們瞭解你會想在 Godot 裡使用其他語言 (請參考下方的支援選項列表)。但其"
"實，如果你還沒試過 GDScript，請試著用用看 **三天**。就像 Godot，一旦瞭解到 "
"GDScript 厲害到能讓開發變得更快速，你肯定會愛上 GDScript 的。"

msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"請參考 :ref:`doc_gdscript_more_efficiently` 一文瞭解如何熟悉 GDScript 或動態"
"型別語言的資訊。"

msgid "What were the motivations behind creating GDScript?"
msgstr "創造 GDScript 的動機是什麼？"

msgid ""
"In the early days, the engine used the `Lua <https://www.lua.org>`__ "
"scripting language. Lua is fast, but creating bindings to an object oriented "
"system (by using fallbacks) was complex and slow and took an enormous amount "
"of code. After some experiments with `Python <https://www.python.org>`__, it "
"also proved difficult to embed."
msgstr ""
"剛開始我們是用 `Lua <https://www.lua.org>`__ 腳本語言。Lua 很快，但如果要 (使"
"用 Fallback) 綁定物件導向系統，就變得很複雜而且很慢，也需要寫大量的程式碼。後"
"來我們也試了 `Python <https://www.python.org>`__，但事後證明要把 Python 嵌入"
"引擎有多困難。"

msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "為 Godot 建立一個客製化的腳本語言的主要原因："

msgid ""
"Poor threading support in most script VMs, and Godot uses threads (Lua, "
"Python, Squirrel, JavaScript, ActionScript, etc.)."
msgstr ""
"Godot 需要使用執行緒，但大部分腳本語言 VM 對執行緒的支援都很差。 (Lua, "
"Python, Squirrel, JavaScript, ActionScript …等)。"

msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JavaScript)."
msgstr ""
"大多數腳本語言 VM 都不太支援擴充類別 (Class-extending)，而要在 Godot 上用就會"
"很沒效率。(Lua, Python, JavaScript)。"

msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JavaScript, etc.) We wanted to focus on "
"a great engine, not a great amount of integrations."
msgstr ""
"現存語言的 C++ 綁定界面都很可怕，會導致需要大量的程式碼、Bug、瓶頸、整體上來"
"說變得很沒效率 (Lua, Python, Squirrel, JavaScript…等)。我們想要專心做出好用的"
"引擎，而不是整合一堆東西。"

msgid ""
"No native vector types (vector3, matrix4, etc.), resulting in highly reduced "
"performance when using custom types (Lua, Python, Squirrel, JavaScript, "
"ActionScript, etc.)."
msgstr ""
"沒有原生的 Vector 型別 (vector3, matrix4…等)，導致使用自定型別會大幅降低效能 "
"(Lua, Python, Squirrel, JavaScript, ActionScript…等)。"

msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JavaScript, ActionScript, etc.)."
msgstr ""
"記憶體回收行程 (Garbage Collector) 機制也導致了佔用或使用了大量不必要的記憶"
"體。(Lua, Python, JavaScript, ActionScript…等)。"

msgid ""
"Difficulty to integrate with the code editor for providing code completion, "
"live editing, etc. (all of them). This is well-supported by GDScript."
msgstr ""
"很難在程式碼編輯器中整合程式碼補全或即時編輯…等 (所有的語言都這樣)。而 "
"GDScript 就支援得很好。"

msgid "GDScript was designed to curtail the issues above, and more."
msgstr "GDScript 被設計來解決上述所有的問題，甚至能做得更好。"

msgid "What type of 3D model formats does Godot support?"
msgstr "Godot 支援什麼格式的 3D 模型？"

msgid ""
"Godot supports Collada via the `OpenCollada <https://github.com/KhronosGroup/"
"OpenCOLLADA/wiki/OpenCOLLADA-Tools>`_ exporter (Maya, 3DSMax). If you are "
"using Blender, take a look at our own `Better Collada Exporter <https://"
"godotengine.org/download>`_."
msgstr ""
"Godot 通過 `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`_ Exporter 支援 Collada (Maya, 3DSMax)。若你使用 Blender，"
"請看看我們自己的 `Better Collada Exporter <https://godotengine.org/"
"download>`_。"

msgid "As of Godot 3.0, glTF is supported."
msgstr "自 Godot 3.0 版開始支援 glTF。"

msgid ""
"FBX is supported via the Open Asset Import library. However, FBX is "
"proprietary so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"可以用 Open Asset Import Library 來支援 FBS。然而，由於 FBX 不是開源格式，如"
"果狀況允許的話我們建議使用其他格式。"

msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr "Godot 會支援 [自行帶入 FMOD, GameWorks 等閉源 SDK] 嗎？"

msgid ""
"The aim of Godot is to create a free and open-source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godot 的目標是要建立一個模組化且可擴充的自由開源 MIT 引擎。目前，引擎開發核心"
"社群沒有計劃要支援任何第三方且閉源或專屬 (Proprietary) 的 SDK，因為整合這些 "
"SDK 有違 Godot 的初衷。"

msgid ""
"That said, because Godot is open-source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them--as either open- or closed-source."
msgstr ""
"但其實，因為 Godot 開放原始碼且模組化，所以任何有興趣的人都可以將這些函式庫做"
"成模組，並隨著遊戲一起發佈，不論開源或閉源。"

msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr "我們還是會告訴你你想要的 SDK 的支援程度，請參考下方關於外掛的問題。"

msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open-source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"如果你知道什麼 Godot 不支援但卻是自由且開放原始碼整合的第三方 SDK，你可以考慮"
"自己整合。Godot 不屬於哪個人，而是屬於社群的，而這個社群會成長正是因為有想你"
"一樣野心勃勃的社群貢獻者。"

msgid ""
"How do I install the Godot editor on my system (for desktop integration)?"
msgstr "如何在我的作業系統上安裝 Godot 編輯器（進行桌面整合）？"

msgid ""
"Since you don't need to actually install Godot on your system to run it, "
"this means desktop integration is not performed automatically. There are two "
"ways to overcome this. You can install Godot from `Steam <https://store."
"steampowered.com/app/404790/Godot_Engine/>`__ (all platforms), `Scoop "
"<https://scoop.sh/>`__ (Windows), `Homebrew <https://brew.sh/>`__ (macOS) or "
"`Flathub <https://flathub.org/apps/details/org.godotengine.Godot>`__ "
"(Linux). This will automatically perform the required steps for desktop "
"integration."
msgstr ""
"Godot 實際並不需要在你的作業系統上安裝就能執行，因此不會自動進行桌面整合。解"
"決方式有兩種。您可以透過`Steam <https://store.steampowered.com/app/404790/"
"Godot_Engine/>`__ （全平台）、`Scoop <https://scoop.sh/>`__ （Windows）、"
"`Homebrew <https://brew.sh/>`__\\（macOS）、`Flathub <https://flathub.org/"
"apps/details/org.godotengine.Godot>`__ （Linux）來安裝 Godot。 這樣就會自動執"
"行桌面整合所需的步驟。"

msgid ""
"Alternatively, you can manually perform the steps that an installer would do "
"for you:"
msgstr "另外您也可以手動執行安裝程式會幫您執行的步驟："

msgid ""
"Move the Godot executable to a stable location (i.e. outside of your "
"Downloads folder), so you don't accidentally move it and break the shortcut "
"in the future."
msgstr ""
"將 Godot 可執行檔案移動到一個穩定的位置（即在您的下載資料夾以外），這樣您就不"
"會不小心移動導致破壞快捷啟動方式。"

msgid "Right-click the Godot executable and choose **Create Shortcut**."
msgstr "右鍵點擊 Godot 可執行檔案，選擇 **建立快捷方式** 。"

msgid ""
"Move the created shortcut to ``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``. This is the user-wide location for shortcuts that will "
"appear in the Start menu. You can also pin Godot in the task bar by right-"
"clicking the executable and choosing **Pin to Task Bar**."
msgstr ""
"將創建的快捷方式移動到``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``\\。 這是針對用戶的快捷方式存放位置，會顯示在開始菜單中。 你"
"也可以將Godot固定在工作列上，按右鍵可執行文件並選擇\\ **固定至工作列**\\即"
"可。"

msgid ""
"Drag the extracted Godot application to ``/Applications/Godot.app``, then "
"drag it to the Dock if desired. Spotlight will be able to find Godot as long "
"as it's in ``/Applications`` or ``~/Applications``."
msgstr ""
"將解壓出的Godot應用拖拽至``/Applications/Godot.app``\\，如果需要的話還可以再"
"拖到Dock欄上。 只要Godot在``/Applications``或``~/Applications``中，“聚焦”就能"
"找到它。"

msgid "Linux"
msgstr "Linux"

msgid ""
"Move the Godot binary to a stable location (i.e. outside of your Downloads "
"folder), so you don't accidentally move it and break the shortcut in the "
"future."
msgstr ""
"移動 Godot 二進制檔至穩定的位置（也就是您的下載資料夾之外），這樣的話之後您就"
"可以避免不小心移動它並破壞捷徑。"

msgid ""
"Rename and move the Godot binary to a location present in your ``PATH`` "
"environment variable. This is typically ``/usr/local/bin/godot`` or ``/usr/"
"bin/godot``. Doing this requires administrator privileges, but this also "
"allows you to :ref:`run the Godot editor from a terminal "
"<doc_command_line_tutorial>` by entering ``godot``."
msgstr ""
"重新命名並移動Godot二進制檔至在``PATH``環境變數中出現的位置。通常是``/usr/"
"local/bin/godot``或``/usr/bin/godot``。需要以系統管理員的權限執行該操作，不過"
"這同時允許您在終端機 <doc_command_line_tutorial>`中輸入``godot``以 :ref:`執"
"行 Godot 編輯器。"

msgid ""
"If you cannot move the Godot editor binary to a protected location, you can "
"keep the binary somewhere in your home directory, and modify the ``Path=`` "
"line in the ``.desktop`` file linked below to contain the full *absolute* "
"path to the Godot binary."
msgstr ""
"如果無法將 Godot 編輯器二進制檔移動到受保護的位置，您可以將該二進制檔保存在主"
"目錄中的某個位置，並修改下方連結的 ``.desktop``檔中的``Path=``行以包含 Godot "
"二進位檔的完整 *絕對* 路徑。"

msgid ""
"Save `this .desktop file <https://raw.githubusercontent.com/godotengine/"
"godot/3.x/misc/dist/linux/org.godotengine.Godot.desktop>`__ to ``$HOME/."
"local/share/applications/``. If you have administrator privileges, you can "
"also save the ``.desktop`` file to ``/usr/local/share/applications`` to make "
"the shortcut available for all users."
msgstr ""
"儲存該 .desktop 檔案 <https://raw.githubusercontent.com/godotengine/godot/3."
"x/misc/dist/linux/org.godotengine.Godot.desktop>`__ 至``$HOME/.local/share/"
"applications/``。如果有系統管理員權限，您也可以儲存 ``.desktop``檔至``/usr/"
"local/share/applications``讓所有使用者可以使用該捷徑。"

msgid "Is the Godot editor a portable application?"
msgstr "Godot 編輯器是個免安裝軟體嗎？"

msgid ""
"In its default configuration, Godot is *semi-portable*. Its executable can "
"run from any location (including non-writable locations) and never requires "
"administrator privileges."
msgstr ""
"在預設設置中，Godot是*半可攜式的*。其執行檔可以從任何位置（包括不可寫入的位"
"置）執行並且無需系統管理員權限。"

#, fuzzy
msgid ""
"However, configuration files will be written to the user-wide configuration "
"or data directory. This is usually a good approach, but this means "
"configuration files will not carry across machines if you copy the folder "
"containing the Godot executable. See :ref:`doc_data_paths` for more "
"information."
msgstr ""
"然而設置檔案將被寫入至使用者設置或資料目錄。這通常是好的方法，但這意味著如果"
"您複製含有Godot執行檔的資料夾，設置檔案將無法被攜帶至不同的機器。請參閱 :ref:"
"`doc_data_paths` 以獲得更多資訊。"

#, fuzzy
msgid ""
"If *true* portable operation is desired (e.g. for use on an USB stick), "
"follow the steps in :ref:`doc_data_paths_self_contained_mode`."
msgstr ""
"如果需要*是*可攜式的操作（例如於随身碟上使用），請依循 :ref:"
"`doc_data_paths_self_contained_mode` 中的步驟操作。"

msgid "Why does Godot use Vulkan or OpenGL instead of Direct3D?"
msgstr "為什麼 Godot 要用 Vulkan 與 OpenGL 而不是 Direct3D？"

msgid ""
"Godot aims for cross-platform compatibility and open standards first and "
"foremost. OpenGL and Vulkan are the technologies that are both open and "
"available (nearly) on all platforms. Thanks to this design decision, a "
"project developed with Godot on Windows will run out of the box on Linux, "
"macOS, and more."
msgstr ""
"Godot 的目標是提供跨平台相容性與優先使用開放標準。OpenGL 與 Vulkan 這兩種技術"
"都是開放原始碼且 (幾乎) 可以在所有平台上使用。而得益於此一設計決定，使用 "
"Godot 在 Windows 上開發的專案可以直接在 Linux, macOS 等平台上執行。"

msgid ""
"Since Godot only has a few people working on its renderer, we would prefer "
"having fewer rendering backends to maintain. On top of that, using a single "
"API on all platforms allows for greater consistency with fewer platform-"
"specific issues."
msgstr ""
"由於只有少數人在處理 Godot 的算繪引擎，我們希望能儘量減少工作，不要增加太多需"
"要維護的算繪後端。因此，在所有平台上都使用相同的單一 API 可以讓我們保持更佳的"
"一致性，並減少遇到平台特定的問題。"

msgid ""
"In the long term, we may develop a Direct3D 12 renderer for Godot (mainly "
"for the Xbox's purposes), but Vulkan and OpenGL will remain the default "
"rendering backends on all platforms, including Windows."
msgstr ""
"以長遠的眼光來看，未來我們可能會開發用於 Godot 的 Direct3D 12 算繪引擎 (主要"
"是為了個 Xbox 用)，但在所有平台上，包含 Windows，預設的算繪引擎都會維持 "
"Vulkan 與 OpenGL。"

msgid "Why does Godot aim to keep its core feature set small?"
msgstr "為什麼Godot致力於保持小型的核心功能集？"

#, fuzzy
msgid ""
"Godot intentionally does not include features that can be implemented by add-"
"ons unless they are used very often. One example of this would be advanced "
"artificial intelligence functionality."
msgstr ""
"Godot故意不包括可以由附加元件實現的功能，除非它們經常使用。例如進階人工智慧功"
"能。"

msgid "There are several reasons for this:"
msgstr "這有幾個原因："

#, fuzzy
msgid ""
"**Code maintenance and surface for bugs.** Every time we accept new code in "
"the Godot repository, existing contributors often take the reponsibility of "
"maintaining it. Some contributors don't always stick around after getting "
"their code merged, which can make it difficult for us to maintain the code "
"in question. This can lead to poorly maintained features with bugs that are "
"never fixed. On top of that, the \"API surface\" that needs to be tested and "
"checked for regressions keeps increasing over time."
msgstr ""
"**程式碼維護和 bug 的介面。** 每次我們接受 Godot 儲存庫中的新程式碼時，現有的"
"貢獻者通常會承擔維護它的責任。一些貢獻者在合併程式碼後不一定會堅持下去，這有"
"可能讓我們難以維護有問題的程式碼，以致於功能維護不善，並出現從未修復的錯誤。"
"最重要的是，需要測試和檢查退步的“API介面”隨著時間的推移而不斷增加。"

#, fuzzy
msgid ""
"**Ease of contribution.** By keeping the codebase small and tidy, it can "
"remain fast and easy to compile from source. This makes it easier for new "
"contributors to get started with Godot, without requiring them to purchase "
"high-end hardware."
msgstr ""
"**易於貢獻。**，藉由保持程式碼庫小而整潔可以使編譯原始程式碼快速且容易。這使"
"得新的貢獻者更容易開始使用Godot，而無需購買高級的硬體。"

#, fuzzy
msgid ""
"**Keeping the binary size small for the editor.** Not everyone has a fast "
"Internet connection. Ensuring that everyone can download the Godot editor, "
"extract it and run it in less than 5 minutes makes Godot more accessible to "
"developers in all countries."
msgstr ""
"**為編輯器保持較小的二進位檔大小。**並非每個人都有快速的網路連線。確保每個人"
"都可以在不到5分鐘的時間內下載Godot編輯器，解壓縮並執行它，使所有國家的開發人"
"員都可以更輕鬆地存取Godot。"

#, fuzzy
msgid ""
"**Keeping the binary size small for export templates.** This directly "
"impacts the size of projects exported with Godot. On mobile and web "
"platforms, keeping file sizes low is primordial to ensure fast installation "
"and loading on underpowered devices. Again, there are many countries where "
"high-speed Internet is not readily available. To add to this, strict data "
"usage caps are often in effect in those countries."
msgstr ""
"**為匯出範本保持較小的二進位檔大小。** 這直接影響 Godot 匯出專案的大小。在移"
"動裝置和 Web 平臺上，保持較小的檔案大小對於確保在功率不足的裝置上快速安裝和載"
"入至關重要。相同的，在許多國家中高速網路並不容易獲得。進一步來說，通常這些國"
"家有嚴格的數據使用上限。"

#, fuzzy
msgid ""
"For all the reasons above, we have to be selective of what we can accept as "
"core functionality in Godot. This is why we are aiming to move some core "
"functionality to officially supported add-ons in future versions of Godot. "
"In terms of binary size, this also has the advantage of making you pay only "
"for what you actually use in your project. (In the meantime, you can :ref:"
"`compile custom export templates with unused features disabled "
"<doc_optimizing_for_size>` to optimize the distribution size of your "
"project.)"
msgstr ""
"由於上述所有原因，我們必須選擇我們所可以接受的以作為Godot的核心功能。這就是為"
"什麼我們的目標是將一些核心功能移動到Godot未來版本中官方支援的附加元件。就二進"
"位檔大小而言，這也讓該檔案只需包含您實際使用的功能。（同時，您可以 :ref:`編譯"
"禁用未使用功能的自定義匯出範本<doc_optimizing_for_size>`以優化專案的發佈大"
"小。）"

msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr "要怎麼做出能應付多種解析度與長寬比的素材呢？"

msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"這是一個很常見的問題，可能要感謝 Apple 公司，最開始 Apple 只是把設備的解析度"
"變兩倍，讓大家以為可以直接在不同解析度下用同一個素材，所以許多人就一直這麼"
"做。剛開始這方法在 Apple 的裝置上還行，但不久後就開始出現各種有不同解析度與長"
"寬比的 Android 與 Apple 裝置，而且大小與 DPI 的差異還很大。"

msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D it's just a matter of Camera XFov or "
"YFov."
msgstr ""
"最常見且最恰當的做法就是不管這些，在遊戲中只使用一種的解析度，然後對不同的螢"
"幕長寬比做處理。這主要是 2D 遊戲所需要做的，3D 遊戲中就只是相機的 XFov 或 "
"YFov 的問題而已。"

msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 2K and devices that go down to 400p, regular hardware scaling "
"in your device will take care of this at little or no performance cost. Most "
"common choices are either near 1080p (1920x1080) or 720p (1280x720). Keep in "
"mind the higher the resolution, the larger your assets, the more memory they "
"will take and the longer the time it will take for loading."
msgstr ""
"首先為遊戲選擇一個基本的解析度。就算有的裝置解析度高達 2K，有的則只有 400p，"
"在裝置上做一般的硬體縮放幾乎不怎麼消耗效能。最好的選擇就是接近 1080p "
"(1920x1080) 或 720p (1280x720) 其中一種。但要記得，解析度越高，素材的大小就越"
"大，也就代表要佔用更多的記憶體以及需要更長的載入時間。"

msgid ""
"Use the stretch options in Godot; 2D stretching while keeping aspect ratios "
"works best. Check the :ref:`doc_multiple_resolutions` tutorial on how to "
"achieve this."
msgstr ""
"使用 Godot 的伸縮選項；2D 伸縮在保持長寬比的時候效果最佳。請參考 :ref:"
"`doc_multiple_resolutions` 教學來瞭解如何實現。"

msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"確保最小解析度並決定在不同的長寬比下是要讓遊戲垂直還是水平伸縮，還是要在螢幕"
"旁邊顯示黑條。關於這點進一步的說明請參考 :ref:`doc_multiple_resolutions`。"

msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"使用者界面則請使用 :ref:`錨定 <doc_size_and_anchors>` 來判斷控制元件是要留在"
"原位還是要移動。如果是比較複雜的 UI，建議您瞭解有關容器 (Container) 的內容。"

msgid "And that's it! Your game should work in multiple resolutions."
msgstr "就這樣！現在遊戲應該可以在不同解析度底下運作。"

msgid ""
"If there is a desire to make your game also work on ancient devices with "
"tiny screens (fewer than 300 pixels in width), you can use the export option "
"to shrink images, and set that build to be used for certain screen sizes in "
"the App Store or Google Play."
msgstr ""
"如果希望遊戲在只有小螢幕 (寬度小於 300 像素) 的上古裝置上也能運作，可以使用匯"
"出選項來縮小圖片，並將該建置設為在 AppStore 或 GooglePlay 下特定的螢幕大小。"

msgid "How can I extend Godot?"
msgstr "如何擴充 Godot？"

msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"如製作 Godot 編輯器外掛或是加上其他語言的支援等有關擴充 Godot 的內容，請參"
"考 :ref:`編輯器外掛 <doc_making_plugins>` 與工具腳本。"

msgid "Also, see the official blog posts on these topics:"
msgstr "另外也請參考一下有關下列主題的官方部落格文章："

msgid ""
"`A look at the GDNative architecture <https://godotengine.org/article/look-"
"gdnative-architecture>`_"
msgstr ""
"`GDNative 架構概覽 (英文) <https://godotengine.org/article/look-gdnative-"
"architecture>`_"

msgid "`GDNative is here! <https://godotengine.org/article/dlscript-here>`_"
msgstr ""
"`GDNative 來了！(英文) <https://godotengine.org/article/dlscript-here>`_"

msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `unofficial Python support <https://github.com/touilleMan/"
"godot-python>`_ for Godot. This would be a good starting point to see how "
"another third-party library integrates with Godot."
msgstr ""
"也可以看看 GDScript 的實作，GDScript 只是 Godot 的一個模組，就像 Godot 的 `非"
"官方 Python 支援 <https://github.com/touilleMan/godot-python>`_ 一樣。這是瞭"
"解第三方函式庫要如何整合進 Godot 的一個好的開始。"

msgid "When is the next release of Godot out?"
msgstr "下個版本什麼時候出？"

msgid ""
"When it's ready! See :ref:`doc_release_policy_when_is_next_release_out` for "
"more information."
msgstr ""
"準備好的時候就會出了！更多資訊請參考 :ref:"
"`doc_release_policy_when_is_next_release_out ` 。"

msgid "I would like to contribute! How can I get started?"
msgstr "我想參與貢獻！要從哪裡開始？"

msgid ""
"Awesome! As an open-source project, Godot thrives off of the innovation and "
"ambition of developers like you."
msgstr ""
"水啦！作為一個開源專案，Godot 沒有像你這種創新且野心勃勃的開發者可不行。"

msgid ""
"The first place to get started is in the `issues <https://github.com/"
"godotengine/godot/issues>`_. Find an issue that resonates with you, then "
"proceed to the `How to Contribute <https://github.com/godotengine/godot/blob/"
"master/CONTRIBUTING.md#contributing-pull-requests>`_ guide to learn how to "
"fork, modify, and submit a Pull Request (PR) with your changes."
msgstr ""
"可以先從 `Issues <https://github.com/godotengine/godot/issues>`_ 開始。找找與"
"你產生共鳴的 Issue，然後閱讀 `如何貢獻 <https://github.com/godotengine/godot/"
"blob/master/CONTRIBUTING.md#contributing-pull-requests>`_ 指南來瞭解如何 "
"Fork、修改，最後送出 Pull Request (PR)。"

msgid "I have a great idea for Godot. How can I share it?"
msgstr "我有個大膽的想法可以給 Godot。該分享去哪裡？"

msgid ""
"It might be tempting to want to bring ideas to Godot, like ones that result "
"in massive core changes, some sort of mimicry of what another game engine "
"does, or alternative workflows that you'd like built into the editor. These "
"are great, and we are thankful to have such motivated people want to "
"contribute, but Godot's focus is and always will be the core functionality "
"as outlined in the `Roadmap <https://github.com/godotengine/godot-roadmap/"
"blob/master/ROADMAP.md>`_, `squashing bugs and addressing issues <https://"
"github.com/godotengine/godot/issues>`_, and conversations between Godot "
"community members."
msgstr ""
"雖然你可能對 Godot 有很多想法，例如某個會需要大改核心的想法，或是想要模仿某個"
"遊戲引擎的想法，或是又有哪個希望能內建在編輯器裡的工作流程 (Workflow)。這些都"
"很棒，而且我們也很感謝有這些上進的人們想要參與貢獻，但 Godot 的重點一直都專注"
"於 `Roadmap (英文) <https://github.com/godotengine/godot-roadmap/blob/master/"
"ROADMAP.md>`_ 內提出的核心功能，還有 `解決 Bug 與找出問題 (英文) <https://"
"github.com/godotengine/godot/issues>`_，以及與 Godot 核心成員對話。"

msgid ""
"Most developers in the Godot community will be more interested to learn "
"about things like:"
msgstr "Godot 社群中多數的開發者都對下列這些東西比較有興趣："

msgid ""
"Your experience using the software and the problems you have (we care about "
"this much more than ideas on how to improve it)."
msgstr "使用 Godot 的體驗以及所遇到的問題 (這點比起增進 Godot 的想法還重要)。"

msgid ""
"The features you would like to see implemented because you need them for "
"your project."
msgstr "因使用者專案需求而希望能實作的功能。"

msgid ""
"The concepts that were difficult to understand while learning the software."
msgstr "在學習過程中遇到的難以理解的概念。"

msgid "The parts of your workflow you would like to see optimized."
msgstr "希望能在工作流程中改善的部分。"

msgid ""
"Parts where you missed clear tutorials or where the documentation wasn't "
"clear."
msgstr "需要更清楚的教學或是說明文件寫得很模糊的部分。"

msgid ""
"Please don't feel like your ideas for Godot are unwelcome. Instead, try to "
"reformulate them as a problem first, so developers and the community have a "
"functional foundation to ground your ideas on."
msgstr ""
"請不要覺得 Godot 不歡迎你的想法。反過來說，請試著先把這些想法當成是 Godot 的"
"設計問題來重新表達，這樣開發者們以及社群就可以此作為實現依據。"

msgid ""
"A good way to approach sharing your ideas and problems with the community is "
"as a set of user stories. Explain what you are trying to do, what behavior "
"you expect to happen, and then what behavior actually happened. Framing "
"problems and ideas this way will help the whole community stay focused on "
"improving developer experiences as a whole."
msgstr ""
"設定使用者故事 (User Story) 是向社群說明你的 Idea 與問題的好方法。說明你正在"
"嘗試什麼、希望獲得什麼結果、以及實際上得到了什麼。這樣子來描述問題與 Idea 就"
"有助於讓整個社群都能專注於提升整體的開發者體驗。"

msgid ""
"Bonus points for bringing screenshots, concrete numbers, test cases, or "
"example projects (if applicable)."
msgstr ""
"加分項：最好能附上截圖、具體用了什麼數字、測試案例、或是範例專案（若可能的"
"話）。"

msgid "Is it possible to use Godot to create non-game applications?"
msgstr "可以使用 Godot 來建立非遊戲應用程式嗎？"

msgid ""
"Yes! Godot features an extensive built-in UI system, and its small "
"distribution size can make it a suitable alternative to frameworks like "
"Electron or Qt."
msgstr ""
"是的！Godot 具有廣泛的內建 UI 系統，輕量化的特色可以使它成為 Electron 或 Qt "
"等框架的替代品。"

#, fuzzy
msgid ""
"When creating a non-game application, make sure to enable :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>` in the Project Settings to decrease CPU and GPU usage."
msgstr ""
"建立非遊戲應用程式時，請確保在專案設置中啟用 :ref:`低處理器模式"
"<class_ProjectSettings_property_application/運行/low_processor_mode>`以減少 "
"CPU 和 GPU 使用率。"

#, fuzzy
msgid ""
"That said, we wouldn't recommend using Godot to create a *mobile* "
"application since low-processor mode isn't supported on mobile platforms yet."
msgstr ""
"也就是說，我們不建議使用Godot來建立*行動*應用程式，因為行動平臺尚不支援低處理"
"器模式。"

msgid ""
"Check out `Material Maker <https://github.com/RodZill4/material-maker>`__ "
"and `Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__ for "
"examples of open source applications made with Godot."
msgstr ""
"請查看 `Material Maker<https://github.com/RodZill4/material-maker>`__ 和 "
"`Pixelorama<https://github.com/Orama-Interactive/Pixelorama>` __ 瞭解用 "
"Godot 製作的開源應用的例子。"

msgid "Is it possible to use Godot as a library?"
msgstr "可以把 Godot 當作函式庫來用嗎？"

msgid ""
"Godot is meant to be used with its editor. We recommend you give it a try, "
"as it will most likely save you time in the long term. There are no plans to "
"make Godot usable as a library, as it would make the rest of the engine more "
"convoluted and difficult to use for casual users."
msgstr ""
"Godot 是以使用編輯器為前提設計的。我們建議可以先試著用用編輯器，長期下來通常"
"可以節省很多時間。目前沒有計劃要讓 Godot 能作為函式庫使用，因為這樣會讓引擎其"
"他的功能變得很複雜，對一般的使用者來說難以使用。"

msgid ""
"If you want to use a rendering library, look into using an established "
"rendering engine instead. Keep in mind rendering engines usually have "
"smaller communities compared to Godot. This will make it more difficult to "
"find answers to your questions."
msgstr ""
"若您是想用算繪引擎，建議改而使用其他正式的算繪引擎。請注意，算繪引擎的社群通"
"常與 Godot 相比來得小。這樣會讓尋找問題答案變得比較困難。"

msgid "What user interface toolkit does Godot use?"
msgstr "Godot 使用的用戶界面工具包是什麽？"

msgid ""
"Godot does not use a standard :abbr:`GUI (Graphical User Interface)` toolkit "
"like GTK, Qt or wxWidgets. Instead, Godot uses its own user interface "
"toolkit, rendered using OpenGL ES or Vulkan. This toolkit is exposed in the "
"form of Control nodes, which are used to render the editor (which is written "
"in C++). These Control nodes can also be used in projects from any scripting "
"language supported by Godot."
msgstr ""
"Godot 沒有像 GTK 、 Qt 和 wxWidgets 那樣使用標準 :abbr:`GUI （圖形用戶界面）`"
"工具包。相反， Godot 使用的是自行開發的用戶界面工具包，使用 OpenGL ES 或 "
"Vulkan 進行算繪。該工具包用於算繪編輯器（ C++ 編寫），以控制元件節點的形式公"
"開。這些控制節點也可用於 Godot 支持的任意腳本語言項目。"

msgid ""
"This custom toolkit makes it possible to benefit from hardware acceleration "
"and have a consistent appearance across all platforms. On top of that, it "
"doesn't have to deal with the LGPL licensing caveats that come with GTK or "
"Qt. Lastly, this means Godot is \"eating its own dog food\" since the editor "
"itself is one of the most complex users of Godot's UI system."
msgstr ""
"這個定制的工具包使它能獲益於硬體加速，並在全平臺上擁有一致的外觀。 最重要的"
"是，它不必處理GTK或Qt所帶來的LGPL許可注意事項。 最後，這意味著Godot在“自產自"
"用”，因為編輯器本身就是Godot UI系統中最複雜的用例之一。"

msgid ""
"This custom UI toolkit :ref:`can't be used as a library "
"<doc_faq_use_godot_as_library>`, but you can still :ref:`use Godot to create "
"non-game applications by using the editor <doc_faq_non_game_applications>`."
msgstr ""
"這個自定義UI工具包\\：ref:`不能作為一個庫使用<doc_ faq_ use_ godot_ as_ "
"library>`，但你仍然可以\\：ref:`通過使用Godot編輯器來創建非遊戲應用程序<doc_ "
"faq_ non_ game_ applications>`。"

msgid "Why does Godot not use STL (Standard Template Library)?"
msgstr "為什麼Godot不使用STL(Standard Template Library)?"

msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of "
"STL. We believe STL is a great general purpose library, but we had special "
"requirements for Godot."
msgstr ""
"如同其他的許多函式庫一樣（例如 Qt），Godot 沒有用到 STL (Standard Template "
"Library，標準樣板庫)。雖然我們知道 STL 是一個很厲害的通用函式庫，但 Godot 有"
"一些特殊需求。"

msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STL 樣板會產生很大的符號 (Symbol)，進而讓偵錯用二進位檔的體積變大。我們用名稱"
"很短並、少量的樣板來代替。"

msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"大部分的容器都有特殊需求，例如 Vector 會需要使用寫入時複製 (Copy on Write) 來"
"傳遞資料；或是 RID 系統為了效能需要 O(1) 的存取時間。還有其他類似狀況，如我們"
"的雜湊表實作設計成能與引擎內部型別無縫整合。"

msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr "容器內建了記憶體追蹤，以改進記憶體使用狀況追蹤。"

msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr ""
"在大型陣列中使用記憶體池，可以被映射到預分配緩衝區 (Preaoolocated Buffer) 或"
"是虛擬記憶體。"

msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr "使用自定字串型別，而 STL 提供的字串太簡陋且缺乏完善的在地化支援。"

msgid "Why does Godot not use exceptions?"
msgstr "Godot 怎麼不用例外 (Exception)？"

msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"我們認為無論如何遊戲不應該 Crash。若發生了未預期的狀況，Godot 會輸出錯誤 (可"
"以被追蹤回腳本)，但接著會儘可能地修復並繼續執行。"

msgid ""
"Additionally, exceptions significantly increase binary size for the "
"executable."
msgstr "另外，例外功能會導致二進位執行檔的大小大幅增加。"

msgid "Why does Godot not enforce RTTI?"
msgstr "Godot 怎麼不強制 RTTI？"

msgid ""
"Godot provides its own type-casting system, which can optionally use RTTI "
"internally. Disabling RTTI in Godot means considerably smaller binary sizes "
"can be achieved, at a little performance cost."
msgstr ""
"Godot 提供了自己的型別轉換系統，其內部可以選擇是否要使用 RTTI (執行期型態訊"
"息)。在 Godot 內禁用 RTTI 則代表能損失一點點效能來爭取更小的二進位檔案大小。"

msgid "Why does Godot not force users to implement DoD (Data oriented Design)?"
msgstr "Godot 怎麼不強制使用者實作 DoD？"

msgid ""
"While Godot internally for a lot of the heavy performance tasks attempts to "
"use cache coherency as well as possible, we believe most users don't really "
"need to be forced to use DoD practices."
msgstr ""
"雖然 Godot 內部有儘可能地試著在很多吃效能的任務上都使用了快取一致性 (Cache "
"Coherency) 機制，但我們認為多數使用者都不是真的有需要強制使用 DoD (Data "
"oriented Design，資料導向設計)。"

msgid ""
"DoD is mostly a cache coherency optimization that can only gain you "
"significant performance improvements when dealing with dozens of thousands "
"of objects (which are processed every frame with little modification). As "
"in, if you are moving a few hundred sprites or enemies per frame, DoD won't "
"help you, and you should consider a different approach to optimization."
msgstr ""
"DoD 基本上就是一個快取一致性最佳化機制，只能讓處理成千上萬個物件 (每一幀都需"
"要執行一些少量的修改) 時能讓效能有顯著提升。舉個例子，若每一幀都需要移動上百"
"個 Sprite 或敵人時，DoD 就沒什麼用了，需要考慮另一種最佳化的方式。"

msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"絕大多數的遊戲都不需要 DoD。而且 Godot 對於大多數情況都提供了便利的工具來代"
"替。"

msgid ""
"If a game that really needs to process such large amount of objects is "
"needed, our recommendation is to use C++ and GDNative for the high "
"performance parts and GDScript (or C#) for the rest of the game."
msgstr ""
"如果真的有遊戲需要處理這麼大量的物件，我們建議使用 C++ 與 GDNative 來處理吃效"
"能的部分，剩下的部分則使用 GDScript (或 C#)。"

msgid "How can I support Godot development or contribute?"
msgstr "要怎麼參與貢獻或支持 Godot 的開發呢？"

msgid "See :ref:`doc_ways_to_contribute`."
msgstr "請參考 :ref:`doc_ways_to_contribute`。"

msgid "Who is working on Godot? How can I contact you?"
msgstr "有誰在為 Godot 工作？如何聯絡？"

msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"請參考 `Godot 網站 (英文) <https://godotengine.org/contact>`_ 上相應的頁面。"

msgid "Translation status"
msgstr "翻譯狀態"
