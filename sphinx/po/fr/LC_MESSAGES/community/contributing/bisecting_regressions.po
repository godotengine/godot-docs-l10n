# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Bisecting regressions"
msgstr "Régressions en bisectation"

msgid ""
"Bisecting is a way to find regressions in software. After reporting a bug on "
"the `Godot repository on GitHub <https://github.com/godotengine/godot>`__, "
"you may be asked by a contributor to *bisect* the issue. Bisecting makes it "
"possible for contributors to fix bugs faster, as they can know in advance "
"which commit caused the regression. Your effort will be widely appreciated :)"
msgstr ""
"La bisection est un moyen de trouver des régressions dans les logiciels. "
"Après avoir signalé un bogue sur le dépôt `Godot sur GitHub <https://github."
"com/godotengine/godot>`__, un contributeur peut vous demander de *bisecter* "
"le problème. Le Bisecting permet aux contributeurs de corriger les bugs plus "
"rapidement, car ils peuvent savoir à l'avance quel commit a causé la "
"régression. Votre effort sera largement apprécié :)"

msgid "The guide below explains how to find a regression by bisecting."
msgstr ""
"Le guide ci-dessous explique comment trouver une régression par bissection."

msgid "What is bisecting?"
msgstr "Qu'est-ce que la bissection ?"

msgid ""
"Godot developers use the `Git <https://git-scm.com/>`__ version control "
"system. In the context of Git, bisecting is the process of performing a "
"manual `binary search <https://en.wikipedia.org/wiki/"
"Binary_search_algorithm>`__ to determine when a regression appeared. While "
"it's typically used for bugs, it can also be used to find other kinds of "
"unexpected changes such as performance regressions."
msgstr ""
"Les développeurs de Godot utilisent le système de contrôle de version `Git "
"<https://git-scm.com/>`__. Dans le contexte de Git, la bissection est le "
"processus consistant à effectuer une `recherche binaire <https://en."
"wikipedia.org/wiki/Binary_search_algorithm>`__ pour déterminer quand une "
"régression est apparue. Bien qu'il soit généralement utilisé pour les "
"bogues, il peut également être utilisé pour trouver d'autres types de "
"changements inattendus tels que les régressions de performance."

msgid "Using official builds to speed up bisecting"
msgstr "Utiliser les compilations officielles pour accélérer la bissection"

msgid ""
"Before using Git's ``bisect`` command, we strongly recommend trying to "
"reproduce the bug with an older (or newer) official release. This greatly "
"reduces the range of commits that potentially need to be built from source "
"and tested. You can find binaries of official releases, as well as alphas, "
"betas, and release candidates `here <https://downloads.tuxfamily.org/"
"godotengine/>`__."
msgstr ""
"Avant d'utiliser la commande \"bisect\" de Git, nous vous recommandons "
"fortement d'essayer de reproduire le bug avec une version officielle plus "
"ancienne (ou plus récente). Cela réduit considérablement le nombre de "
"commits qui doivent potentiellement être construits à partir des sources et "
"testés. Vous pouvez trouver les binaires des versions officielles, ainsi que "
"les alphas, les bêtas et les candidats aux versions `ici <https://downloads."
"tuxfamily.org/godotengine/>`__."

msgid ""
"For example, if you've reported a bug against Godot 3.2, you should first "
"try to reproduce the bug in Godot 3.1 (not a patch release, see below for "
"the reason). If the bug doesn't occur there, try to reproduce it in Godot "
"3.2 *beta 1* (which is roughly in the middle of all test builds available). "
"If you can't reproduce the bug with Godot 3.2 beta 1, then try newer betas "
"and RC builds. If you do manage to reproduce the bug with Godot 3.2 beta 1, "
"then try older alpha builds."
msgstr ""
"Par exemple, si vous avez signalé un bogue contre Godot 3.2, vous devez "
"d'abord essayer de reproduire le bogue dans Godot 3.1 (pas une version de "
"correction, voir ci-dessous pour la raison). Si le bogue ne s'y produit pas, "
"essayez de le reproduire dans Godot 3.2 *beta 1* (qui se situe à peu près au "
"milieu de toutes les versions de test disponibles). Si vous ne pouvez pas "
"reproduire le bogue avec Godot 3.2 beta 1, essayez des versions bêta et RC "
"plus récentes. Si vous parvenez à reproduire le bogue avec Godot 3.2 beta 1, "
"essayez des versions alpha plus anciennes."

msgid ""
"For bisecting regressions, don't use patch releases such as Godot 3.1.2. "
"Instead, use the minor version's first release like Godot 3.1. This is "
"because patch releases are built from a separate *stable branch*. This kind "
"of branch doesn't follow the rest of Godot's development, which is done in "
"the ``master`` branch."
msgstr ""
"Pour bissecter une régression, n'utilisez pas les versions de patchs telles "
"que Godot 3.1.2. Utilisez plutôt la première version de la version mineure "
"comme Godot 3.1. En effet, les versions de correction sont construites à "
"partir d'une branche *stable* distincte. Ce type de branche ne suit pas le "
"reste du développement de Godot, qui est fait dans la branche ``master``."

msgid "The Git bisect command"
msgstr "La commande git bisect"

msgid ""
"If you've found a build that didn't exhibit the bug in the above testing "
"process, you can now start bisecting the regression. The Git version control "
"system offers a built-in command for this: ``git bisect``. This makes the "
"process semi-automated as you only have to build the engine, run it and try "
"to reproduce the bug."
msgstr ""
"Si vous avez trouvé une compilation qui ne présentait pas le bogue dans le "
"processus de test ci-dessus, vous pouvez maintenant commencer à couper la "
"régression en deux. Le système de contrôle de version Git offre une commande "
"intégrée pour cela : ``git bisect``. Cela rend le processus semi-"
"automatique, car il suffit de construire le moteur, de l'exécuter et "
"d'essayer de reproduire le bogue."

msgid ""
"Before bisecting a regression, you need to set up a build environment to "
"compile Godot from source. To do so, read the :ref:`Compiling <toc-devel-"
"compiling>` page for your target platform. (Compiling Godot from source "
"doesn't require C++ programming knowledge.)"
msgstr ""
"Avant de bissecter une régression, vous devez mettre en place un "
"environnement de compilation pour compiler Godot à partir de la source. Pour "
"ce faire, lisez la page :ref:`Compilation <toc-devel-compilation>` pour "
"votre plate-forme cible. (Compiler Godot à partir des sources ne nécessite "
"pas de connaissances en programmation C++.)"

msgid ""
"Note that compiling Godot can take a while on slow hardware (up an hour for "
"each full rebuild on a slow dual-core CPU). This means the full process can "
"take up to several hours. If your hardware is too slow, you may want to stop "
"there and report the results of your \"pre-bisecting\" on the GitHub issue "
"so another contributor can continue bisecting from there."
msgstr ""
"Notez que la compilation de Godot peut prendre un certain temps sur du "
"matériel lent (jusqu'à une heure pour chaque recompilation complète sur un "
"CPU dual-core lent). Cela signifie que le processus complet peut prendre "
"jusqu'à plusieurs heures. Si votre matériel est trop lent, vous pouvez vous "
"arrêter là et rapporter les résultats de votre \"pré-bisection\" sur le "
"numéro de GitHub afin qu'un autre contributeur puisse continuer à bissecter "
"à partir de là."

msgid ""
"To start bisecting, you must first determine the commit hashes (identifiers) "
"of the \"bad\" and \"good\" build. \"bad\" refers to the build that exhibits "
"the bug, whereas \"good\" refers to the version that doesn't exhibit the "
"bug. If you're using a pre-release build as the \"good\" or \"bad\" build, "
"browse the `download mirror <https://downloads.tuxfamily.org/godotengine/"
">`__, go to the folder that contains the pre-release you downloaded and look "
"for the ``README.txt`` file. The commit hash is written inside that file."
msgstr ""
"Pour commencer à bissecter, vous devez d'abord déterminer les hashs de "
"commit (identifiants) des \"mauvaises\" et \"bonnes\" constructions. \"bad\" "
"se réfère à la version qui présente le bogue, tandis que \"good\" se réfère "
"à la version qui ne présente pas le bogue. Si vous utilisez une pré-version "
"comme \"bonne\" ou \"mauvaise\" version, naviguez dans le `miroir de "
"téléchargement <https://downloads.tuxfamily.org/godotengine/>`__, allez dans "
"le dossier qui contient la pré-version que vous avez téléchargée et cherchez "
"le fichier ``README.txt``. Le hachage du commit est écrit à l'intérieur de "
"ce fichier."

msgid ""
"If you're using a stable release as the \"good\" or \"bad\" build, use one "
"of the following commit hashes depending on the version:"
msgstr ""
"Si vous utilisez une version stable comme \"bonne\" ou \"mauvaise\" "
"compilation, utilisez l'un des hashs de commit suivants selon la version :"

msgid ""
"To refer to the latest state of the master branch, you can use ``master`` "
"instead of a commit hash."
msgstr ""
"Pour faire référence au dernier état de la branche master, vous pouvez "
"utiliser ``master`` au lieu d'un hash de commit."

msgid ""
":ref:`Get Godot's source code using Git <doc_getting_source>`. Once this is "
"done, in the terminal window, use ``cd`` to reach the Godot repository "
"folder and enter the following command:"
msgstr ""
":ref:`obtenez le code source de Godot avec Git <doc_getting_source>`. Une "
"fois cela fait, dans la fenêtre du terminal, utilisez ``cd`` pour atteindre "
"le dossier du dépôt de Godot et entrez la commande suivante :"

msgid "Compile Godot. This assumes you've set up a build environment:"
msgstr ""
"Compiler Godot. Cela suppose que vous avez mis en place un environnement de "
"compilation :"

msgid ""
"Since building Godot takes a while, you want to dedicate as many CPU threads "
"as possible to the task. This is what the ``-j`` parameter does. Here, the "
"command assigns 4 CPU threads to compiling Godot."
msgstr ""
"Comme la compilation de Godot prend du temps, vous voulez y consacrer autant "
"de threads CPU que possible. C'est ce que fait le paramètre ``-j``. Ici, la "
"commande assigne 4 threads CPU à la compilation de Godot."

msgid ""
"Run the binary located in the ``bin/`` folder and try to reproduce the bug."
msgstr ""
"Exécutez le binaire situé dans le dossier ``bin/`` et essayez de reproduire "
"le bogue."

msgid "If the build **still** exhibits the bug, run the following command:"
msgstr "Si le build présente **encore** le bug, lancez la commande suivante :"

msgid "If the build **does not** exhibit the bug, run the following command:"
msgstr "Si le build **ne présente pas** le bug, lancez la commande suivante :"

msgid ""
"After entering one of the commands above, Git will switch to a different "
"commit. You should now build Godot again, try to reproduce the bug, then "
"enter ``git bisect good`` or ``git bisect bad`` depending on the result. "
"You'll have to repeat this several times. The longer the commit range, the "
"more steps will be required. 5 to 10 steps are usually sufficient to find "
"most regressions; Git will remind you of the number of steps remaining (in "
"the worst case scenario)."
msgstr ""
"Après avoir entré l'une des commandes ci-dessus, Git passera à un commit "
"différent. Vous devez maintenant recompiler Godot, essayer de reproduire le "
"bug, puis entrer ``git bisect good`` ou ``git bisect bad`` selon le "
"résultat. Vous devrez répéter cela plusieurs fois. Plus la plage de "
"validation est longue, plus il faudra d'étapes. 5 à 10 étapes sont "
"généralement suffisantes pour trouver la plupart des régressions ; Git vous "
"rappellera le nombre d'étapes restantes (dans le pire des cas)."

msgid ""
"Once you've completed enough steps, Git will display the commit hash where "
"the regression appeared. Write this commit hash as a comment to the GitHub "
"issue you've bisected. This will help in solving the issue. Thanks again for "
"contributing to Godot :)"
msgstr ""
"Une fois que vous avez effectué suffisamment d'étapes, Git affichera le hach "
"de commit où la régression est apparue. Écrivez ce hach de commit en "
"commentaire du numéro de GitHub que vous avez découpé. Cela vous aidera à "
"résoudre le problème. Merci encore d'avoir contribué à Godot :)"

msgid ""
"You can read the full documentation on ``git bisect`` `here <https://git-scm."
"com/docs/git-bisect>`__."
msgstr ""
"Vous pouvez lire la documentation complète sur ``git bisect`` `ici <https://"
"git-scm.com/docs/git-bisect>`__."

msgid "Translation status"
msgstr "État de la traduction"
