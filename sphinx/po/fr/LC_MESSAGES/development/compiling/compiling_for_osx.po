# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for macOS"
msgstr "Compiler pour macOS"

msgid ""
"This page describes how to compile macOS editor and export template binaries "
"from source. If you're looking to export your project to macOS instead, "
"read :ref:`doc_exporting_for_macos`."
msgstr ""
"Cette page décrit comment compiler les binaires de l'éditeur macOS et les "
"modèles d'exportation à partir du code source. Si vous souhaitez plutôt "
"exporter votre projet vers macOS, lisez :ref:`doc_exporting_for_macos`."

msgid "Requirements"
msgstr "Pré-requis"

msgid "For compiling under macOS, the following is required:"
msgstr ""
"Pour la compilation sous macOS, les éléments suivants sont nécessaires :"

msgid "`Python 3.5+ <https://www.python.org>`_."
msgstr "`Python 3.5+ <https://www.python.org>`_."

msgid "`SCons 3.0+ <https://www.scons.org>`_ build system."
msgstr "`SCons 3.0+ <https://www.scons.org>`_ système de construction(build)."

msgid ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_ (or the more "
"lightweight Command Line Tools for Xcode)."
msgstr ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_ (ou les outils en "
"ligne de commande plus légers pour Xcode)."

msgid ""
"*Optional* - `yasm <https://yasm.tortall.net/>`_ (for WebM SIMD "
"optimizations)."
msgstr ""
"*Facultatif* - `yasm <https://yasm.tortall.net/>`_ (pour les optimisations "
"de WebM SIMD)."

msgid ""
"If you have `Homebrew <https://brew.sh/>`_ installed, you can easily install "
"SCons and yasm using the following command::"
msgstr ""
"Si vous avez installé `Homebrew <https://brew.sh/>`_, vous pouvez facilement "
"installer SCons et yasm en utilisant la commande suivante :"

msgid ""
"Installing Homebrew will also fetch the Command Line Tools for Xcode "
"automatically if you don't have them already."
msgstr ""
"L'installation de Homebrew permet également de récupérer automatiquement les "
"outils de ligne de commande pour Xcode si vous ne les avez pas déjà."

msgid ""
"Similarly, if you have `MacPorts <https://www.macports.org/>`_ installed, "
"you can easily install SCons and yasm using the following command::"
msgstr ""
"De même, si vous avez `MacPorts <https://www.macports.org/>`_ installé, vous "
"pouvez facilement installer SCons et yasm en utilisant la commande suivante :"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""
"Pour récupérer le code source de Godot pour le compiler, voir :ref:"
"`doc_getting_source`."

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"Pour un aperçu général de l'utilisation de SCons pour Godot, voir :ref:"
"`doc_introduction_to_the_buildsystem`."

msgid "Compiling"
msgstr "Compilation"

msgid "Start a terminal, go to the root directory of the engine source code."
msgstr ""
"Démarrez un terminal et allez au répertoire racine du code source du moteur."

msgid "To compile for Intel (x86-64) powered Macs, use::"
msgstr "Pour compiler pour les Macs équipés Intel (x86-64), utilisez :"

msgid "To compile for Apple Silicon (ARM64) powered Macs, use::"
msgstr "Pour compiler pour les Macs équipés Apple Silicon (ARM64), utilisez :"

msgid ""
"To support both architectures in a single \"Universal 2\" binary, run the "
"above two commands and then use ``lipo`` to bundle them together::"
msgstr ""
"Pour prendre en charge les deux architectures dans un seul binaire "
"\"Universal 2\", exécutez les deux commandes ci-dessus et utilisez ensuite "
"``lipo`` pour les regrouper :"

msgid ""
"If all goes well, the resulting binary executable will be placed in the "
"``bin/`` subdirectory. This executable file contains the whole engine and "
"runs without any dependencies. Executing it will bring up the project "
"manager."
msgstr ""
"Si tout se passe bien, l'exécutable binaire résultant sera placé dans le "
"sous-dossier ``bin/``. Ce fichier exécutable contient l'ensemble du moteur "
"et fonctionne sans aucune dépendance. En l'exécutant, le gestionnaire de "
"projet apparaîtra."

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"Si vous souhaitez utiliser des paramètres d'édition séparés pour vos propres "
"constructions Godot et vos versions officielles, vous pouvez activer :ref:"
"`doc_data_paths_self_contained_mode` en créant un fichier appelé ``._sc_`` "
"ou ``_sc_`` dans le dossier ``bin/``."

msgid ""
"To create an ``.app`` bundle like in the official builds, you need to use "
"the template located in ``misc/dist/osx_tools.app``. Typically, for an "
"optimized editor binary built with ``target=release_debug``::"
msgstr ""
"Pour créer un bundle ``.app`` comme dans les builds officielles, vous devez "
"utiliser le modèle situé dans ``misc/dist/osx_tools.app``. Typiquement, pour "
"un compilation binaire optimisée de l'éditeur avec ``scons p=osx "
"target=release_debug`` :"

msgid "Compiling a headless/server build"
msgstr "Compilation d'une version sans headless/serveur"

msgid ""
"To compile a *headless* build which provides editor functionality to export "
"projects in an automated manner, use::"
msgstr ""
"Pour compiler un build *headless* qui fournit la fonctionnalité d'éditeur "
"pour exporter des projets de manière automatisée, utilisez :"

msgid ""
"To compile a debug *server* build which can be used with :ref:`remote "
"debugging tools <doc_command_line_tutorial>`, use::"
msgstr ""
"Pour compiler un build de débogage *serveur* qui peut être utilisé avec :ref:"
"`les outils de débogage à distance <doc_command_line_tutorial>`, utilisez : :"

msgid ""
"To compile a release *server* build which is optimized to run dedicated game "
"servers, use::"
msgstr ""
"Pour compiler un build *serveur* release qui est optimisé pour faire "
"fonctionner des serveurs de jeu dédiés, utilisez :"

msgid "Building export templates"
msgstr "Création de modèles d'exportation"

msgid ""
"To build macOS export templates, you have to compile with ``tools=no`` (no "
"editor) and respectively for ``target=release`` (release template) and "
"``target=release_debug``."
msgstr ""
"Pour compiler des modèles d'exportation pour macOS, vous devez compiler avec "
"``tools=no`` (pas d'éditeur) et respectivement pour ``target=release`` "
"(modèle de version) et ``target=release_debug``."

msgid ""
"Official templates are universal binaries which support both Intel x86_64 "
"and ARM64 architectures. You can also create export templates that support "
"only one of those two architectures by leaving out the ``lipo`` step below."
msgstr ""
"Les modèles officiels sont des binaires universels qui prennent en charge "
"les architectures Intel x86_64 et ARM64. Vous pouvez également créer des "
"modèles d'exportation qui ne prennent en charge qu'une seule de ces deux "
"architectures en omettant l'étape ``lipo`` ci-dessous."

msgid "For Intel x86_64::"
msgstr "Pour Intel x86_64 :"

msgid "For ARM64 (Apple M1)::"
msgstr "Pour ARM64 (Apple M1) :"

msgid ""
"To support both architectures in a single \"Universal 2\" binary, run the "
"above two commands blocks and then use ``lipo`` to bundle them together::"
msgstr ""
"Pour prendre en charge les deux architectures dans un seul binaire "
"\"Universal 2\", exécutez les deux commandes ci-dessus et utilisez ensuite "
"``lipo`` pour les regrouper :"

msgid ""
"To create an ``.app`` bundle like in the official builds, you need to use "
"the template located in ``misc/dist/osx_template.app``. The release and "
"debug builds should be placed in ``osx_template.app/Contents/MacOS`` with "
"the names ``godot_osx_release.64`` and ``godot_osx_debug.64`` respectively. "
"You can do so with the following commands (assuming a universal build, "
"otherwise replace the ``.universal`` extension with the one of your arch-"
"specific binaries)::"
msgstr ""
"Pour créer un paquet ``.app`` comme dans les builds officiels, vous devez "
"utiliser le modèle situé dans ``misc/dist/osx_template.app``. Les builds "
"release et debug doivent être placés dans ``osx_template.app/Contents/"
"MacOS`` avec les noms ``godot_osx_release.64`` et ``godot_osx_debug.64`` "
"respectivement. Vous pouvez le faire avec les commandes suivantes (en "
"supposant une compilation universelle, sinon remplacez l'extension ``."
"universal`` par celle de vos binaires spécifiques à l'architecture) :"

msgid ""
"You can then zip the ``osx_template.app`` folder to reproduce the ``osx."
"zip`` template from the official Godot distribution::"
msgstr ""
"Vous pouvez ensuite zipper le dossier ``osx_template.app`` pour reproduire "
"le modèle ``osx.zip`` de la distribution officielle de Godot :"

msgid "Cross-compiling for macOS from Linux"
msgstr "Compilation croisée pour macOS à partir de Linux"

msgid ""
"It is possible to compile for macOS in a Linux environment (and maybe also "
"in Windows using the Windows Subsystem for Linux). For that, you'll need to "
"install `OSXCross <https://github.com/tpoechtrager/osxcross>`__ to be able "
"to use macOS as a target. First, follow the instructions to install it:"
msgstr ""
"Il est possible de compiler pour macOS dans un environnement Linux (et peut-"
"être aussi dans Windows en utilisant le sous-système Windows pour Linux). "
"Pour cela, vous devrez installer `OSXCross <https://github.com/tpoechtrager/"
"osxcross>`__ pour pouvoir utiliser macOS comme cible. Tout d'abord, suivez "
"les instructions pour l'installer :"

msgid ""
"Clone the `OSXCross repository <https://github.com/tpoechtrager/osxcross>`__ "
"somewhere on your machine (or download a ZIP file and extract it somewhere), "
"e.g.::"
msgstr ""
"Clonez le `dépôt OSXCross <https://github.com/tpoechtrager/osxcross>`__ "
"quelque part sur votre machine (ou téléchargez un fichier ZIP et extrayez-le "
"quelque part), par exemple :"

msgid ""
"Follow the instructions to package the SDK: https://github.com/tpoechtrager/"
"osxcross#packaging-the-sdk"
msgstr ""
"Suivez les instructions pour empaqueter le SDK : https://github.com/"
"tpoechtrager/osxcross#packaging-the-sdk"

msgid ""
"Follow the instructions to install OSXCross: https://github.com/tpoechtrager/"
"osxcross#installation"
msgstr ""
"Suivez les instructions pour installer OSXCross : https://github.com/"
"tpoechtrager/osxcross#installation"

msgid ""
"After that, you will need to define the ``OSXCROSS_ROOT`` as the path to the "
"OSXCross installation (the same place where you cloned the repository/"
"extracted the zip), e.g.::"
msgstr ""
"Ensuite, vous devrez définir ``OSXCROSS_ROOT`` comme le chemin vers "
"l'installation d'OSXCross (le même endroit où vous avez cloné le dépôt/"
"extrait le zip), par exemple :"

msgid "Now you can compile with SCons like you normally would::"
msgstr ""
"Vous pouvez maintenant compiler avec SCons comme vous le feriez normalement :"

msgid ""
"If you have an OSXCross SDK version different from the one expected by the "
"SCons buildsystem, you can specify a custom one with the ``osxcross_sdk`` "
"argument::"
msgstr ""
"Si vous avez une version du SDK OSXCross différente de celle attendue par le "
"système de construction(build) SCons, vous pouvez en spécifier une "
"personnalisée avec l'argument ``osxcross_sdk`` :"

msgid "Translation status"
msgstr "État de la traduction"
