# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Logic preferences"
msgstr "Préférences de logique"

msgid ""
"Ever wondered whether one should approach problem X with strategy Y or Z? "
"This article covers a variety of topics related to these dilemmas."
msgstr ""
"Vous êtes-vous déjà demandé si vous deviez approcher un problème X avec une "
"stratégie Y ou Z ? Cet article couvre une grande variété de sujets relatifs "
"à ce dilemme."

msgid "Loading vs. preloading"
msgstr "Chargement vs préchargement"

msgid ""
"In GDScript, there exists the global :ref:`preload "
"<class_@GDScript_method_preload>` method. It loads resources as early as "
"possible to front-load the \"loading\" operations and avoid loading "
"resources while in the middle of performance-sensitive code."
msgstr ""
"Dans GDScript, il existe la méthode globale :ref:`preload "
"<class_@GDScript_method_preload>`. elle charge les ressources le plus tôt "
"possible pour charger en amont les opérations de \"chargement\" et éviter de "
"charger les ressources au milieu d'un code sensible aux performances."

msgid ""
"Its counterpart, the :ref:`load <class_@GDScript_method_load>` method, loads "
"a resource only when it reaches the load statement. That is, it will load a "
"resource in-place which can cause slowdowns when it occurs in the middle of "
"sensitive processes. The ``load`` function is also an alias for :ref:"
"`ResourceLoader.load(path) <class_ResourceLoader_method_load>` which is "
"accessible to *all* scripting languages."
msgstr ""
"Son homologue, la méthode :ref:`load <class_@GDScript_method_load>`, ne "
"charge une ressource que lorsqu'elle atteint l'instruction load. C'est-à-"
"dire qu'elle chargera immédiatement une ressource, ce qui peut provoquer des "
"ralentissements lorsque ceci se produit au milieu de processus sensibles. La "
"fonction ``load`` est également un alias pour :ref:`ResourceLoader."
"load(path) <class_ResourceLoader_method_load>` qui est accessible à *tous* "
"les langages de script."

msgid ""
"So, when exactly does preloading occur versus loading, and when should one "
"use either? Let's see an example:"
msgstr ""
"Donc, quand exactement y a-t-il un préchargement plutôt qu'un chargement, et "
"quand utiliser l'un ou l'autre ? Voyons un exemple :"

msgid ""
"Preloading allows the script to handle all the loading the moment one loads "
"the script. Preloading is useful, but there are also times when one doesn't "
"wish for it. To distinguish these situations, there are a few things one can "
"consider:"
msgstr ""
"Le préchargement permet au script de gérer tout le chargement dès le "
"chargement du script lui-même. Le préchargement est utile, mais il y a aussi "
"des moments où on ne le souhaite pas. Pour distinguer ces situations, il y a "
"quelques points à considérer :"

msgid ""
"If one cannot determine when the script might load, then preloading a "
"resource, especially a scene or script, could result in further loads one "
"does not expect. This could lead to unintentional, variable-length load "
"times on top of the original script's load operations."
msgstr ""
"S'il est impossible de déterminer le moment du chargement du script, le "
"préchargement d'une ressource, en particulier d'une scène ou d'un script, "
"peut entraîner des charges supplémentaires auxquelles on ne s'attend pas. "
"Cela pourrait entraîner des temps de chargement non intentionnels de "
"longueur variable en plus des opérations de chargement du script d'origine."

msgid ""
"If something else could replace the value (like a scene's exported "
"initialization), then preloading the value has no meaning. This point isn't "
"a significant factor if one intends to always create the script on its own."
msgstr ""
"Si quelque chose d'autre pourrait remplacer la valeur (comme "
"l'initialisation d'une scène exportée), alors le préchargement de la valeur "
"n'a aucune intérêt. Ce point n'est pas un facteur important si l'on a "
"l'intention de toujours créer le script tout seul."

msgid ""
"If one wishes only to 'import' another class resource (script or scene), "
"then using a preloaded constant is often the best course of action. However, "
"in exceptional cases, one may wish not to do this:"
msgstr ""
"Si l'on souhaite seulement 'importer' une autre ressource de classe (script "
"ou scène), alors l'utilisation d'une constante préchargée est souvent la "
"meilleure solution. Cependant, dans des cas exceptionnels, il n'est pas "
"souhaitable de le faire :"

msgid ""
"If the 'imported' class is liable to change, then it should be a property "
"instead, initialized either using an ``export`` or a ``load`` (and perhaps "
"not even initialized until later)."
msgstr ""
"Si la classe 'importée' est susceptible de changer, alors elle devrait être "
"une propriété, initialisée soit à l'aide d'un ``export`` ou d'un ``load`` "
"(et peut-être même pas initialisée tout de suite)."

msgid ""
"If the script requires a great many dependencies, and one does not wish to "
"consume so much memory, then one may wish to, load and unload various "
"dependencies at runtime as circumstances change. If one preloads resources "
"into constants, then the only way to unload these resources would be to "
"unload the entire script. If they are instead loaded properties, then one "
"can set them to ``null`` and remove all references to the resource entirely "
"(which, as a :ref:`Reference <class_Reference>`-extending type, will cause "
"the resources to delete themselves from memory)."
msgstr ""
"Si le script requiert beaucoup de dépendances, et que vous ne souhaitez pas "
"utiliser autant de mémoire, alors vous pourriez vouloir charger et décharger "
"ces ressources au cours de l'exécution selon l'évolution des circonstances. "
"Si on précharge les ressources comme des constantes, alors la seule manière "
"de les décharger serait de décharger le script entier. Si elles sont en "
"revanche des propriétés chargées, alors on peut les définir comme ``null`` "
"et retirer entièrement toutes les références à la ressource (ce qui, en tant "
"que type héritant de  :ref:`Reference <class_Reference>`, causera la "
"suppression des ressources de la mémoire)."

msgid "Large levels: static vs. dynamic"
msgstr "Grands niveaux : statique vs dynamique"

msgid ""
"If one is creating a large level, which circumstances are most appropriate? "
"Should they create the level as one static space? Or should they load the "
"level in pieces and shift the world's content as needed?"
msgstr ""
"Dans le cadre de la création d'un niveau de grande taille, quelle solution "
"est la plus appropriée ? Créer le niveau d'une seule pièce, ou bien scinder "
"ce niveau en fragments qui seront chargés au fur et à mesure des besoins ?"

msgid ""
"Well, the simple answer is , \"when the performance requires it.\" The "
"dilemma associated with the two options is one of the age-old programming "
"choices: does one optimize memory over speed, or vice versa?"
msgstr ""
"La réponse est simple, \"quand les performances le nécessitent\". Le dilemme "
"dont il est question ici est l'un des plus vieux dans le choix du type de "
"programmation : doit-on privilégier l'optimisation de la mémoire sur celle "
"de la vitesse, et inversement ?"

msgid ""
"The naive answer is to use a static level that loads everything at once. "
"But, depending on the project, this could consume a large amount of memory. "
"Wasting users' RAM leads to programs running slow or outright crashing from "
"everything else the computer tries to do at the same time."
msgstr ""
"La réponse naïve est d'utiliser un seul niveau et charger toutes les "
"ressources en une fois. Toutefois, dans le cadre de certains projets, cette "
"solution peut mener à l'utilisation d'une importante quantité de mémoire. "
"Gaspiller la mémoire de l'utilisateur risque de ralentir, voire de faire "
"planter les autres programmes en cours d’exécution sur son système."

msgid ""
"No matter what, one should break larger scenes into smaller ones (to aid in "
"reusability of assets). Developers can then design a node that manages the "
"creation/loading and deletion/unloading of resources and nodes in real-time. "
"Games with large and varied environments or procedurally generated elements "
"often implement these strategies to avoid wasting memory."
msgstr ""
"Il est vivement recommandé de séparer les scènes de grande taille en plus "
"petites scènes (aidant ainsi à la ré utilisabilité des assets). Les "
"développeurs peuvent ensuite concevoir un nœud dont la tâche est de gérer la "
"création/le chargement et la suppression/le déchargement des ressources et "
"nœuds correspondants en temps-réel. Les jeux disposant d'un environnement "
"étendu et varié, ou générés de façon procédurale implémentent souvent ces "
"stratégies dans un soucis d'optimisation de la mémoire."

msgid ""
"On the flip side, coding a dynamic system is more complex, i.e. uses more "
"programmed logic, which results in opportunities for errors and bugs. If one "
"isn't careful, they can develop a system that bloats the technical debt of "
"the application."
msgstr ""
"Néanmoins, la conception d'un système dynamique de ce type est plus complexe "
"car il nécessite plus de programmation, ce qui favorise l'apparition de "
"bugs. Il faudra donc prendre garde à ne pas développer un système dont la "
"complexité pourrait mener à l'opposé du résultat recherché."

msgid "As such, the best options would be..."
msgstr "Ainsi, les meilleures options seraient...."

msgid "To use a static level for smaller games."
msgstr "Utiliser un niveau unique pour les petits jeux."

msgid ""
"If one has the time/resources on a medium/large game, create a library or "
"plugin that can code the management of nodes and resources. If refined over "
"time, so as to improve usability and stability, then it could evolve into a "
"reliable tool across projects."
msgstr ""
"En fonction du temps et des ressources disponibles pour la création d'un jeu "
"de taille moyenne à étendue, la création d'une librairie ou d'un plugin pour "
"simplifier la gestion des nœuds et ressources. Cette librairie/plugin "
"pourrait être amélioré et évoluer en un outil fiable au fil des projets."

msgid ""
"Code the dynamic logic for a medium/large game because one has the coding "
"skills, but not the time or resources to refine the code (game's gotta get "
"done). Could potentially refactor later to outsource the code into a plugin."
msgstr ""
"Implémenter la logique de chargement dynamique directement dans le jeu dans "
"le cadre d'un projet de taille moyenne/étendue dont les délais ne permettent "
"pas l'élaboration d'une solution plus élégante. Cette implémentation "
"pourrait par la suite être externalisée sous forme de plugin, lorsque le "
"temps nécessaire est disponible."

msgid ""
"For an example of the various ways one can swap scenes around at runtime, "
"please see the :ref:`\"Change scenes manually\" "
"<doc_change_scenes_manually>` documentation."
msgstr ""
"Pour trouver des exemples des différentes façons existantes pour charger les "
"scènes de façon dynamique à l’exécution, on peut se référer à la "
"documentation suivante : :ref:`\"Change scenes manually\" "
"<doc_change_scenes_manually>`."

msgid "Translation status"
msgstr "État de la traduction"
