# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GPU optimization"
msgstr "Optimisation GPU"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"The demand for new graphics features and progress almost guarantees that you "
"will encounter graphics bottlenecks. Some of these can be on the CPU side, "
"for instance in calculations inside the Godot engine to prepare objects for "
"rendering. Bottlenecks can also occur on the CPU in the graphics driver, "
"which sorts instructions to pass to the GPU, and in the transfer of these "
"instructions. And finally, bottlenecks also occur on the GPU itself."
msgstr ""
"La demande de nouvelles fonctionnalités graphiques et de progrès garantit "
"presque que vous rencontrerez des goulots d'étranglement graphiques. "
"Certains d'entre eux peuvent être du côté du CPU, par exemple dans les "
"calculs à l'intérieur du moteur Godot pour préparer les objets pour le "
"rendu. Des goulots d'étranglement peuvent également se produire dans le CPU "
"dans le pilote graphique, qui trie les instructions à transmettre au GPU, et "
"dans le transfert de ces instructions. Et enfin, des goulots d'étranglement "
"se produisent également dans le GPU lui-même."

msgid ""
"Where bottlenecks occur in rendering is highly hardware-specific. Mobile "
"GPUs in particular may struggle with scenes that run easily on desktop."
msgstr ""
"Les goulets d'étranglement dans le rendu sont très spécifiques au matériel. "
"Les GPU mobiles en particulier peuvent avoir du mal à rendre des scènes qui "
"s'exécutent facilement sur un ordinateur de bureau."

msgid ""
"Understanding and investigating GPU bottlenecks is slightly different to the "
"situation on the CPU. This is because, often, you can only change "
"performance indirectly by changing the instructions you give to the GPU. "
"Also, it may be more difficult to take measurements. In many cases, the only "
"way of measuring performance is by examining changes in the time spent "
"rendering each frame."
msgstr ""
"La compréhension et l'étude des goulets d'étranglement GPU sont légèrement "
"différentes de la situation du CPU. En effet, souvent, vous ne pouvez "
"modifier les performances qu'indirectement, en changeant les instructions "
"que vous donnez au GPU. De plus, il peut être plus difficile de prendre des "
"mesures. Dans de nombreux cas, la seule façon de mesurer les performances "
"est d'examiner les changements dans le temps passé à rendre chaque image."

msgid "Draw calls, state changes, and APIs"
msgstr "Draw calls, les changements d'état et APIs"

msgid ""
"The following section is not relevant to end-users, but is useful to provide "
"background information that is relevant in later sections."
msgstr ""
"La section suivante ne concerne pas les utilisateurs finaux, mais elle est "
"utile pour fournir des informations générales qui seront utiles dans les "
"sections suivantes."

msgid ""
"Godot sends instructions to the GPU via a graphics API (OpenGL, OpenGL ES or "
"Vulkan). The communication and driver activity involved can be quite costly, "
"especially in OpenGL and OpenGL ES. If we can provide these instructions in "
"a way that is preferred by the driver and GPU, we can greatly increase "
"performance."
msgstr ""
"Godot envoie des instructions au GPU via une API graphique (OpenGL, OpenGL "
"ES or Vulkan). La communication et l'activité du pilote qui en découle "
"peuvent être assez coûteuses, surtout dans OpenGL and OpenGL ES. Si nous "
"pouvons fournir ces instructions de la manière préférée par le pilote et le "
"GPU, nous pouvons considérablement augmenter les performances."

msgid ""
"Nearly every API command in OpenGL requires a certain amount of validation "
"to make sure the GPU is in the correct state. Even seemingly simple commands "
"can lead to a flurry of behind-the-scenes housekeeping. Therefore, the goal "
"is to reduce these instructions to a bare minimum and group together similar "
"objects as much as possible so they can be rendered together, or with the "
"minimum number of these expensive state changes."
msgstr ""
"Presque chaque commande API dans OpenGL nécessite une certaine quantité de "
"validation, pour s'assurer que le GPU est dans le bon état. Même des "
"commandes apparemment simples peuvent entraîner une avalanche de tâches "
"internes en coulisses. Par conséquent, l'objectif est de réduire ces "
"instructions au strict minimum et de grouper autant que possible les objets "
"similaires afin qu'ils puissent être rendus ensemble, ou avec le minimum de "
"ces changements d'état coûteux."

msgid "2D batching"
msgstr "Traitement 2D par lots"

msgid ""
"In 2D, the costs of treating each item individually can be prohibitively "
"high - there can easily be thousands of them on the screen. This is why 2D "
"*batching* is used. Multiple similar items are grouped together and rendered "
"in a batch, via a single draw call, rather than making a separate draw call "
"for each item. In addition, this means state changes, material and texture "
"changes can be kept to a minimum."
msgstr ""
"En 2D, les coûts de traitement de chaque élément individuellement peuvent "
"être prohibitifs - il peut facilement y en avoir des milliers à l'écran. "
"C'est la raison pour laquelle le *traitement par lots* 2D est utilisé. "
"Plusieurs éléments similaires sont groupés et rendus en un lot, par un seul "
"drawcall, plutôt que de faire un drawcall distinct pour chaque élément. En "
"outre, cela signifie que les changements d'état, de matériau, et de texture "
"peuvent être réduits au minimum."

msgid "For more information on 2D batching, see :ref:`doc_batching`."
msgstr ""
"Pour plus d'informations sur le traitement 2D par lots, voir :ref:"
"`doc_batching`."

msgid "3D batching"
msgstr "Traitement 3D par lots"

msgid ""
"In 3D, we still aim to minimize draw calls and state changes. However, it "
"can be more difficult to batch together several objects into a single draw "
"call. 3D meshes tend to comprise hundreds or thousands of triangles, and "
"combining large meshes in real-time is prohibitively expensive. The costs of "
"joining them quickly exceeds any benefits as the number of triangles grows "
"per mesh. A much better alternative is to **join meshes ahead of time** "
"(static meshes in relation to each other). This can either be done by "
"artists, or programmatically within Godot."
msgstr ""
"En 3D, nous visons toujours à minimiser les draw calls et les changements "
"d'état. Cependant, il peut être plus difficile de grouper plusieurs objets "
"en un seul draw call. Les maillages 3D ont tendance à comprendre des "
"centaines ou des milliers de triangles, et combiner de grands maillages à "
"l'exécution est un coût prohibitif. Les coûts de leur assemblage dépassent "
"rapidement tous les avantages à mesure que le nombre de triangles augmente "
"par maille. Une bien meilleure solution consiste à **joindre les mailles à "
"l'avance** (mailles statiques les unes par rapport aux autres). Cela peut "
"être fait soit par les artistes, soit de manière logiciel dans Godot."

msgid ""
"There is also a cost to batching together objects in 3D. Several objects "
"rendered as one cannot be individually culled. An entire city that is off-"
"screen will still be rendered if it is joined to a single blade of grass "
"that is on screen. Thus, you should always take objects' location and "
"culling into account when attempting to batch 3D objects together. Despite "
"this, the benefits of joining static objects often outweigh other "
"considerations, especially for large numbers of distant or low-poly objects."
msgstr ""
"Il y a également un coût au traitement par lots d'objets en 3d. Plusieurs "
"objets rendus comme un seul ne peuvent pas être occultés individuellement. "
"Une ville entière qui est hors écran sera quand même rendue si elle est "
"jointe à un seul brin d'herbe qui est à l'écran. Par conséquent, vous devez "
"prendre en compte l'emplacement des objets et de leur occlusion en compte "
"quand vous tentez de traiter des objets 3D en lot. Malgré cela, les "
"avantages de joindre des objets statiques l'emportent souvent sur d'autres "
"considérations, en particulier pour un grand nombre d'objets à peu de "
"polygones."

msgid ""
"For more information on 3D specific optimizations, see :ref:"
"`doc_optimizing_3d_performance`."
msgstr ""
"Pour plus d'informations sur les optimisations spécifiques à la 3D, voir :"
"ref:`doc_optimizing_3d_performance`."

msgid "Reuse Shaders and Materials"
msgstr "Réutilisation des Shaders et des Materials"

msgid ""
"The Godot renderer is a little different to what is out there. It's designed "
"to minimize GPU state changes as much as possible. :ref:`SpatialMaterial "
"<class_SpatialMaterial>` does a good job at reusing materials that need "
"similar shaders. If custom shaders are used, make sure to reuse them as much "
"as possible. Godot's priorities are:"
msgstr ""
"Le moteur de rendu de Godot est un peu différent de ce qu'y existe ailleurs. "
"Il est conçu pour minimiser autant que possible les changements d'état du "
"GPU. :ref:`SpatialMaterial <class_SpatialMaterial>` fait un bon travail pour "
"réutiliser les matériaux qui nécessitent des shaders similaires. Si des "
"shaders personnalisés sont utilisés, assurez-vous de les réutiliser autant "
"que possible. Les priorités de Godot sont :"

msgid ""
"**Reusing Materials:** The fewer different materials in the scene, the "
"faster the rendering will be. If a scene has a huge amount of objects (in "
"the hundreds or thousands), try reusing the materials. In the worst case, "
"use atlases to decrease the amount of texture changes."
msgstr ""
"**Réutilisation des matériaux :** Moins il y a de matériaux différents dans "
"la scène, plus le rendu sera rapide. Si une scène a une quantité énorme "
"d'objets (des centaines ou des milliers), essayez de réutiliser les "
"matériaux. Dans le pire des cas, utilisez des atlas pour réduire la quantité "
"de changements de texture."

msgid ""
"**Reusing Shaders:** If materials can't be reused, at least try to re-use "
"shaders. Note: shaders are automatically reused between SpatialMaterials "
"that share the same configuration (features that are enabled or disabled "
"with a check box) even if they have different parameters."
msgstr ""
"**Reusing Shaders :** Si les matériaux ne peuvent pas être réutilisés, "
"essayez au moins de réutiliser les shaders. Remarque : les shaders sont "
"automatiquement réutilisés entre les SpatialMaterials qui partagent la même "
"configuration (caractéristiques activées ou désactivées à l'aide d'une case "
"à cocher), même s'ils ont des paramètres différents."

msgid ""
"If a scene has, for example, ``20,000`` objects with ``20,000`` different "
"materials each, rendering will be slow. If the same scene has ``20,000`` "
"objects, but only uses ``100`` materials, rendering will be much faster."
msgstr ""
"Si une scène a, par exemple, ``20,000`` objets avec ``20,000`` matériaux "
"différents chacun, le rendu sera lent. Si la même scène contient ``20,000`` "
"objets, mais n'utilise que ``100`` matériaux, le rendu sera beaucoup plus "
"rapide."

msgid "Pixel cost versus vertex cost"
msgstr "Coût en pixel contre coût en sommet"

msgid ""
"You may have heard that the lower the number of polygons in a model, the "
"faster it will be rendered. This is *really* relative and depends on many "
"factors."
msgstr ""
"Vous avez peut-être entendu dire que plus le nombre de polygones dans un "
"modèle est faible, plus le rendu est rapide. C'est *vraiment* relatif et "
"cela dépend de nombreux facteurs."

msgid ""
"On a modern PC and console, vertex cost is low. GPUs originally only "
"rendered triangles. This meant that every frame:"
msgstr ""
"Sur un PC et une console modernes, le coût du sommet est faible. À "
"l'origine, les GPU ne rendaient que les triangles. Cela signifie que chaque "
"image :"

msgid "All vertices had to be transformed by the CPU (including clipping)."
msgstr ""
"Tous les sommets ont dû être transformés par le CPU (y compris le clipping)."

msgid "All vertices had to be sent to the GPU memory from the main RAM."
msgstr ""
"Tous les sommets ont dû être envoyés à la mémoire GPU depuis la RAM "
"principale."

msgid ""
"Nowadays, all this is handled inside the GPU, greatly increasing "
"performance. 3D artists usually have the wrong feeling about polycount "
"performance because 3D DCCs (such as Blender, Max, etc.) need to keep "
"geometry in CPU memory for it to be edited, reducing actual performance. "
"Game engines rely on the GPU more, so they can render many triangles much "
"more efficiently."
msgstr ""
"De nos jours, tout cela est géré à l'intérieur du GPU, augmentant grandement "
"les performances. Les artistes 3D ont généralement le mauvais sentiment au "
"sujet de la performance du nombre de polygone parce que les DCC 3D (tels que "
"Blender, Max, etc.) ont besoin de garder la géométrie dans la mémoire CPU "
"pour qu'elle puisse être éditée, réduisant ainsi la performance réelle. Les "
"moteurs de jeu font davantage appel au GPU, ce qui leur permet de rendre de "
"nombreux triangles de manière beaucoup plus efficace."

msgid ""
"On mobile devices, the story is different. PC and console GPUs are brute-"
"force monsters that can pull as much electricity as they need from the power "
"grid. Mobile GPUs are limited to a tiny battery, so they need to be a lot "
"more power efficient."
msgstr ""
"Sur les appareils mobiles, l'histoire est différente. Les GPU PC et Console "
"sont des monstres de force brute qui peuvent tirer autant d'électricité "
"qu'ils en ont besoin du réseau électrique. Les GPU mobiles sont limités à "
"une petite batterie, ils doivent donc être beaucoup plus économes en énergie."

msgid ""
"To be more efficient, mobile GPUs attempt to avoid *overdraw*. Overdraw "
"occurs when the same pixel on the screen is being rendered more than once. "
"Imagine a town with several buildings. GPUs don't know what is visible and "
"what is hidden until they draw it. For example, a house might be drawn and "
"then another house in front of it (which means rendering happened twice for "
"the same pixel). PC GPUs normally don't care much about this and just throw "
"more pixel processors to the hardware to increase performance (which also "
"increases power consumption)."
msgstr ""
"Pour être plus efficaces, les GPU mobiles tentent d'éviter l'*overdraw*. "
"Overdraw arrive quand le même pixel à l'écran est rendu plus d'une fois. "
"Imaginez une ville avec plusieurs bâtiments, les GPU ne savent pas ce qui "
"est visible et ce qui est caché jusqu'à ce qu'ils le dessinent. Une maison "
"peut être dessinée, puis une autre maison devant elle (le rendu a eu lieu "
"deux fois pour le même pixel !). Les GPU PC ne s'en soucient normalement pas "
"beaucoup et se contentent d'ajouter des processeurs de pixels au hardware "
"pour augmenter les performances (mais cela augmente aussi la consommation "
"d'énergie)."

msgid ""
"Using more power is not an option on mobile so mobile devices use a "
"technique called *tile-based rendering* which divides the screen into a "
"grid. Each cell keeps the list of triangles drawn to it and sorts them by "
"depth to minimize *overdraw*. This technique improves performance and "
"reduces power consumption, but takes a toll on vertex performance. As a "
"result, fewer vertices and triangles can be processed for drawing."
msgstr ""
"L’utilisation de plus d’énergie n’est pas une option sur mobile, donc les "
"appareils mobiles utilisent une technique appelée *tile-based rendering* qui "
"divise l’écran en grille. Chaque cellule conserve la liste des triangles qui "
"y sont dessinés dessus et les trie par profondeur pour minimiser "
"l'*overdraw*. Cette technique améliore les performances et réduit la "
"consommation d'énergie, mais a un impact sur les performances des sommets. "
"Par conséquent, moins de sommets et de triangles peuvent être traités pour "
"le dessin."

msgid ""
"Additionally, tile-based rendering struggles when there are small objects "
"with a lot of geometry within a small portion of the screen. This forces "
"mobile GPUs to put a lot of strain on a single screen tile, which "
"considerably decreases performance as all the other cells must wait for it "
"to complete before displaying the frame."
msgstr ""
"De plus, le tile-based rendering a des difficultés quand il y a de petits "
"objets avec beaucoup de géométrie dans une petite partie de l'écran. Cela "
"oblige les GPU mobiles à mettre beaucoup de pression sur une seule cellule "
"de l'écran, ce qui diminue considérablement les performances car toutes les "
"autres cellules doivent attendre qu'elle termine pour pouvoir afficher "
"l'image."

msgid ""
"To summarize, don't worry about vertex count on mobile, but **avoid "
"concentration of vertices in small parts of the screen**. If a character, "
"NPC, vehicle, etc. is far away (which means it looks tiny), use a smaller "
"level of detail (LOD) model. Even on desktop GPUs, it's preferable to avoid "
"having triangles smaller than the size of a pixel on screen."
msgstr ""
"Pour faire court, ne vous inquiétez pas trop du nombre de sommet sur mobile, "
"mais **évitez les concentration de sommet sur de petites parties de "
"l'écran**. Si, un personnage, un PNJ, un véhicule, etc. est éloigné (donc il "
"semble minuscule), utilisez plutôt un modèle à plus petit niveau de détail "
"(LOD). Même sur les GPU de bureau, il est préférable d’éviter d’avoir des "
"triangles plus petits que la taille d’un pixel à l’écran."

msgid "Pay attention to the additional vertex processing required when using:"
msgstr ""
"Faites attention au traitement supplémentaire des vertex requis lors de "
"l'utilisation :"

msgid "Skinning (skeletal animation)"
msgstr "Skinning (animation squelettique)"

msgid "Morphs (shape keys)"
msgstr "Morphs (clés de forme)"

msgid "Vertex-lit objects (common on mobile)"
msgstr "Objets éclairés par les sommets (communs sur mobile)"

msgid "Pixel/fragment shaders and fill rate"
msgstr "Pixel/fragment shaders et taux de remplissage"

msgid ""
"In contrast to vertex processing, the costs of fragment (per-pixel) shading "
"have increased dramatically over the years. Screen resolutions have "
"increased (the area of a 4K screen is 8,294,400 pixels, versus 307,200 for "
"an old 640×480 VGA screen, that is 27x the area), but also the complexity of "
"fragment shaders has exploded. Physically-based rendering requires complex "
"calculations for each fragment."
msgstr ""
"Contrairement au traitement des sommets, le coût des sahders de fragments "
"(par-pixel) a augmenté de façon spectaculaire au fil des ans. Les "
"résolutions d'écran ont augmenté (la surface d'un écran 4K est de 8,294,400 "
"pixels, contre 307,200 pixels pour un ancien écran VGA 640x480, soit 27 fois "
"la surface), mais la complexité des shaders de fragments a également "
"explosé. Le rendu basé sur la physique nécessite des calculs complexes pour "
"chaque fragment."

msgid ""
"You can test whether a project is fill rate-limited quite easily. Turn off V-"
"Sync to prevent capping the frames per second, then compare the frames per "
"second when running with a large window, to running with a very small "
"window. You may also benefit from similarly reducing your shadow map size if "
"using shadows. Usually, you will find the FPS increases quite a bit using a "
"small window, which indicates you are to some extent fill rate-limited. On "
"the other hand, if there is little to no increase in FPS, then your "
"bottleneck lies elsewhere."
msgstr ""
"Vous pouvez vérifier assez facilement si un projet est limité en termes de "
"taux de remplissage. Désactivez V-Sync pour éviter de limiter le nombre "
"d'images par seconde, puis comparez les images par seconde lorsque vous "
"utilisez une grande fenêtre, à celles très petite fenêtre vous pouvez "
"également réduire de la même manière la taille de votre carte des ombres si "
"vous utilisez des ombres. En général, vous constaterez que les FPS "
"augmentent considérablement lorsque vous utilisez une petite fenêtre, ce qui "
"indique que votre taux de remplissage est limité dans une certaine mesure. "
"Si en revanche, les FPS augmentent peu ou pas du tout, alors votre goulot "
"d'étranglement est ailleurs."

msgid ""
"You can increase performance in a fill rate-limited project by reducing the "
"amount of work the GPU has to do. You can do this by simplifying the shader "
"(perhaps turn off expensive options if you are using a :ref:`SpatialMaterial "
"<class_SpatialMaterial>`), or reducing the number and size of textures used."
msgstr ""
"Vous pouvez augmenter les performances dans un projet avec un taux de "
"remplissage limité en réduisant la quantité de travail que le GPU doit "
"effectuer. Vous pouvez le faire en simplifiant le shader (peut-être en "
"désactivant les options coûteuses si vous utilisez un :ref:`SpatialMaterial "
"<class_SpatialMaterial>`), ou en réduisant le nombre et la taille des "
"textures utilisées."

msgid ""
"**When targeting mobile devices, consider using the simplest possible "
"shaders you can reasonably afford to use.**"
msgstr ""
"**Lorsque vous ciblez des appareils mobiles, pensez à utiliser les shaders "
"les plus simples possibles que vous pouvez raisonnablement vous permettre "
"d'utiliser.**"

msgid "Reading textures"
msgstr "Lecture des textures"

msgid ""
"The other factor in fragment shaders is the cost of reading textures. "
"Reading textures is an expensive operation, especially when reading from "
"several textures in a single fragment shader. Also, consider that filtering "
"may slow it down further (trilinear filtering between mipmaps, and "
"averaging). Reading textures is also expensive in terms of power usage, "
"which is a big issue on mobiles."
msgstr ""
"L'autre facteur qui intervient dans les shaders de fragments est le coût de "
"la lecture des textures. La lecture des textures est une opération coûteuse, "
"en particulier la lecture de plusieurs textures dans un seul fragment "
"shader. De plus, il faut tenir compte du fait que le filtrage peut le "
"ralentir davantage (filtrage trilinéaire entre les mipmaps, et calcul de "
"moyenne). La lecture des textures est également coûteuse en termes de "
"puissance, ce qui est un gros problème sur les mobiles."

msgid ""
"**If you use third-party shaders or write your own shaders, try to use "
"algorithms that require as few texture reads as possible.**"
msgstr ""
"**Si vous utilisez des shaders tiers ou écrivez vos propres shaders, essayez "
"d'utiliser des algorithmes qui nécessitent le moins de lecture de texture "
"possible.**"

msgid "Texture compression"
msgstr "Compression de texture"

msgid ""
"By default, Godot compresses textures of 3D models when imported using video "
"RAM (VRAM) compression. Video RAM compression isn't as efficient in size as "
"PNG or JPG when stored, but increases performance enormously when drawing "
"large enough textures."
msgstr ""
"Par défaut, Godot compresse les textures des modèles 3D lorsqu'ils sont "
"importés en utilisant la compression de la RAM vidéo (VRAM). La compression "
"Video RAM n'est pas aussi efficace en taille que PNG ou JPG lorsqu'elle est "
"stockée, mais augmente considérablement les performances lors du dessin."

msgid ""
"This is because the main goal of texture compression is bandwidth reduction "
"between memory and the GPU."
msgstr ""
"En effet, l'objectif principal de la compression de texture est la réduction "
"de la bande passante entre la mémoire et le GPU."

msgid ""
"In 3D, the shapes of objects depend more on the geometry than the texture, "
"so compression is generally not noticeable. In 2D, compression depends more "
"on shapes inside the textures, so the artifacts resulting from 2D "
"compression are more noticeable."
msgstr ""
"En 3D, les formes des objets dépendent plus de la géométrie que de la "
"texture, la compression n'est donc généralement pas perceptible. En 2D, la "
"compression dépend davantage des formes à l'intérieur des textures, de sorte "
"que les artefacts résultant de la compression 2D sont plus visibles."

msgid ""
"As a warning, most Android devices do not support texture compression of "
"textures with transparency (only opaque), so keep this in mind."
msgstr ""
"En guise d'avertissement, la plupart des appareils Android ne prennent pas "
"en charge la compression de texture des textures avec transparence "
"(seulement opaque), gardez ceci à l'esprit."

msgid ""
"Even in 3D, \"pixel art\" textures should have VRAM compression disabled as "
"it will negatively affect their appearance, without improving performance "
"significantly due to their low resolution."
msgstr ""
"Même en 3D, les textures \"pixel art\" devraient avoir la compression VRAM "
"désactivée car elle affectera négativement leur apparence, sans améliorer "
"significativement les performances en raison de leur faible résolution."

msgid "Post-processing and shadows"
msgstr "Post-traitement et ombres"

msgid ""
"Post-processing effects and shadows can also be expensive in terms of "
"fragment shading activity. Always test the impact of these on different "
"hardware."
msgstr ""
"Les effets de post-traitement et les ombres peuvent également être coûteux "
"en termes d'activité des shaders de fragments. Testez toujours l'impact de "
"ces effets sur différent hardware."

msgid ""
"**Reducing the size of shadowmaps can increase performance**, both in terms "
"of writing and reading the shadowmaps. On top of that, the best way to "
"improve performance of shadows is to turn shadows off for as many lights and "
"objects as possible. Smaller or distant OmniLights/SpotLights can often have "
"their shadows disabled with only a small visual impact."
msgstr ""
"**Réduire la taille des shadowmaps peut augmenter les performances**, tant "
"en termes d'écriture que de lecture des shadowmaps. De plus, la meilleure "
"façon d'améliorer les performances des ombres est de désactiver les ombres "
"pour le plus grand nombre possible de lumières et d'objets. Les OmniLights/"
"SpotLights plus petits ou plus éloignés peuvent souvent voir leurs ombres "
"désactivées avec un faible impact visuel."

msgid "Transparency and blending"
msgstr "Transparence et mélange"

msgid ""
"Transparent objects present particular problems for rendering efficiency. "
"Opaque objects (especially in 3D) can be essentially rendered in any order "
"and the Z-buffer will ensure that only the front most objects get shaded. "
"Transparent or blended objects are different. In most cases, they cannot "
"rely on the Z-buffer and must be rendered in \"painter's order\" (i.e. from "
"back to front) to look correct."
msgstr ""
"Les objets transparents posent des problèmes particuliers d'efficacité de "
"rendu. Les objets opaques (surtout en 3D) peuvent être rendus dans n'importe "
"quel ordre et le tampon Z garantit que seuls les objets les plus à l'avant "
"sont traité par un shader. Les objets transparents ou mélangés sont "
"différents. Dans la plupart des cas, ils ne peuvent pas compter sur le "
"tampon Z et doivent être rendus dans \"l'ordre du peintre\" (c'est-à-dire de "
"l'arrière vers l'avant) pour avoir une apparence correcte."

msgid ""
"Transparent objects are also particularly bad for fill rate, because every "
"item has to be drawn even if other transparent objects will be drawn on top "
"later on."
msgstr ""
"Les éléments transparents sont aussi particulièrement mauvais pour le taux "
"de remplissage, car chaque élément doit être dessiné, même si plus tard des "
"éléments transparents seront dessinés par-dessus."

msgid ""
"Opaque objects don't have to do this. They can usually take advantage of the "
"Z-buffer by writing to the Z-buffer only first, then only performing the "
"fragment shader on the \"winning\" fragment, the object that is at the front "
"at a particular pixel."
msgstr ""
"Les objets opaques n'ont pas à faire cela. Ils peuvent généralement tirer "
"parti du tampon Z en écrivant d'abord dans le tampon Z, puis en exécutant le "
"shader de fragment sur le fragment \"gagnant\", l'objet qui se trouve à "
"l'avant pour un pixel particulier."

msgid ""
"Transparency is particularly expensive where multiple transparent objects "
"overlap. It is usually better to use transparent areas as small as possible "
"to minimize these fill rate requirements, especially on mobile, where fill "
"rate is very expensive. Indeed, in many situations, rendering more complex "
"opaque geometry can end up being faster than using transparency to \"cheat\"."
msgstr ""
"La transparence est particulièrement coûteuse lorsque plusieurs objets "
"transparents se chevauchent. Il est généralement préférable d'utiliser une "
"zone transparente aussi petite que possible afin de minimiser ces exigences "
"de taux de remplissage, en particulier sur les téléphones portables, où le "
"taux de remplissage est très coûteux. En effet, dans de nombreuses "
"situations, rendre une géométrie opaque plus complexe peut s'avérer plus "
"rapide que d'utiliser la transparence pour \"tricher\"."

msgid "Multi-platform advice"
msgstr "Conseil multi-plateforme"

msgid ""
"If you are aiming to release on multiple platforms, test *early* and test "
"*often* on all your platforms, especially mobile. Developing a game on "
"desktop but attempting to port it to mobile at the last minute is a recipe "
"for disaster."
msgstr ""
"Si vous avez l'intention de publier sur plusieurs plates-formes, testez *au "
"début* et *souvent* sur toutes vos plates-formes, en particulier mobiles. "
"Développer un jeu sur un ordinateur de bureau puis essayer de le porter sur "
"le mobile à la dernière minute est une recette pour le désastre."

msgid ""
"In general, you should design your game for the lowest common denominator, "
"then add optional enhancements for more powerful platforms. For example, you "
"may want to use the GLES2 backend for both desktop and mobile platforms "
"where you target both."
msgstr ""
"En général, vous devez concevoir votre jeu pour le plus petit dénominateur "
"commun, puis ajouter des améliorations optionnelles pour des plates-formes "
"plus puissantes. Par exemple, vous pouvez vouloir utiliser le backend GLES2 "
"pour les plateformes de bureau et les plateformes mobiles dans le cas où "
"vous ciblez les deux."

msgid "Mobile/tiled renderers"
msgstr "Rendu mobile/tuile"

msgid ""
"As described above, GPUs on mobile devices work in dramatically different "
"ways from GPUs on desktop. Most mobile devices use tile renderers. Tile "
"renderers split up the screen into regular-sized tiles that fit into super "
"fast cache memory, which reduces the number of read/write operations to the "
"main memory."
msgstr ""
"Comme décrit ci-dessus, les GPU des appareils mobiles fonctionnent de "
"manière radicalement différente des GPU des ordinateurs de bureau. La "
"plupart des appareils mobiles utilisent des rendus par tuiles. Ces derniers "
"divisent l'écran en tuiles de taille régulière qui s'intègrent dans une "
"mémoire cache super rapide et réduisent les opérations de lecture et "
"d'écriture dans la mémoire principale."

msgid ""
"There are some downsides though. Tiled rendering can make certain techniques "
"much more complicated and expensive to perform. Tiles that rely on the "
"results of rendering in different tiles or on the results of earlier "
"operations being preserved can be very slow. Be very careful to test the "
"performance of shaders, viewport textures and post processing."
msgstr ""
"Il y a cependant quelques inconvénients. Le rendu par tuile rend certaines "
"techniques beaucoup plus compliquées et coûteuses à mettre en œuvre. Les "
"tuiles qui comptent sur les résultats du rendu de différentes tuiles ou sur "
"les résultats d'opérations antérieures qui ont été préservés peuvent être "
"très lents. Soyez très attentifs à tester les performances des shaders, des "
"textures de viewport et du post-traitement."

msgid "Translation status"
msgstr "État de la traduction"
