# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Animating thousands of fish with MultiMeshInstance"
msgstr "Animer des milliers de poissons avec MultiMeshInstance"

msgid ""
"This tutorial explores a technique used in the game `ABZU <https://www."
"gdcvault.com/play/1024409/Creating-the-Art-of-ABZ>`_ for rendering and "
"animating thousands of fish using vertex animation and static mesh "
"instancing."
msgstr ""
"Ce tutoriel explore une technique utilisée dans le jeu `ABZU <https://www."
"gdcvault.com/play/1024409/Creating-the-Art-of-ABZ>`_ pour rendre et animer "
"des milliers de poissons en utilisant des animations de sommets et des "
"instanciations de mesh statiques."

msgid ""
"In Godot, this can be accomplished with a custom :ref:`Shader "
"<class_Shader>` and a :ref:`MultiMeshInstance <class_MultiMeshInstance>`. "
"Using the following technique you can render thousands of animated objects, "
"even on low end hardware."
msgstr ""
"Dans Godot, ceci peut être accompli avec un :ref:`Shader <class_Shader>` "
"personnalisé et un :ref:`MultiMeshInstance <class_MultiMeshInstance>`. En "
"utilisant cette technique, vous pourrez rendre des milliers d'objets animés "
"sur du matériel bas ou haut de gamme."

msgid ""
"We will start by animating one fish. Then, we will see how to extend that "
"animation to thousands of fish."
msgstr ""
"Nous allons commencer par animer un poisson. Puis, nous allons voir comment "
"reproduire celle-ci sur des milliers de poissons."

msgid "Animating one Fish"
msgstr "Animation d'un poisson"

msgid ""
"We will start with a single fish. Load your fish model into a :ref:"
"`MeshInstance <class_MeshInstance>` and add a new :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."
msgstr ""
"Nous allons commencer avec un seul poisson. Chargez votre modèle de poisson "
"dans une :ref:`MeshInstance <class_MeshInstance>` et ajoutez un nouveau :ref:"
"`ShaderMaterial <class_ShaderMaterial>`."

msgid ""
"Here is the fish we will be using for the example images, you can use any "
"fish model you like."
msgstr ""
"Voici le poisson que nous utiliserons pour les images d'exemple, mais vous "
"pouvez utiliser n'importe quel modèle de poisson qui vous plaît."

msgid ""
"The fish model in this tutorial is made by `QuaterniusDev <http://quaternius."
"com>`_ and is shared with a creative commons license. CC0 1.0 Universal (CC0 "
"1.0) Public Domain Dedication https://creativecommons.org/publicdomain/"
"zero/1.0/"
msgstr ""
"Le modèle de poisson de ce tutoriel a été créé par `QuaterniusDev <http://"
"quaternius.com>`_ et est partagé sous licence creative commons. CC0 1.0 "
"Universal (CC0 1.0) Public Domain Dedication https://creativecommons.org/"
"publicdomain/zero/1.0/"

msgid ""
"Typically, you would use bones and a :ref:`Skeleton <class_Skeleton>` to "
"animate objects. However, bones are animated on the CPU and so you end "
"having to calculate thousands of operations every frame and it becomes "
"impossible to have thousands of objects. Using vertex animation in a vertex "
"shader, you avoid using bones and can instead calculate the full animation "
"in a few lines of code and completely on the GPU."
msgstr ""
"En général, on utilise des os (bones) et un squelette (:ref:`Skeleton "
"<class_Skeleton>`) pour animer des objets. Cependant, les os sont animés par "
"le CPU et vous vous retrouvez avec des milliers d'opérations à calculer à "
"chaque image et il devient impossible d'avoir des milliers d'objets. En "
"utilisant l'animation de points dans un shader de sommets (vertex shader), "
"vous évitez l'utilisation des os et pouvez donc calculer l'animation "
"complète en quelques lignes de code et entièrement sur le GPU."

msgid "The animation will be made of four key motions:"
msgstr "L'animation sera constituée de 4 mouvements clés :"

msgid "A side to side motion"
msgstr "Un mouvement latéral"

msgid "A pivot motion around the center of the fish"
msgstr "Un mouvement de pivot autour du centre du poisson"

msgid "A panning wave motion"
msgstr "Un mouvement d'ondulation"

msgid "A panning twist motion"
msgstr "Un mouvement de torsion"

msgid ""
"All the code for the animation will be in the vertex shader with uniforms "
"controlling the amount of motion. We use uniforms to control the strength of "
"the motion so that you can tweak the animation in editor and see the results "
"in real time, without the shader having to recompile."
msgstr ""
"Tout le code de l'animation sera dans le vertex shader avec des uniformes "
"pour contrôler la quantité de mouvement. On utilise des uniformes pour "
"contrôler la force des mouvements afin de pouvoir ajuster l'animation dans "
"l'éditeur et ainsi voir les changements en temps réel, sans avoir à "
"recompiler le shader."

msgid ""
"All the motions will be made using cosine waves applied to ``VERTEX`` in "
"model space. We want the vertices to be in model space so that the motion is "
"always relative to the orientation of the fish. For example, side-to-side "
"will always move the fish back and forth in its left to right direction, "
"instead of on the ``x`` axis in the world orientation."
msgstr ""
"Tous les mouvements seront effectués à l'aide d'ondes cosinus appliquées à "
"``VERTEX`` dans l'espace du modèle. Nous voulons que les sommets soient dans "
"l'espace du modèle de sorte que le mouvement soit toujours relatif à "
"l'orientation du poisson. Par exemple, le mouvement latéral devra toujours "
"déplacer le poisson suivant sa gauche et sa droite, et non pas le déplacer "
"sur l'axe ``x`` dans l'orientation du monde."

msgid ""
"In order to control the speed of the animation, we will start by defining "
"our own time variable using ``TIME``."
msgstr ""
"Afin de contrôler la vitesse de l'animation, nous allons commencer par "
"définir notre propre variable de temps en utilisant ``TIME``."

msgid ""
"The first motion we will implement is the side to side motion. It can be "
"made by offsetting ``VERTEX.x`` by ``cos`` of ``TIME``. Each time the mesh "
"is rendered, all the vertices will move to the side by the amount of "
"``cos(time)``."
msgstr ""
"Le premier mouvement que nous allons implémenter est le mouvement latéral. "
"Cela peut être fait en décalant `` VERTEX.x`` par `` cos`` de `` TIME``. "
"Chaque fois que le mesh est rendu, tous les sommets se déplacent "
"latéralement de la quantité de ``cos (time)``."

msgid "The resulting animation should look something like this:"
msgstr "L'animation résultante devrait ressembler à ceci :"

msgid ""
"Next, we add the pivot. Because the fish is centered at (0, 0), all we have "
"to do is multiply ``VERTEX`` by a rotation matrix for it to rotate around "
"the center of the fish."
msgstr ""
"Ensuite, nous ajoutons le pivot. Comme le poisson est centré à (0, 0), il "
"suffit de multiplier ``VERTEX`` par une matrice de rotation pour qu'il "
"tourne autour du centre du poisson."

msgid "We construct a rotation matrix like so:"
msgstr "Nous construisons une matrice de rotation de la sorte :"

msgid ""
"And then we apply it in the ``x`` and ``z`` axes by multiplying it by "
"``VERTEX.xz``."
msgstr ""
"Ensuite, nous l'appliquons dans les axes ``x`` et ``z`` en la multipliant "
"par ``VERTEX.xz``."

msgid "With only the pivot applied you should see something like this:"
msgstr ""
"Avec seulement le pivot appliqué, vous devriez voir quelque chose comme "
"ceci :"

msgid ""
"The next two motions need to pan down the spine of the fish. For that, we "
"need a new variable, ``body``. ``body`` is a float that is ``0`` at the tail "
"of the fish and ``1`` at its head."
msgstr ""
"Les deux mouvements suivants doivent se déplacer le long de la colonne "
"vertébrale du poisson. Pour cela, nous avons besoin d'une nouvelle variable, "
"``body``. ``body`` est un float qui vaut `` 0 `` à la queue du poisson et "
"``1`` à sa tête."

msgid ""
"The next motion is a cosine wave that moves down the length of the fish. To "
"make it move along the spine of the fish, we offset the input to ``cos`` by "
"the position along the spine, which is the variable we defined above, "
"``body``."
msgstr ""
"Le mouvement suivant est une onde cosinus qui descend le long du poisson. "
"Pour la déplacer le long de la colonne vertébrale du poisson, nous "
"compensons l'entrée dans ``cos`` par la position le long de la colonne "
"vertébrale, qui est la variable que nous avons définie ci-dessus, ``body``."

msgid ""
"This looks very similar to the side to side motion we defined above, but in "
"this one, by using ``body`` to offset ``cos`` each vertex along the spine "
"has a different position in the wave making it look like a wave is moving "
"along the fish."
msgstr ""
"Cela ressemble beaucoup au mouvement latéral que nous avons défini plus "
"haut, mais dans celui-ci, en utilisant ``body`` pour décaler ``cos``, chaque "
"sommet le long de la colonne vertébrale a une position différente dans la "
"vague, ce qui donne l'impression qu'une vague se déplace le long du poisson."

msgid ""
"The last motion is the twist, which is a panning roll along the spine. "
"Similarly to the pivot, we first construct a rotation matrix."
msgstr ""
"Le dernier mouvement est la torsion, qui donne un effet de roulement le long "
"de la colonne vertébrale. Comme pour le pivot, nous construisons d'abord une "
"matrice de rotation."

msgid ""
"We apply the rotation in the ``xy`` axes so that the fish appears to roll "
"around its spine. For this to work, the fish's spine needs to be centered on "
"the ``z`` axis."
msgstr ""
"Nous appliquons la rotation sur les axes ``xy`` pour que le poisson semble "
"rouler autour de sa colonne vertébrale. Pour que cela fonctionne, la colonne "
"vertébrale des poissons doit être centrée sur l'axe ``z``."

msgid "Here is the fish with twist applied:"
msgstr "Voici le poisson avec la torsion appliquée :"

msgid ""
"If we apply all these motions one after another, we get a fluid jelly-like "
"motion."
msgstr ""
"Si nous appliquons tous ces mouvements l'un après l'autre, nous obtenons un "
"mouvement fluide qui ressemble à de la gelée."

msgid ""
"Normal fish swim mostly with the back half of their body. Accordingly, we "
"need to limit the panning motions to the back half of the fish. To do this, "
"we create a new variable, ``mask``."
msgstr ""
"Les poissons normaux nagent surtout avec la moitié arrière de leur corps. "
"Par conséquent, nous devons limiter les mouvements de torsion et ondulation "
"à la moitié arrière du poisson. Pour ce faire, nous créons une nouvelle "
"variable, ``mask``."

msgid ""
"``mask`` is a float that goes from ``0`` at the front of the fish to ``1`` "
"at the end using ``smoothstep`` to control the point at which the transition "
"from ``0`` to ``1`` happens."
msgstr ""
"``mask`` est un float qui va de ``0`` à l'avant du poisson jusqu'à ``1`` à "
"la queue en utilisant ``smoothstep`` pour contrôler le point où la "
"transition de ``0`` à ``1`` se produit."

msgid "Below is an image of the fish with ``mask`` used as ``COLOR``:"
msgstr ""
"Ci-dessous, une image du poisson avec ``mask`` utilisé comme ``COLOR`` :"

msgid ""
"For the wave, we multiply the motion by ``mask`` which will limit it to the "
"back half."
msgstr ""
"Pour l'ondulation, nous multiplions le mouvement par ``mask`` ce qui la "
"limitera à la moitié arrière."

msgid ""
"In order to apply the mask to the twist, we use ``mix``. ``mix`` allows us "
"to mix the vertex position between a fully rotated vertex and one that is "
"not rotated. We need to use ``mix`` instead of multiplying ``mask`` by the "
"rotated ``VERTEX`` because we are not adding the motion to the ``VERTEX`` we "
"are replacing the ``VERTEX`` with the rotated version. If we multiplied that "
"by ``mask``, we would shrink the fish."
msgstr ""
"Afin d'appliquer le masque à la torsion, nous utilisons ``mix``. ``mix`` "
"nous permet de mélanger la position d'un sommet entre un sommet entièrement "
"pivoté et un sommet qui ne l'est pas. Nous devons utiliser ``mix`` au lieu "
"de multiplier ``mask`` par le ``VERTEX`` tourné parce que nous n'ajoutons "
"pas le mouvement au ``VERTEX``, nous remplaçons le ``VERTEX`` par la version "
"tournée. Si nous multipliions cela par ``mask``, nous rétrécirions le "
"poisson."

msgid "Putting the four motions together gives us the final animation."
msgstr "L'assemblage des quatre mouvements nous donne l'animation finale."

msgid ""
"Go ahead and play with the uniforms in order to alter the swim cycle of the "
"fish. You will find that you can create a wide variety of swim styles using "
"these four motions."
msgstr ""
"Allez-y et jouez avec les uniformes afin de modifier le cycle de nage des "
"poissons. Vous constaterez que vous pouvez créer une grande variété de "
"styles de nage en utilisant ces quatre mouvements."

msgid "Making a school of fish"
msgstr "Faire un banc de poissons"

msgid ""
"Godot makes it easy to render thousands of the same object using a "
"MultiMeshInstance node."
msgstr ""
"Godot facilite le rendu de milliers d'objets identiques à l'aide d'un nœud "
"MultiMeshInstance."

msgid ""
"A MultiMeshInstance node is created and used the same way you would make a "
"MeshInstance node. For this tutorial, we will name the MultiMeshInstance "
"node ``School``, because it will contain a school of fish."
msgstr ""
"Un nœud MultiMeshInstance est créé et utilisé de la même manière que vous le "
"feriez pour un nœud MeshInstance. Pour ce tutoriel, nous appellerons le nœud "
"MultiMeshInstance ``School``, car il contiendra un banc de poissons."

msgid ""
"Once you have a MultiMeshInstance add a :ref:`MultiMesh <class_MultiMesh>`, "
"and to that MultiMesh add your :ref:`Mesh <class_Mesh>` with the shader from "
"above."
msgstr ""
"Une fois que vous avez un MultiMeshInstance ajoutez-y un :ref:`MultiMesh "
"<class_MultiMesh>`, et ajoutez à ce MultiMesh votre :ref:`Mesh <class_Mesh>` "
"avec le shader précédemment créé."

msgid ""
"MultiMeshes draw your Mesh with three additional per-instance properties: "
"Transform (rotation, translation, scale), Color, and Custom. Custom is used "
"to pass in 4 multi-use variables using a :ref:`Color <class_Color>`."
msgstr ""
"Les MultiMeshes dessinent votre Mesh avec trois propriétés supplémentaires "
"par instance : Transform (rotation, translation, scale), Color et Custom. "
"Custom (personnalisé) est utilisé pour fournir 4 variables à usage multiple "
"en utilisant une :ref:`Color <class_Color>`."

msgid ""
"``instance_count`` specifies how many instances of the mesh you want to "
"draw. For now, leave ``instance_count`` at ``0`` because you cannot change "
"any of the other parameters while ``instance_count`` is larger than ``0``. "
"We will set ``instance count`` in GDScript later."
msgstr ""
"``instance_count`` définit combien d'instances du mesh vous voulez dessiner. "
"Pour le moment, laissez ``instance_count`` à ``0`` car vous ne pouvez "
"changer aucuns des autres paramètres tant que ``instance_count`` est plus "
"grand que ``0``. Nous définirons ``instance_count`` en GDSCript "
"ultérieurement."

msgid ""
"``transform_format`` specifies whether the transforms used are 3D or 2D. For "
"this tutorial, select 3D."
msgstr ""
"``transform_format`` indique si les transformations utilisées sont en 3D ou "
"en 2D. Dans le cadre de ce tutoriel, sélectionnez 3D."

msgid ""
"For both ``color_format`` and ``custom_data_format`` you can choose between "
"``None``, ``Byte``, and ``Float``. ``None`` means you won't be passing in "
"that data (either a per-instance ``COLOR`` variable, or ``INSTANCE_CUSTOM``) "
"to the shader. ``Byte`` means each number making up the color you pass in "
"will be stored with 8 bits while ``Float`` means each number will be stored "
"in a floating-point number (32 bits). ``Float`` is slower but more precise, "
"``Byte`` will take less memory and be faster, but you may see some visual "
"artifacts."
msgstr ""
"Pour les ``color_format`` et les ``custom_data_format``, vous pouvez choisir "
"entre ``None``, ``Byte`` et ``Float``. ``None`` signifie que vous ne "
"passerez pas de données en paramètres (que ce soit une variable par instante "
"``COLOR``, ou une ``INSTANCE_CUSTOM``) au shader. ``Byte`` signifie que "
"chaque nombre qui constitue la couleur que vous passerez en paramètre sera "
"stockée avec 8 bits tandis que ``Float`` signifie que chaque nombre sera "
"stocké dans un nombre flottant (32 bits). ``Float`` est plus lent mais plus "
"précis, ``Byte`` va prendre moins de mémoire et sera plus rapide mais peut "
"entraîner des artefacts visuels."

msgid "Now, set ``instance_count`` to the number of fish you want to have."
msgstr ""
"Maintenant, réglez ``instance_count`` sur le nombre de poissons que vous "
"voulez avoir."

msgid "Next we need to set the per-instance transforms."
msgstr "Ensuite, nous devons définir les transformations par instance."

msgid ""
"There are two ways to set per-instance transforms for MultiMeshes. The first "
"is entirely in editor and is described in the :ref:`MultiMeshInstance "
"tutorial <doc_using_multi_mesh_instance>`."
msgstr ""
"Il existe deux manières de définir ces transformations par instance pour les "
"MultiMeshes. La première est uniquement dans l'éditeur et est décrite dans "
"le :ref:`tutoriel MultiMeshInstance <doc_using_multi_mesh_instance>`."

msgid ""
"The second is to loop over all the instances and set their transforms in "
"code. Below, we use GDScript to loop over all the instances and set their "
"transform to a random position."
msgstr ""
"La seconde est de parcourir toutes les instances et de définir leurs "
"transformations dans le code. En dessous, nous utilisons GDScript pour "
"parcourir toutes les instances et définir leur transformations à une "
"position aléatoire."

msgid ""
"Running this script will place the fish in random positions in a box around "
"the position of the MultiMeshInstance."
msgstr ""
"Exécuter ce script va placer le poisson dans une position aléatoire de la "
"boite autour de la position du MultiMeshInstance."

msgid ""
"If performance is an issue for you, try running the scene with GLES2 or with "
"fewer fish."
msgstr ""
"Si les performances sont importantes pour vous, essayez de lancer la scène "
"avec GLES2 ou avec moins de poissons."

msgid ""
"Notice how all the fish are all in the same position in their swim cycle? It "
"makes them look very robotic. The next step is to give each fish a different "
"position in the swim cycle so the entire school looks more organic."
msgstr ""
"Remarquez comme tous les poissons sont tous dans la même position dans leur "
"cycle de nage ? Cela les rend très robotique. La prochaine étape est de "
"donner à chaque poissons une position différente dans le cycle de nage de "
"façon à ce que le banc de poisson soit plus organique."

msgid "Animating a school of fish"
msgstr "Animer un banc de poisson"

msgid ""
"One of the benefits of animating the fish using ``cos`` functions is that "
"they are animated with one parameter, ``time``. In order to give each fish a "
"unique position in the swim cycle, we only need to offset ``time``."
msgstr ""
"Un des bénéfices d'animer le poisson en utilisant les fonctions ``cos`` est "
"qu'ils sont animés avec un seul paramètre, ``time``. Afin de donner à chaque "
"poisson une pootition unique dans le cycle de nage, nous allons seulement "
"décaler ``time``."

msgid ""
"We do that by adding the per-instance custom value ``INSTANCE_CUSTOM`` to "
"``time``."
msgstr ""
"Nous faisons cela en ajoutant la valeur personnalisé par instance "
"``INSTANCE_CUSTOM`` à ``time``."

msgid ""
"Next, we need to pass a value into ``INSTANCE_CUSTOM``. We do that by adding "
"one line into the ``for`` loop from above. In the ``for`` loop we assign "
"each instance a set of four random floats to use."
msgstr ""
"Ensuite, nous devons passer une valeur ``INSTANCE_CUSTOM`` en paramètre. "
"Pour cela, on ajoute une ligne à la boucle ``for`` au-dessus. Dans cette "
"boucle ``for``, on assigne à chaque instance un ensemble de 4 flottants "
"aléatoire à utiliser."

msgid ""
"Now the fish all have unique positions in the swim cycle. You can give them "
"a little more individuality by using ``INSTANCE_CUSTOM`` to make them swim "
"faster or slower by multiplying by ``TIME``."
msgstr ""
"Maintenant, chaque poisson dispose de positions de cycle de nage uniques. "
"Vous pouvez leur donner un peu plus de personnalité en utilisant "
"``INSTANCE_CUSTOM`` pour les faire nager plus ou moins vite en le "
"multipliant par ``TIME``."

msgid ""
"You can even experiment with changing the per-instance color the same way "
"you changed the per-instance custom value."
msgstr ""
"Vous pouvez également expérimenter en changeant la couleur par instante de "
"la même façon que vous avez changé la valeur personnalisé par instance."

msgid ""
"One problem that you will run into at this point is that the fish are "
"animated, but they are not moving. You can move them by updating the per-"
"instance transform for each fish every frame. Although doing so will be "
"faster than moving thousands of MeshInstances per frame, it'll still likely "
"be slow."
msgstr ""
"Un problème que vous allez rencontrer à un moment donné est que les poissons "
"ont une animation, mais ils ne bougent pas. Vous pouvez les déplacer en "
"mettant à jour la transformation par instance pour chaque poisson. "
"Cependant, même si faire cela est plus rapide que déplacer des milliers de "
"MeshInstances par image, il est probable que ça soit tout de même lent."

msgid ""
"In the next tutorial we will cover how to use :ref:`Particles "
"<class_Particles>` to take advantage of the GPU and move each fish around "
"individually while still receiving the benefits of instancing."
msgstr ""
"Dans le prochain tutoriel, nous allons voir comment utiliser les :ref:"
"`Particles <class_Particles>` pour tirer parti du GPU afin de déplacer "
"chaque poisson individuellement tout en gardant les bénéfices de "
"l'instanciation."

msgid "Translation status"
msgstr "État de la traduction"
