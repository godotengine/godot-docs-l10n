# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Optimization using MultiMeshes"
msgstr "Optimisation à l’aide de MultiMeshes"

msgid ""
"For large amount of instances (in the thousands), that need to be constantly "
"processed (and certain amount of control needs to be retained), :ref:`using "
"servers directly <doc_using_servers>` is the recommended optimization."
msgstr ""
"Pour un grand nombre d'instances (en milliers), qui doivent être traitées en "
"permanence (et qui nécessitent un certain contrôle), :ref:`utiliser "
"directement les serveurs <doc_using_servers>` est l'optimisation recommandée."

msgid ""
"When the amount of objects reach the hundreds of thousands or millions, none "
"of these approaches are efficient anymore. Still, depending on the "
"requirements, there is one more optimization possible."
msgstr ""
"Quand la quantité d'objets atteint des centaines de milliers ou même des "
"millions, aucune de ces approches ne reste efficace. Il reste cependant, en "
"fonction des besoins, une optimisation supplémentaire possible."

msgid "MultiMeshes"
msgstr "MultiMeshes"

msgid ""
"A :ref:`MultiMesh<class_MultiMesh>` is a single draw primitive that can draw "
"up to millions of objects in one go. It's extremely efficient because it "
"uses the GPU hardware to do this (in OpenGL ES 2.0, it's less efficient "
"because there is no hardware support for it, though)."
msgstr ""
"Un :ref:`MultiMesh<class_MultiMesh>` est une primitive de dessin unique qui "
"peut dessiner jusqu'à des millions d'objets en une seule fois. Elle est "
"extrêmement efficace car elle utilise le hardware du GPU pour le faire (dans "
"OpenGL ES 2.0, elle est moins efficace car il n'y a pas de support hardware "
"pour elle, cependant)."

msgid ""
"The only drawback is that there is no *screen* or *frustum* culling possible "
"for individual instances. This means, that millions of objects will be "
"*always* or *never* drawn, depending on the visibility of the whole "
"MultiMesh. It is possible to provide a custom visibility rect for them, but "
"it will always be *all-or-none* visibility."
msgstr ""
"Le seul inconvénient est qu'il n'y a pas de *screen* ou *frustum* culling "
"possible pour les instances individuels. Cela signifie que des millions "
"d'objets seront *toujours* ou *jamais* dessinés, en fonction de la "
"visibilité de l'ensemble du MultiMesh. Il est possible de leur fournir un "
"rectangle de visibilité personnalisé, mais il s'agira toujours d'une "
"visibilité *tout ou rien*."

msgid ""
"If the objects are simple enough (just a couple of vertices), this is "
"generally not much of a problem as most modern GPUs are optimized for this "
"use case. A workaround is to create several MultiMeshes for different areas "
"of the world."
msgstr ""
"Si les objets sont suffisamment simples (juste quelques sommets), cela ne "
"pose généralement pas de problème car la plupart des GPU modernes sont "
"optimisés pour ce cas d'utilisation. Une solution de contournement consiste "
"à créer plusieurs MultiMeshes pour différentes régions du monde."

msgid ""
"It is also possible to execute some logic inside the vertex shader (using "
"the ``INSTANCE_ID`` or ``INSTANCE_CUSTOM`` built-in constants). For an "
"example of animating thousands of objects in a MultiMesh, see the :ref:"
"`Animating thousands of fish <doc_animating_thousands_of_fish>` tutorial. "
"Information to the shader can be provided via textures (there are floating-"
"point :ref:`Image<class_Image>` formats which are ideal for this)."
msgstr ""
"Il est également possible d'exécuter une logique à l'intérieur du shader de "
"sommet (en utilisant les constantes intégrées ``INSTANCE_ID`` ou "
"``INSTANCE_CUSTOM``). Pour un exemple d'animation de milliers d'objets dans "
"un MultiMesh, voir le tutoriel :ref:`Animation de milliers de poissons "
"<doc_animating_thousands_of_fish>`. Les informations pour le shader peuvent "
"être fournies par des textures (il existe des formats en virgule flottante :"
"ref:`Image<class_Image>` qui sont idéaux pour cela)."

msgid ""
"Another alternative is to use GDNative and C++, which should be extremely "
"efficient (it's possible to set the entire state for all objects using "
"linear memory via the :ref:`VisualServer.multimesh_set_as_bulk_array() "
"<class_VisualServer_method_multimesh_set_as_bulk_array>` function). This "
"way, the array can be created with multiple threads, then set in one call, "
"providing high cache efficiency."
msgstr ""
"Une autre alternative consiste à utiliser GDNative et C++, ce qui devrait "
"être extrêmement efficace (il est possible de définir l'état complet de tous "
"les objets utilisant la mémoire linéaire via la fonction :ref:`VisualServer."
"multimesh_set_as_bulk_array() "
"<class_VisualServer_method_multimesh_set_as_bulk_array>`). Ainsi, le tableau "
"peut être créé avec plusieurs threads, puis réglé(set) en un seul appel, ce "
"qui permet d'obtenir une grande efficacité du cache."

msgid ""
"Finally, it's not required to have all MultiMesh instances visible. The "
"amount of visible ones can be controlled with the :ref:`MultiMesh."
"visible_instance_count <class_MultiMesh_property_visible_instance_count>` "
"property. The typical workflow is to allocate the maximum amount of "
"instances that will be used, then change the amount visible depending on how "
"many are currently needed."
msgstr ""
"Enfin, il n'est pas nécessaire que toutes les instances MultiMesh soient "
"visibles. Le nombre d'instances visibles peut être contrôlé avec la "
"propriété :ref:`MultiMesh.visible_instance_count "
"<class_MultiMesh_property_visible_instance_count>`. Le flux de travail "
"typique consiste à allouer le nombre maximal d'instances qui seront "
"utilisées, puis de modifier la quantité visible en fonction de combien sont "
"actuellement nécessaire."

msgid "Multimesh example"
msgstr "Exemple Multimesh"

msgid ""
"Here is an example of using a MultiMesh from code. Languages other than "
"GDScript may be more efficient for millions of objects, but for a few "
"thousands, GDScript should be fine."
msgstr ""
"Voici un exemple d'utilisation d'un MultiMesh depuis du code. Les langages "
"autres que GDScript peuvent être plus efficaces pour des millions d'objets, "
"mais pour quelques milliers, GDScript devrait convenir."

msgid "Translation status"
msgstr "État de la traduction"
