# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDNative C++ example"
msgstr "Exemple GDNative C++"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"This tutorial builds on top of the information given in the :ref:`GDNative C "
"example <doc_gdnative_c_example>`, so we highly recommend you read that "
"first."
msgstr ""
"Ce tutoriel s'appuie sur les informations données dans l'exemple :ref:"
"`GDNative C <doc_gdnative_c_example>`, nous vous recommandons donc vivement "
"de le lire en premier."

msgid ""
"The C++ bindings for GDNative are built on top of the NativeScript GDNative "
"API and provide a nicer way to \"extend\" nodes in Godot using C++. This is "
"equivalent to writing scripts in GDScript, but in C++ instead."
msgstr ""
"Les liaisons(bindings) C++ pour GDNative sont construites au-dessus de l'API "
"NativeScript GDNative et fournissent un moyen plus agréable d'\"étendre\" "
"les nœuds de Godot en utilisant le C++. Cela équivaut à écrire des scripts "
"en GDScript, mais en C++ à la place."

msgid ""
"You can download the full example we'll be creating in this tutorial `on "
"GitHub <https://github.com/BastiaanOlij/gdnative_cpp_example>`__."
msgstr ""
"Vous pouvez télécharger l'exemple complet que nous allons créer dans ce "
"tutoriel `on GitHub <https://github.com/BastiaanOlij/"
"gdnative_cpp_example>`__."

msgid "Setting up the project"
msgstr "Mise en place du projet"

msgid "There are a few prerequisites you'll need:"
msgstr "Il y a quelques prérequis dont vous aurez besoin :"

msgid "a Godot 3.x executable,"
msgstr "un exécutable Godot 3.x,"

msgid "a C++ compiler,"
msgstr "un compilateur C++,"

msgid "SCons as a build tool,"
msgstr "SCons comme outil de construction,"

msgid ""
"a copy of the `godot-cpp repository <https://github.com/godotengine/godot-"
"cpp>`__."
msgstr ""
"une copie du `dépôt godot-cpp <https://github.com/godotengine/godot-cpp>`__."

msgid ""
"See also :ref:`Compiling <toc-devel-compiling>` as the build tools are "
"identical to the ones you need to compile Godot from source."
msgstr ""
"Voir aussi :ref:`Compiling <toc-devel-compiling>` car les outils de build "
"sont identiques à ceux dont vous avez besoin pour compiler Godot à partir de "
"la source."

msgid ""
"You can download these repositories from GitHub or let Git do the work for "
"you. Note that these repositories now have different branches for different "
"versions of Godot. GDNative modules written for an earlier version of Godot "
"will work in newer versions (with the exception of one breaking change in "
"ARVR interfaces between 3.0 and 3.1) but not vice versa so make sure you "
"download the correct branch. Also note that the version of Godot you use to "
"generate the ``api.json`` with becomes your minimum version."
msgstr ""
"Vous pouvez télécharger ces dépôts sur GitHub ou laisser Git faire le "
"travail pour vous. Notez que ces dépôts ont maintenant différentes branches "
"pour différentes versions de Godot. Les modules GDNative écrits pour une "
"version antérieure de Godot fonctionneront dans les versions plus récentes "
"(à l'exception d'une rupture de compatibilité dans les interfaces ARVR entre "
"3.0 et 3.1) mais pas l'inverse, donc assurez-vous de télécharger la bonne "
"branche. Notez également que la version de Godot que vous utilisez pour "
"générer l'``api.json`` devient votre version minimale."

msgid ""
"`GDExtension <https://godotengine.org/article/introducing-gd-extensions>`__ "
"has been merged in the ``master`` branch of godot-cpp, but it is only "
"compatible with the upcoming Godot 4.0. Therefore, you need to use the ``3."
"x`` branch of godot-cpp to use GDNative and follow this example."
msgstr ""
"`GDExtension <https://godotengine.org/article/introducing-gd-extensions>`__ "
"a été fusionnée dans la branche ``master`` de godot-cpp, mais elle n'est "
"compatible qu'avec le prochain Godot 4.0. Par conséquent, vous devez "
"utiliser la branche ``3.x`` de godot-cpp pour utiliser GDNative et suivre "
"cet exemple."

msgid ""
"This tutorial covers only GDNative in Godot 3.x, *not* GDExtension in Godot "
"4.0."
msgstr ""
"Ce tutoriel couvre uniquement GDNative dans Godot 3.x, *not* GDExtension "
"dans Godot 4.0."

msgid ""
"If you are versioning your project using Git, it is a good idea to add them "
"as Git submodules:"
msgstr ""
"Si vous versionnez votre projet en utilisant Git, il est bon de les ajouter "
"en tant que sous-modules Git :"

msgid ""
"If you decide to just download the repositories or clone them into your "
"project folder, make sure to keep the folder layout identical to the one "
"described here, as much of the code we'll be showcasing here assumes the "
"project follows this layout."
msgstr ""
"Si vous décidez de télécharger simplement les dépôts ou de les cloner dans "
"votre dossier de projet, assurez-vous de garder la disposition du dossier "
"identique à celle décrite ici, car une grande partie du code que nous allons "
"présenter ici suppose que le projet suit cette disposition."

msgid "Do make sure you clone recursive to pull in both repositories:"
msgstr "Assurez-vous que vous clonez récursivement pour pull les deux dépôts :"

msgid ""
"``godot-cpp`` now includes ``godot-headers`` as a nested submodule, if "
"you've manually downloaded them please make sure to place ``godot-headers`` "
"inside of the ``godot-cpp`` folder."
msgstr ""
"``godot-cpp`` inclut maintenant ``godot_headers`` comme un sous-module "
"imbriqué, si vous les avez téléchargés manuellement, assurez-vous de placer "
"``godot_headers`` dans le dossier ``godot-cpp``."

msgid ""
"You don't have to do it this way, but we've found it easiest to manage. If "
"you decide to download the repositories or clone them into your folder, make "
"sure to keep the folder layout the same as we've setup here. Much of the "
"code we'll be showcasing here assumes the project has this layout."
msgstr ""
"Vous n’êtes pas obligé de procéder de cette façon, mais nous avons trouvé "
"que c’était plus facile à gérer. Si vous décidez de télécharger les dépôts "
"ou de les cloner dans votre dossier, assurez-vous de conserver la "
"disposition du dossier telle que nous l'avons configurée ici. La plupart du "
"code que nous allons présenter ici suppose que le projet a cette disposition."

msgid ""
"If you cloned the example from the link specified in the introduction, the "
"submodules are not automatically initialized. You will need to execute the "
"following commands:"
msgstr ""
"Si vous avez cloné l'exemple à partir du lien indiqué dans l'introduction, "
"les sous-modules ne sont pas automatiquement initialisés. Vous devrez "
"exécuter les commandes suivantes :"

msgid "This will clone these two repositories into your project folder."
msgstr "Cela permettra de cloner ces deux dépôts dans votre dossier de projet."

msgid "Building the C++ bindings"
msgstr "Construire(Building) des liaisons(bindings) C ++"

msgid ""
"Now that we've downloaded our prerequisites, it is time to build the C++ "
"bindings."
msgstr ""
"Maintenant que nous avons téléchargé nos prérequis, il est temps de build "
"les liaisons(bindings) C++."

msgid ""
"The repository contains a copy of the metadata for the current Godot "
"release, but if you need to build these bindings for a newer version of "
"Godot, simply call the Godot executable:"
msgstr ""
"Le dépôt contient une copie des métadonnées pour la version actuelle de "
"Godot, mais si vous devez construire ces liens pour une version plus récente "
"de Godot, il suffit d'appeler l'exécutable Godot :"

msgid ""
"Place the resulting ``api.json`` file in the project folder and add "
"``use_custom_api_file=yes custom_api_file=../api.json`` to the scons command "
"below."
msgstr ""
"Placez le fichier ``api.json`` résultant dans le dossier du projet et "
"ajoutez ``use_custom_api_file=yes custom_api_file=../api.json`` à la "
"commande scons ci-dessous."

msgid ""
"To generate and compile the bindings, use this command (replacing "
"``<platform>`` with ``windows``, ``linux`` or ``osx`` depending on your OS):"
msgstr ""
"Pour générer et compiler les liaisons(bindings), utilisez cette commande (en "
"remplaçant ``<platform>`` par ``windows``, ``linux`` ou ``osx`` selon votre "
"système d'exploitation) :"

msgid ""
"To speed up compilation, add `-jN` at the end of the SCons command line "
"where `N` is the number of CPU threads you have on your system. The example "
"below uses 4 threads."
msgstr ""
"Pour accélérer la compilation, ajoutez `-jN` à la fin de la ligne de "
"commande SCons où `N` est le nombre de threads CPU que vous avez sur votre "
"système. L'exemple ci-dessous utilise 4 threads."

msgid ""
"This step will take a while. When it is completed, you should have static "
"libraries that can be compiled into your project stored in ``godot-cpp/bin/"
"``."
msgstr ""
"Cette étape prendra un certain temps. Lorsqu'elle sera terminée, vous "
"devriez disposer de bibliothèques statiques pouvant être compilées dans "
"votre projet et stockées dans ``godot-cpp/bin/``."

msgid "You may need to add ``bits=64`` to the command on Windows or Linux."
msgstr ""
"Vous devrez peut-être ajouter ``bits=64`` à la commande sous Windows ou "
"Linux."

msgid "Creating a simple plugin"
msgstr "Créer un plugin simple"

msgid ""
"Now it's time to build an actual plugin. We'll start by creating an empty "
"Godot project in which we'll place a few files."
msgstr ""
"Il est maintenant temps de construire un véritable plugin. Nous commencerons "
"par créer un projet Godot vide dans lequel nous placerons quelques fichiers."

msgid ""
"Open Godot and create a new project. For this example, we will place it in a "
"folder called ``demo`` inside our GDNative module's folder structure."
msgstr ""
"Ouvrez Godot et créez un nouveau projet. Pour cet exemple, nous allons le "
"placer dans un dossier appelé ``demo`` à l'intérieur de la structure des "
"dossiers de notre module GDNative."

msgid ""
"In our demo project, we'll create a scene containing a Node called \"Main\" "
"and we'll save it as ``main.tscn``. We'll come back to that later."
msgstr ""
"Dans notre projet de démo, nous allons créer une scène contenant un nœud "
"appelé \"Main\" et nous l'enregistrerons sous le nom de ``main.tscn``. Nous "
"y reviendrons plus tard."

msgid ""
"Back in the top-level GDNative module folder, we're also going to create a "
"subfolder called ``src`` in which we'll place our source files."
msgstr ""
"De retour dans le dossier du module GDNative, nous allons également créer un "
"sous-dossier appelé ``src`` dans lequel nous placerons nos fichiers source."

msgid ""
"You should now have ``demo``, ``godot-cpp``, ``godot-headers``, and ``src`` "
"directories in your GDNative module."
msgstr ""
"Vous devriez maintenant avoir les répertoires ``demo``, ``godot-cpp``, "
"``godot_headers``, et ``src`` dans votre module GDNative."

msgid ""
"In the ``src`` folder, we'll start with creating our header file for the "
"GDNative node we'll be creating. We will name it ``gdexample.h``:"
msgstr ""
"Dans le dossier ``src``, nous commencerons par créer notre fichier d'en-tête "
"pour le nœud GDNative que nous allons créer. Nous le nommerons ``gdexample."
"h`` :"

msgid ""
"There are a few things of note to the above. We're including ``Godot.hpp`` "
"which contains all our basic definitions. After that, we include ``Sprite."
"hpp`` which contains bindings to the Sprite class. We'll be extending this "
"class in our module."
msgstr ""
"Il y a quelques éléments à noter dans ce qui précède. Nous incluons ``Godot."
"hpp`` qui contient toutes nos définitions de base. Ensuite, nous incluons "
"``Sprite.hpp`` qui contient les liens vers la classe Sprite. Nous allons "
"étendre cette classe dans notre module."

msgid ""
"We're using the namespace ``godot``, since everything in GDNative is defined "
"within this namespace."
msgstr ""
"Nous utilisons l'espace de noms ``godot``, puisque tout ce qui est en "
"GDNative est défini dans cet espace de noms."

msgid ""
"Then we have our class definition, which inherits from our Sprite through a "
"container class. We'll see a few side effects of this later on. The "
"``GODOT_CLASS`` macro sets up a few internal things for us."
msgstr ""
"Ensuite, nous avons notre définition de la classe, qui hérite de notre "
"Sprite par le biais d'une classe conteneur. Nous en verrons les effets "
"secondaires plus tard. La macro ``GODOT_CLASS`` met en place quelques "
"éléments internes pour nous."

msgid "After that, we declare a single member variable called ``time_passed``."
msgstr ""
"Après cela, nous déclarons une unique variable membre appelée "
"``time_passed``."

msgid ""
"In the next block we're defining our methods, we obviously have our "
"constructor and destructor defined, but there are two other functions that "
"will likely look familiar to some, and one new method."
msgstr ""
"Dans le bloc suivant, nous définissons nos méthodes, nous avons évidemment "
"défini notre constructeur et notre destructeur, mais il y a deux autres "
"fonctions qui sembleront probablement familières à certains, et une nouvelle "
"méthode."

msgid ""
"The first is ``_register_methods``, which is a static function that Godot "
"will call to find out which methods can be called on our NativeScript and "
"which properties it exposes. The second is our ``_process`` function, which "
"will work exactly the same as the ``_process`` function you're used to in "
"GDScript. The third is our ``_init`` function which is called after Godot "
"has properly set up our object. It has to exist even if you don't place any "
"code in it."
msgstr ""
"La première est ``_register_methods``, qui est une fonction statique que "
"Godot appellera pour savoir quelles méthodes peuvent être appelées sur notre "
"NativeScript et quelles propriétés il expose. La seconde est notre fonction "
"``_process``, qui fonctionnera exactement comme la fonction ``_process`` à "
"laquelle vous êtes habitué dans le GDScript. La troisième est notre fonction "
"``_init`` qui est appelée après que Godot ait correctement configuré notre "
"objet. Elle doit exister même si vous n'y placez aucun code."

msgid "Let's implement our functions by creating our ``gdexample.cpp`` file:"
msgstr "Implémentons nos fonctions en créant notre fichier ``gdexample.cpp`` :"

msgid ""
"This one should be straightforward. We're implementing each method of our "
"class that we defined in our header file. Note that the ``register_method`` "
"call **must** expose the ``_process`` method, otherwise Godot will not be "
"able to use it. However, we do not have to tell Godot about our constructor, "
"destructor and ``_init`` functions."
msgstr ""
"Celui-ci devrait être simple. Nous implémentons chaque méthode de notre "
"classe que nous avons définie dans notre fichier d'en-tête. Notez que "
"l'appel ``register_method`` **doit** exposer la méthode ``_process``, sinon "
"Godot ne pourra pas l'utiliser. Cependant, nous n'avons pas à parler à Godot "
"de nos fonctions constructeur, destructeur et ``_init``."

msgid ""
"The other method of note is our ``_process`` function, which simply keeps "
"track of how much time has passed and calculates a new position for our "
"sprite using a sine and cosine function. What stands out is calling ``owner-"
">set_position`` to call one of the built-in methods of our Sprite. This is "
"because our class is a container class; ``owner`` points to the actual "
"Sprite node our script relates to."
msgstr ""
"L'autre méthode importante est notre fonction ``_process``, qui suit tout "
"simplement le temps écoulé et calcule une nouvelle position pour notre "
"sprite en utilisant une fonction sinus et cosinus. Ce qui se démarque est "
"l'appel de ``owner->set_position`` pour appeler l'une des méthodes intégrées "
"de notre Sprite. Cela est dû au fait que notre classe est une classe "
"conteneur. ``owner`` pointe vers le nœud Sprite réel auquel notre script se "
"rapporte."

msgid ""
"There is one more C++ file we need; we'll name it ``gdlibrary.cpp``. Our "
"GDNative plugin can contain multiple NativeScripts, each with their own "
"header and source file like we've implemented ``GDExample`` up above. What "
"we need now is a small bit of code that tells Godot about all the "
"NativeScripts in our GDNative plugin."
msgstr ""
"Il nous faut encore un fichier C++ ; nous le nommerons ``gdlibrary.cpp``. "
"Notre plugin GDNative peut contenir plusieurs NativeScripts, chacun avec son "
"propre en-tête et son propre fichier source, comme nous l'avons fait pour "
"``GDExample`` ci-dessus. Ce dont nous avons besoin maintenant, c'est d'un "
"petit bout de code qui renseigne Godot sur tous les NativeScripts de notre "
"plugin GDNative."

msgid ""
"Note that we are not using the ``godot`` namespace here, since the three "
"functions implemented here need to be defined without a namespace."
msgstr ""
"Notez que nous n'utilisons pas l'espace de noms ``godot`` ici, puisque les "
"trois fonctions implémentées ici doivent être définies sans espace de noms."

msgid ""
"The ``godot_gdnative_init`` and ``godot_gdnative_terminate`` functions get "
"called respectively when Godot loads our plugin and when it unloads it. All "
"we're doing here is parse through the functions in our bindings module to "
"initialize them, but you might have to set up more things depending on your "
"needs."
msgstr ""
"Les fonctions ``godot_gdnative_init`` et ``godot_gdnative_terminate`` sont "
"appelées respectivement quand Godot charge notre plugin et quand il le "
"décharge. Tout ce que nous faisons ici, c'est analyser les fonctions de "
"notre module de liaisons(bindings) pour les initialiser, mais il se peut que "
"vous ayez à configurer d'autres choses en fonction de vos besoins."

msgid ""
"The important function is the third function called "
"``godot_nativescript_init``. We first call a function in our bindings "
"library that does its usual stuff. After that, we call the function "
"``register_class`` for each of our classes in our library."
msgstr ""
"La fonction importante est la troisième fonction appelée "
"``godot_nativescript_init``. Nous appelons d'abord une fonction dans notre "
"bibliothèque de liaisons(bindings) qui fait ses trucs habituels. Ensuite, "
"nous appelons la fonction ``register_class`` pour chacune de nos classes "
"dans notre bibliothèque."

msgid "Compiling the plugin"
msgstr "Compiler le plugin"

msgid ""
"We cannot easily write by hand a ``SConstruct`` file that SCons would use "
"for building. For the purpose of this example, just use :download:`this "
"hardcoded SConstruct file <files/cpp_example/SConstruct>` we've prepared. "
"We'll cover a more customizable, detailed example on how to use these build "
"files in a subsequent tutorial."
msgstr ""
"Nous ne pouvons pas facilement écrire à la main un fichier ``SConstruct`` "
"que SCons utiliserait pour construire(building). Pour cet exemple, il suffit "
"d'utiliser :download:`ce fichier SConstruct codé en dur <files/cpp_exemple/"
"SConstruct>` que nous avons préparé. Un exemple plus détaillé et "
"personnalisable sur la façon d'utiliser ces fichiers de construction(build) "
"sera présenté dans un tutoriel ultérieur."

msgid ""
"This ``SConstruct`` file was written to be used with the latest ``godot-"
"cpp`` master, you may need to make small changes using it with older "
"versions or refer to the ``SConstruct`` file in the Godot 3.0 documentation."
msgstr ""
"Ce fichier ``SConstruct`` a été écrit pour être utilisé avec le dernier "
"``godot-cpp`` master, vous devrez peut-être faire de petites modifications "
"en l'utilisant avec des versions plus anciennes ou vous référer au fichier "
"``SConstruct`` dans la documentation de Godot 3.0."

msgid ""
"Once you've downloaded the ``SConstruct`` file, place it in your GDNative "
"module folder besides ``godot-cpp``, ``godot-headers`` and ``demo``, then "
"run:"
msgstr ""
"Une fois que vous avez téléchargé le fichier ``SConstruct``, placez-le dans "
"le dossier de votre module GDNative à côté de ``godot-cpp``, "
"``godot_headers`` et ``demo``, puis exécutez :"

msgid "You should now be able to find the module in ``demo/bin/<platform>``."
msgstr ""
"Vous devriez maintenant être en mesure de trouver le module dans ``demo/bin/"
"<platform>``."

msgid ""
"Here, we've compiled both godot-cpp and our gdexample library as debug "
"builds. For optimized builds, you should compile them using the "
"``target=release`` switch."
msgstr ""
"Ici, nous avons compilé à la fois godot-cpp et notre bibliothèque gdexample "
"en tant que constructions(builds) de débogage. Pour des builds optimisés, "
"vous devriez les compiler en utilisant le commutateur ``target=release``."

msgid "Using the GDNative module"
msgstr "Utilisation du module GDNative"

msgid ""
"Before we jump back into Godot, we need to create two more files in ``demo/"
"bin/``. Both can be created using the Godot editor, but it may be faster to "
"create them directly."
msgstr ""
"Avant de revenir à Godot, nous devons créer deux autres fichiers dans ``demo/"
"bin/``. Les deux peuvent être créés à l'aide de l'éditeur Godot, mais il "
"peut être plus rapide de les créer directement."

msgid ""
"The first one is a file that lets Godot know what dynamic libraries should "
"be loaded for each platform and is called ``gdexample.gdnlib``."
msgstr ""
"Le premier est un fichier qui permet à Godot de savoir quelles bibliothèques "
"dynamiques doivent être chargées pour chaque plate-forme et s'appelle "
"``gdexample.gdnlib``."

msgid ""
"This file contains a ``general`` section that controls how the module is "
"loaded. It also contains a prefix section which should be left on ``godot_`` "
"for now. If you change this, you'll need to rename various functions that "
"are used as entry points. This was added for the iPhone platform because it "
"doesn't allow dynamic libraries to be deployed, yet GDNative modules are "
"linked statically."
msgstr ""
"Ce fichier contient une section ``general`` qui contrôle la façon dont le "
"module est chargé. Il contient également une section de préfixe qui devrait "
"être laissée sur ``godot_`` pour le moment. Si vous changez cela, vous "
"devrez renommer diverses fonctions qui sont utilisées comme points d'entrée. "
"Ceci a été ajouté pour la plateforme iPhone car elle ne permet pas de "
"déployer des bibliothèques dynamiques, pourtant les modules GDNative sont "
"liés de manière statique."

msgid ""
"The ``entry`` section is the important bit: it tells Godot the location of "
"the dynamic library in the project's filesystem for each supported platform. "
"It will also result in *just* that file being exported when you export the "
"project, which means the data pack won't contain libraries that are "
"incompatible with the target platform."
msgstr ""
"La section ``entry`` est la partie importante : elle indique à Godot "
"l'emplacement de la bibliothèque dynamique dans le système de fichiers du "
"projet pour chaque plate-forme supportée. Elle permet également d'exporter "
"*juste* ce fichier lorsque vous exportez le projet, ce qui signifie que le "
"paquet de données ne contiendra pas de bibliothèques incompatibles avec la "
"plate-forme cible."

msgid ""
"Finally, the ``dependencies`` section allows you to name additional dynamic "
"libraries that should be included as well. This is important when your "
"GDNative plugin implements someone else's library and requires you to supply "
"a third-party dynamic library with your project."
msgstr ""
"Enfin, la section ``dependencies`` vous permet de nommer des bibliothèques "
"dynamiques supplémentaires qui devraient également être incluses. Ceci est "
"important lorsque votre plugin GDNative implémente la bibliothèque de "
"quelqu'un d'autre et vous demande de fournir une bibliothèque dynamique "
"tierce avec votre projet."

msgid ""
"If you double click on the ``gdexample.gdnlib`` file within Godot, you'll "
"see there are far more options to set:"
msgstr ""
"Si vous double-cliquez sur le fichier ``gdexample.gdnlib`` dans Godot, vous "
"verrez qu'il y a beaucoup plus d'options à définir :"

msgid ""
"The second file we need to create is a file used by each NativeScript we've "
"added to our plugin. We'll name it ``gdexample.gdns`` for our gdexample "
"NativeScript."
msgstr ""
"Le deuxième fichier que nous devons créer est un fichier utilisé par chaque "
"NativeScript que nous avons ajouté à notre plugin. Nous le nommerons "
"``gdexample.gdns`` pour notre gdexample NativeScript."

msgid ""
"This is a standard Godot resource; you could just create it directly in your "
"scene, but saving it to a file makes it much easier to reuse it in other "
"places. This resource points to our gdnlib file, so that Godot can know "
"which dynamic library contains our NativeScript. It also defines the "
"``class_name`` which identifies the NativeScript in our plugin we want to "
"use."
msgstr ""
"Il s'agit d'une ressource Godot standard ; vous pouvez la créer directement "
"dans votre scène, mais l'enregistrer dans un fichier facilite grandement sa "
"réutilisation dans d'autres endroits. Cette ressource pointe vers notre "
"fichier gdnlib, afin que Godot puisse savoir quelle bibliothèque dynamique "
"contient notre NativeScript. Elle définit également le ``class_name`` qui "
"identifie le NativeScript de notre plugin que nous voulons utiliser."

msgid ""
"Time to jump back into Godot. We load up the main scene we created way back "
"in the beginning and now add a Sprite to our scene:"
msgstr ""
"Il est temps de revenir dans Godot. Nous chargeons la scène principale que "
"nous avons créée au début et ajoutons maintenant un Sprite à notre scène :"

msgid ""
"We're going to assign the Godot logo to this sprite as our texture, disable "
"the ``centered`` property and drag our ``gdexample.gdns`` file onto the "
"``script`` property of the sprite:"
msgstr ""
"Nous allons assigner le logo Godot en texture à ce sprite, désactiver la "
"propriété ``centered`` et glisser notre fichier ``gdexample.gdns`` sur la "
"propriété ``script`` du sprite :"

msgid "We're finally ready to run the project:"
msgstr "Nous sommes prêts à lancer le projet :"

msgid "Adding properties"
msgstr "Ajouter des propriétés"

msgid ""
"GDScript allows you to add properties to your script using the ``export`` "
"keyword. In GDNative you have to register the properties and there are two "
"ways of doing this. You can either bind directly to a member or use a setter "
"and getter function."
msgstr ""
"GDScript vous permet d’ajouter des propriétés à votre script en utilisant le "
"mot-clé ``export``. En GDNative il faut enregistrer les propriétés et il y a "
"deux manières de le faire. Vous pouvez soit lier directement à un membre, "
"soit utiliser des fonctions d’accès en lecture (*getter*) et en écriture "
"(*setter*)."

msgid ""
"There is a third option, just like in GDScript you can directly implement "
"the ``_get_property_list``, ``_get`` and ``_set`` methods of an object but "
"that goes far beyond the scope of this tutorial."
msgstr ""
"Il y a une troisième option : tout comme en GDScript vous pouvez implémenter "
"directement les méthodes ``_get_property_list``, ``_get`` et ``_set`` d’un "
"objet, mais ça dépasse la portée de ce tutoriel."

msgid ""
"We'll examine both starting with the direct bind. Lets add a property that "
"allows us to control the amplitude of our wave."
msgstr ""
"Nous allons examiner les deux méthodes, en commençant par la liaison "
"directe. Ajoutons une propriété qui nous permette de contrôler l’amplitude "
"de notre vague."

msgid ""
"In our ``gdexample.h`` file we simply need to add a member variable like so:"
msgstr ""
"Dans notre fichier ``gdexample.h``, il faut seulement ajouter une variable "
"membre de la manière suivante :"

msgid ""
"In our ``gdexample.cpp`` file we need to make a number of changes, we will "
"only show the methods we end up changing, don't remove the lines we're "
"omitting:"
msgstr ""
"Dans notre fichier ``gdexample.cpp`, il faut faire un certain nombre de "
"changements . Nous ne montrerons que les méthodes que nous changerons donc "
"ne supprimez pas les lignes qui n’apparaissent pas ici :"

msgid ""
"Once you compile the module with these changes in place, you will see that a "
"property has been added to our interface. You can now change this property "
"and when you run your project, you will see that our Godot icon travels "
"along a larger figure."
msgstr ""
"Lorsque vous compilerez le module avec ces changements, vous verrez qu’une "
"propriété a été ajoutée à notre interface. Vous pouvez maintenant changer "
"cette propriété et en lançant le projet, vous verrez que notre icône Godot "
"se déplace sur une plus grande zone."

msgid ""
"The ``reloadable`` property in the ``gdexample.gdnlib`` file must be set to "
"``true`` for the Godot editor to automatically pick up the newly added "
"property."
msgstr ""
"La propriété ``reloadable`` dans le ficher ``gdexample.gdnlib`` doit être "
"définie à ``true`` pour que l’éditeur de Godot remarque automatiquement la "
"propriété nouvellement ajoutée."

msgid ""
"However, this setting should be used with care, especially when tool classes "
"are used, as the editor might hold objects then that have script instances "
"attached to them that are managed by a GDNative library."
msgstr ""
"Toutefois, ce paramètre doit être utilisé avec précaution, notamment lorsque "
"des classes tool sont utilisées, car l'éditeur peut contenir des objets "
"auxquels sont attachées des instances de script gérées par une bibliothèque "
"GDNative."

msgid ""
"Let's do the same but for the speed of our animation and use a setter and "
"getter function. Our ``gdexample.h`` header file again only needs a few more "
"lines of code:"
msgstr ""
"Faisons la même chose mais pour la vitesse de notre animation et utilisons "
"une fonction setter et getter. Notre fichier d'en-tête ``gdexample.h`` ne "
"nécessite à nouveau que quelques lignes de code supplémentaires :"

msgid ""
"This requires a few more changes to our ``gdexample.cpp`` file, again we're "
"only showing the methods that have changed so don't remove anything we're "
"omitting:"
msgstr ""
"Il faut quelques modifications supplémentaires dans notre fichier "
"``gdexample.cpp``. Là encore nous ne montrerons que les méthodes qui ont "
"changé, donc ne pas supprimer ce que nous ne montrons pas ici :"

msgid ""
"Now when the project is compiled, we'll see another property called speed. "
"Changing its value will make the animation go faster or slower."
msgstr ""
"Maintenant, lorsque le projet est compilé, nous verrons une autre propriété "
"appelée speed. En changeant sa valeur, l'animation sera plus rapide ou plus "
"lente."

msgid ""
"For this example, there is no obvious advantage of using a setter and "
"getter. A good reason for a setter would be if you wanted to react on the "
"variable being changed. If you don't need to do something like that, binding "
"the variable is enough."
msgstr ""
"Pour cet exemple, il n'y a pas d'avantage évident à utiliser un setter et un "
"getter. Une bonne raison d'utiliser un setter serait de vouloir réagir à la "
"modification de la variable. Si vous n’avez pas besoin de faire quelque "
"chose de ce genre, il suffit de lier la variable."

msgid ""
"Getters and setters become far more useful in more complex scenarios where "
"you need to make additional choices based on the state of your object."
msgstr ""
"Les méthodes d’accès deviennent bien plus utiles dans des situations plus "
"complexes où il faut faire des choix en plus en fonction de l’état de vos "
"objets."

msgid ""
"For simplicity, we've left out the optional parameters in the "
"register_property<class, type> method call. These parameters are "
"``rpc_mode``, ``usage``, ``hint`` and ``hint_string``. These can be used to "
"further configure how properties are displayed and set on the Godot side."
msgstr ""
"Pour simplifier, nous avons omis les paramètres optionnels dans l’appel de "
"méthode register_property<class, type>. Ces paramètres sont ``rpc_mode``, "
"``usage``, ``hint`` et ``hint_string``. Ils peuvent être utilisés pour "
"configurer plus finement la manière dont les propriétés sont affichées et "
"définies du côté de Godot."

msgid ""
"Modern C++ compilers are able to infer the class and variable type and allow "
"you to omit the ``<GDExample, float>`` part of our ``register_property`` "
"method. We've had mixed experiences with this however."
msgstr ""
"Les compilateurs C++ modernes sont capables de deviner la classe et le type "
"de variable, et vous permettent de laisser tomber la partie ``<GDExample, "
"float>`` de la méthode ``register_property``. Cela dit, nous n’avons pas eu "
"que de bonnes expériences avec ça."

msgid "Signals"
msgstr "Signaux"

msgid ""
"Last but not least, signals fully work in GDNative as well. Having your "
"module react to a signal given out by another object requires you to call "
"``connect`` on that object. We can't think of a good example for our "
"wobbling Godot icon, we would need to showcase a far more complete example."
msgstr ""
"Pour terminer, les signaux sont eux aussi complètement supportés dans "
"GDNative. Pour qu’un module réagisse à un signal transmis par un autre "
"objet, il faut appeler la méthode ``connect`` sur cet objet. Nous ne "
"trouvons pas de bon exemple pour notre icône Godot qui bouge ; pour ça il "
"faudrait montrer un exemple beaucoup plus complet."

msgid "This is the required syntax:"
msgstr "Voici la syntaxe requise :"

msgid ""
"Note that you can only call ``my_method`` if you've previously registered it "
"in your ``_register_methods`` method."
msgstr ""
"Remarquez qu’on ne peut appeler ``my_method`` que si on l’a au préalable "
"enregistrée dans la méthode ``_register_methods``."

msgid ""
"Having your object sending out signals is more common. For our wobbling "
"Godot icon, we'll do something silly just to show how it works. We're going "
"to emit a signal every time a second has passed and pass the new location "
"along."
msgstr ""
"Il est plus courant que votre objet envoie des signaux. Pour notre icône "
"Godot vacillante, nous allons faire quelque chose de stupide juste pour "
"montrer comment cela fonctionne. Nous allons émettre un signal chaque fois "
"qu'une seconde s'est écoulée et transmettre la nouvelle position."

msgid ""
"In our ``gdexample.h`` header file, we need to define a new member "
"``time_emit``:"
msgstr ""
"Dans notre fichier d'en-tête ``gdexample.h``, nous devons définir un nouveau "
"membre ``time_emit`` :"

msgid ""
"This time, the changes in ``gdexample.cpp`` are more elaborate. First, "
"you'll need to set ``time_emit = 0.0;`` in either our ``_init`` method or in "
"our constructor. We'll look at the other 2 needed changes one by one."
msgstr ""
"Cette fois, les changements dans ``gdexample.cpp`` sont plus élaborés. Tout "
"d'abord, vous devrez définir ``time_emit = 0.0;`` dans notre méthode "
"``_init`` ou dans notre constructeur. Nous allons examiner les deux autres "
"modifications nécessaires une par une."

msgid ""
"In our ``_register_methods`` method, we need to declare our signal. This is "
"done as follows:"
msgstr ""
"Dans notre méthode ``_register_methods``, nous devons déclarer notre signal. "
"Cela se fait comme suit :"

msgid ""
"Here, our ``register_signal`` method can be a single call first taking the "
"signals name, then having pairs of values specifying the parameter name and "
"type of each parameter we'll send along with this signal."
msgstr ""
"Ici, notre méthode ``register_signal`` peut être un appel unique prenant "
"d'abord le nom du signal, puis ayant des paires de valeurs spécifiant le nom "
"et le type de chaque paramètre que nous enverrons avec ce signal."

msgid "Next, we'll need to change our ``_process`` method:"
msgstr "Ensuite, nous devons modifier notre méthode ``_process`` :"

msgid ""
"After a second has passed, we emit our signal and reset our counter. We can "
"add our parameter values directly to ``emit_signal``."
msgstr ""
"Après qu'une seconde se soit écoulée, nous émettons notre signal et "
"remettons notre compteur à zéro. Nous pouvons ajouter nos valeurs de "
"paramètres directement dans ``emit_signal``."

msgid ""
"Once the GDNative library is compiled, we can go into Godot and select our "
"sprite node. In the **Node** dock, we can find our new signal and link it up "
"by pressing the **Connect** button or double-clicking the signal. We've "
"added a script on our main node and implemented our signal like this:"
msgstr ""
"Une fois la bibliothèque GDNative compilée, nous pouvons aller dans Godot et "
"sélectionner notre nœud de sprite. Dans le dock **Nœud**, nous pouvons "
"trouver notre nouveau signal et le relier en appuyant sur le bouton "
"**Connect** ou en double-cliquant sur le signal. Nous avons ajouté un script "
"sur notre nœud principal et implémenté notre signal comme ceci :"

msgid "Every second, we output our position to the console."
msgstr "Chaque seconde, on envoie notre position à la console."

msgid "Next steps"
msgstr "La suite"

msgid ""
"The above is only a simple example, but we hope it shows you the basics. You "
"can build upon this example to create full-fledged scripts to control nodes "
"in Godot using C++."
msgstr ""
"Ce qui précède était un simple exemple, mais nous espérons qu’il vous ait "
"montré les bases. Vous pouvez partir de là pour créer des scripts complets "
"afin de contrôler des nœuds dans Godot, en utilisant C++."

msgid ""
"To edit and recompile the plugin while the Godot editor remains open, re-run "
"the project after the library has finished building."
msgstr ""
"Pour modifier et recompiler le plugin alors que l'éditeur Godot reste "
"ouvert, relancez le projet après la fin de la compilation de la bibliothèque."

msgid "Translation status"
msgstr "État de la traduction"
