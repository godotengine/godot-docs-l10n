# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Overridable functions"
msgstr "Fonctions surchargeables"

msgid ""
"Godot's Node class provides virtual functions you can override to update "
"nodes every frame or on specific events, like when they enter the scene tree."
msgstr ""
"La classe Node de Godot fournit des fonctions virtuelles que vous pouvez "
"surcharger pour mettre à jour les nœuds à chaque image ou lors d'événements "
"spécifiques, comme lorsqu'ils entrent dans l'arbre de la scène."

msgid "This document presents the ones you'll use most often."
msgstr "Ce document présente celles que vous utiliserez le plus souvent."

msgid ""
"Under the hood, these functions rely on Godot's low-level notifications "
"system. To learn more about it, see :ref:`doc_godot_notifications`."
msgstr ""
"Sous le capot, ces fonctions s'appuient sur le système de notifications de "
"bas niveau de Godot. Pour en savoir plus, consultez :ref:"
"`doc_godot_notifications`."

msgid ""
"Two functions allow you to initialize and get nodes, besides the class's "
"constructor: ``_enter_tree()`` and ``_ready()``."
msgstr ""
"Deux fonctions vous permettent d'initialiser et de récupérer les noeuds, en "
"plus du constructeur de la classe : ``_enter_tree()`` et ``_ready()``."

msgid ""
"When the node enters the Scene Tree, it becomes active and the engine calls "
"its ``_enter_tree()`` method. That node's children may not be part of the "
"active scene yet. As you can remove and re-add nodes to the scene tree, this "
"function may be called multiple times throughout a node's lifetime."
msgstr ""
"Lorsque le noeud entre dans l'arbre de la scène, il devient actif et le "
"moteur appelle sa méthode ``_enter_tree()``. Les enfants de ce noeud peuvent "
"ne pas encore faire partie de la scène active. Comme vous pouvez supprimer "
"et réinsérer des nœuds dans l'arbre de scène, cette fonction peut être "
"appelée plusieurs fois pendant la durée de vie d'un nœud."

msgid ""
"Most of the time, you'll use ``_ready()`` instead. This function is called "
"only once in a node's lifetime, after ``_enter_tree()``. ``_ready()`` "
"ensures that all children have entered the scene tree first, so you can "
"safely call ``get_node()`` on it."
msgstr ""
"La plupart du temps, vous utiliserez ``_ready()`` à la place. Cette fonction "
"n'est appelée qu'une seule fois dans la vie d'un noeud, après "
"``_enter_tree()``. ``_ready()`` s'assure que tous les enfants sont entrés "
"dans l'arbre de la scène en premier, de sorte que vous pouvez en toute "
"sécurité appeler ``get_node()`` sur lui."

msgid ""
"To learn more about getting node references, read :ref:"
"`doc_nodes_and_scene_instances`."
msgstr ""
"Pour en savoir plus sur l'obtention de références de nœuds, lisez :ref:"
"`doc_nodes_et_scene_instances`."

msgid ""
"Another related callback is ``_exit_tree()``, which the engine calls every "
"time a node exits the scene tree. This can be when you call :ref:`Node."
"remove_child() <class_Node_method_remove_child>` or when you free a node."
msgstr ""
"Un autre callback lié est ``_exit_tree()``, que le moteur appelle chaque "
"fois qu'un nœud sort de l'arbre de scène. Cela peut être lorsque vous "
"appelez :ref:`Node.remove_child() <class_Node_method_remove_child>` ou "
"lorsque vous libérez un noeud."

msgid ""
"The two virtual methods ``_process()`` and ``_physics_process()`` allow you "
"to update the node, every frame and every physics frame respectively. For "
"more information, read the dedicated documentation: :ref:"
"`doc_idle_and_physics_processing`."
msgstr ""
"Les deux méthodes virtuelles ``_process()`` et ``_physics_process()`` vous "
"permettent de mettre à jour le noeud, chaque frame et chaque physics frame "
"respectivement. Pour plus d'informations, lisez la documentation dédiée : :"
"ref:`doc_idle_et_physics_processing`."

msgid ""
"Two more essential built-in node callback functions are :ref:`Node."
"_unhandled_input() <class_Node_method__unhandled_input>` and :ref:`Node."
"_input() <class_Node_method__input>`, which you use to both receive and "
"process individual input events. The ``_unhandled_input()`` method receives "
"every key press, mouse click, etc. that have not been handled already in an "
"``_input()`` callback or in a user interface component. You want to use it "
"for gameplay input in general. The ``_input()`` callback allows you to "
"intercept and process input events before ``_unhandled_input()`` gets them."
msgstr ""
"Deux autres fonctions intégrées de rappel de noeuds sont :ref:`Node."
"_unhandled_input() <class_Node_method__unhandled_input>` et :ref:`Node."
"_input() <class_Node_method__input>`, que vous utilisez à la fois pour "
"recevoir et traiter des événements d'entrée individuels. La méthode "
"``_unhandled_input()`` reçoit chaque pression de touche, clic de souris, "
"etc. qui n'ont pas déjà été traités dans un callback ``_input()`` ou dans un "
"composant d'interface utilisateur. Vous voulez l'utiliser pour les entrées "
"de jeu en général. Le callback ``_input()`` vous permet d'intercepter et de "
"traiter les événements de saisie avant que ``_unhandled_input()`` ne les "
"reçoive."

msgid ""
"To learn more about inputs in Godot, see the :ref:`Input section <toc-learn-"
"features-inputs>`."
msgstr ""
"Pour en savoir plus sur les entrées dans Godot, consultez la section :ref:"
"`Input <toc-learn-features-inputs>`."

msgid ""
"There are some more overridable functions like :ref:`Node."
"_get_configuration_warning() "
"<class_Node_method__get_configuration_warning>`. Specialized node types "
"provide more callbacks like :ref:`CanvasItem._draw() "
"<class_CanvasItem_method__draw>` to draw programmatically or :ref:`Control."
"_gui_input() <class_Control_method__gui_input>` to handle clicks and input "
"on UI elements."
msgstr ""
"Il existe d'autres fonctions surchargeables comme :ref:`Node."
"_get_configuration_warning() "
"<class_Node_method__get_configuration_warning>`. Les types de nœuds "
"spécialisés fournissent plus de callbacks comme :ref:`CanvasItem._draw() "
"<class_CanvasItem_method__draw>` pour dessiner de manière programmatique ou :"
"ref:`Control._gui_input() <class_Control_method__gui_input>` pour gérer les "
"clics et les entrées sur les éléments de l'IU."

msgid "Translation status"
msgstr "État de la traduction"
