# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript: An introduction to dynamic languages"
msgstr "GDScript : Une introduction aux langages dynamiques"

msgid "About"
msgstr "À propos"

msgid ""
"This tutorial aims to be a quick reference for how to use GDScript more "
"efficiently. It focuses on common cases specific to the language, but also "
"covers a lot of information on dynamically typed languages."
msgstr ""
"Ce tutoriel a pour but d'être une référence rapide pour savoir comment "
"utiliser GDScript plus efficacement. Il se concentre sur les cas communs "
"spécifiques au langage, mais couvre aussi beaucoup d'informations sur les "
"langues à typage dynamique."

msgid ""
"It's meant to be especially useful for programmers with little or no "
"previous experience with dynamically typed languages."
msgstr ""
"Il est destiné à être particulièrement utile pour les programmeurs ayant peu "
"ou pas d'expérience préalable avec les langages à typage dynamique."

msgid "Dynamic nature"
msgstr "Nature dynamique"

msgid "Pros & cons of dynamic typing"
msgstr "Avantages et inconvénients du typage dynamique"

msgid ""
"GDScript is a Dynamically Typed language. As such, its main advantages are "
"that:"
msgstr ""
"GDScript est un langage à typage dynamique. En tant que tel, ses principaux "
"avantages sont que :"

msgid "The language is simple and easy to learn."
msgstr "Le langage est simple et facile à apprendre."

msgid "Most code can be written and changed quickly and without hassle."
msgstr ""
"La plupart du code peut être écrit et modifié rapidement et sans tracas."

msgid "Less code written means less errors & mistakes to fix."
msgstr "Moins de code écrit signifie moins d'erreurs à corriger."

msgid "Easier to read the code (less clutter)."
msgstr "Plus grande facilité à lire le code (moins d'encombrement)."

msgid "No compilation is required to test."
msgstr "Aucune compilation n'est nécessaire pour tester."

msgid "Runtime is tiny."
msgstr "Le temps d'exécution est minuscule."

msgid "Duck-typing and polymorphism by nature."
msgstr "Typage ad hoc et polymorphisme par nature."

msgid "While the main disadvantages are:"
msgstr "Alors que les principaux inconvénients sont :"

msgid "Less performance than statically typed languages."
msgstr "Moindre performance que les langages statiquement typés."

msgid "More difficult to refactor (symbols can't be traced)"
msgstr ""
"Plus difficile à refactoriser (les symboles ne peuvent pas être tracés)"

msgid ""
"Some errors that would typically be detected at compile time in statically "
"typed languages only appear while running the code (because expression "
"parsing is more strict)."
msgstr ""
"Certaines erreurs qui seraient typiquement détectées au moment de la "
"compilation dans des langues typées statiquement n'apparaissent que lors de "
"l'exécution du code (parce que l'analyse des expressions est plus stricte)."

msgid ""
"Less flexibility for code-completion (some variable types are only known at "
"run-time)."
msgstr ""
"Moins de flexibilité pour la complétion de code (certains types de variables "
"ne sont connus qu'au moment de l'exécution)."

msgid ""
"This, translated to reality, means that Godot+GDScript are a combination "
"designed to create games quickly and efficiently. For games that are very "
"computationally intensive and can't benefit from the engine built-in tools "
"(such as the Vector types, Physics Engine, Math library, etc), the "
"possibility of using C++ is present too. This allows you to still create "
"most of the game in GDScript and add small bits of C++ in the areas that "
"need a performance boost."
msgstr ""
"Ceci, traduit dans la réalité, signifie que Godot+GDScript sont une "
"combinaison conçue pour créer des jeux très rapidement et efficacement. Pour "
"les jeux qui sont très intensifs en calcul et qui ne peuvent pas bénéficier "
"des outils intégrés au moteur (tels que les types vectoriels, le moteur "
"physique, la librairie mathématique, etc), la possibilité d'utiliser C++ est "
"également présente. Cela permet de créer le jeu entier en GDScript et "
"d'ajouter des petits morceaux de C++ dans les zones qui ont besoin d'un gain "
"de performance."

msgid "Variables & assignment"
msgstr "Variables et affectation"

msgid ""
"All variables in a dynamically typed language are \"variant\"-like. This "
"means that their type is not fixed, and is only modified through assignment. "
"Example:"
msgstr ""
"Toutes les variables d'un langage typé dynamiquement sont de type "
"\"variant\". Cela signifie que leur type n'est pas fixe et n'est modifié que "
"par l'affectation. Exemple :"

msgid "Static:"
msgstr "Statique :"

msgid "Dynamic:"
msgstr "Dynamique :"

msgid "As function arguments:"
msgstr "En tant qu'arguments de fonctions :"

msgid ""
"Functions are of dynamic nature too, which means they can be called with "
"different arguments, for example:"
msgstr ""
"Les fonctions sont également de nature dynamique, ce qui signifie qu'elles "
"peuvent être appelées avec différents arguments, par exemple :"

msgid "Pointers & referencing:"
msgstr "Pointeurs et référencement :"

msgid ""
"In static languages, such as C or C++ (and to some extent Java and C#), "
"there is a distinction between a variable and a pointer/reference to a "
"variable. The latter allows the object to be modified by other functions by "
"passing a reference to the original one."
msgstr ""
"Dans les langages statiques tels que C ou C++ (et dans une certaine mesure "
"Java et C#), il y a une distinction entre une variable et un pointeur/"
"référence à une variable. Ce dernier permet à l'objet d'être modifié par "
"d'autres fonctions en passant une référence de l'objet original."

msgid ""
"In C# or Java, everything not a built-in type (int, float, sometimes String) "
"is always a pointer or a reference. References are also garbage-collected "
"automatically, which means they are erased when no longer used. Dynamically "
"typed languages tend to use this memory model, too. Some Examples:"
msgstr ""
"En C# ou Java, tout ce qui n'est pas un type intégré (int, float, parfois "
"String) est toujours un pointeur ou une référence. Les références sont "
"également collectées par le ramasse-miette automatiquement, ce qui signifie "
"qu'elles sont effacées lorsqu'elles ne sont plus utilisées. Les langages à "
"typage dynamique ont aussi tendance à utiliser ce modèle de mémoire. "
"Quelques exemples :"

msgid "C++:"
msgstr "C++ :"

msgid "Java:"
msgstr "Java :"

msgid "GDScript:"
msgstr "GDScript :"

msgid ""
"In GDScript, only base types (int, float, String and PoolArray types) are "
"passed by value to functions (value is copied). Everything else (instances, "
"Arrays, Dictionaries, etc) is passed as reference. Classes that inherit :ref:"
"`class_Reference` (the default if nothing is specified) will be freed when "
"not used, but manual memory management is allowed too if inheriting manually "
"from :ref:`class_Object`."
msgstr ""
"Dans GDScript, seuls les types de base (int, float, string et les types "
"vectoriels) sont transmis par valeur aux fonctions (la valeur est copiée). "
"Tout le reste (instances, tableaux, dictionnaires, etc.) est passé par "
"référence. Les classes qui héritent de :ref:`class_Reference` (par défaut si "
"rien n'est spécifié) seront libérées lorsqu'elles ne sont pas utilisées, "
"mais la gestion manuelle de la mémoire est également autorisée si elles "
"héritent manuellement de :ref:`class_Object`."

msgid ""
"A value is **passed by value** when it is copied every time it's specified "
"as a function parameter. One consequence of this is that the function cannot "
"modify the parameter in a way that is visible from outside the function::"
msgstr ""
"Une valeur est **passée par valeur** quand elle est copiée chaque fois "
"qu'elle est donnée dans un paramètre d'une fonction. Une conséquence de cela "
"c'est que la fonction ne peut pas modifier ce paramètre de telle sorte que "
"cette modification soit visible en-dehors de cette fonction::"

msgid ""
"A value is **passed by reference** when it is *not* copied every time it's "
"specified as a function parameter. This allows modifying a function "
"parameter within a function body (and having the modified value accessible "
"outside the function). The downside is that the data passed as a function "
"parameter is no longer guaranteed to be immutable, which can cause difficult-"
"to-track bugs if not done carefully::"
msgstr ""
"Une valeur est **passée par référence** quand elle n'est **pas** copiée à "
"chaque fois qu'elle est donnée dans un paramètre d'une fonction. Cela permet "
"de modifier de modifier ce paramètre dans le corps de la fonction (et garder "
"ces modifications en-dehors de la fonction). L'inconvénient c'est que ces "
"données passées en paramètre ne sont plus garanties d'être immuables, ce qui "
"peut créer des bogues difficiles à trouver si ça n'est pas avec soin::"

msgid ""
"Compared to passing by value, passing by reference can perform better when "
"using large objects since copying large objects in memory can be slow."
msgstr ""
"En comparaison avec le passage par valeur, passer par référence peut "
"permettre de meilleures performances avec les grands objets puisque la copie "
"de grands objets en mémoire peut être une tâche assez lente."

msgid ""
"Additionally, in Godot, base types such as String are **immutable**. This "
"means that modifying them will *always* return a copy of the original value, "
"rather than modifying the value in-place."
msgstr ""
"De plus, dans Godot, les types de base tels que String sont **immuables**. "
"Cela signifie que leur modification retournera *toujours* une copie de leur "
"valeur originale plutôt que de modifier la valeur sur place."

msgid "Arrays"
msgstr "Les tableaux"

msgid ""
"Arrays in dynamically typed languages can contain many different mixed "
"datatypes inside and are always dynamic (can be resized at any time). "
"Compare for example arrays in statically typed languages:"
msgstr ""
"Les tableaux en langages typées dynamiquement peuvent contenir de nombreux "
"types de données mixtes différents à l'intérieur et sont toujours dynamiques "
"(redimensionnables à tout moment). Comparez par exemple les tableaux dans "
"des langages typées statiquement :"

msgid "And in GDScript:"
msgstr "Et en GDScript :"

msgid ""
"In dynamically typed languages, arrays can also double as other datatypes, "
"such as lists:"
msgstr ""
"Dans les langages typées dynamiquement, les tableaux peuvent aussi servir "
"comme autres types de données, comme les listes :"

msgid "Or unordered sets:"
msgstr "Ou des ensembles non ordonnés :"

msgid "Dictionaries"
msgstr "Les dictionnaires"

msgid ""
"Dictionaries are a powerful tool in dynamically typed languages. Most "
"programmers that come from statically typed languages (such as C++ or C#) "
"ignore their existence and make their life unnecessarily more difficult. "
"This datatype is generally not present in such languages (or only in limited "
"form)."
msgstr ""
"Les dictionnaires sont un outil très puissant dans les langages "
"dynamiquement typés. La plupart des programmeurs qui viennent de langages "
"typés statiquement (comme C++ ou C#) ignorent leur existence et se rendent "
"la vie inutilement plus difficile. Ce type de données n'est généralement pas "
"présent dans ces langages (ou seulement sous une forme limitée)."

msgid ""
"Dictionaries can map any value to any other value with complete disregard "
"for the datatype used as either key or value. Contrary to popular belief, "
"they are efficient because they can be implemented with hash tables. They "
"are, in fact, so efficient that some languages will go as far as "
"implementing arrays as dictionaries."
msgstr ""
"Les dictionnaires peuvent associer n'importe quelle valeur à n'importe "
"quelle autre valeur sans tenir compte du type de données utilisé comme clé "
"ou valeur. Contrairement à la croyance populaire, ils sont très efficaces "
"car ils peuvent être implémentés avec des tables de hachage. Ils sont, en "
"fait, si efficaces que certains langages iront jusqu'à implémenter les "
"tableaux comme des dictionnaires."

msgid "Example of Dictionary:"
msgstr "Exemple de dictionnaire :"

msgid ""
"Dictionaries are also dynamic, keys can be added or removed at any point at "
"little cost:"
msgstr ""
"Les dictionnaires sont également dynamiques, les clés peuvent être ajoutées "
"ou supprimées à tout moment et à faible coût :"

msgid ""
"In most cases, two-dimensional arrays can often be implemented more easily "
"with dictionaries. Here's a simple battleship game example:"
msgstr ""
"Dans la plupart des cas, les tableaux bidimensionnels peuvent souvent être "
"implémentés plus facilement avec des dictionnaires. Voici un exemple de jeu "
"de bataille navale simple :"

msgid ""
"Dictionaries can also be used as data markup or quick structures. While "
"GDScript's dictionaries resemble python dictionaries, it also supports Lua "
"style syntax and indexing, which makes it useful for writing initial states "
"and quick structs:"
msgstr ""
"Les dictionnaires peuvent également être utilisés comme balises de données "
"ou comme structures rapides. Bien que les dictionnaires GDScript ressemblent "
"aux dictionnaires python, ils supportent également la syntaxe et "
"l'indexation de style Lua, ce qui le rend très utile pour écrire des états "
"initiaux et des structures rapides :"

msgid "For & while"
msgstr "Boucles for et while"

msgid "Iterating in some statically typed languages can be quite complex:"
msgstr ""
"L'itération dans certains langages typées statiquement peut être assez "
"complexe :"

msgid "This is usually greatly simplified in dynamically typed languages:"
msgstr ""
"Ceci est généralement grandement simplifié dans les langages dynamiquement "
"typés :"

msgid ""
"Container datatypes (arrays and dictionaries) are iterable. Dictionaries "
"allow iterating the keys:"
msgstr ""
"Les types de données de conteneurs (tableaux et dictionnaires) sont "
"itérables. Les dictionnaires permettent d'itérer les clés :"

msgid "Iterating with indices is also possible:"
msgstr "L'itération avec les indices est également possible :"

msgid "The range() function can take 3 arguments:"
msgstr "La fonction range() peut prendre 3 arguments :"

msgid "Some statically typed programming language examples:"
msgstr "Quelques exemples de langage de programmation typés statiquement :"

msgid "Translate to:"
msgstr "Se traduit en :"

msgid "And backwards looping is done through a negative counter:"
msgstr "Et l'itération à rebours se fait à l'aide d'un compteur négatif :"

msgid "Becomes:"
msgstr "Devient :"

msgid "While"
msgstr "While"

msgid "while() loops are the same everywhere:"
msgstr "les boucles while() sont les mêmes partout :"

msgid "Custom iterators"
msgstr "Itérateurs personnalisés"

msgid ""
"You can create custom iterators in case the default ones don't quite meet "
"your needs by overriding the Variant class's ``_iter_init``, ``_iter_next``, "
"and ``_iter_get`` functions in your script. An example implementation of a "
"forward iterator follows:"
msgstr ""
"Vous pouvez créer des itérateurs personnalisés dans le cas où ceux par "
"défaut ne répondent pas tout à fait à vos besoins, en redéfinissant les "
"fonctions de la classe Variant ``_iter_init``, ``_iter_next``, et "
"``_iter_get`` dans votre script. Voici un exemple d'implémentation d'un tel "
"itérateur :"

msgid "And it can be used like any other iterator:"
msgstr "Et il peut être utilisé comme n'importe quel autre itérateur :"

msgid ""
"Make sure to reset the state of the iterator in ``_iter_init``, otherwise "
"nested for-loops that use custom iterators will not work as expected."
msgstr ""
"Assurez-vous de réinitialiser l'état de l'itérateur dans ``_iter_init``, "
"sinon les boucles imbriquées qui utilisent des itérateurs personnalisés ne "
"fonctionneront pas comme prévu."

msgid "Duck typing"
msgstr "Le typage canard (duck typing)"

msgid ""
"One of the most difficult concepts to grasp when moving from a statically "
"typed language to a dynamic one is duck typing. Duck typing makes overall "
"code design much simpler and straightforward to write, but it's not obvious "
"how it works."
msgstr ""
"L'un des concepts les plus difficiles à saisir lorsqu'on passe d'un langage "
"typé statiquement à un langage dynamique est le duck typing. Ce typage ad "
"hoc rend la conception globale du code beaucoup plus simple et directe à "
"écrire, mais il n'est pas évident de savoir comment cela fonctionne."

msgid ""
"As an example, imagine a situation where a big rock is falling down a "
"tunnel, smashing everything on its way. The code for the rock, in a "
"statically typed language would be something like:"
msgstr ""
"Par exemple, imaginez une situation où un gros rocher tombe dans un tunnel, "
"détruisant tout sur son passage. Le code pour le rocher, dans un langage "
"typé statiquement, serait quelque chose comme :"

msgid ""
"This way, everything that can be smashed by a rock would have to inherit "
"Smashable. If a character, enemy, piece of furniture, small rock were all "
"smashable, they would need to inherit from the class Smashable, possibly "
"requiring multiple inheritance. If multiple inheritance was undesired, then "
"they would have to inherit a common class like Entity. Yet, it would not be "
"very elegant to add a virtual method ``smash()`` to Entity only if a few of "
"them can be smashed."
msgstr ""
"De cette façon, tout ce qui peut être brisé par une pierre devrait hériter "
"de Smashable. Si un personnage, un ennemi, un meuble, un meuble, une petite "
"pierre étaient tous écrasables, ils auraient besoin d'hériter de la classe "
"Smashable, ce qui pourrait nécessiter un héritage multiple. Si l'héritage "
"multiple n'était pas désiré, alors ils devraient hériter d'une classe "
"commune comme Entity. Pourtant, il ne serait pas très élégant d'ajouter une "
"méthode virtuelle ``smash()`` à Entity seulement si quelques-uns d'entre eux "
"peuvent être écrasés."

msgid ""
"With dynamically typed languages, this is not a problem. Duck typing makes "
"sure you only have to define a ``smash()`` function where required and "
"that's it. No need to consider inheritance, base classes, etc."
msgstr ""
"Avec les langages de typage dynamique, ce n'est pas un problème. Le typage "
"canard permet de s'assurer que vous n'avez qu'à définir une fonction "
"``smash()`` là où c'est nécessaire et c'est tout. Pas besoin de considérer "
"l'héritage, les classes de base, etc."

msgid ""
"And that's it. If the object that hit the big rock has a smash() method, it "
"will be called. No need for inheritance or polymorphism. Dynamically typed "
"languages only care about the instance having the desired method or member, "
"not what it inherits or the class type. The definition of Duck Typing should "
"make this clearer:"
msgstr ""
"Et c'est tout. Si l'objet qui a frappé le gros rocher a une méthode smash(), "
"il sera appelé. Pas besoin d'héritage ou de polymorphisme. Les langues "
"typées dynamiquement ne se soucient que de l'instance ayant la méthode ou le "
"membre désiré, et non de ce dont elle hérite ou du type de classe. La "
"définition du Duck Typing devrait rendre cela plus clair :"

msgid ""
"*\"When I see a bird that walks like a duck and swims like a duck and quacks "
"like a duck, I call that bird a duck\"*"
msgstr ""
"*\"Quand je vois un oiseau qui marche comme un canard et nage comme un "
"canard et cancane comme un canard, j'appelle cet oiseau un canard.\"*"

msgid "In this case, it translates to:"
msgstr "Dans ce cas, cela se traduit par :"

msgid ""
"*\"If the object can be smashed, don't care what it is, just smash it.\"*"
msgstr ""
"*\"Si l'objet peut être écrasé, peu importe ce que c'est, écrasez-le.\"*"

msgid "Yes, we should call it Hulk typing instead."
msgstr "Oui, on devrait plutôt l'appeler le typage à la Hulk."

msgid ""
"It's possible that the object being hit doesn't have a smash() function. "
"Some dynamically typed languages simply ignore a method call when it doesn't "
"exist, but GDScript is stricter, so checking if the function exists is "
"desirable:"
msgstr ""
"Il est possible que l'objet touché n'ait pas de fonction smash(). Certains "
"langages à typage dynamique ignorent simplement un appel de méthode "
"lorsqu'il n'existe pas, mais GDScript est plus strict, il est donc "
"souhaitable de vérifier si la fonction existe :"

msgid ""
"Then, simply define that method and anything the rock touches can be smashed."
msgstr ""
"Ensuite, il suffit de définir cette méthode et tout ce que la roche touche "
"peut être écrasé."

msgid "Translation status"
msgstr "État de la traduction"
