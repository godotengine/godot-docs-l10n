# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using SceneTree"
msgstr "Utilisation de SceneTree"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"In previous tutorials, everything revolved around the concept of nodes. "
"Scenes are collections of nodes. They become active once they enter the "
"*scene tree*."
msgstr ""
"Dans le tutoriel précédent, tout tournait autour du concept des nœuds. "
"Chaque scène est simplement une collection de nœud. Elles deviennent actives "
"une fois entrée dans *l'arbre de scène*."

msgid "MainLoop"
msgstr "MainLoop"

msgid ""
"The way Godot works internally is as follows. There is the :ref:`OS "
"<class_OS>` class, which is the only instance that runs at the beginning. "
"Afterwards, all drivers, servers, scripting languages, scene system, etc are "
"loaded."
msgstr ""
"La façon dont Godot fonctionne en interne est la suivante : Au départ, la "
"seule instance qui fonctionne est la classe :ref:`OS <class_OS>`, ensuite, "
"tous les pilotes, serveurs, langages de script, système de gestion de "
"scènes ... sont chargés."

msgid ""
"When initialization is complete, :ref:`OS <class_OS>` needs to be supplied "
"a :ref:`MainLoop <class_MainLoop>` to run. Up to this point, all this is "
"internals working (you can check main/main.cpp file in the source code if "
"you are ever interested to see how this works internally)."
msgstr ""
"Quand l'initialisation est terminée, :ref:`OS <class_OS>` doit être fournie "
"à :ref:`MainLoop <class_MainLoop>` pour fonctionner. Jusqu'à ce point, tout "
"ceci est du fonctionnement interne (vous pouvez consulter le fichier main/"
"main.cpp dans le code source si jamais vous êtes intéressé de voir comment "
"cela fonctionne en interne)."

msgid ""
"The user program, or game, starts in the MainLoop. This class has a few "
"methods, for initialization, idle (frame-synchronized callback), fixed "
"(physics-synchronized callback), and input. Again, this is low level and "
"when making games in Godot, writing your own MainLoop seldom makes sense."
msgstr ""
"Le programme utilisateur, ou le jeu, démarre dans le MainLoop. Cette classe "
"a quelques méthodes, pour l'initialisation, l'inactivité (rappel synchronisé "
"par trame), fixé (rappel synchronisé par la physique) et les entrées. Encore "
"une fois, ceci est bas niveau et lorsque vous créez des jeux avec Godot, "
"écrire votre propre MainLoop a rarement du sens."

msgid "SceneTree"
msgstr "ArbreDesScènes"

msgid ""
"One of the ways to explain how Godot works is that it's a high level game "
"engine over a low level middleware."
msgstr ""
"L'un des manières d'expliquer comment Godot fonctionne est qu'il est un "
"moteur de jeu de haut niveau, construit par-dessus un middleware de bas "
"niveau."

msgid ""
"The scene system is the game engine, while the :ref:`OS <class_OS>` and "
"servers are the low level API."
msgstr ""
"Le système de gestion de scènes est le game engine, tandis que :ref:`OS "
"<class_OS>` et les serveurs sont partis de l'API de bas niveau."

msgid ""
"The scene system provides its own main loop to OS, :ref:`SceneTree "
"<class_SceneTree>`. This is automatically instanced and set when running a "
"scene, no need to do any extra work."
msgstr ""
"Le système de scène fournit sa propre boucle principale à l'OS, :ref:"
"`SceneTree <class_SceneTree>`. Elle est automatiquement instanciée et "
"configurée lors de l'exécution d'une scène, aucun travail supplémentaire est "
"nécessaire."

msgid ""
"It's important to know that this class exists because it has a few important "
"uses:"
msgstr ""
"Il est important de savoir que cette classe existe car elle a des "
"utilisations importantes :"

msgid ""
"It contains the root :ref:`Viewport <class_Viewport>`, to which a scene is "
"added as a child when it's first opened to become part of the *Scene Tree* "
"(more on that next)."
msgstr ""
"Elle contient le :ref:`Viewport <class_Viewport>` racine, à laquelle une "
"scène est ajoutée en tant qu'enfant lorsqu'elle est ouverte pour la première "
"fois, afin de faire partie de l'arborescence de scène *Scene Tree* (plus "
"d'informations là-dessus par la suite)."

msgid ""
"It contains information about the groups and has the means to call all nodes "
"in a group or get a list of them."
msgstr ""
"Elle contient des informations sur les groupes et permet d'appeler tous les "
"nœuds d'un groupe ou d'obtenir une liste de ceux-ci."

msgid ""
"It contains some global state functionality, such as setting pause mode or "
"quitting the process."
msgstr ""
"Elle contient certaines fonctionnalités d'état global, comme le réglage du "
"mode pause ou quitter le processus."

msgid ""
"When a node is part of the Scene Tree, the :ref:`SceneTree "
"<class_SceneTree>` singleton can be obtained by calling :ref:`Node."
"get_tree() <class_Node_method_get_tree>`."
msgstr ""
"Lorsqu'un nœud fait partie de l'arbre des scènes, le singleton :ref:"
"`SceneTree <class_SceneTree>` peut être obtenu en appelant simplement :ref:"
"`Node.get_tree() <class_Node_method_get_tree>`."

msgid "Root viewport"
msgstr "Le viewport racine"

msgid ""
"The root :ref:`Viewport <class_Viewport>` is always at the top of the scene. "
"From a node, it can be obtained in two different ways:"
msgstr ""
"Le :ref:`Viewport <class_Viewport>` racine est toujours en haut de la scène. "
"A partir d'un nœud, il peut être obtenu de deux manières différentes :"

msgid ""
"This node contains the main viewport. Anything that is a child of a :ref:"
"`Viewport <class_Viewport>` is drawn inside of it by default, so it makes "
"sense that the top of all nodes is always a node of this type otherwise "
"nothing would be seen."
msgstr ""
"Ce nœud contient la fenêtre d'affichage principale. Tout ce qui est un "
"enfant d'un :ref:`Viewport <class_Viewport>` est dessiné à l'intérieur de "
"celui-ci par défaut, il est donc logique que le nœud en amont de tous les "
"autres soit toujours un nœud de ce type, sinon rien ne serait vu."

msgid ""
"While other viewports can be created in the scene (for split-screen effects "
"and such), this one is the only one that is never created by the user. It's "
"created automatically inside SceneTree."
msgstr ""
"Alors que d'autres viewports peuvent être créés dans la scène (pour des "
"effets d'écran partagé et autres), celui-ci est le seul qui n'est jamais "
"créé par l'utilisateur. Il est créé automatiquement à l'intérieur de "
"SceneTree."

msgid "Scene tree"
msgstr "Scene tree (Arbre de scène)"

msgid ""
"When a node is connected, directly or indirectly, to the root viewport, it "
"becomes part of the *scene tree*."
msgstr ""
"Lorsqu'un nœud est connecté, directement ou indirectement, au viewport "
"racine, il fait partie de l'arborescence des scènes."

msgid ""
"This means that as explained in previous tutorials, it will get the "
"``_enter_tree()`` and ``_ready()`` callbacks (as well as ``_exit_tree()``)."
msgstr ""
"Cela signifie que, comme expliqué dans les tutoriels précédents, il recevra "
"les rappels de ``_enter_tree()`` et ``_ready()`` (ainsi que "
"``_exit_tree()``)."

msgid ""
"When nodes enter the *Scene Tree*, they become active. They get access to "
"everything they need to process, get input, display 2D and 3D visuals, "
"receive and send notifications, play sounds, etc. When they are removed from "
"the *scene tree*, they lose these abilities."
msgstr ""
"Lorsque les nœuds entrent dans l'*arbre de scène*, ils deviennent actifs. "
"Ils ont accès à tout ce dont ils ont besoin pour fonctionner, obtenir des "
"entrées, afficher des données en 2D et 3D, recevoir et envoyer des "
"notifications, jouer du son, etc. Lorsqu'ils sont retirés de l'*arbre de "
"scène*, ils perdent cet accès."

msgid "Tree order"
msgstr "Ordre de l'arborescence"

msgid ""
"Most node operations in Godot, such as drawing 2D, processing, or getting "
"notifications are done in tree order. This means that parents and siblings "
"with a lower rank in the tree order will get notified before the current "
"node."
msgstr ""
"La plupart des opérations de nœuds dans Godot, comme le dessin 2D, le "
"traitement ou l'obtention de notifications se font dans l'ordre de "
"l'arborescence. Cela signifie que les parents et les frères et sœurs ayant "
"un rang inférieur dans l'ordre de l'arborescence seront notifiés avant le "
"nœud courant."

msgid "\"Becoming active\" by entering the *Scene Tree*"
msgstr "\"Activation\" en entrant dans l'*arbre de scène* (Scene Tree)"

msgid "A scene is loaded from disk or created by scripting."
msgstr "Une scène est chargée à partir du disque ou créée par un script."

msgid ""
"The root node of that scene (only one root, remember?) is added as either a "
"child of the \"root\" Viewport (from SceneTree), or to any child or "
"grandchild of it."
msgstr ""
"Le nœud racine de cette scène (une seule racine, vous souvenez-vous ?) est "
"ajouté soit comme un enfant du Viewport \"racine\" (de SceneTree), soit à "
"tout enfant ou petit-enfant de celui-ci."

msgid ""
"Every node of the newly added scene, will receive the \"enter_tree\" "
"notification ( _enter_tree() callback in GDScript) in top-to-bottom order."
msgstr ""
"Chaque nœud de la scène nouvellement ajoutée recevra la notification "
"\"enter_tree\" (fonction de rappel _enter_tree() dans GDScript) dans l'ordre "
"haut vers bas."

msgid ""
"An extra notification, \"ready\" ( _ready() callback in GDScript) is "
"provided for convenience, when a node and all its children are inside the "
"active scene."
msgstr ""
"Une notification supplémentaire, \"ready\" (fonction de rappel _ready() dans "
"GDScript) est fournie par commodité, lorsqu'un nœud et tous ses enfants sont "
"à l'intérieur de la scène active."

msgid ""
"When a scene (or part of it) is removed, they receive the \"exit scene\" "
"notification ( _exit_tree() callback in GDScript) in bottom-to-top order"
msgstr ""
"Quand une scène (ou une partie de celle-ci) est supprimée, ils reçoivent la "
"notification \"exit scene\" (fonction de rappel _exit_tree() dans GDScript) "
"dans l'ordre bas vers haut"

msgid "Changing current scene"
msgstr "Changement de la scène courante"

msgid ""
"After a scene is loaded, it is often desired to change this scene for "
"another one. The simple way to do this is to use the :ref:`SceneTree."
"change_scene() <class_SceneTree_method_change_scene>` function:"
msgstr ""
"Après qu'une scène soit chargée, il est souvent souhaitable de la remplacer "
"par une autre. La façon la plus simple de le faire est d'utiliser la "
"fonction :ref:`SceneTree.change_scene() "
"<class_SceneTree_method_change_scene>` :"

msgid ""
"Rather than using file paths, one can also use ready-made :ref:`PackedScene "
"<class_PackedScene>` resources using the equivalent function :ref:`SceneTree."
"change_scene_to(PackedScene scene) <class_SceneTree_method_change_scene_to>`:"
msgstr ""
"Au lieu d'utiliser des chemins de fichiers, vous pouvez aussi utiliser une "
"ressource déjà prête :ref:`PackedScene <class_PackedScene>` en utilisant la "
"fonction équivalente :ref:`SceneTree.change_scene_to(PackedScene scene) "
"<class_SceneTree_method_change_scene_to>` :"

msgid ""
"These are quick and useful ways to switch scenes but have the drawback that "
"the game will stall until the new scene is loaded and running. At some point "
"in the development of your game, it may be preferable to create proper "
"loading screens with progress bar, animated indicators or thread "
"(background) loading. This must be done manually using autoloads (see next "
"chapter) and :ref:`doc_background_loading`."
msgstr ""
"Ce sont des façons rapides et utiles de passer d'une scène à une autre mais "
"qui ont l'inconvénient que le jeu va devoir attendre jusqu'à ce que la "
"nouvelle scène soit chargée et fonctionne. À un moment donné, dans le "
"développement de votre jeu, vous souhaiterez peut-être créer des écrans de "
"chargement avec une barre de progression, indicateurs animés ou chargement "
"via un autre thread (en arrière-plan). Cela doit être fait manuellement en "
"utilisant des \"autoloads\" (voir le chapitre suivant) et :ref:"
"`doc_background_loading`."

msgid "Translation status"
msgstr "État de la traduction"
