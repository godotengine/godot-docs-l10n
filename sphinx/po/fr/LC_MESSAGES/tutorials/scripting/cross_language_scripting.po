# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-language scripting"
msgstr "Scripting multi-langage"

msgid ""
"Godot allows you to mix and match scripting languages to suit your needs. "
"This means a single project can define nodes in both C# and GDScript. This "
"page will go through the possible interactions between two nodes written in "
"different languages."
msgstr ""
"Godot vous permet de mélanger les langages de script selon vos besoins. Cela "
"signifie qu'un seul projet peut utiliser des nœuds en C# et en GDScript. "
"Cette page passe en revue les interactions possibles entre deux nœuds écrits "
"dans des langages différents."

msgid ""
"The following two scripts will be used as references throughout this page."
msgstr ""
"Les deux scripts suivants serviront de référence tout le long de cette page."

msgid "Instantiating nodes"
msgstr "Installer des nœuds"

msgid ""
"If you're not using nodes from the scene tree, you'll probably want to "
"instantiate nodes directly from the code."
msgstr ""
"Si vous n'utilisez pas de nœuds venant de l'arbre des scène, vous voudrez "
"probablement instancier les nœuds directement depuis le code."

msgid "Instantiating C# nodes from GDScript"
msgstr "Instanciation des nœuds C# à partir de GDScript"

msgid ""
"Using C# from GDScript doesn't need much work. Once loaded (see :ref:"
"`doc_gdscript_classes_as_resources`), the script can be instantiated with :"
"ref:`new() <class_CSharpScript_method_new>`."
msgstr ""
"Utiliser un script en C# depuis GDscript ne demande pas énormément de "
"travail. Une fois chargé (see :ref:`doc_gdscript_classes_as_resources`) le "
"script peut être instancié avec :ref:`new() <class_CSharpScript_method_new>`."

msgid ""
"When creating ``.cs`` scripts, you should always keep in mind that the class "
"Godot will use is the one named like the ``.cs`` file itself. If that class "
"does not exist in the file, you'll see the following error: ``Invalid call. "
"Nonexistent function `new` in base``."
msgstr ""
"Lors de la création de script ``.cs``, vous devriez toujours garder à "
"l'esprit que la classe que Godot va utiliser est celle qui possède le même "
"nom que le fichier ``.cs`` . Si cette classe n'existe pas dans le fichier, "
"vous verrez l'erreur suivante : ``Invalid call. Nonexistent function `new` "
"in base``."

msgid "For example, MyCoolNode.cs should contain a class named MyCoolNode."
msgstr ""
"Par exemple, MonSuperNoeud.cs devrait contenir une classe nommée "
"MonSuperNoeud."

msgid ""
"You also need to check your ``.cs`` file is referenced in the project's ``."
"csproj`` file. Otherwise, the same error will occur."
msgstr ""
"Vous devez aussi vérifier que votre fichier ``.cs`` est référencé dans le "
"fichier projet ``.csproj``. Sinon la même erreur se produira."

msgid "Instantiating GDScript nodes from C#"
msgstr "Instanciation des nœuds GDScript à partir de C#"

msgid ""
"From the C# side, everything work the same way. Once loaded, the GDScript "
"can be instantiated with :ref:`GDScript.New() <class_GDScript_method_new>`."
msgstr ""
"Du côté d'un script C#, tout marche de la même manière. Une fois le script "
"écrit en GDscript chargé depuis le script en C#, il peut être instancié "
"avec :ref:`GDScript.New() <class_GDScript_method_new>`."

msgid ""
"Here we are using an :ref:`class_Object`, but you can use type conversion "
"like explained in :ref:`doc_c_sharp_features_type_conversion_and_casting`."
msgstr ""
"Ici, on utilise un :ref:`class_Object`, mais vous pouvez utiliser la "
"conversion de type tel qu'expliqué dans :ref:"
"`doc_c_sharp_features_type_conversion_and_casting`."

msgid "Accessing fields"
msgstr "Accès aux champs"

msgid "Accessing C# fields from GDScript"
msgstr "Accès aux champs C# depuis GDScript"

msgid ""
"Accessing C# fields from GDScript is straightforward, you shouldn't have "
"anything to worry about."
msgstr ""
"Accéder au champ de C# depuis le GDscript est intuitif, vous ne devriez pas "
"rencontrer de problème."

msgid ""
"Note that it doesn't matter if the field is defined as a property or an "
"attribute. However, trying to set a value on a property that does not define "
"a setter will result in a crash."
msgstr ""
"Remarquez que cela n'a pas d'importance si un champ est définit comme "
"propriété ou attribut. Mais essayer de changer la valeur d'une propriété qui "
"ne définit pas un setter (une fonction qui change la valeur d'une propriété) "
"résultera en un crash."

msgid "Accessing GDScript fields from C#"
msgstr "Accéder au champ de GDscript depuis du C#"

msgid ""
"As C# is statically typed, accessing GDScript from C# is a bit more "
"convoluted, you will have to use :ref:`Object.Get() "
"<class_Object_method_get>` and :ref:`Object.Set() "
"<class_Object_method_set>`. The first argument is the name of the field you "
"want to access."
msgstr ""
"Le C# est typé statiquement, accéder au GDscript depuis C# est plus "
"convoluté.. Il va falloir utiliser :ref:`Object.Get() "
"<class_Object_method_get>` et :ref:`Object.Set() <class_Object_method_set>`. "
"Le premier argument est le nom du champ que vous souhaitez accéder."

msgid ""
"Keep in mind that when setting a field value you should only use types the "
"GDScript side knows about. Essentially, you want to work with built-in types "
"as described in :ref:`doc_gdscript` or classes extending :ref:`class_Object`."
msgstr ""
"Gardez à l'esprit que lorsque vous définissez la valeur d'un champ, vous ne "
"devez utiliser que les types connus du côté GDScript. Essentiellement, vous "
"voulez travailler avec des types intégrés comme décrit dans :ref:"
"`doc_gdscript` ou des classes héritant de :ref:`class_Object`."

msgid "Calling methods"
msgstr "Méthodes d'appel"

msgid "Calling C# methods from GDScript"
msgstr "Appel de méthodes C# depuis GDScript"

msgid ""
"Again, calling C# methods from GDScript should be straightforward. The "
"marshalling process will do its best to cast the arguments to match function "
"signatures. If that's impossible, you'll see the following error: ``Invalid "
"call. Nonexistent function `FunctionName```."
msgstr ""
"Encore une fois, appeler des méthodes C# depuis GDScript devrait être "
"simple. Le processus de sérialisation fera de son mieux pour vous fournir "
"les arguments qui correspondent aux signatures de fonction. Si c'est "
"impossible, vous verrez l'erreur suivante : ``Invalid call. Nonexistent "
"function `FunctionName```."

msgid "Calling GDScript methods from C#"
msgstr "Appel de méthodes GDScript depuis C#"

msgid ""
"To call GDScript methods from C# you'll need to use :ref:`Object.Call() "
"<class_Object_method_call>`. The first argument is the name of the method "
"you want to call. The following arguments will be passed to said method."
msgstr ""
"Pour appeler des méthodes GDscript depuis C# vous aurez besoin d'utiliser :"
"ref:`Object.Call() <class_Object_method_call>`. Le premier argument est le "
"nom de la méthode que vous voulez appeler. Les arguments suivants sont "
"passés à la méthode en question."

msgid ""
"As you can see, if the first argument of the called method is an array, "
"you'll need to cast it as ``object``. Otherwise, each element of your array "
"will be treated as a single argument and the function signature won't match."
msgstr ""
"Comme vous pouvez voir, le premier argument de la méthode appelé est un "
"array, vous aurez besoin de le convertir comme un ``object``. Sinon chaque "
"élément de votre array sera traité comme un argument unique et la signature "
"de la fonction ne correspondra pas."

msgid "Inheritance"
msgstr "Héritage"

msgid ""
"A GDScript file may not inherit from a C# script. Likewise, a C# script may "
"not inherit from a GDScript file. Due to how complex this would be to "
"implement, this limitation is unlikely to be lifted in the future. See `this "
"GitHub issue <https://github.com/godotengine/godot/issues/38352>`__ for more "
"information."
msgstr ""
"Un fichier GDScript ne peut pas hériter d'un script C#. De même, un script "
"C# ne peut pas hériter d'un fichier GDScript. En effet, la complexité de la "
"mise en œuvre serait telle que cette limitation ne sera surement pas levée à "
"l'avenir. Voir `cette édition de GitHub <https://github.com/godotengine/"
"godot/issues/38352>`__ pour plus d'informations."

msgid "Translation status"
msgstr "État de la traduction"
