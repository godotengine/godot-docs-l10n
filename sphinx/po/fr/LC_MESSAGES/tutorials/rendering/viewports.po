# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Viewports"
msgstr "Utilisation de Viewports"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"Think of a :ref:`Viewport <class_Viewport>` as a screen onto which the game "
"is projected. In order to see the game, we need to have a surface on which "
"to draw it; that surface is the Root :ref:`Viewport <class_Viewport>`."
msgstr ""
"Pensez à un :ref:`Viewport <class_Viewport>` comme un écran sur lequel le "
"jeu est projeté. Afin de voir le jeu, nous avons besoin d'une surface sur "
"laquelle le dessiner ; cette surface est la Racine :ref:`Viewport "
"<class_Viewport>`."

msgid ""
":ref:`Viewports <class_Viewport>` can also be added to the scene so that "
"there are multiple surfaces to draw on. When we are drawing to a :ref:"
"`Viewport <class_Viewport>` that is not the Root, we call it a render "
"target. We can access the contents of a render target by accessing its "
"corresponding :ref:`texture <class_ViewportTexture>`. By using a :ref:"
"`Viewport <class_Viewport>` as a render target, we can either render "
"multiple scenes simultaneously or we can render to a :ref:`texture "
"<class_ViewportTexture>` which is applied to an object in the scene, for "
"example a dynamic skybox."
msgstr ""
":ref:`Viewports <class_Viewport>` peut aussi être ajouté à la scène pour "
"qu'il y ait plusieurs surfaces sur lesquelles dessiner. Lorsque nous "
"dessinons vers un :ref:`Viewport <class_Viewport>` qui n'est pas la Racine, "
"nous l'appelons une cible de rendu. Nous pouvons accéder au contenu d'une "
"cible de rendu en accédant à sa :ref:`texture <class_ViewportTexture>` "
"correspondante. En utilisant un :ref:`Viewport <class_Viewport>` comme cible "
"de rendu, nous pouvons soit rendre plusieurs scènes simultanément, soit "
"rendre vers un :ref:`texture <class_ViewportTexture>` qui est appliqué à un "
"objet dans la scène, par exemple une skybox dynamique."

msgid ""
":ref:`Viewports <class_Viewport>` have a variety of use cases, including:"
msgstr ""
":ref:`Viewports <class_Viewport>` ont une variété de cas d'utilisation, y "
"compris :"

msgid "Rendering 3D objects within a 2D game"
msgstr "Rendu d'objets 3D dans un jeu 2D"

msgid "Rendering 2D elements in a 3D game"
msgstr "Rendu d'éléments 2D dans un jeu 3D"

msgid "Rendering dynamic textures"
msgstr "Rendu de textures dynamiques"

msgid "Generating procedural textures at runtime"
msgstr "Génération de textures procédurales pendant l'exécution"

msgid "Rendering multiple cameras in the same scene"
msgstr "Rendu de plusieurs caméras dans la même scène"

msgid ""
"What all these use cases have in common is that you are given the ability to "
"draw objects to a texture as if it were another screen and can then choose "
"what to do with the resulting texture."
msgstr ""
"Le point commun de tous ces cas d'utilisation est que vous avez la "
"possibilité de dessiner des objets sur une texture comme s'il s'agissait "
"d'un autre écran et que vous pouvez ensuite choisir ce que vous voulez faire "
"avec la texture résultante."

msgid "Input"
msgstr "Entrée"

msgid ""
":ref:`Viewports <class_Viewport>` are also responsible for delivering "
"properly adjusted and scaled input events to all their children nodes. "
"Typically, input is received by the nearest :ref:`Viewport <class_Viewport>` "
"in the tree, but you can set :ref:`Viewports <class_Viewport>` not to "
"receive input by checking 'Disable Input' to 'on'; this will allow the next "
"nearest :ref:`Viewport <class_Viewport>` in the tree to capture the input."
msgstr ""
":ref:`Viewports <class_Viewport>` sont aussi responsables de délivrer "
"lesévénements d'entrée correctement ajustés et mis à l'échelle pour tous "
"leurs nœuds enfants. Typiquement, l'entrée est reçue par le plus proche :ref:"
"`Viewport <class_Viewport>` dans l'arbre, mais vous pouvez définir :ref:"
"`Viewports <class_Viewport>` de ne pas recevoir d'entrée en cochant 'Disable "
"Input' à 'on' ; ceci permettra au plus proche :ref:`Viewport "
"<class_Viewport>` suivant dans l'arbre de capturer l'entrée."

msgid ""
"For more information on how Godot handles input, please read the :ref:`Input "
"Event Tutorial<doc_inputevent>`."
msgstr ""
"Pour plus d'informations sur la façon dont Godot gère les entrées, veuillez "
"lire le :ref:`Input Event Tutorial<doc_inputevent>`."

msgid "Listener"
msgstr "Auditeur"

msgid ""
"Godot supports 3D sound (in both 2D and 3D nodes); more on this can be found "
"in the :ref:`Audio Streams Tutorial<doc_audio_streams>`. For this type of "
"sound to be audible, the :ref:`Viewport <class_Viewport>` needs to be "
"enabled as a listener (for 2D or 3D). If you are using a custom :ref:"
"`Viewport <class_Viewport>` to display your :ref:`World <class_World>`, "
"don't forget to enable this!"
msgstr ""
"Godot supporte le son 3D (dans les nœuds 2D et 3D) ; plus d'informations à "
"ce sujet peuvent être trouvées dans le :ref:`Audio Streams "
"Tutorial<doc_audio_streams>`. Pour que ce type de son soit audible, le :ref:"
"`Viewport <class_Viewport>` doit être activé en tant qu'auditeur (pour la 2D "
"ou la 3D). Si vous utilisez un :ref:`Viewport <class_Viewport>` personnalisé "
"pour afficher votre :ref:`World <class_World>`, n'oubliez pas de l'activer !"

msgid "Cameras (2D & 3D)"
msgstr "Caméras (2D & 3D)"

msgid ""
"When using a :ref:`Camera <class_Camera>` / :ref:`Camera2D "
"<class_Camera2D>`, cameras will always display on the closest parent :ref:"
"`Viewport <class_Viewport>` (going towards the root). For example, in the "
"following hierarchy:"
msgstr ""
"Lorsque vous utilisez une :ref:`Camera <class_Camera>` / :ref:`Camera2D "
"<class_Camera2D>`, les caméras s'afficheront toujours sur le parent le plus "
"proche :ref:`Viewport <class_Viewport>` (en allant vers la racine). Par "
"exemple, dans la hiérarchie suivante :"

msgid ""
"CameraA will display on the Root :ref:`Viewport <class_Viewport>` and it "
"will draw MeshA. CameraB will be captured by the :ref:`Viewport "
"<class_Viewport>` Node along with MeshB. Even though MeshB is in the scene "
"hierarchy, it will still not be drawn to the Root :ref:`Viewport "
"<class_Viewport>`. Similarly MeshA will not be visible from the :ref:"
"`Viewport <class_Viewport>` node because :ref:`Viewport <class_Viewport>` "
"nodes only capture nodes below them in the hierarchy."
msgstr ""
"CameraA va afficher sur la Racine :ref:`Viewport <class_Viewport>` et il va "
"dessiner le MeshA. CameraB sera capturé par le nœud :ref:`Viewport "
"<class_Viewport>` avec MeshB. Même si MeshB est dans la hiérarchie de la "
"scène, il ne sera toujours pas dessiné à la Racine :ref:`Viewport "
"<class_Viewport>`. De même, MeshA ne sera pas visible depuis le nœud :ref:"
"`Viewport <class_Viewport>` car les nœuds :ref:`Viewport <class_Viewport>` "
"ne capturent que les nœuds situés en dessous d'eux dans la hiérarchie."

msgid ""
"There can only be one active camera per :ref:`Viewport <class_Viewport>`, so "
"if there is more than one, make sure that the desired one has the "
"\"current\" property set, or make it the current camera by calling:"
msgstr ""
"Il ne peut y avoir qu'une seule caméra active par :ref:`Viewport "
"<class_Viewport>`, donc s'il y en a plus d'une, assurez-vous que celle "
"désirée a la propriété \"current\" définie, ou faites-en la caméra courante "
"en l'appelant :"

msgid ""
"By default, cameras will render all objects in their world. In 3D, cameras "
"can use their :ref:`cull_mask <class_Camera_property_cull_mask>` property "
"combined with the :ref:`VisualInstance's <class_VisualInstance>` :ref:`layer "
"<class_VisualInstance_property_layers>` property to restrict which objects "
"are rendered."
msgstr ""
"Par défaut, les caméras rendent tous les objets de leur monde. En 3D, les "
"caméras peuvent utiliser leur propriété :ref:`cull_mask "
"<class_Camera_property_cull_mask>` combinée avec la propriété :ref:"
"`VisualInstance <class_VisualInstance>` :ref:`layer "
"<class_VisualInstance_property_layers>` pour restreindre les objets à rendre."

msgid "Scale & stretching"
msgstr "Échelle et étirement"

msgid ""
":ref:`Viewports <class_Viewport>` have a \"size\" property, which represents "
"the size of the :ref:`Viewport <class_Viewport>` in pixels. For :ref:"
"`Viewports <class_Viewport>` which are children of :ref:`ViewportContainers "
"<class_viewportcontainer>`, these values are overridden, but for all others, "
"this sets their resolution."
msgstr ""
"Les :ref:`Viewports <class_Viewport>` ont une propriété \"size\", qui "
"représente la taille du :ref:`Viewport <class_Viewport>` en pixels. Pour :"
"ref:`Viewports <class_Viewport>` qui sont les enfants de :ref:"
"`ViewportContainers <class_viewportcontainer>`, ces valeurs sont "
"surchargées, mais pour toutes les autres, cela fixe leur résolution."

msgid ""
"It is also possible to scale the 2D content and make the :ref:`Viewport "
"<class_Viewport>` resolution different from the one specified in size, by "
"calling:"
msgstr ""
"Il est aussi possible de mettre à l'échelle le contenu 2D et de rendre la "
"résolution du :ref:`Viewport <class_Viewport>` différente de celle spécifiée "
"en taille, en appelant :"

msgid ""
"The root :ref:`Viewport <class_Viewport>` uses this for the stretch options "
"in the project settings. For more information on scaling and stretching "
"visit the :ref:`Multiple Resolutions Tutorial <doc_multiple_resolutions>`"
msgstr ""
"La racine :ref:`Viewport <class_Viewport>` utilise ceci pour les options "
"d'étirement dans les paramètres du projet. Pour plus d'informations sur la "
"mise à l'échelle et l'étirement, visitez le :ref:`Multiple Resolutions "
"Tutorial <doc_multiple_resolutions>`"

msgid "Worlds"
msgstr "Worlds"

msgid ""
"For 3D, a :ref:`Viewport <class_Viewport>` will contain a :ref:`World "
"<class_World>`. This is basically the universe that links physics and "
"rendering together. Spatial-based nodes will register using the :ref:`World "
"<class_World>` of the closest :ref:`Viewport <class_Viewport>`. By default, "
"newly created :ref:`Viewports <class_Viewport>` do not contain a :ref:`World "
"<class_World>` but use the same as their parent :ref:`Viewport "
"<class_Viewport>` (the root :ref:`Viewport <class_Viewport>` always contains "
"a :ref:`World <class_World>`, which is the one objects are rendered to by "
"default). A :ref:`World <class_World>` can be set in a :ref:`Viewport "
"<class_Viewport>` using the \"world\" property, and that will separate all "
"children nodes of that :ref:`Viewport <class_Viewport>` from interacting "
"with the parent :ref:`Viewport's <class_Viewport>` :ref:`World "
"<class_World>`. This is especially useful in scenarios where, for example, "
"you might want to show a separate character in 3D imposed over the game "
"(like in StarCraft)."
msgstr ""
"Pour la 3D, un :ref:`Viewport <class_Viewport>` contiendra un :ref:`World "
"<class_World>`. Il s'agit essentiellement de l'univers qui relie la physique "
"et le rendu ensemble. Les nœuds basé sur Spatial s'enregistreront en "
"utilisant le :ref:`World <class_World>` du plus proche :ref:`Viewport "
"<class_Viewport>`. Par défaut, les nouveaux :ref:`Viewports "
"<class_Viewport>` ne contiennent pas de :ref:`World <class_World>` mais "
"utilisent le même que leur parent :ref:`Viewport <class_Viewport>` (le :ref:"
"`Viewport <class_Viewport>` racine contient toujours un :ref:`World "
"<class_World>`, qui est celui vers lequel les objets sont rendus par "
"défaut). Un :ref:`World <class_World>` peut être défini dans un :ref:"
"`Viewport <class_Viewport>` en utilisant la propriété \"world\", et cela "
"séparera tous les nœuds enfants de ce :ref:`Viewport <class_Viewport>` de "
"l'interaction avec le parent :ref:`Viewport <class_Viewport>` :ref:`World "
"<class_World>`. Ceci est particulièrement utile dans les scénarios où, par "
"exemple, vous pourriez vouloir montrer un personnage séparé en 3D imposé sur "
"le jeu (comme dans StarCraft)."

msgid ""
"As a helper for situations where you want to create :ref:`Viewports "
"<class_Viewport>` that display single objects and don't want to create a :"
"ref:`World <class_World>`, :ref:`Viewport <class_Viewport>` has the option "
"to use its own :ref:`World <class_World>`. This is useful when you want to "
"instance 3D characters or objects in a 2D :ref:`World <class_World2D>`."
msgstr ""
"Comme aide pour les situations où vous voulez créer des :ref:`Viewports "
"<class_Viewport>` qui affichent des objets simples et où ne vous ne voulez "
"pas créer un :ref:`World <class_World>`, :ref:`Viewport <class_Viewport>` a "
"l'option d'utiliser son propre :ref:`World <class_World>`. C'est utile "
"lorsque vous voulez instancier des personnages ou des objets 3D dans un "
"environnement 2D :ref:`World <class_World2D>`."

msgid ""
"For 2D, each :ref:`Viewport <class_Viewport>` always contains its own :ref:"
"`World2D <class_World2D>`. This suffices in most cases, but in case sharing "
"them may be desired, it is possible to do so by setting the :ref:`Viewport's "
"<class_Viewport>` :ref:`World2D <class_World2D>` manually."
msgstr ""
"Pour la 2D, chaque :ref:`Viewport <class_Viewport>` contient toujours son "
"propre :ref:`World2D <class_World2D>`. Cela suffit dans la plupart des cas, "
"mais au cas où partager serait souhaité, il est possible de le faire en "
"paramétrant le :ref:`Viewport's <class_Viewport>` :ref:`World2D "
"<class_World2D>` manuellement."

msgid ""
"For an example of how this works, see the demo projects `3D in 2D <https://"
"github.com/godotengine/godot-demo-projects/tree/master/viewport/3d_in_2d>`_ "
"and `2D in 3D <https://github.com/godotengine/godot-demo-projects/tree/"
"master/viewport/2d_in_3d>`_ respectively."
msgstr ""
"Pour un exemple de fonctionnement, voir les projets de démonstration `3D in "
"2D <https://github.com/godotengine/godot-demo-projects/tree/master/"
"viewport/3d_in_2d>`_ et `2D in 3D <https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport/2d_in_3d>`_ respectivement."

msgid "Capture"
msgstr "Capturer"

msgid ""
"It is possible to query a capture of the :ref:`Viewport <class_Viewport>` "
"contents. For the root :ref:`Viewport <class_Viewport>`, this is effectively "
"a screen capture. This is done with the following code:"
msgstr ""
"Il est possible de demander une capture du contenu d'un :ref:`Viewport "
"<class_Viewport>`. Pour le :ref:`Viewport <class_Viewport>` racine, c'est "
"effectivement une capture d'écran. Cela se fait avec le code suivant :"

msgid ""
"But if you use this in ``_ready()`` or from the first frame of the :ref:"
"`Viewport's <class_Viewport>` initialization, you will get an empty texture "
"because there is nothing to get as texture. You can deal with it using (for "
"example):"
msgstr ""
"Mais si vous utilisez ceci dans ``_ready()`` ou depuis la première image de "
"l'initialisation du :ref:`Viewport <class_Viewport>`, vous obtiendrez une "
"texture vide car il n'y a rien à obtenir comme texture. Vous pouvez y faire "
"face en utilisant (par exemple) :"

msgid "Viewport Container"
msgstr "Viewport Container"

msgid ""
"If the :ref:`Viewport <class_Viewport>` is a child of a :ref:"
"`ViewportContainer <class_viewportcontainer>`, it will become active and "
"display anything it has inside. The layout looks like this:"
msgstr ""
"Si le :ref:`Viewport <class_Viewport>` est un enfant d'un :ref:"
"`ViewportContainer <class_viewportcontainer>`, il deviendra actif et "
"affichera tout ce qu'il a à l'intérieur. La mise en page ressemble à ça :"

msgid ""
"The :ref:`Viewport <class_Viewport>` will cover the area of its parent :ref:"
"`ViewportContainer <class_viewportcontainer>` completely if :ref:"
"`Stretch<class_viewportcontainer_property_stretch>` is set to ``true`` in :"
"ref:`ViewportContainer <class_viewportcontainer>`. Note: The size of the :"
"ref:`ViewportContainer <class_viewportcontainer>` cannot be smaller than the "
"size of the :ref:`Viewport <class_Viewport>`."
msgstr ""
"Le :ref:`Viewport <class_Viewport>` couvrira la zone de son parent :ref:"
"`ViewportContainer <class_viewportcontainer>` complètement si :ref:"
"`Stretch<class_viewportcontainer_property_stretch>` est réglé sur ``true`` "
"dans :ref:`ViewportContainer <class_viewportcontainer>`. Note : La taille "
"du :ref:`ViewportContainer <class_viewportcontainer>` ne peut pas être plus "
"petite que la taille du :ref:`Viewport <class_Viewport>`."

msgid "Rendering"
msgstr "Rendu"

msgid ""
"Due to the fact that the :ref:`Viewport <class_Viewport>` is an entryway "
"into another rendering surface, it exposes a few rendering properties that "
"can be different from the project settings. The first is MSAA; you can "
"choose to use a different level of MSAA for each :ref:`Viewport "
"<class_Viewport>`; the default behavior is DISABLED. You can also set the :"
"ref:`Viewport <class_Viewport>` to use HDR, HDR is very useful for when you "
"want to store values in the texture that are outside the range 0.0 - 1.0."
msgstr ""
"Du fait que le :ref:`Viewport <class_Viewport>` est une entrée dans une "
"autre surface de rendu, il expose quelques propriétés de rendu qui peuvent "
"être différentes des paramètres du projet. Le premier est MSAA ; vous pouvez "
"choisir d'utiliser un niveau différent de MSAA pour chaque :ref:`Viewport "
"<class_Viewport>` ; le comportement par défaut est DISABLED. Vous pouvez "
"aussi définir le :ref:`Viewport <class_Viewport>` pour utiliser HDR, HDR est "
"très utile pour quand vous voulez stocker des valeurs dans la texture qui "
"sont en dehors de la plage 0.0 - 1.0."

msgid ""
"If you know how the :ref:`Viewport <class_Viewport>` is going to be used, "
"you can set its Usage to either 3D or 2D. Godot will then restrict how the :"
"ref:`Viewport <class_Viewport>` is drawn to in accordance with your choice; "
"default is 3D. The 2D usage mode is slightly faster and uses less memory "
"compared to the 3D one. It's a good idea to set the :ref:`Viewport "
"<class_Viewport>`'s Usage property to 2D if your viewport doesn't render "
"anything in 3D."
msgstr ""
"Si vous savez comment le :ref:`Viewport <class_Viewport>` va être utilisé, "
"vous pouvez régler son Utilisation sur 3D ou 2D. Godot va alors restreindre "
"la façon dont le :ref:`Viewport <class_Viewport>` est dessiné en fonction de "
"votre choix ; la valeur par défaut est 3D. Le mode d'utilisation 2D est "
"légèrement plus rapide et utilise moins de mémoire que le mode 3D. C'est une "
"bonne idée de mettre la propriété Usage de :ref:`Viewport <class_Viewport>` "
"à 2D si votre viewport ne rend rien en 3D."

msgid ""
"If you need to render 3D shadows in the viewport, make sure to set the "
"viewport's *Shadow Atlas Size* property to a value higher than 0. Otherwise, "
"shadows won't be rendered. For reference, the Project Settings define it to "
"4096 by default."
msgstr ""
"Si vous devez rendre des ombres 3D dans le viewport, assurez-vous de définir "
"la propriété *Shadow Atlas Size* du viewport à une valeur supérieure à 0, "
"sinon les ombres ne seront pas rendues. Pour référence, les Paramètres de "
"projet la définissent à 4096 par défaut."

msgid ""
"Godot also provides a way of customizing how everything is drawn inside :ref:"
"`Viewports <class_Viewport>` using “Debug Draw”. Debug Draw allows you to "
"specify one of four options for how the :ref:`Viewport <class_Viewport>` "
"will display things drawn inside it. Debug Draw is disabled by default."
msgstr ""
"Godot fournit également un moyen de personnaliser la façon dont tout est "
"dessiné à l'intérieur des :ref:`Viewports <class_Viewport>` en utilisant "
"\"Debug Draw\". Debug Draw vous permet de spécifier une des quatre options "
"pour la façon dont le :ref:`Viewport <class_Viewport>` affichera les choses "
"dessinées à l'intérieur. Debug Draw est désactivé par défaut."

msgid "*A scene drawn with Debug Draw disabled*"
msgstr "*Une scène dessinée avec Debug Draw désactivé*"

msgid ""
"The other three options are Unshaded, Overdraw, and Wireframe. Unshaded "
"draws the scene without using lighting information so all the objects appear "
"flatly colored the color of their albedo."
msgstr ""
"Les trois autres options sont Unshaded, Overdraw, et Wireframe. Unshaded, il "
"dessine la scène sans utiliser les informations d'éclairage, de sorte que "
"tous les objets apparaissent colorés de façon uniforme, de la couleur de "
"leur albedo."

msgid "*The same scene with Debug Draw set to Unshaded*"
msgstr "*La même scène avec Debug Draw réglé sur Unshaded*"

msgid ""
"Overdraw draws the meshes semi-transparent with an additive blend so you can "
"see how the meshes overlap."
msgstr ""
"Overdraw dessine les mailles semi-transparentes avec un mélange additif pour "
"que vous puissiez voir comment les mailles se chevauchent."

msgid "*The same scene with Debug Draw set to Overdraw*"
msgstr "*La même scène avec Debug Draw réglé sur Overdraw*"

msgid ""
"Lastly, Wireframe draws the scene using only the edges of triangles in the "
"meshes."
msgstr ""
"Enfin, Wireframe dessine la scène en utilisant uniquement les bords des "
"triangles dans les mailles."

msgid ""
"The effects of the Wireframe mode are only visible in the editor, not while "
"the project is running."
msgstr ""
"Les effets du mode Wireframe ne sont visibles que dans l'éditeur, pas "
"pendant l'exécution du projet."

msgid "Render target"
msgstr "Cible de rendu"

msgid ""
"When rendering to a :ref:`Viewport <class_Viewport>`, whatever is inside "
"will not be visible in the scene editor. To display the contents, you have "
"to draw the :ref:`Viewport's <class_Viewport>` :ref:`ViewportTexture "
"<class_ViewportTexture>` somewhere. This can be requested via code using "
"(for example):"
msgstr ""
"Lors du rendu vers un :ref:`Viewport <class_Viewport>`, ce qui se trouve à "
"l'intérieur ne sera pas visible dans l'éditeur de scènes. Pour afficher le "
"contenu, vous devez dessiner le :ref:`Viewport's <class_Viewport>` :ref:"
"`ViewportTexture <class_ViewportTexture>` quelque part. Ceci peut être "
"demandé par code en utilisant (par exemple) :"

msgid ""
"Or it can be assigned in the editor by selecting \"New ViewportTexture\""
msgstr ""
"Ou il peut être assigné dans l'éditeur en sélectionnant \"New "
"ViewportTexture\""

msgid ""
"and then selecting the :ref:`Viewport <class_Viewport>` you want to use."
msgstr ""
"et ensuite en sélectionnant le :ref:`Viewport <class_Viewport>` que vous "
"voulez utiliser."

msgid ""
"Every frame, the :ref:`Viewport <class_Viewport>`'s texture is cleared away "
"with the default clear color (or a transparent color if :ref:`Transparent "
"Bg<class_Viewport_property_transparent_bg>` is set to ``true``). This can be "
"changed by setting :ref:`Clear "
"Mode<class_Viewport_property_render_target_clear_mode>` to Never or Next "
"Frame. As the name implies, Never means the texture will never be cleared, "
"while next frame will clear the texture on the next frame and then set "
"itself to Never."
msgstr ""
"A chaque image, la texture de :ref:`Viewport <class_Viewport>` est effacée "
"avec la couleur d'éffacement par défaut (ou une couleur transparente si :ref:"
"`Transparent Bg<class_Viewport_property_transparent_bg>` est réglé sur "
"``true``). Cela peut être changé en réglant :ref:`Clear "
"Mode<class_Viewport_property_render_target_clear_mode>` sur Never ou Next "
"Frame. Comme son nom l'indique, Never signifie que la texture ne sera jamais "
"effacée, tandis que Next Frame effacera la texture sur l'image suivante et "
"se mettra ensuite à Never."

msgid ""
"By default, re-rendering of the :ref:`Viewport <class_Viewport>` happens "
"when the :ref:`Viewport <class_Viewport>`'s :ref:`ViewportTexture "
"<class_ViewportTexture>` has been drawn in a frame. If visible, it will be "
"rendered; otherwise, it will not. This behavior can be changed to manual "
"rendering (once), or always render, no matter if visible or not. This "
"flexibility allows users to render an image once and then use the texture "
"without incurring the cost of rendering every frame."
msgstr ""
"Par défaut, le re-rendu du :ref:`Viewport <class_Viewport>` se produit quand "
"la :ref:`ViewportTexture <class_ViewportTexture>` du :ref:`Viewport "
"<class_Viewport>` a été dessiné dans l'image. Si elle est visible, elle sera "
"rendue ; sinon, elle ne le sera pas. Ce comportement peut être changé en "
"rendu manuel (une fois), ou toujours rendu, qu'il soit visible ou non. Cette "
"flexibilité permet aux utilisateurs de rendre une image une seule fois et "
"d'utiliser ensuite la texture sans avoir à supporter le coût du rendu de "
"chaque image."

msgid ""
"Make sure to check the Viewport demos! Viewport folder in the demos archive "
"available to download, or https://github.com/godotengine/godot-demo-projects/"
"tree/master/viewport"
msgstr ""
"Assurez-vous de consulter les démos de Viewport ! Dossier Viewport dans "
"l'archive des démos disponible au téléchargement, ou https://github.com/"
"godotengine/godot-demo-projects/tree/master/viewport"

msgid "Translation status"
msgstr "État de la traduction"
