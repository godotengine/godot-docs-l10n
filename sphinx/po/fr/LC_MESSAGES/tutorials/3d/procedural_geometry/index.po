# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Procedural geometry"
msgstr "Géométrie procédurale"

msgid ""
"There are many ways to procedurally generate geometry in Godot. In this "
"tutorial series we will explore a few of them. Each technique has its own "
"benefits and drawbacks, so it is best to understand each one and how it can "
"be useful in a given situation."
msgstr ""
"Il existe de nombreuses façons de générer une géométrie de façon procédurale "
"dans Godot. Dans cette série de tutoriels, nous en explorerons quelques-"
"unes. Chaque technique a ses propres avantages et inconvénients, il est donc "
"préférable de comprendre chacune et comment elle peut être utile dans une "
"situation donnée."

msgid "What is geometry?"
msgstr "Qu'est-ce que la géométrie ?"

msgid ""
"Geometry is a fancy way of saying shape. In computer graphics, geometry is "
"typically represented by an array of positions called \"vertices\". In "
"Godot, geometry is represented by Meshes."
msgstr ""
"La géométrie est une façon élégante de dire la forme. En infographie, la "
"géométrie est généralement représentée par un tableau de positions appelées "
"\"sommets(vertices)\". Dans Godot, la géométrie est représentée par des "
"mailles(Meshes)."

msgid "What is a Mesh?"
msgstr "Qu'est-ce qu'un Mesh ?"

msgid ""
"Many things in Godot have mesh in their name: the :ref:`Mesh <class_Mesh>`, "
"the :ref:`ArrayMesh <class_ArrayMesh>`, the :ref:`MeshInstance "
"<class_MeshInstance>`, the :ref:`MultiMesh <class_MultiMesh>`, and the :ref:"
"`MultiMeshInstance <class_MultiMeshInstance>`. While they are all related, "
"they have slightly different uses."
msgstr ""
"Beaucoup de choses dans Godot ont mesh(maillage) dans leur nom : :ref:`Mesh "
"<class_Mesh>`, :ref:`ArrayMesh <class_ArrayMesh>`, :ref:`MeshInstance "
"<class_MeshInstance>`, :ref:`MultiMesh <class_MultiMesh>`, et :ref:"
"`MultiMeshInstance <class_MultiMeshInstance>`. Bien qu'ils soient tous liés, "
"ils ont des utilisations légèrement différentes."

msgid ""
"Meshes and ArrayMeshes are resources that are drawn using a MeshInstance "
"node. Resources like Meshes and ArrayMeshes cannot be added to the scene "
"directly. A MeshInstance represents one instance of a mesh in your scene. "
"You can reuse a single mesh in multiple MeshInstances to draw it in "
"different parts of your scene with different materials or transformations "
"(scale, rotation, position etc.)."
msgstr ""
"Meshes et ArrayMeshes sont des ressources qui sont dessinées à l'aide d'un "
"nœud MeshInstance. Des ressources comme Meshes et ArrayMeshes ne peuvent pas "
"être ajoutées directement à la scène. Un MeshInstance représente une "
"instance d'un maillage dans votre scène. Vous pouvez réutiliser un seul "
"maillage dans plusieurs MeshInstances pour le dessiner dans différentes "
"parties de votre scène avec différents matériaux ou transformations "
"(échelle, rotation, position, etc.)."

#, fuzzy
msgid ""
"If you are going to draw the same object many times, it can be helpful to "
"use a MultiMesh with a MultiMeshInstance. MultiMeshInstances draw meshes "
"thousands of times very cheaply by taking advantage of hardware instancing. "
"The drawback with using a MultiMeshInstance is that each of your mesh's "
"surfaces are limited to one material for all instances. It uses an instance "
"array to store different colors and transformations for each instance, but "
"all the instances of each surface use the same material."
msgstr ""
"Si vous devez dessiner le même objet plusieurs fois, il peut être utile "
"d'utiliser un MultiMesh avec une MultiMeshInstance. Le MultiMeshInstance "
"dessine des mailles des milliers de fois à un coût très avantageux. Pour ce "
"faire, elle tire parti de l'instanciation du matériel. L'inconvénient de "
"l'utilisation d'une MultiMeshInstance est que vous êtes limité à un seul "
"matériau pour toutes les instances. Elle utilise un tableau d'instances pour "
"stocker différentes couleurs et transformations pour chaque instance, mais "
"toutes les instances utilisent le même matériau."

msgid "What a Mesh is"
msgstr "Qu'est-ce qu'un Mesh est"

msgid ""
"A Mesh is composed of one or more surfaces. A surface is an array composed "
"of multiple sub-arrays containing vertices, normals, UVs, etc. Normally the "
"process of constructing surfaces and meshes is hidden from the user in the :"
"ref:`VisualServer <class_VisualServer>`, but with ArrayMeshes, the user can "
"construct a Mesh manually by passing in an array containing the surface "
"information."
msgstr ""
"Un Mesh est composé d'une ou plusieurs surfaces. Une surface est un tableau "
"composé de plusieurs sous-tableaux contenant des sommets, des normales, des "
"UV, etc. Normalement, le processus de construction des surfaces et des "
"maillages est caché à l'utilisateur dans le :ref:`VisualServer "
"<class_VisualServer>`, mais avec ArrayMeshes, l'utilisateur peut construire "
"un Mesh manuellement en fournissant un tableau contenant les informations de "
"surface."

msgid "Surfaces"
msgstr "Surfaces"

#, fuzzy
msgid ""
"Each surface has its own material. Alternatively, you can override the "
"material for all surfaces in the Mesh when you use a MeshInstance using the :"
"ref:`material_override <class_GeometryInstance_property_material_override>` "
"property."
msgstr ""
"Chaque surface a son propre matériau. Vous pouvez également remplacer le "
"matériau de toutes les surfaces du Mesh lorsque vous utilisez un "
"MeshInstance en utilisant ``MeshInstance.override_material``."

msgid "Surface array"
msgstr "Tableau de surface"

#, fuzzy
msgid ""
"The surface array is an array of length ``ArrayMesh.ARRAY_MAX``. Each "
"position in the array is filled with a sub-array containing per-vertex "
"information. For example, the array located at ``ArrayMesh.ARRAY_NORMAL`` is "
"a :ref:`PoolVector3Array <class_PoolVector3Array>` of vertex normals. See :"
"ref:`Mesh.ArrayType <enum_Mesh_ArrayType>` for more information."
msgstr ""
"Le tableau de surface est un tableau de longueur ``ArrayMesh.ARRAY_MAX``. "
"Chaque position dans le tableau est remplie par un sous-tableau contenant "
"des informations par sommet. Par exemple, le tableau situé à ``ArrayMesh."
"ARRAY_NORMAL`` est un :ref:`PoolVector3Array <class_PoolVector3Array>` de "
"normales de sommets."

msgid ""
"The surface array can be indexed or non-indexed. Creating a non-indexed "
"array is as easy as not assigning an array at the index ``ArrayMesh."
"ARRAY_INDEX``. A non-indexed array stores unique vertex information for "
"every triangle, meaning that when two triangles share a vertex, the vertex "
"is duplicated in the array. An indexed surface array only stores vertex "
"information for each unique vertex and then also stores an array of indices "
"which maps out how to construct the triangles from the vertex array. In "
"general, using an indexed array is faster, but it means you have to share "
"vertex data between triangles, which is not always desired (e.g. when you "
"want per-face normals)."
msgstr ""
"Le tableau de surface peut être indexé ou non indexé. Créer un tableau non "
"indexé est aussi simple que de ne pas assigner un tableau à l'index "
"``ArrayMesh.ARRAY_INDEX``. Un tableau non indexé stocke des informations "
"uniques sur les sommets de chaque triangle, ce qui signifie que lorsque deux "
"triangles partagent un sommet, celui-ci est dupliqué dans le tableau. Un "
"tableau de surfaces indexé ne stocke que les informations sur les sommets "
"pour chaque sommet unique, puis stocke également un tableau d'index qui "
"indique comment construire les triangles à partir du tableau de sommets. En "
"général, l'utilisation d'un tableau indexé est plus rapide, mais cela "
"signifie que vous devez partager les données des sommets entre les "
"triangles, ce qui n'est pas toujours souhaitable (par exemple, lorsque vous "
"voulez des normales par face)."

msgid "Tools"
msgstr "Outils"

msgid ""
"Godot provides different ways of accessing and working with geometry. More "
"information on each will be provided in the following tutorials."
msgstr ""
"Godot propose différentes façons d'accéder à la géométrie et de travailler "
"avec elle. Les tutoriels suivants vous fourniront de plus amples "
"informations sur chacune d'entre elles."

msgid "ArrayMesh"
msgstr "ArrayMesh"

#, fuzzy
msgid ""
"The ArrayMesh resource extends Mesh to add a few different quality of life "
"functions and, most importantly, the ability to construct a Mesh surface "
"through scripting."
msgstr ""
"La ressource ArrayMesh étend de Mesh pour ajouter quelques fonctions de "
"qualité de vie différentes, et surtout, la capacité de construire une "
"surface de Mesh par le biais de scripts."

msgid ""
"For more information about the ArrayMesh, please see the :ref:`ArrayMesh "
"tutorial <doc_arraymesh>`."
msgstr ""
"Pour plus d'informations sur ArrayMesh, consultez le tutoriel :ref:"
"`ArrayMesh tutorial <doc_arraymesh>`."

msgid "MeshDataTool"
msgstr "MeshDataTool"

msgid ""
"The MeshDataTool is a resource that converts Mesh data into arrays of "
"vertices, faces, and edges that can be modified at runtime."
msgstr ""
"Le MeshDataTool est une ressource qui convertit les données de Mesh en "
"tableaux de sommets, de faces et de bords qui peuvent être modifiés à "
"l'exécution."

msgid ""
"For more information about the MeshDataTool, please see the :ref:"
"`MeshDataTool tutorial <doc_meshdatatool>`."
msgstr ""
"Pour plus d'informations sur le MeshDataTool, veuillez consulter le "
"tutoriel :ref:`MeshDataTool tutorial <doc_meshdatatool>`."

msgid "SurfaceTool"
msgstr "SurfaceTool"

msgid ""
"The SurfaceTool allows the creation of Meshes using an OpenGL 1.x immediate "
"mode style interface."
msgstr ""
"Le SurfaceTool permet la création de Meshes en utilisant une interface du "
"type mode immédiat OpenGL 1.x."

msgid ""
"For more information about the SurfaceTool, please see the :ref:`SurfaceTool "
"tutorial <doc_surfacetool>`."
msgstr ""
"Pour plus d'informations sur SurfaceTool, consultez le tutoriel :ref:"
"`SurfaceTool tutorial <doc_surfacetool>`."

msgid "ImmediateGeometry"
msgstr "ImmediateGeometry"

#, fuzzy
msgid ""
"ImmediateGeometry is a node that uses an immediate mode style interface "
"(like SurfaceTool) to draw objects. The difference between ImmediateGeometry "
"and the SurfaceTool is that ImmediateGeometry is a node itself that can be "
"added to the scene tree and is drawn directly from the code, while the "
"SurfaceTool generates a Mesh that needs to be added to a MeshInstance to be "
"seen."
msgstr ""
"ImmediateGeometry est un nœud qui utilise une interface de type mode "
"immédiat (comme SurfaceTool) pour dessiner des objets. La différence entre "
"ImmediateGeometry et le SurfaceTool est que ImmediateGeometry est un nœud "
"lui-même, qui peut être ajouté à l'arbre de scène directement depuis le "
"code. Le SurfaceTool génère un Mesh qui doit être ajouté à un MeshInstance "
"pour être visible."

#, fuzzy
msgid ""
"ImmediateGeometry is useful for prototyping because of its straightforward "
"API, but it is slow because the geometry is rebuilt every frame. It is most "
"useful for adding simple geometry for visual debugging (e.g. by drawing "
"lines to visualize physics raycasts etc.)."
msgstr ""
"ImmediateGeometry est utile pour le prototypage en raison de la simplicité "
"de l'API, mais elle est lente car la géométrie est reconstruite à chaque "
"image. Elle est surtout utile pour ajouter rapidement une géométrie simple "
"pour déboguer visuellement (par exemple en traçant des lignes pour "
"visualiser les raycasts physique, etc.)."

msgid ""
"For more information about ImmediateGeometry, please see the :ref:"
"`ImmediateGeometry tutorial <doc_immediategeometry>`."
msgstr ""
"Pour plus d'informations sur ImmediateGeometry, veuillez consulter le "
"tutoriel :ref:`ImmediateGeometry tutorial <doc_immediategeometry>`."

msgid "Which one should I use?"
msgstr "Lequel dois-je utiliser ?"

#, fuzzy
msgid ""
"Which approach you use depends on what you are trying to do and what kind of "
"procedure you are comfortable with."
msgstr ""
"La méthode que vous utilisez dépend de ce que vous essayez de faire et du "
"type de procédure avec lequel vous êtes à l'aise."

msgid ""
"Both SurfaceTool and ArrayMesh are excellent for generating static geometry "
"(meshes) that don't change over time."
msgstr ""
"SurfaceTool et ArrayMesh sont tous deux excellents pour générer une "
"géométrie statique (maillages) qui ne change pas avec le temps."

msgid ""
"Using an ArrayMesh is slightly faster than using a SurfaceTool, but the API "
"is a little more challenging. Additionally, SurfaceTool has a few quality of "
"life methods such as ``generate_normals()`` and ``index()``."
msgstr ""
"L'utilisation d'ArrayMesh est légèrement plus rapide que celle de "
"SurfaceTool, mais l'API est un peu plus difficile d'utilisation. De plus, "
"SurfaceTool possède quelques méthodes de qualité de vie comme "
"``generate_normals()`` et ``index()``."

msgid ""
"ImmediateGeometry regenerates the mesh every frame, so it is much slower "
"than ArrayMesh or SurfaceTool. However, if you need the geometry to change "
"every frame anyway, it provides a much easier interface that may even be a "
"little faster than generating an ArrayMesh every frame."
msgstr ""
"ImmediateGeometry régénère le maillage à chaque image, ce qui le rend "
"beaucoup plus lent qu' ArrayMesh ou que SurfaceTool. Cependant, si vous avez "
"besoin que la géométrie change chaque image, ImmediateGeometry fournit une "
"interface beaucoup plus facile qui peut même être un peu plus rapide que la "
"génération d'un ArrayMesh à chaque image."

#, fuzzy
msgid ""
"The MeshDataTool is not fast, but it gives you access to all kinds of "
"properties of the mesh that you don't get with the others (edges, faces, "
"etc.). It is incredibly useful when you need that sort of data to transform "
"the mesh, but it is not a good idea to use it if that extra information is "
"not needed. The MeshDataTool is best used if you are going to be using an "
"algorithm that requires access to the face or edge array."
msgstr ""
"MeshDataTool n'est pas rapide, mais il vous donne accès à toutes sortes de "
"propriétés du maillage auxquelles vous n'avez accès pas avec les autres "
"(bords, faces, etc.). Il est incroyablement utile lorsque vous avez besoin "
"de ce type de données pour transformer le maillage, mais ce n'est pas une "
"bonne idée de l'utiliser si ces informations ne sont pas nécessaires. Il est "
"préférable d'utiliser MeshDataTool si vous allez utiliser un algorithme qui "
"nécessite l'accès au tableau des faces ou des arêtes."

msgid "Translation status"
msgstr "État de la traduction"
