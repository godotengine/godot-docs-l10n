# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Physics introduction"
msgstr "Introduction à la physique"

msgid ""
"In game development, you often need to know when two objects in the game "
"intersect or come into contact. This is known as **collision detection**. "
"When a collision is detected, you typically want something to happen. This "
"is known as **collision response**."
msgstr ""
"Dans le développement d'un jeu, vous avez souvent besoin de savoir quand "
"deux objets du jeu se croisent ou entrent en contact. C'est ce qu'on appelle "
"la **détection des collisions**. Lorsqu'une collision est détectée, vous "
"voulez généralement que quelque chose se produise. C'est ce qu'on appelle la "
"**réponse à la collision**."

msgid ""
"Godot offers a number of collision objects in 2D and 3D to provide both "
"collision detection and response. Trying to decide which one to use for your "
"project can be confusing. You can avoid problems and simplify development if "
"you understand how each works and what their pros and cons are."
msgstr ""
"Godot offre un certain nombre d'objets de collision en 2D et 3D pour fournir "
"à la fois la détection et la réponse aux collisions. Essayer de décider "
"lequel utiliser pour votre projet peut prêter à confusion. Vous pouvez "
"éviter les problèmes et simplifier le développement si vous comprenez "
"comment chacun fonctionne et quels sont ses avantages et ses inconvénients."

msgid "In this guide, you will learn:"
msgstr "Dans ce guide, vous apprendrez :"

msgid "Godot's four collision object types"
msgstr "Les quatre types d'objets de collision de Godot"

msgid "How each collision object works"
msgstr "Comment chaque objet de collision fonctionne"

msgid "When and why to choose one type over another"
msgstr "Quand et pourquoi choisir un type plutôt qu'un autre"

msgid ""
"This document's examples will use 2D objects. Every 2D physics object and "
"collision shape has a direct equivalent in 3D and in most cases they work in "
"much the same way."
msgstr ""
"Les exemples de ce document utilisent des objets 2D. Chaque objet physique "
"2D et chaque forme de collision a un équivalent direct en 3D et dans la "
"plupart des cas, ils fonctionnent de la même manière."

msgid "Collision objects"
msgstr "Objets de collisions"

msgid ""
"Godot offers four kinds of physics bodies, extending :ref:`CollisionObject2D "
"<class_CollisionObject2D>`:"
msgstr ""
"Godot offre 4 types de corps physiques, qui sont des extensions de :ref:"
"`CollisionObject2D <class_CollisionObject2D>` :"

msgid ":ref:`Area2D <class_Area2D>`"
msgstr ":ref:`Area2D <class_Area2D>`"

msgid ""
"``Area2D`` nodes provide **detection** and **influence**. They can detect "
"when objects overlap and can emit signals when bodies enter or exit. An "
"``Area2D`` can also be used to override physics properties, such as gravity "
"or damping, in a defined area."
msgstr ""
"Les nœuds ``Area2D`` fournissent **la détection** et **l'influence**. Ils "
"peuvent détecter quand les objets se chevauchent et peuvent émettre des "
"signaux quand des corps entrent ou sortent. Un ``Area2D`` peut aussi être "
"utilisé pour outrepasser les propriétés physiques, telles que la gravité ou "
"l'amortissement, dans une zone définie."

msgid ""
"The other three bodies extend :ref:`PhysicsBody2D <class_PhysicsBody2D>`:"
msgstr ""
"Les 3 autres corps sont des extensions de :ref:`PhysicsBody2D "
"<class_PhysicsBody2D>` :"

msgid ":ref:`StaticBody2D <class_StaticBody2D>`"
msgstr ":ref:`StaticBody2D <class_StaticBody2D>`"

msgid ""
"A static body is one that is not moved by the physics engine. It "
"participates in collision detection, but does not move in response to the "
"collision. They are most often used for objects that are part of the "
"environment or that do not need to have any dynamic behavior."
msgstr ""
"Un corps statique est un corps qui n'est pas déplacé par le moteur physique. "
"Il participe à la détection des collisions, mais ne bouge pas en réponse à "
"la collision. Ils sont le plus souvent utilisés pour des objets qui font "
"partie de l'environnement ou qui n'ont pas besoin d'avoir un comportement "
"dynamique."

msgid ":ref:`RigidBody2D <class_RigidBody2D>`"
msgstr ":ref:`RigidBody2D (Corps rigide 2D) <class_RigidBody2D>`"

msgid ""
"This is the node that implements simulated 2D physics. You do not control a "
"``RigidBody2D`` directly, but instead you apply forces to it (gravity, "
"impulses, etc.) and the physics engine calculates the resulting movement. :"
"ref:`Read more about using rigid bodies. <doc_rigid_body>`"
msgstr ""
"C'est le nœud qui implémente la physique 2D simulée. Vous ne contrôlez pas "
"directement un ``RigidBody2D``, mais vous lui appliquez des forces (gravité, "
"impulsions, etc.) et le moteur physique calcule le mouvement résultant. :ref:"
"`En savoir plus sur l'utilisation des RigidBody. <doc_rigid_body>`"

msgid ":ref:`KinematicBody2D <class_KinematicBody2D>`"
msgstr ":ref:`KinematicBody2D (Corps cinématique 2D)<class_KinematicBody2D>`"

msgid ""
"A body that provides collision detection, but no physics. All movement and "
"collision response must be implemented in code."
msgstr ""
"Un corps qui fournit la détection de collision, mais n'a pas de physique. "
"Toute réponse au mouvement ou à la collision doit être implémentée dans le "
"code."

msgid "Physics material"
msgstr "Physics material"

msgid ""
"Static bodies and rigid bodies can be configured to use a :ref:`physics "
"material <class_PhysicsMaterial>`. This allows adjusting the friction and "
"bounce of an object, and set if it's absorbent and/or rough."
msgstr ""
"Les corps statiques et les corps rigides peuvent être configurés pour "
"utiliser un :ref:`matériau physique <class_PhysicsMaterial>`. Cela permet "
"d'ajuster la friction et le rebond d'un objet, et de définir s'il est "
"absorbant et/ou rugueux."

msgid "Collision shapes"
msgstr "Formes de collisions"

msgid ""
"A physics body can hold any number of :ref:`Shape2D <class_Shape2D>` objects "
"as children. These shapes are used to define the object's collision bounds "
"and to detect contact with other objects."
msgstr ""
"Un corps physique peut contenir n'importe quel nombre d'objets :ref:`Shape2D "
"<class_Shape2D>` comme enfants. Ces formes sont utilisées pour définir les "
"limites de collision de l'objet et pour détecter le contact avec d'autres "
"objets."

msgid ""
"In order to detect collisions, at least one ``Shape2D`` must be assigned to "
"the object."
msgstr ""
"Afin de détecter les collisions, au moins un ``Shape2D`` doit être assigné à "
"l'objet."

msgid ""
"The most common way to assign a shape is by adding a :ref:`CollisionShape2D "
"<class_CollisionShape2D>` or :ref:`CollisionPolygon2D "
"<class_CollisionPolygon2D>` as a child of the object. These nodes allow you "
"to draw the shape directly in the editor workspace."
msgstr ""
"La façon la plus courante d'assigner une forme est d'ajouter un :ref:"
"`CollisionShape2D <class_CollisionShape2D>` ou :ref:`CollisionPolygon2D "
"<class_CollisionPolygon2D>` comme un enfant de l'objet. Ces nœuds vous "
"permettent de dessiner la forme directement dans l'espace de travail de "
"l'éditeur."

msgid ""
"Be careful to never scale your collision shapes in the editor. The \"Scale\" "
"property in the Inspector should remain ``(1, 1)``. When changing the size "
"of the collision shape, you should always use the size handles, **not** the "
"``Node2D`` scale handles. Scaling a shape can result in unexpected collision "
"behavior."
msgstr ""
"Faites attention à ne jamais mettre à l'échelle vos formes de collision dans "
"l'éditeur. La propriété \"Scale\" de l'Inspecteur doit rester \"(1, 1)\". "
"Lorsque vous changez la taille de la forme de la collision, vous devez "
"toujours utiliser les poignées de taille, **pas** les poignées graduées "
"``Node2D``. La mise à l'échelle d'une forme peut entraîner un comportement "
"de collision inattendu."

msgid "Physics process callback"
msgstr "Rappel des processus physiques"

msgid ""
"The physics engine may spawn multiple threads to improve performance, so it "
"can use up to a full frame to process physics. Because of this, the value of "
"a body's state variables such as ``position`` or ``linear velocity`` may not "
"be accurate for the current frame."
msgstr ""
"Le moteur physique peut générer plusieurs threads pour améliorer les "
"performances, de sorte qu'il peut utiliser jusqu'à une image complète pour "
"traiter la physique. Pour cette raison, la valeur des variables d'état d'un "
"corps telles que ``position`` ou ``linear velocity`` peut ne pas être exacte "
"pour la trame courante."

msgid ""
"In order to avoid this inaccuracy, any code that needs to access a body's "
"properties should be run in the :ref:`Node._physics_process() "
"<class_Node_method__physics_process>` callback, which is called before each "
"physics step at a constant frame rate (60 times per second by default). This "
"method will be passed a ``delta`` parameter, which is a floating-point "
"number equal to the time passed in *seconds* since the last step. When using "
"the default 60 Hz physics update rate, it will typically be equal to "
"``0.01666...`` (but not always, see below)."
msgstr ""
"Afin d'éviter cette inexactitude, tout code qui doit accéder aux propriétés "
"d'un corps doit être exécuté dans le rappel :ref:`Node._physics_process() "
"<class_Node_method__physics_process>`, qui est appelé avant chaque étape "
"physique à une fréquence d'images constante (60 fois par seconde par "
"défaut). Cette méthode recevra un paramètre ``delta``, qui est un nombre à "
"virgule flottante égal au temps passé en *secondes* depuis la dernière "
"étape. Lorsque vous utilisez le taux de mise à jour physique par défaut de "
"60 Hz, il sera généralement égal à ``0.01666...`` (mais pas toujours, voir "
"ci-dessous)."

msgid ""
"It's recommended to always use the ``delta`` parameter when relevant in your "
"physics calculations, so that the game behaves correctly if you change the "
"physics update rate or if the player's device can't keep up."
msgstr ""
"Il est recommandé de toujours utiliser le paramètre ``delta`` lorsque cela "
"est pertinent dans vos calculs physiques, afin que le jeu se comporte "
"correctement si vous modifiez le taux de mise à jour physique ou si "
"l'appareil du joueur ne peut pas suivre."

msgid "Collision layers and masks"
msgstr "Niveaux et masques de collisions"

msgid ""
"One of the most powerful, but frequently misunderstood, collision features "
"is the collision layer system. This system allows you to build up complex "
"interactions between a variety of objects. The key concepts are **layers** "
"and **masks**. Each ``CollisionObject2D`` has 20 different physics layers it "
"can interact with."
msgstr ""
"L'une des fonctionnalités de collision les plus puissantes, mais souvent mal "
"comprise, est le système de couche de collision. Ce système vous permet de "
"construire des interactions complexes entre une variété d'objets. Les "
"concepts clés sont **les couches** et **les masques**. Chaque "
"``CollisionObject2D`` a 20 couches physiques différentes avec lesquelles il "
"peut interagir."

msgid "Let's look at each of the properties in turn:"
msgstr "Examinons chacune des propriétés à tour de rôle :"

msgid "collision_layer"
msgstr "collision_layer"

msgid ""
"This describes the layers that the object appears **in**. By default, all "
"bodies are on layer ``1``."
msgstr ""
"Elle décrit les calques dans lesquels l'objet apparaît **in**. Par défaut, "
"tous les corps sont sur la couche ``1``."

msgid "collision_mask"
msgstr "collision_mask"

msgid ""
"This describes what layers the body will **scan** for collisions. If an "
"object isn't in one of the mask layers, the body will ignore it. By default, "
"all bodies scan layer ``1``."
msgstr ""
"Cette section décrit les couches que le corps va **scanner** pour détecter "
"les collisions. Si un objet n'est pas dans l'une des couches du masque, le "
"corps l'ignore. Par défaut, tous les corps scannent la couche ``1``."

msgid ""
"These properties can be configured via code, or by editing them in the "
"Inspector."
msgstr ""
"Ces propriétés peuvent être configurées via le code ou en les modifiant dans "
"l'inspecteur."

msgid ""
"Keeping track of what you're using each layer for can be difficult, so you "
"may find it useful to assign names to the layers you're using. Names can be "
"assigned in Project Settings -> Layer Names."
msgstr ""
"Il peut être difficile de garder une trace de ce que vous utilisez pour "
"chaque calque, il peut donc être utile d'attribuer des noms aux calques que "
"vous utilisez. Les noms peuvent être assignés dans Project Settings -> Layer "
"Names."

msgid "GUI example"
msgstr "Exemple dans l'interface graphique"

msgid ""
"You have four node types in your game: Walls, Player, Enemy, and Coin. Both "
"Player and Enemy should collide with Walls. The Player node should detect "
"collisions with both Enemy and Coin, but Enemy and Coin should ignore each "
"other."
msgstr ""
"Vous avez quatre types de nœuds dans votre jeu : Murs, joueur, ennemi et "
"pièce de monnaie. Le joueur et l'ennemi doivent entrer en collision avec les "
"murs. Le nœud Player doit détecter les collisions avec l'ennemi et la pièce, "
"mais l'ennemi et la pièce doivent s'ignorer mutuellement."

msgid ""
"Start by naming layers 1-4 \"walls\", \"player\", \"enemies\", and \"coins\" "
"and place each node type in its respective layer using the \"Layer\" "
"property. Then set each node's \"Mask\" property by selecting the layers it "
"should interact with. For example, the Player's settings would look like "
"this:"
msgstr ""
"Commencez par nommer les couches 1-4 \"murs\", \"joueur\", \"ennemis\" et "
"\"pièces\" et placez chaque type de nœud dans sa couche respective en "
"utilisant la propriété \"Layer\". Définissez ensuite la propriété \"Mask\" "
"de chaque nœud en sélectionnant les calques avec lesquels il doit interagir. "
"Par exemple, les paramètres du joueur ressemblent à ceci :"

msgid "Code example"
msgstr "Exemple en code"

msgid ""
"In function calls, layers are specified as a bitmask. Where a function "
"enables all layers by default, the layer mask will be given as "
"``0x7fffffff``. Your code can use binary, hexadecimal, or decimal notation "
"for layer masks, depending on your preference."
msgstr ""
"Dans les appels de fonction, les couches sont spécifiées comme un bitmask. "
"Lorsqu'une fonction active toutes les couches par défaut, le bitmask sera "
"donné sous la forme ``0x7ffffff``. Votre code peut utiliser une notation "
"binaire, hexadécimale ou décimale pour les bitmask, selon votre préférence."

msgid ""
"The code equivalent of the above example where layers 1, 3 and 4 were "
"enabled would be as follows::"
msgstr ""
"L'équivalent en code de l'exemple ci-dessus où les couches 1, 3 et 4 ont été "
"activées serait le suivant :"

msgid "Area2D"
msgstr "Area2D"

msgid ""
"Area nodes provide **detection** and **influence**. They can detect when "
"objects overlap and emit signals when bodies enter or exit. Areas can also "
"be used to override physics properties, such as gravity or damping, in a "
"defined area."
msgstr ""
"Les nœuds de zone assurent **la détection** et **l'influence**. Ils peuvent "
"détecter quand les objets se chevauchent et émettre des signaux quand les "
"corps entrent ou sortent. Les zones peuvent également être utilisées pour "
"outrepasser les propriétés physiques, telles que la gravité ou "
"l'amortissement, dans une zone définie."

msgid "There are three main uses for :ref:`Area2D <class_Area2D>`:"
msgstr ""
"Il y a trois utilisations principales pour :ref:`Area2D <class_Area2D>` :"

msgid "Overriding physics parameters (such as gravity) in a given region."
msgstr ""
"Remplacer les paramètres physiques primordiaux (comme la gravité) dans une "
"région donnée."

msgid ""
"Detecting when other bodies enter or exit a region or what bodies are "
"currently in a region."
msgstr ""
"Détecter quand d'autres corps entrent ou sortent d'une région ou quels corps "
"se trouvent actuellement dans une région."

msgid "Checking other areas for overlap."
msgstr "Vérification des chevauchements avec d'autres zones."

msgid "By default, areas also receive mouse and touchscreen input."
msgstr ""
"Par défaut, les zones reçoivent également les entrées de la souris et de "
"l'écran tactile."

msgid "StaticBody2D"
msgstr "StaticBody2D"

msgid ""
"A static body is one that is not moved by the physics engine. It "
"participates in collision detection, but does not move in response to the "
"collision. However, it can impart motion or rotation to a colliding body "
"**as if** it were moving, using its ``constant_linear_velocity`` and "
"``constant_angular_velocity`` properties."
msgstr ""
"Un corps statique est un corps qui n'est pas déplacé par le moteur physique. "
"Il participe à la détection des collisions, mais ne bouge pas en réponse à "
"la collision. Cependant, il peut donner du mouvement ou de la rotation à un "
"corps en collision **comme si** il se déplaçait, en utilisant ses propriétés "
"``constant_linear_velocity`` et ``constant_angular_velocity``."

msgid ""
"``StaticBody2D`` nodes are most often used for objects that are part of the "
"environment or that do not need to have any dynamic behavior."
msgstr ""
"Les nœuds ``StaticBody2D`` sont le plus souvent utilisés pour des objets qui "
"font partie de l'environnement ou qui n'ont pas besoin d'avoir un "
"comportement dynamique."

msgid "Example uses for ``StaticBody2D``:"
msgstr "Exemples d'utilisation de ``StaticBody2D`` :"

msgid "Platforms (including moving platforms)"
msgstr "Plates-formes (y compris les plates-formes mobiles)"

msgid "Conveyor belts"
msgstr "Convoyeur à courroies"

msgid "Walls and other obstacles"
msgstr "Murs et autres obstacles"

msgid "RigidBody2D"
msgstr "RigidBody2D"

msgid ""
"This is the node that implements simulated 2D physics. You do not control a :"
"ref:`RigidBody2D <class_RigidBody2D>` directly. Instead, you apply forces to "
"it and the physics engine calculates the resulting movement, including "
"collisions with other bodies, and collision responses, such as bouncing, "
"rotating, etc."
msgstr ""
"C'est le nœud qui implémente la physique 2D simulée. Vous ne contrôlez pas "
"un :ref:`RigidBody2D <class_RigidBody2D>` directement. Au lieu de cela, vous "
"lui appliquez des forces et le moteur physique calcule le mouvement "
"résultant, y compris les collisions avec d'autres corps, et les réactions de "
"collision, telles que le rebondissement, la rotation, etc."

msgid ""
"You can modify a rigid body's behavior via properties such as \"Mass\", "
"\"Friction\", or \"Bounce\", which can be set in the Inspector."
msgstr ""
"Vous pouvez modifier le comportement d'un corps rigide via des propriétés "
"telles que \"Mass\", \"Friction\" ou \"Bounce\", qui peuvent être définies "
"dans l'inspecteur."

msgid ""
"The body's behavior is also affected by the world's properties, as set in "
"`Project Settings -> Physics`, or by entering an :ref:`Area2D "
"<class_Area2D>` that is overriding the global physics properties."
msgstr ""
"Le comportement du corps est également affecté par les propriétés du monde, "
"telles que définies dans `Project Settings -> Physics`, ou en entrant un :"
"ref:`Area2D <class_Area2D>` qui surcharge les propriétés physiques globales."

msgid ""
"When a rigid body is at rest and hasn't moved for a while, it goes to sleep. "
"A sleeping body acts like a static body, and its forces are not calculated "
"by the physics engine. The body will wake up when forces are applied, either "
"by a collision or via code."
msgstr ""
"Quand un corps rigide est au repos et n'a pas bougé depuis un moment, il "
"s'endort. Un corps endormi agit comme un corps statique, et ses forces ne "
"sont pas calculées par le moteur physique. Le corps se réveille lorsque des "
"forces sont appliquées, soit par une collision, soit par un code."

msgid "Rigid body modes"
msgstr "Modes corps rigides"

msgid "A rigid body can be set to one of four modes:"
msgstr "Un corps rigide peut être réglé sur l'un des quatre modes :"

msgid ""
"**Rigid** - The body behaves as a physical object. It collides with other "
"bodies and responds to forces applied to it. This is the default mode."
msgstr ""
"**Rigid** - Le corps se comporte comme un objet physique. Il entre en "
"collision avec d'autres corps et réagit aux forces qui lui sont appliquées. "
"C'est le mode par défaut."

msgid ""
"**Static** - The body behaves like a :ref:`StaticBody2D "
"<class_StaticBody2D>` and does not move."
msgstr ""
"**Static** - Le corps se comporte comme un :ref:`StaticBody2D "
"<class_StaticBody2D>` et ne bouge pas."

msgid "**Character** - Similar to \"Rigid\" mode, but the body cannot rotate."
msgstr ""
"**Character** - Similaire au mode \"Rigid\", mais le corps ne peut pas "
"tourner."

msgid ""
"**Kinematic** - The body behaves like a :ref:`KinematicBody2D "
"<class_KinematicBody2D>` and must be moved by code."
msgstr ""
"**Kinematic** - Le corps se comporte comme un :ref:`KinematicBody2D "
"<class_KinematicBody2D>` et doit être déplacé par code."

msgid "Using RigidBody2D"
msgstr "Utiliser RigidBody2D"

msgid ""
"One of the benefits of using a rigid body is that a lot of behavior can be "
"had \"for free\" without writing any code. For example, if you were making "
"an \"Angry Birds\"-style game with falling blocks, you would only need to "
"create RigidBody2Ds and adjust their properties. Stacking, falling, and "
"bouncing would automatically be calculated by the physics engine."
msgstr ""
"Un des avantages de l'utilisation d'un corps rigide est qu'il est possible "
"d'avoir beaucoup de comportement \"gratuitement\" sans écrire de code. Par "
"exemple, si vous créez un jeu de type \"Angry Birds\" avec des blocs "
"tombants, vous n'aurez qu'à créer RigidBody2Ds et ajuster leurs propriétés. "
"L'empilement, la chute et le rebondissement seraient automatiquement "
"calculés par le moteur physique."

msgid ""
"However, if you do wish to have some control over the body, you should take "
"care - altering the ``position``, ``linear_velocity``, or other physics "
"properties of a rigid body can result in unexpected behavior. If you need to "
"alter any of the physics-related properties, you should use the :ref:"
"`_integrate_forces() <class_RigidBody2D_method__integrate_forces>` callback "
"instead of ``_physics_process()``. In this callback, you have access to the "
"body's :ref:`Physics2DDirectBodyState <class_Physics2DDirectBodyState>`, "
"which allows for safely changing properties and synchronizing them with the "
"physics engine."
msgstr ""
"Cependant, si vous souhaitez avoir un certain contrôle sur le corps, vous "
"devriez faire attention - modifier la ``position``, la ``linear_velocity`` "
"ou d'autres propriétés physiques d'un corps rigide peut entraîner un "
"comportement inattendu. Si vous avez besoin de modifier l'une des propriétés "
"liées à la physique, vous devez utiliser le rappel :ref:`_integrate_forces() "
"<class_RigidBody2D_method__integrate_forces>` au lieu de "
"``_physics_process()``. Dans ce rappel, vous avez accès au :ref:"
"`Physics2DDirectBodyState <class_Physics2DDirectBodyState>`, qui permet de "
"modifier en toute sécurité les propriétés et les synchroniser avec le moteur "
"physique."

msgid "For example, here is the code for an \"Asteroids\" style spaceship:"
msgstr ""
"Par exemple, voici le code d'un vaisseau spatial de type \"Astéroïdes\" :"

msgid ""
"Note that we are not setting the ``linear_velocity`` or ``angular_velocity`` "
"properties directly, but rather applying forces (``thrust`` and ``torque``) "
"to the body and letting the physics engine calculate the resulting movement."
msgstr ""
"Notez que nous ne réglons pas directement les propriétés ``linear_velocity`` "
"ou ``angular_velocity``, mais appliquons plutôt des forces (``thrust`` et "
"``torque``) au corps et laissons le moteur physique calculer le mouvement "
"résultant."

msgid ""
"When a rigid body goes to sleep, the ``_integrate_forces()`` function will "
"not be called. To override this behavior, you will need to keep the body "
"awake by creating a collision, applying a force to it, or by disabling the :"
"ref:`can_sleep <class_RigidBody2D_property_can_sleep>` property. Be aware "
"that this can have a negative effect on performance."
msgstr ""
"Quand un corps rigide s'endort, la fonction ``_integrate_forces()`` ne sera "
"pas appelée. Pour outrepasser ce comportement, vous devrez garder le corps "
"éveillé en créant une collision, en lui appliquant une force ou en "
"désactivant la propriété :ref:`can_sleep "
"<class_RigidBody2D_property_can_sleep>`. Sachez que cela peut avoir un effet "
"négatif sur la performance."

msgid "Contact reporting"
msgstr "Rapport de contact"

msgid ""
"By default, rigid bodies do not keep track of contacts, because this can "
"require a huge amount of memory if many bodies are in the scene. To enable "
"contact reporting, set the :ref:`contacts_reported "
"<class_RigidBody2D_property_contacts_reported>` property to a non-zero "
"value. The contacts can then be obtained via :ref:`Physics2DDirectBodyState."
"get_contact_count() "
"<class_Physics2DDirectBodyState_method_get_contact_count>` and related "
"functions."
msgstr ""
"Par défaut, les corps rigides ne gardent pas la trace des contacts, car cela "
"peut nécessiter une énorme quantité de mémoire si de nombreux corps sont "
"dans la scène. Pour activer la déclaration des contacts, définissez la "
"propriété :ref:`contacts_reported "
"<class_RigidBody2D_property_contacts_reported>` sur une valeur non nulle. "
"Les contacts peuvent alors être obtenus via :ref:`Physics2DDirectBodyState."
"get_contact_count() "
"<class_Physics2DDirectBodyState_method_get_contact_count>` et fonctions "
"associées."

msgid ""
"Contact monitoring via signals can be enabled via the :ref:`contact_monitor "
"<class_RigidBody2D_property_contact_monitor>` property. See :ref:"
"`RigidBody2D <class_RigidBody2D>` for the list of available signals."
msgstr ""
"La surveillance des contacts par signaux peut être activée via la propriété :"
"ref:`contact_monitor <class_RigidBody2D_property_contact_monitor>`. Voir :"
"ref:`RigidBody2D <class_RigidBody2D>` pour la liste des signaux disponibles."

msgid "KinematicBody2D"
msgstr "KinematicBody2D"

msgid ""
":ref:`KinematicBody2D <class_KinematicBody2D>` bodies detect collisions with "
"other bodies, but are not affected by physics properties like gravity or "
"friction. Instead, they must be controlled by the user via code. The physics "
"engine will not move a kinematic body."
msgstr ""
":ref:`KinematicBody2D <class_KinematicBody2D>` corps détectent les "
"collisions avec d'autres corps, mais ne sont pas affectés par des propriétés "
"physiques comme la gravité ou la friction. Ils doivent plutôt être contrôlés "
"par l'utilisateur à l'aide d'un code. Le moteur physique ne déplacera pas un "
"corps cinématique."

msgid ""
"When moving a kinematic body, you should not set its ``position`` directly. "
"Instead, you use the ``move_and_collide()`` or ``move_and_slide()`` methods. "
"These methods move the body along a given vector, and it will instantly stop "
"if a collision is detected with another body. After the body has collided, "
"any collision response must be coded manually."
msgstr ""
"Lorsque vous déplacez un corps cinématique, vous ne devez pas régler sa "
"``position`` directement. Au lieu de cela, vous utilisez les méthodes "
"``move_and_collide()`` ou ``move_and_slide()``. Ces méthodes déplacent le "
"corps le long d'un vecteur donné, et il s'arrêtera instantanément si une "
"collision est détectée avec un autre corps. Après la collision du corps, "
"toute réaction à une collision doit être codée manuellement."

msgid "Kinematic collision response"
msgstr "Réponse cinématique à la collision"

msgid ""
"After a collision, you may want the body to bounce, to slide along a wall, "
"or to alter the properties of the object it hit. The way you handle "
"collision response depends on which method you used to move the "
"KinematicBody2D."
msgstr ""
"Après une collision, vous pouvez vouloir que le corps rebondisse, glisse le "
"long d'un mur ou modifie les propriétés de l'objet touché. La façon dont "
"vous réagissez à la collision dépend de la méthode que vous avez utilisée "
"pour déplacer le KinematicBody2D."

msgid ":ref:`move_and_collide <class_KinematicBody2D_method_move_and_collide>`"
msgstr ""
":ref:`move_and_collide <class_KinematicBody2D_method_move_and_collide>`"

msgid ""
"When using ``move_and_collide()``, the function returns a :ref:"
"`KinematicCollision2D <class_KinematicCollision2D>` object, which contains "
"information about the collision and the colliding body. You can use this "
"information to determine the response."
msgstr ""
"Lorsque vous utilisez ``move_and_collide()``, la fonction retourne un objet :"
"ref:`KinematicCollision2D <class_KinematicCollision2D>`, qui contient des "
"informations sur la collision et le corps en collision. Vous pouvez utiliser "
"ces informations pour déterminer la réponse."

msgid ""
"For example, if you want to find the point in space where the collision "
"occurred:"
msgstr ""
"Par exemple, si vous voulez trouver le point dans l'espace où la collision "
"s'est produite :"

msgid "Or to bounce off of the colliding object:"
msgstr "Ou pour rebondir sur l'objet en collision :"

msgid ":ref:`move_and_slide <class_KinematicBody2D_method_move_and_slide>`"
msgstr ":ref:`move_and_slide <class_KinematicBody2D_method_move_and_slide>`"

msgid ""
"Sliding is a common collision response; imagine a player moving along walls "
"in a top-down game or running up and down slopes in a platformer. While it's "
"possible to code this response yourself after using ``move_and_collide()``, "
"``move_and_slide()`` provides a convenient way to implement sliding movement "
"without writing much code."
msgstr ""
"Le glissement est une réaction de collision courante ; imaginez un joueur se "
"déplaçant le long des murs dans un jeu descendant ou courant le long des "
"pentes dans un jeu de plates-formes. Bien qu'il soit possible de coder cette "
"réponse vous-même après avoir utilisé ``move_and_collide()``, "
"``move_and_slide()`` offre un moyen pratique d'implémenter un mouvement "
"glissant sans écrire beaucoup de code."

msgid ""
"``move_and_slide()`` automatically includes the timestep in its calculation, "
"so you should **not** multiply the velocity vector by ``delta``."
msgstr ""
"``move_and_slide()`` inclut automatiquement le pas de temps dans son calcul, "
"il ne faut donc **pas** multiplier le vecteur vitesse par ``delta``."

msgid ""
"For example, use the following code to make a character that can walk along "
"the ground (including slopes) and jump when standing on the ground:"
msgstr ""
"Par exemple, utilisez le code suivant pour créer un personnage capable de "
"marcher sur le sol (y compris sur les pentes) et de sauter debout sur le "
"sol :"

msgid ""
"See :ref:`doc_kinematic_character_2d` for more details on using "
"``move_and_slide()``, including a demo project with detailed code."
msgstr ""
"Voir :ref:`doc_kinematic_character_2d` pour plus de détails sur "
"l'utilisation de ``move_and_slide()``, qui inclut un projet de démonstration "
"avec le code détaillé."

msgid "Translation status"
msgstr "État de la traduction"
