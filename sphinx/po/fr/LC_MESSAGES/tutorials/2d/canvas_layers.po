# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Canvas layers"
msgstr "Calques du canevas"

msgid "Viewport and Canvas items"
msgstr "Eléments de fenêtre et de canevas"

msgid ""
":ref:`CanvasItem <class_CanvasItem>` is the base for all 2D nodes, be it "
"regular 2D nodes, such as :ref:`Node2D <class_Node2D>`, or :ref:`Control "
"<class_Control>`. Both inherit from :ref:`CanvasItem <class_CanvasItem>`. "
"You can arrange canvas items in trees. Each item will inherit its parent's "
"transform: when the parent moves, its children move too."
msgstr ""
":ref:`CanvasItem <class_CanvasItem>` est la base de tous les nœuds 2D, qu'il "
"s'agisse de nœuds 2D ordinaires, comme :ref:`Node2D <class_Node2D>`, ou de :"
"ref:`Control <class_Control>`. Tous deux héritent de :ref:`CanvasItem "
"<class_CanvasItem>`. Vous pouvez organiser les éléments du canevas en "
"arbres. Chaque élément hérite de la transformation de son parent : lorsque "
"le parent bouge, ses enfants bougent aussi."

msgid ""
"CanvasItem nodes, and nodes inheriting from them, are direct or indirect "
"children of a :ref:`Viewport <class_Viewport>`, that display them."
msgstr ""
"Les nœuds CanvasItem, et les nœuds qui en héritent, sont des enfants directs "
"ou indirects d’un :ref:`Viewport <class_Viewport>`, qui les affichent."

msgid ""
"A Viewport has the property :ref:`Viewport.canvas_transform "
"<class_Viewport_property_canvas_transform>`, allows to apply a custom :ref:"
"`Transform2D <class_Transform2D>` transform to the CanvasItem hierarchy it "
"contains. Nodes such as :ref:`Camera2D <class_Camera2D>` work by changing "
"that transform."
msgstr ""
"Un Viewport a la propriété :ref:`Viewport.canvas_transform "
"<class_Viewport_property_canvas_transform>`, qui permet d'appliquer une "
"transformation personnalisée :ref:`Transform2D <class_Transform2D>` à la "
"hiérarchie CanvasItem qu'il contient. Des nœuds tels que :ref:`Camera2D "
"<class_Camera2D>`, fonctionnent en modifiant cette transformation."

msgid ""
"To achieve effects like scrolling, manipulating the canvas transform "
"property is more efficient than moving the root canvas item and the entire "
"scene with it."
msgstr ""
"Pour obtenir des effets tels que le défilement, il est plus efficace de "
"manipuler la propriété de transformation du canevas que de déplacer "
"l'élément de canevas racine et toute la scène avec."

msgid ""
"Usually though, we don't want *everything* in the game or app to be subject "
"to the canvas transform. For example:"
msgstr ""
"Habituellement, cependant, nous ne voulons pas que *tout* dans le jeu ou "
"l’application soit soumis à la transformation du canevas. Par exemples :"

msgid ""
"**Parallax Backgrounds**: Backgrounds that move slower than the rest of the "
"stage."
msgstr ""
"**Arrière-plans de parallaxe** : Arrière-plans qui bougent plus lentement "
"que le reste de la scène."

msgid ""
"**UI**: Think of a user interface (UI) or head-up display (HUD) superimposed "
"on our view of the game world. We want a life counter, score display and "
"other elements to retain their screen positions even when our view of the "
"game world changes."
msgstr ""
"**UI** : Imaginez une interface utilisateur (IU) ou un head-up display (HUD) "
"superposé à notre vue de l'univers du jeu. Nous voulons que le compteur de "
"vie, l'affichage du score et d'autres éléments conservent leur position à "
"l'écran, même lorsque notre vue du monde du jeu change."

msgid ""
"**Transitions**: We may want visual effects used for transitions (fades, "
"blends) to remain at a fixed screen location."
msgstr ""
"**Transitions** : Nous pouvons vouloir des effets visuels utilisés pour les "
"transitions (fondus, mélanges) pour rester à un emplacement d’écran fixe."

msgid "How can these problems be solved in a single scene tree?"
msgstr ""
"Comment ces problèmes peuvent-ils être résolus dans une arborescence de "
"scène unique ?"

msgid "CanvasLayers"
msgstr "Couches de canevas"

msgid ""
"The answer is :ref:`CanvasLayer <class_CanvasLayer>`, which is a node that "
"adds a separate 2D rendering layer for all its children and grand-children. "
"Viewport children will draw by default at layer \"0\", while a CanvasLayer "
"will draw at any numeric layer. Layers with a greater number will be drawn "
"above those with a smaller number. CanvasLayers also have their own "
"transform and do not depend on the transform of other layers. This allows "
"the UI to be fixed in screen-space while our view on the game world changes."
msgstr ""
"La réponse est :ref:`CanvasLayer <class_CanvasLayer>`, qui est un nœud qui "
"ajoute un calque de rendu 2D distinct pour tous ses enfants et ses petits-"
"enfants. Les enfants de la fenêtre d'affichage dessineront par défaut au "
"calque \"0\", tandis qu’un CanvasLayer est dessiné à n’importe quelle couche "
"numérique. Les calques avec un plus grand nombre seront dessinés au-dessus "
"de ceux avec un plus petit nombre. Les CanvasLayer ont également leur propre "
"transformation et ne dépendent pas de la transformation des autres calques. "
"Cela permet de fixer l'interface utilisateur sur place pendant que le monde "
"bouge."

msgid ""
"An example of this is creating a parallax background. This can be done with "
"a CanvasLayer at layer \"-1\". The screen with the points, life counter and "
"pause button can also be created at layer \"1\"."
msgstr ""
"Un exemple de ceci est la création d'un fond en parallaxe. Cela peut être "
"fait avec un CanvasLayer au calque \"-1\". L'écran avec les points, le "
"compteur de durée de vie et le bouton de pause peuvent également être créés "
"au calque \"1\"."

msgid "Here's a diagram of how it looks:"
msgstr "Voici un diagramme de sa représentation :"

msgid ""
"CanvasLayers are independent of tree order, and they only depend on their "
"layer number, so they can be instantiated when needed."
msgstr ""
"Les CanvasLayers sont indépendants de l'ordre des arborescences, ils "
"dépendent uniquement de leur numéro de couche, ainsi Ils peuvent être "
"instanciés si nécessaire."

msgid ""
"CanvasLayers aren't necessary to control the drawing order of nodes. The "
"standard way to ensuring that a node is  correctly drawn 'in front' or "
"'behind' others is to manipulate the order of the nodes in the scene panel. "
"Perhaps counterintuitively, the topmost nodes in the scene panel are drawn "
"on *behind* lower ones in the viewport. 2d nodes also have a property for "
"controlling their drawing order (see :ref:`Node2D.z_index "
"<class_Node2D_property_z_index>`)."
msgstr ""
"CanvasLayers n'est pas nécessaire pour contrôler l'ordre de dessin des "
"nœuds. La façon standard de s'assurer qu'un nœud est correctement dessiné \" "
"devant \" ou \" derrière \" les autres est de manipuler l'ordre des nœuds "
"dans le panneau de scène. Contre-intuitivement peut-être, les nœuds les plus "
"en haut du panneau de scène sont dessinés sur les nœuds inférieurs *en "
"arrière* de la fenêtre d'affichage. Les nœuds 2d ont également une propriété "
"pour contrôler leur ordre de dessin (voir :ref:`Node2D.z_index "
"<class_Node2D_property_z_index>`)."

msgid "Translation status"
msgstr "État de la traduction"
