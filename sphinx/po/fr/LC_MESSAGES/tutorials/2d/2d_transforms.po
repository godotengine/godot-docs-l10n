# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Viewport and canvas transforms"
msgstr "Modifications de la fenêtre d'affichage et du canevas"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"This is an overview of the 2D transforms going on for nodes from the moment "
"they draw their content locally to the time they are drawn onto the screen. "
"This overview discusses very low level details of the engine."
msgstr ""
"Ceci est une vue d'ensemble des transformations 2D qui ont lieu pour les "
"nœuds, depuis le moment où ils réalisent leur contenu localement, jusqu'au "
"moment où ils le réalisent à l'écran. Cet aperçu traite des détails très bas "
"niveau du moteur."

msgid "Canvas transform"
msgstr "Transformation du canevas"

msgid ""
"As mentioned in the previous tutorial, :ref:`doc_canvas_layers`, every "
"CanvasItem node (remember that Node2D and Control based nodes use CanvasItem "
"as their common root) will reside in a *Canvas Layer*. Every canvas layer "
"has a transform (translation, rotation, scale, etc.) that can be accessed as "
"a :ref:`Transform2D <class_Transform2D>`."
msgstr ""
"Comme mentionné dans le tutoriel précédent, :ref:`doc_canvas_layers`, tous "
"les nœuds CanvasItem (rappelez-vous que les nœuds basés sur Node2D et "
"Control utilisent CanvasItem comme racine commune), résideront dans un "
"*Calque de canevas*. Chaque couche du canevas a une transformation "
"(translation, rotation, échelle, etc.) accessible en tant que :ref:"
"`Transform2D <class_Transform2D>`."

msgid ""
"Also covered in the previous tutorial, nodes are drawn by default in Layer "
"0, in the built-in canvas. To put nodes in a different layer, a :ref:"
"`CanvasLayer <class_CanvasLayer>` node can be used."
msgstr ""
"Également abordé dans le didacticiel précédent, les nœuds sont réalisés par "
"défaut dans la couche 0, dans le canevas intégré. Pour placer les nœuds dans "
"une autre couche, vous pouvez utiliser un nœud :ref:`CanvasLayer "
"<class_CanvasLayer>`."

msgid "Global canvas transform"
msgstr "Transformation globale du canevas"

msgid ""
"Viewports also have a Global Canvas transform (also a :ref:`Transform2D "
"<class_Transform2D>`). This is the master transform and affects all "
"individual *Canvas Layer* transforms. Generally, this transform is not of "
"much use, but is used in the CanvasItem Editor in Godot's editor."
msgstr ""
"Les fenêtres d'affichages ont également une transformation globale de "
"canevas (aussi un :ref:`Transform2D <class_Transform2D>`). Il s’agit de la "
"transformation principale qui affecte toutes les transformations *Couche de "
"canevas* individuelles. Généralement, cette transformation n’est pas très "
"utile, mais elle est utilisée dans l’éditeur CanvasItem de l’éditeur Godot."

msgid "Stretch transform"
msgstr "Transformation par étirement"

msgid ""
"Finally, viewports have a *Stretch Transform*, which is used when resizing "
"or stretching the screen. This transform is used internally (as described "
"in :ref:`doc_multiple_resolutions`), but can also be manually set on each "
"viewport."
msgstr ""
"Enfin, les fenêtres d'affichages ont une *Transformation par étirement*, "
"utilisée lors du redimensionnement ou de l’étirement de la fenêtre. Cette "
"transformation est utilisée en interne (comme décrit dans :ref:"
"`doc_multiple_resolutions`), mais peut également être définie manuellement "
"dans chaque fenêtre d'affichage."

msgid ""
"Input events received in the :ref:`MainLoop._input_event() "
"<class_MainLoop_method__input_event>` callback are multiplied by this "
"transform but lack the ones above. To convert InputEvent coordinates to "
"local CanvasItem coordinates, the :ref:`CanvasItem.make_input_local() "
"<class_CanvasItem_method_make_input_local>` function was added for "
"convenience."
msgstr ""
"Les événements d'entrées reçus dans le rappel :ref:`MainLoop._input_event() "
"<class_MainLoop_method__input_event>` sont multipliés par cette "
"transformation, mais ils sont absents de ceux mentionnés plus haut. Pour "
"convertir les coordonnées InputEvent en coordonnées locales CanvasItem, la "
"fonction :ref:`CanvasItem.make_input_local() "
"<class_CanvasItem_method_make_input_local>` a été ajoutée pour plus de "
"commodité."

msgid "Transform order"
msgstr "Ordre de transformation"

msgid ""
"For a coordinate in CanvasItem local properties to become an actual screen "
"coordinate, the following chain of transforms must be applied:"
msgstr ""
"Pour qu'une coordonnée dans les propriétés locales de CanvasItem devienne "
"une coordonnée d'écran réelle, vous devez appliquer la chaîne de "
"transformations suivante :"

msgid "Transform functions"
msgstr "Fonctions de transformation"

msgid "Obtaining each transform can be achieved with the following functions:"
msgstr ""
"L'obtention de chaque transformation peut être réalisée avec les fonctions "
"suivantes :"

msgid "Type"
msgstr "Type"

msgid "Transform"
msgstr "Transformation"

msgid "CanvasItem"
msgstr "CanvasItem"

msgid ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_method_get_global_transform>`"
msgstr ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_method_get_global_transform>`"

msgid "CanvasLayer"
msgstr "CanvasLayer"

msgid ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_method_get_canvas_transform>`"
msgstr ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_method_get_canvas_transform>`"

msgid "CanvasLayer+GlobalCanvas+Stretch"
msgstr "CanvasLayer+GlobalCanvas+Etirement"

msgid ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_method_get_viewport_transform>`"
msgstr ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_method_get_viewport_transform>`"

msgid ""
"Finally, then, to convert a CanvasItem local coordinates to screen "
"coordinates, just multiply in the following order:"
msgstr ""
"Enfin, pour convertir les coordonnées locales de CanvasItem en coordonnées "
"d'écran, multipliez-les simplement dans l'ordre suivant :"

msgid ""
"Keep in mind, however, that it is generally not desired to work with screen "
"coordinates. The recommended approach is to simply work in Canvas "
"coordinates (``CanvasItem.get_global_transform()``), to allow automatic "
"screen resolution resizing to work properly."
msgstr ""
"Gardez toutefois à l'esprit qu'il n'est généralement pas souhaitable de "
"travailler avec des coordonnées d'écran. L'approche recommandée consiste à "
"travailler simplement en coordonnées Canvas (``CanvasItem."
"get_global_transform ()``), pour permettre au redimensionnement automatique "
"de la résolution d'écran de fonctionner correctement."

msgid "Feeding custom input events"
msgstr "Alimentation d'événements d'entrées personnalisés"

msgid ""
"It is often desired to feed custom input events to the scene tree. With the "
"above knowledge, to correctly do this, it must be done the following way:"
msgstr ""
"Il est souvent souhaitable de transmettre des événements d'entrées "
"personnalisés à l'arborescence de la scène. Avec les connaissances ci-"
"dessus, pour le faire correctement, il faut procéder de la manière suivante :"

msgid "Translation status"
msgstr "État de la traduction"
