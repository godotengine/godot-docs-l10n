# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Votre premier shader 3D"

#, fuzzy
msgid ""
"You have decided to start writing your own custom Spatial shader. Maybe you "
"saw a cool trick online that was done with shaders, or you have found that "
"the :ref:`SpatialMaterial <class_SpatialMaterial>` isn't quite meeting your "
"needs. Either way, you have decided to write your own and now you need to "
"figure out where to start."
msgstr ""
"Vous avez décidé de commencer à écrire votre propre shader Spatial "
"personnalisé. Vous avez peut-être vu un truc sympa en ligne qui a été "
"réalisé avec des shaders, ou alors vous avez trouvé que le :ref:"
"`SpatialMaterial <class_SpatialMaterial>` ne répond pas tout à fait à vos "
"besoins. Quoi qu'il en soit, vous avez décidé d'écrire le votre et vous "
"devez maintenant trouver par où commencer."

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Ce tutoriel explique comment écrire un shader spatial et couvre plus de "
"sujets que le tutoriel :ref:`CanvasItem "
"<doc_votre_premier_shader_canvasitem>`."

msgid ""
"Spatial shaders have more built-in functionality than CanvasItem shaders. "
"The expectation with spatial shaders is that Godot has already provided the "
"functionality for common use cases and all the user needs to do in the "
"shader is set the proper parameters. This is especially true for a PBR "
"(physically based rendering) workflow."
msgstr ""
"Les shaders spatiaux ont plus de fonctionnalités intégrées que les shaders "
"CanvasItem. On s'attend à ce que les shaders spatiaux offrent déjà les "
"fonctionnalités nécessaires pour les cas d'utilisation courants et que "
"l'utilisateur n'ait qu'à définir les paramètres appropriés dans le shader. "
"C'est particulièrement vrai pour un flux de travail PBR (rendu basé "
"physiquement)."

msgid ""
"This is a two-part tutorial. In this first part we are going to go through "
"how to make a simple terrain using vertex displacement from a heightmap in "
"the vertex function. In the :ref:`second part "
"<doc_your_second_spatial_shader>` we are going to take the concepts from "
"this tutorial and walk through how to set up custom materials in a fragment "
"shader by writing an ocean water shader."
msgstr ""
"Il s'agit d'un tutoriel en deux parties. Dans cette première partie, nous "
"allons voir comment réaliser un terrain simple en utilisant le déplacement "
"des vertex à partir d'une heightmap dans la fonction vertex. Dans la :ref:"
"`seconde partie <doc_votre_seconde_spatial_shader>` nous allons reprendre "
"les concepts de ce tutoriel et montrer comment mettre en place des matériaux "
"personnalisés dans un fragment shader en écrivant un shader d'eau de mer."

msgid ""
"This tutorial assumes some basic shader knowledge such as types (``vec2``, "
"``float``, ``sampler2D``), and functions. If you are uncomfortable with "
"these concepts it is best to get a gentle introduction from `The Book of "
"Shaders <https://thebookofshaders.com>`_ before completing this tutorial."
msgstr ""
"Ce tutoriel suppose quelques connaissances de base sur les shaders, telles "
"que les types (``vec2``, ``float``, ``sampler2D``), et les fonctions. Si "
"vous n'êtes pas à l'aise avec ces concepts, il est préférable d'avoir une "
"douce introduction avec `The Book of Shaders <https://thebookofshaders."
"com>`_ avant de faire ce tutoriel."

msgid "Where to assign my material"
msgstr "Où assigner mon matériel"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a few :ref:"
"`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic geometry "
"to a scene without importing Meshes."
msgstr ""
"En 3D, les objets sont dessinés en utilisant des :ref:`Maillages "
"<class_Mesh>`. Les Maillages sont un type de ressource qui stocke la "
"géométrie (la forme de votre objet) et les matériaux (la couleur et la façon "
"dont l'objet réagit à la lumière) dans des unités appelées \"surfaces\". Un "
"Maillage peut avoir plusieurs surfaces, ou une seule. En général, vous "
"importerez un Maillage d'un autre programme (par exemple Blender). Mais "
"Godot a aussi quelques :ref:`PrimitiveMeshes <class_primitivemesh>` qui "
"permettent d'ajouter une géométrie de base à une scène sans importer de "
"Maillages."

msgid ""
"There are multiple node types that you can use to draw a mesh. The main one "
"is :ref:`MeshInstance <class_meshinstance>`, but you can also use :ref:"
"`Particles <class_particles>`, :ref:`MultiMeshes <class_MultiMesh>` (with a :"
"ref:`MultiMeshInstance <class_multimeshinstance>`), or others."
msgstr ""
"Il existe plusieurs types de nœuds que vous pouvez utiliser pour dessiner un "
"maillage. La principale est :ref:`MeshInstance <class_meshinstance>`, mais "
"vous pouvez aussi utiliser :ref:`Particules <class_particules>`, :ref:"
"`MultiMesh <class_MultiMesh>` (avec un :ref:`MultiMeshInstance "
"<class_multimeshinstance>`), ou d'autres."

msgid ""
"Typically, a material is associated with a given surface in a mesh, but some "
"nodes, like MeshInstance, allow you to override the material for a specific "
"surface, or for all surfaces."
msgstr ""
"En général, un matériau est associé à une surface donnée dans un maillage, "
"mais certains nœuds, comme MeshInstance, vous permettent d'outrepasser le "
"matériau pour une surface spécifique, ou pour toutes les surfaces."

msgid ""
"If you set a material on the surface or mesh itself, then all MeshInstances "
"that share that mesh will share that material. However, if you want to reuse "
"the same mesh across multiple mesh instances, but have different materials "
"for each instance then you should set the material on the Meshinstance."
msgstr ""
"Si vous placez un matériau sur la surface ou sur le maillage lui-même, alors "
"toutes les MeshInstances qui partagent ce maillage partageront ce matériau. "
"Toutefois, si vous souhaitez réutiliser le même maillage dans plusieurs "
"instances de maillage, mais que vous avez des matériaux différents pour "
"chaque instance, vous devez alors définir le matériau sur la Meshinstance."

msgid ""
"For this tutorial we will set our material on the mesh itself rather than "
"taking advantage of the MeshInstance's ability to override materials."
msgstr ""
"Pour ce tutoriel, nous allons placer notre matériau sur le maillage lui-même "
"plutôt que de profiter de la capacité du MeshInstance à passer outre les "
"matériaux."

msgid "Setting up"
msgstr "Mise en place"

msgid "Add a new :ref:`MeshInstance <class_meshinstance>` node to your scene."
msgstr ""
"Ajoutez un nouveau nœud :ref:`MeshInstance <class_meshinstance>` à votre "
"scène."

msgid ""
"In the inspector tab beside \"Mesh\" click \"[empty]\" and select \"New "
"PlaneMesh\". Then click on the image of a plane that appears."
msgstr ""
"Dans l'onglet inspecteur à côté de \"Mesh\", cliquez sur \"[empty]\" et "
"sélectionnez \"New PlaneMesh\". Cliquez ensuite sur l'image d'un plan qui "
"apparaît."

msgid "This adds a :ref:`PlaneMesh <class_planemesh>` to our scene."
msgstr "Cela ajoute un :ref:`PlaneMesh <class_planemesh>` à notre scène."

msgid ""
"Then, in the viewport, click in the upper left corner on the button that "
"says \"Perspective\". A menu will appear. In the middle of the menu are "
"options for how to display the scene. Select 'Display Wireframe'."
msgstr ""
"Ensuite, dans le viewport, cliquez dans le coin supérieur gauche sur le "
"bouton \"Perspective\". Un menu apparaîtra. Au milieu du menu se trouvent "
"des options sur la façon d'afficher la scène. Sélectionnez 'Affichage en fil "
"de fer'."

msgid "This will allow you to see the triangles making up the plane."
msgstr "Cela vous permettra de voir les triangles qui composent le plan."

msgid "Now set ``Subdivide Width`` and ``Subdivide Depth`` to ``32``."
msgstr "Réglez maintenant ``Subdivide Width`` et ``Subdivide Depth`` à ``32``."

msgid ""
"You can see that there are now many more triangles in the :ref:"
"`Mesh<class_MeshInstance>`. This will give us more vertices to work with and "
"thus allow us to add more detail."
msgstr ""
"Vous pouvez voir qu'il y a maintenant beaucoup plus de triangles dans la :"
"ref:`Mesh<class_MeshInstance>`. Cela nous permettra de travailler avec plus "
"de sommets et donc d'ajouter plus de détails."

msgid ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, like PlaneMesh, only have one"
msgstr ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, comme PlaneMesh, n'ont qu'une "
"seule"

msgid ""
"surface, so instead of an array of materials there is only one. Click beside "
"\"Material\" where it says \"[empty]\" and select \"New ShaderMaterial\". "
"Then click the sphere that appears."
msgstr ""
"surface, de sorte qu'au lieu d'un tableau de matériaux, il n'y en a qu'un "
"seul. Cliquez à côté de \"Material\" où il est écrit \"[empty]\" et "
"sélectionnez \"New ShaderMaterial\". Cliquez ensuite sur la sphère qui "
"apparaît."

msgid ""
"Now click beside \"Shader\" where it says \"[empty]\" and select \"New "
"Shader\"."
msgstr ""
"Cliquez maintenant à côté de \"Shader\" où il est écrit \"[empty]\" et "
"sélectionnez \"New Shader\"."

msgid ""
"The shader editor should now pop up and you are ready to begin writing your "
"first Spatial shader!"
msgstr ""
"L'éditeur de shader devrait maintenant afficher un pop up et vous êtes "
"maintenant prêt à commencer à écrire votre premier shader Spatial !"

msgid "Shader magic"
msgstr "La magie des Shaders"

msgid ""
"Notice how there is already error? This is because the shader editor reloads "
"shaders on the fly. The first thing Godot shaders need is a declaration of "
"what type of shader they are. We set the variable ``shader_type`` to "
"``spatial`` because this is a spatial shader."
msgstr ""
"Vous avez remarqué qu'il y a déjà une erreur ? En effet, l'éditeur de "
"shaders recharge les shaders à la volée. La première chose dont les shaders "
"Godot ont besoin est une déclaration de quel type de shader ils sont. Nous "
"définissons la variable ``shader_type`` à ``spatial`` car il s'agit d'un "
"shader spatial."

msgid ""
"Next we will define the ``vertex()`` function. The ``vertex()`` function "
"determines where the vertices of your :ref:`Mesh<class_MeshInstance>` appear "
"in the final scene. We will be using it to offset the height of each vertex "
"and make our flat plane appear like a little terrain."
msgstr ""
"Ensuite, nous définirons la fonction ``vertex()``. La fonction ``vertex()`` "
"détermine où les sommets de votre :ref:`Mesh<class_MeshInstance>` "
"apparaissent dans la scène finale. Nous l'utiliserons pour compenser la "
"hauteur de chaque sommet et faire apparaître notre plan plat comme un petit "
"terrain."

msgid "We define the vertex shader like so:"
msgstr "Nous définissons ainsi le shader de vertex :"

msgid ""
"With nothing in the ``vertex()`` function, Godot will use its default vertex "
"shader. We can easily start to make changes by adding a single line:"
msgstr ""
"Sans rien dans la fonction ``vertex()``, Godot utilisera son shader de "
"vertex par défaut. Nous pouvons facilement commencer à apporter des "
"changements en ajoutant une seule ligne :"

msgid "Adding this line, you should get an image like the one below."
msgstr ""
"En ajoutant cette ligne, vous devriez obtenir une image comme celle ci-"
"dessous."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to ``cos`` and ``sin``; that gives us a wave-like "
"appearance across the ``x`` and ``z`` axes."
msgstr ""
"Bon, déballons tout ça. La valeur ``y`` de ``VERTEX`` est augmentée. Et nous "
"passons les composantes ``x`` et ``z`` de ``VERTEX`` comme arguments à "
"``cos`` et ``sin`` ; cela nous donne une apparence ondulée sur les axes "
"``x`` et ``z``."

msgid ""
"What we want to achieve is the look of little hills; after all. ``cos`` and "
"``sin`` already look kind of like hills. We do so by scaling the inputs to "
"the ``cos`` and ``sin`` functions."
msgstr ""
"Ce que nous voulons obtenir, c'est l'aspect de petites collines ; après "
"tout. Les ``cos`` et les ``sin`` ressemblent déjà à des collines. Nous le "
"faisons en mettant les entrées à l'échelle des fonctions ``cos`` et ``sin``."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Cela semble mieux, mais c'est encore trop pointu et répétitif, rendons-le un "
"peu plus intéressant."

msgid "Noise heightmap"
msgstr "Heightmap bruit"

msgid ""
"Noise is a very popular tool for faking the look of terrain. Think of it as "
"similar to the cosine function where you have repeating hills except, with "
"noise, each hill has a different height."
msgstr ""
"Le bruit est un outil très populaire pour simuler l'aspect du terrain. "
"Pensez-y comme à la fonction cosinus où vous avez des collines répétitives, "
"sauf que, avec le bruit, chaque colline a une hauteur différente."

msgid ""
"Godot provides the :ref:`NoiseTexture <class_noisetexture>` resource for "
"generating a noise texture that can be accessed from a shader."
msgstr ""
"Godot fournit la ressource :ref:`NoiseTexture <class_noisetexture>` pour "
"générer une texture de bruit accessible depuis un shader."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Pour accéder à une texture dans un shader, ajoutez le code suivant près du "
"haut de votre shader, en dehors de la fonction ``vertex()``."

msgid ""
"This will allow you to send a noise texture to the shader. Now look in the "
"inspector under your material. You should see a section called \"Shader "
"Params\". If you open it up, you'll see a section called \"noise\"."
msgstr ""
"Cela vous permettra d'envoyer une texture de bruit au shader. Regardez "
"maintenant dans l'inspecteur sous votre matériau. Vous devriez voir une "
"section appelée \"Shader Params\". Si vous l’ouvrez, vous verrez une section "
"appelée \"noise\"."

msgid ""
"Click beside it where it says \"[empty]\" and select \"New NoiseTexture\". "
"Then in your NoiseTexture click beside where it says \"Noise\" and select "
"\"New OpenSimplexNoise\"."
msgstr ""
"Cliquez à côté de la mention \"[empty]\" et sélectionnez \"New "
"NoiseTexture\". Ensuite, dans votre NoiseTexture, cliquez à côté de la "
"mention \"Noise\" et sélectionnez \"New OpenSimplexNoise\"."

msgid ""
":ref:`OpenSimplexNoise <class_opensimplexnoise>` is used by the NoiseTexture "
"to"
msgstr ""
":ref:`OpenSimplexNoise <class_opensimplexnoise>` est utilisé par le "
"NoiseTexture pour"

msgid "generate a heightmap."
msgstr "générer une heightmap."

msgid "Once you set it up and should look like this."
msgstr "Une fois que vous l'aurez configuré et il devrait ressembler à ceci."

msgid ""
"Now, access the noise texture using the ``texture()`` function. "
"``texture()`` takes a texture as the first argument and a ``vec2`` for the "
"position on the texture as the second argument. We use the ``x`` and ``z`` "
"channels of ``VERTEX`` to determine where on the texture to look up. Note "
"that the PlaneMesh coordinates are within the [-1,1] range (for a size of "
"2), while the texture coordinates are within [0,1], so to normalize we "
"divide by the size of the PlaneMesh 2.0 and add 0.5. ``texture()`` returns a "
"``vec4`` of the ``r, g, b, a`` channels at the position. Since the noise "
"texture is grayscale, all of the values are the same, so we can use any one "
"of the channels as the height. In this case we'll use the ``r``, or ``x`` "
"channel."
msgstr ""
"Maintenant, accédez à la texture de bruit en utilisant la fonction "
"``texture()``. ``texture()`` prend une texture comme premier argument et un "
"``vec2`` pour la position sur la texture comme second argument. Nous "
"utilisons les canaux ``x`` et ``z`` de ``VERTEX`` pour déterminer l'endroit "
"de la texture où il faut regarder. Notez que les coordonnées du PlaneMesh "
"sont dans la plage [-1,1] (pour une taille de 2), alors que les coordonnées "
"de la texture sont dans [0,1], donc pour normaliser, nous divisons par la "
"taille du PlaneMesh 2.0 et ajoutons 0.5. ``texture()`` renvoie un ``vec4`` "
"des canaux ``r, g, b, a`` à la position. Comme la texture de bruit est en "
"niveaux de gris, toutes les valeurs sont les mêmes, de sorte que nous "
"pouvons utiliser n'importe lequel des canaux comme hauteur. Dans ce cas, "
"nous utiliserons le canal ``r``, ou ``x``."

msgid ""
"Note: ``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture()."
"x`` above, we could use ``texture().r``. See the `OpenGL documentation "
"<https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more "
"details."
msgstr ""
"Note : ``xyzw`` est le même que ``rgba`` dans GLSL, donc au lieu de "
"``texture().x`` ci-dessus, nous pourrions utiliser ``texture().r``. Voir la "
"documentation `OpenGL <https://www.khronos.org/opengl/wiki/"
"Data_Type_(GLSL)#Vectors>`_ pour plus de détails."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"En utilisant ce code, vous pouvez voir que la texture crée des collines "
"d'apparence aléatoire."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Actuellement, c'est trop pointu, nous voulons adoucir un peu les collines. "
"Pour ce faire, nous utiliserons un uniform. Vous avez déjà utilisé un "
"uniform ci-dessus pour transmettre la texture de bruit, maintenant apprenons "
"comment ils fonctionnent."

msgid "Uniforms"
msgstr "Uniforms"

msgid ""
"Uniform variables allow you to pass data from the game into the shader. They "
"are very useful for controlling shader effects. Uniforms can be almost any "
"datatype that can be used in the shader. To use a uniform, you declare it in "
"your :ref:`Shader<class_Shader>` using the keyword ``uniform``."
msgstr ""
"Les variables uniforms vous permettent de faire passer les données du jeu "
"dans le shader. Elles sont très utiles pour contrôler les effets du shader. "
"Les uniforms peuvent être presque tous les types de données qui peuvent être "
"utilisés dans le shader. Pour utiliser un uniform, vous devez le déclarer "
"dans votre :ref:`Shader<class_Shader>` en utilisant le mot-clé ``uniform``."

msgid "Let's make a uniform that changes the height of the terrain."
msgstr "Faisons un uniform qui change la hauteur du terrain."

msgid ""
"Godot lets you initialize a uniform with a value; here, ``height_scale`` is "
"set to ``0.5``. You can set uniforms from GDScript by calling the function "
"``set_shader_param()`` on the material corresponding to the shader. The "
"value passed from GDScript takes precedence over the value used to "
"initialize it in the shader."
msgstr ""
"Godot vous permet d'initialiser un uniform avec une valeur ; ici, "
"``height_scale`` est fixé à ``0.5``. Vous pouvez définir des uniforms à "
"partir du GDScript en appelant la fonction ``set_shader_param()`` sur le "
"matériel correspondant au shader. La valeur passée depuis GDScript est "
"prioritaire sur la valeur utilisée pour l'initialiser dans le shader."

msgid ""
"Changing uniforms in Spatial-based nodes is different from CanvasItem-based "
"nodes. Here, we set the material inside the PlaneMesh resource. In other "
"mesh resources you may need to first access the material by calling "
"``surface_get_material()``. While in the MeshInstance you would access the "
"material using ``get_surface_material()`` or ``material_override``."
msgstr ""
"La modification des uniformes des nœuds basés sur Spatial est différente de "
"celle des nœuds basés sur CanvasItem. Ici, nous définissons le matériau à "
"l'intérieur de la ressource PlaneMesh. Dans d'autres ressources de maillage, "
"vous devrez peut-être d'abord accéder au matériau en appelant "
"``surface_get_material()``. Dans le MeshInstance, vous accéderez au matériau "
"à l'aide de ``get_surface_material()`` ou ``material_override``."

msgid ""
"Remember that the string passed into ``set_shader_param()`` must match the "
"name of the uniform variable in the :ref:`Shader<class_Shader>`. You can use "
"the uniform variable anywhere inside your :ref:`Shader<class_Shader>`. Here, "
"we will use it to set the height value instead of arbitrarily multiplying by "
"``0.5``."
msgstr ""
"Rappelez-vous que la chaîne passée dans ``set_shader_param()`` doit "
"correspondre au nom de la variable uniform dans le :ref:"
"`Shader<class_Shader>`. Vous pouvez utiliser la variable uniform n'importe "
"où dans votre :ref:`Shader<class_Shader>`. Ici, nous allons l'utiliser pour "
"définir la valeur de la hauteur au lieu de la multiplier arbitrairement par "
"``0.5``."

msgid "Now it looks  much better."
msgstr "Maintenant, c'est beaucoup mieux."

msgid ""
"Using uniforms, we can even change the value every frame to animate the "
"height of the terrain. Combined with :ref:`Tweens <class_Tween>`, this can "
"be especially useful for simple animations."
msgstr ""
"En utilisant des uniforms, nous pouvons même changer la valeur de chaque "
"image pour animer la hauteur du terrain. Combiné avec :ref:`Tweens "
"<class_Tween>`, cela peut être particulièrement utile pour les animations "
"simples."

msgid "Interacting with light"
msgstr "Interagir avec la lumière"

msgid ""
"First, turn wireframe off. To do so, click in the upper-left of the Viewport "
"again, where it says \"Perspective\", and select \"Display Normal\"."
msgstr ""
"Tout d'abord, désactiver l'affichage en fil de fer. Pour ce faire, cliquez à "
"nouveau en haut à gauche de la fenêtre de visualisation, où il est indiqué "
"\"Perspective\", et sélectionnez \"Affichage normal\"."

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Remarquez comment la couleur du maillage est plate. Cela s'explique par le "
"fait que son éclairage est plat. Ajoutons une lumière !"

msgid "First, we will add an :ref:`OmniLight<class_OmniLight>` to the scene."
msgstr ""
"Tout d'abord, nous allons ajouter un :ref:`OmniLight<class_OmniLight>` à la "
"scène."

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Vous pouvez voir la lumière qui affecte le terrain, mais elle semble "
"étrange. Le problème est que la lumière affecte le terrain comme s'il "
"s'agissait d'un plan plat. C'est parce que le shader de lumière utilise les "
"normales du :ref:`Mesh <class_mesh>` pour calculer la lumière."

msgid ""
"The normals are stored in the Mesh, but we are changing the shape of the "
"Mesh in the shader, so the normals are no longer correct. To fix this, we "
"can recalculate the normals in the shader or use a normal texture that "
"corresponds to our noise. Godot makes both easy for us."
msgstr ""
"Les normales sont stockées dans le Mesh, mais nous changeons la forme du "
"Mesh dans le shader, donc les normales ne sont plus correctes. Pour y "
"remédier, nous pouvons recalculer les normales dans le shader ou utiliser "
"une texture de normales qui correspond à notre bruit. Godot nous facilite "
"les deux possibilités."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"Vous pouvez calculer la nouvelle normale manuellement dans la fonction "
"vertex et ensuite simplement définir ``NORMAL``. Avec ``NORMAL`` défini, "
"Godot fera pour nous les calculs d'éclairage complexes. Nous aborderons "
"cette méthode dans la prochaine partie de ce tutoriel, pour l'instant nous "
"allons lire les normales à partir d'une texture."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"Au lieu de cela, nous nous fierons à nouveau au NoiseTexture pour calculer "
"les normales pour nous. Nous le faisons en passant une deuxième texture de "
"bruit."

msgid ""
"Set this second uniform texture to another NoiseTexture with another "
"OpenSimplexNoise. But this time, check off \"As Normalmap\"."
msgstr ""
"Réglez cette deuxième uniform de texture sur une autre NoiseTexture avec un "
"autre OpenSimplexNoise. Mais cette fois, cochez \"As Normalmap\"."

msgid ""
"Now, because this is a normalmap and not a per-vertex normal, we are going "
"to assign it in the ``fragment()`` function. The ``fragment()`` function "
"will be explained in more detail in the next part of this tutorial."
msgstr ""
"Maintenant, comme il s'agit d'une normalmap et non de normale par sommet, "
"nous allons l'assigner à la fonction ``fragment()``. Cette fonction "
"``fragment()`` sera expliquée plus en détail dans la prochaine partie de ce "
"tutoriel."

msgid ""
"When we have normals that correspond to a specific vertex we set ``NORMAL``, "
"but if you have a normalmap that comes from a texture, set the normal using "
"``NORMALMAP``. This way Godot will handle the wrapping the texture around "
"the mesh automatically."
msgstr ""
"Lorsque nous avons des normales qui correspondent à un sommet spécifique, "
"nous définissons ``NORMAL``, mais si vous avez une normalmap qui provient "
"d'une texture, on définit la normale en utilisant ``NORMALMAP``. Ainsi, "
"Godot s'occupera automatiquement de recouvrir le maillage avec la texture."

msgid ""
"Lastly, in order to ensure that we are reading from the same places on the "
"noise texture and the normalmap texture, we are going to pass the ``VERTEX."
"xz`` position from the ``vertex()`` function to the ``fragment()`` function. "
"We do that with varyings."
msgstr ""
"Enfin, afin de s'assurer que nous lisons aux mêmes endroits sur la texture "
"de bruit et sur la texture de la normalmap, nous allons passer la position "
"``VERTEX.xz`` de la fonction ``vertex()`` à la fonction ``fragment()``. Nous "
"le faisons avec des varyings."

msgid ""
"Above the ``vertex()`` define a ``vec2`` called ``tex_position``. And inside "
"the ``vertex()`` function assign ``VERTEX.xz`` to ``tex_position``."
msgstr ""
"Au-dessus de ``vertex()`` définissez un ``vec2`` appelé ``tex_position``. Et "
"à l'intérieur de la fonction ``vertex()`` assignez ``VERTEX.xz`` à "
"``tex_position``."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Et maintenant nous avons accès à ``tex_position`` depuis la fonction "
"``fragment()``."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Avec les normales en place, la lumière réagit maintenant dynamiquement à la "
"hauteur du maillage."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Nous pouvons même faire glisser la lumière et l'éclairage se mettra "
"automatiquement à jour."

msgid ""
"Here is the full code for this tutorial. You can see it is not very long as "
"Godot handles most of the difficult stuff for you."
msgstr ""
"Voici le code complet pour ce tutoriel. Vous pouvez voir que ce n'est pas "
"très long car Godot s'occupe de la plupart des choses difficiles pour vous."

msgid ""
"That is everything for this part. Hopefully, you now understand the basics "
"of vertex shaders in Godot. In the next part of this tutorial we will write "
"a fragment function to accompany this vertex function and we will cover a "
"more advanced technique to turn this terrain into an ocean of moving waves."
msgstr ""
"C'est tout pour cette partie. Espérons que vous comprenez maintenant les "
"bases des shaders de vertex dans Godot. Dans la prochaine partie de ce "
"tutoriel, nous allons écrire une fonction de fragment pour accompagner cette "
"fonction de vertex et nous allons couvrir une technique plus avancée pour "
"transformer ce terrain en un océan de vagues en mouvement."

msgid "Translation status"
msgstr "État de la traduction"
