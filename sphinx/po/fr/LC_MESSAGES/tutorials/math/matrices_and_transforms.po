# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Matrices and transforms"
msgstr "Les matrices et les transformations"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"Before reading this tutorial, we recommend that you thoroughly read and "
"understand the :ref:`doc_vector_math` tutorial, as this tutorial requires a "
"knowledge of vectors."
msgstr ""
"Avant de lire ce tutoriel, nous vous recommandons de lire attentivement et "
"de comprendre le tutoriel :ref:`doc_vector_math`, car ce tutoriel nécessite "
"une connaissance des vecteurs."

msgid ""
"This tutorial is about *transformations* and how we represent them in Godot "
"using matrices. It is not a full in-depth guide to matrices. Transformations "
"are most of the time applied as translation, rotation, and scale, so we will "
"focus on how to represent those with matrices."
msgstr ""
"Ce tutoriel traite des *transformations* et de la façon dont nous les "
"représentons dans Godot à l'aide de matrices. Il ne s'agit pas d'un guide "
"complet et approfondi sur les matrices. Les transformations sont la plupart "
"du temps appliquées sous forme de translation, de rotation et de mise à "
"l'échelle. Nous nous concentrerons donc sur la façon de représenter celles-"
"ci à l'aide de matrices."

msgid ""
"Most of this guide focuses on 2D, using :ref:`class_Transform2D` and :ref:"
"`class_Vector2`, but the way things work in 3D is very similar."
msgstr ""
"La majeure partie de ce guide se concentre sur la 2D, en utilisant :ref:"
"`class_Transform2D` et :ref:`class_Vector2`, mais la façon dont les choses "
"fonctionnent en 3D est très similaire."

msgid ""
"As mentioned in the previous tutorial, it is important to remember that in "
"Godot, the Y axis points *down* in 2D. This is the opposite of how most "
"schools teach linear algebra, with the Y axis pointing up."
msgstr ""
"Comme mentionné dans le précédent tutoriel, il est important de se rappeler "
"que dans Godot, l'axe Y pointe *vers le bas* en 2D. C'est le contraire de la "
"façon dont la plupart des écoles enseignent l'algèbre linéaire, avec l'axe Y "
"pointant vers le haut."

msgid ""
"The convention is that the X axis is red, the Y axis is green, and the Z "
"axis is blue. This tutorial is color-coded to match these conventions, but "
"we will also represent the origin vector with a blue color."
msgstr ""
"La convention est que l'axe X est rouge, l'axe Y est vert et l'axe Z est "
"bleu. Ce tutoriel est codé par couleur pour correspondre à ces conventions, "
"mais nous allons également représenter le vecteur d'origine avec une couleur "
"bleue."

msgid "Matrix components and the Identity matrix"
msgstr "Composantes de la matrice et matrice d'identité"

msgid ""
"The identity matrix represents a transform with no translation, no rotation, "
"and no scale. Let's start by looking at the identity matrix and how its "
"components relate to how it visually appears."
msgstr ""
"La matrice d'identité représente une transformation sans translation, sans "
"rotation et sans mise à échelle. Commençons par regarder la matrice "
"d'identité et comment ses composants sont liés à la façon dont elle apparaît "
"visuellement."

msgid ""
"Matrices have rows and columns, and a transformation matrix has specific "
"conventions on what each does."
msgstr ""
"Les matrices ont des lignes et des colonnes, et une matrice de "
"transformation a des conventions spécifiques sur ce que chacune fait."

msgid ""
"In the image above, we can see that the red X vector is represented by the "
"first column of the matrix, and the green Y vector is likewise represented "
"by the second column. A change to the columns will change these vectors. We "
"will see how they can be manipulated in the next few examples."
msgstr ""
"Dans l'image ci-dessus, nous pouvons voir que le vecteur X rouge est "
"représenté par la première colonne de la matrice, et le vecteur Y vert est "
"également représenté par la deuxième colonne. Une modification des colonnes "
"modifiera ces vecteurs. Nous verrons comment ils peuvent être manipulés dans "
"les quelques exemples suivants."

msgid ""
"You should not worry about manipulating rows directly, as we usually work "
"with columns. However, you can think of the rows of the matrix as showing "
"which vectors contribute to moving in a given direction."
msgstr ""
"Vous ne devez pas vous soucier de manipuler directement les lignes, car nous "
"travaillons généralement avec les colonnes. Cependant, vous pouvez "
"considérer les lignes de la matrice comme montrant quels vecteurs "
"contribuent au déplacement dans une direction donnée."

msgid ""
"When we refer to a value such as `t.x.y`, that's the Y component of the X "
"column vector. In other words, the bottom-left of the matrix. Similarly, `t."
"x.x` is top-left, `t.y.x` is top-right, and `t.y.y` is bottom-right, where "
"`t` is the Transform2D."
msgstr ""
"Lorsque nous faisons référence à une valeur telle que `t.x.y`, c'est la "
"composante Y du vecteur de la colonne X. En d'autres termes, la partie "
"inférieure gauche de la matrice. De même, `t.x.x` est en haut à gauche, `t.y."
"x` est en haut à droite, et `t.y.y` est en bas à droite, où `t` est la "
"Transform2D."

msgid "Scaling the transformation matrix"
msgstr "Mise à l'échelle de la matrice de transformation"

msgid ""
"Applying a scale is one of the easiest operations to understand. Let's start "
"by placing the Godot logo underneath our vectors so that we can visually see "
"the effects on an object:"
msgstr ""
"L'application d'une mise à l'échelle est l'une des opérations les plus "
"faciles à comprendre. Commençons par placer le logo Godot sous nos vecteurs "
"afin de pouvoir voir visuellement les effets sur un objet :"

msgid ""
"Now, to scale the matrix, all we need to do is multiply each component by "
"the scale we want. Let's scale it up by 2. 1 times 2 becomes 2, and 0 times "
"2 becomes 0, so we end up with this:"
msgstr ""
"Maintenant, pour mettre la matrice à l'échelle, il suffit de multiplier "
"chaque élément par l'échelle que nous voulons. Augmentons l'échelle de 2. 1 "
"fois 2 devient 2, et 0 fois 2 devient 0, donc nous obtenons ceci :"

msgid "To do this in code, we can simply multiply each of the vectors:"
msgstr ""
"Pour faire cela en code, on peut simplement multiplier chacun des vecteurs :"

msgid ""
"If we wanted to return it to its original scale, we can multiply each "
"component by 0.5. That's pretty much all there is to scaling a "
"transformation matrix."
msgstr ""
"Si nous voulions le ramener à son échelle initiale, nous pourrions "
"multiplier chaque composante par 0,5. C'est à peu près tout ce qu'il y a à "
"savoir pour mettre à l'échelle une matrice de transformation."

msgid ""
"To calculate the object's scale from an existing transformation matrix, you "
"can use `length()` on each of the column vectors."
msgstr ""
"Pour calculer l'échelle de l'objet à partir d'une matrice de transformation "
"existante, vous pouvez utiliser `length()` sur chacun des vecteurs de "
"colonne."

msgid ""
"In actual projects, you can use the `scaled()` method to perform scaling."
msgstr ""
"Dans les projets réels, vous pouvez utiliser la méthode `scaled()` pour "
"effectuer une mise à l'échelle."

msgid "Rotating the transformation matrix"
msgstr "Rotation de la matrice de transformation"

msgid ""
"We'll start the same way as earlier, with the Godot logo underneath the "
"identity matrix:"
msgstr ""
"Nous allons commencer de la même manière que précédemment, avec le logo "
"Godot sous la matrice d'identité :"

msgid ""
"As an example, let's say we want to rotate our Godot logo clockwise by 90 "
"degrees. Right now the X axis points right and the Y axis points down. If we "
"rotate these in our head, we would logically see that the new X axis should "
"point down and the new Y axis should point left."
msgstr ""
"A titre d'exemple, disons que nous voulons faire pivoter notre logo Godot de "
"90 degrés dans le sens des aiguilles d'une montre. À l'heure actuelle, l'axe "
"X pointe vers la droite et l'axe Y pointe vers le bas. Si nous les faisons "
"pivoter dans notre tête, nous verrons logiquement que le nouvel axe X "
"devrait pointer vers le bas et le nouvel axe Y vers la gauche."

msgid ""
"You can imagine that you grab both the Godot logo and its vectors, and then "
"spin it around the center. Wherever you finish spinning, the orientation of "
"the vectors determines what the matrix is."
msgstr ""
"Vous pouvez imaginer que vous saisissez à la fois le logo Godot et ses "
"vecteurs, puis les tourner autour du centre. Où que vous finissiez la "
"rotation, l'orientation des vecteurs détermine ce qu'est la matrice."

msgid ""
"We need to represent \"down\" and \"left\" in normal coordinates, so means "
"we'll set X to (0, 1) and Y to (-1, 0). These are also the values of "
"`Vector2.DOWN` and `Vector2.LEFT`. When we do this, we get the desired "
"result of rotating the object:"
msgstr ""
"Nous devons représenter \"en bas\" et \"à gauche\" en coordonnées normales, "
"ce qui signifie que nous allons mettre X à (0, 1) et Y à (-1, 0). Ce sont "
"également les valeurs de `Vector2.DOWN` et `Vector2.LEFT`. Lorsque nous "
"faisons cela, nous obtenons le résultat souhaité de la rotation de l'objet :"

msgid ""
"If you have trouble understanding the above, try this exercise: Cut a square "
"of paper, draw X and Y vectors on top of it, place it on graph paper, then "
"rotate it and note the endpoints."
msgstr ""
"Si vous avez du mal à comprendre ce qui précède, essayez cet exercice : "
"Coupez un carré de papier, tracez des vecteurs X et Y par-dessus, placez-le "
"sur du papier millimétré, puis faites-le tourner et notez les points "
"d'extrémité."

msgid ""
"To perform rotation in code, we need to be able to calculate the values "
"programmatically. This image shows the formulas needed to calculate the "
"transformation matrix from a rotation angle. Don't worry if this part seems "
"complicated, I promise it's the hardest thing you need to know."
msgstr ""
"Pour effectuer une rotation en code, nous devons pouvoir calculer les "
"valeurs via le programme. Cette image montre les formules nécessaires pour "
"calculer la matrice de transformation à partir d'un angle de rotation. Ne "
"vous inquiétez pas si cette partie vous semble compliquée, je vous promets "
"que c'est la chose la plus difficile à savoir."

msgid ""
"Godot represents all rotations with radians, not degrees. A full turn is "
"`TAU` or `PI*2` radians, and a quarter turn of 90 degrees is `TAU/4` or "
"`PI/2` radians. Working with `TAU` usually results in more readable code."
msgstr ""
"Godot représente toutes les rotations avec des radians, pas des degrés. Un "
"tour complet est en radians `TAU` ou `PI*2`, et un quart de tour de 90 "
"degrés est en radians `TAU/4` ou `PI/2`. Travailler avec `TAU` permet "
"généralement d'obtenir un code plus lisible."

msgid ""
"Fun fact: In addition to Y being *down* in Godot, rotation is represented "
"clockwise. This means that all the math and trig functions behave the same "
"as a Y-is-up CCW system, since these differences \"cancel out\". You can "
"think of rotations in both systems being \"from X to Y\"."
msgstr ""
"Fait amusant : en plus du fait que Y soit *en bas* dans Godot, la rotation "
"est représentée dans le sens des aiguilles d'une montre. Cela signifie que "
"toutes les fonctions mathématiques et de trigonométrie se comportent de la "
"même manière qu'un système CCW Y-is-up (Y est en haut), puisque ces "
"différences \"s'annulent\". Vous pouvez penser que les rotations dans les "
"deux systèmes sont \"de X à Y\"."

msgid ""
"In order to perform a rotation of 0.5 radians (about 28.65 degrees), we "
"simply plug in a value of 0.5 to the formula above and evaluate to find what "
"the actual values should be:"
msgstr ""
"Afin d'effectuer une rotation de 0,5 radians (environ 28,65 degrés), nous "
"ajoutons simplement une valeur de 0,5 à la formule ci-dessus et évaluons "
"pour trouver quelles devraient être les valeurs réelles :"

msgid "Here's how that would be done in code (place the script on a Node2D):"
msgstr ""
"Voici comment cela serait fait en code (placer le script sur un Node2D) :"

msgid ""
"To calculate the object's rotation from an existing transformation matrix, "
"you can use `atan2(t.x.y, t.x.x)`, where t is the Transform2D."
msgstr ""
"Pour calculer la rotation de l'objet à partir d'une matrice de "
"transformation existante, vous pouvez utiliser `atan2(t.x.y, t.x.x)`, où t "
"est le Transform2D."

msgid ""
"In actual projects, you can use the `rotated()` method to perform rotations."
msgstr ""
"Dans les projets réels, vous pouvez utiliser la méthode `rotated()` pour "
"effectuer des rotations."

msgid "Basis of the transformation matrix"
msgstr "Base de la matrice de transformation"

msgid ""
"So far we have only been working with the `x` and `y`, vectors, which are in "
"charge of representing rotation, scale, and/or shearing (advanced, covered "
"at the end). The X and Y vectors are together called the *basis* of the "
"transformation matrix. The terms \"basis\" and \"basis vectors\" are "
"important to know."
msgstr ""
"Jusqu'à présent, nous n'avons travaillé qu'avec les vecteurs `x` et `y`, qui "
"sont chargés de représenter la rotation, la mise à l'échelle et/ou le "
"cisaillement (avancé, couvert à la fin). Les vecteurs X et Y sont appelés "
"ensemble la *base* de la matrice de transformation. Il est important de "
"connaître les termes \"base\" et \"vecteurs de base\"."

msgid ""
"You might have noticed that :ref:`class_Transform2D` actually has three :ref:"
"`class_Vector2` values: `x`, `y`, and `origin`. The `origin` value is not "
"part of the basis, but it is part of the transform, and we need it to "
"represent position. From now on we'll keep track of the origin vector in all "
"examples. You can think of origin as another column, but it's often better "
"to think of it as completely separate."
msgstr ""
"Vous avez peut-être remarqué que :ref:`class_Transform2D` a en fait trois "
"valeurs :ref:`class_Vector2` : `x`, `y`, et `origine`. La valeur `origin` ne "
"fait pas partie de la base, mais elle fait partie de la transformation, et "
"nous en avons besoin pour représenter la position. A partir de maintenant, "
"nous allons suivre le vecteur d'origine dans tous les exemples. Vous pouvez "
"considérer l'origine comme une autre colonne, mais il est souvent préférable "
"de la considérer comme complètement séparée."

msgid ""
"Note that in 3D, Godot has a separate :ref:`class_Basis` structure for "
"holding the three :ref:`class_Vector3` values of the basis, since the code "
"can get complex and it makes sense to separate it from :ref:"
"`class_Transform` (which is composed of one :ref:`class_Basis` and one "
"extra :ref:`class_Vector3` for the origin)."
msgstr ""
"Notez qu'en 3D, Godot a une structure :ref:`class_Basis` séparée pour "
"contenir les trois valeurs :ref:`class_Vector3` de la base, car le code peut "
"devenir complexe et il est logique de la séparer de :ref:`class_Transform` "
"(qui est composé d'une :ref:`class_Basis` et d'une :ref:`class_Vector3` "
"supplémentaire pour l'origine)."

msgid "Translating the transformation matrix"
msgstr "Translation de la matrice de transformation"

msgid ""
"Changing the `origin` vector is called a *translating* the transformation "
"matrix. Translating is basically a technical term for \"moving\" the object, "
"but it explicitly does not involve any rotation."
msgstr ""
"La modification du vecteur `origin` est appelée une *translation* de la "
"matrice de transformation. La translation est essentiellement un terme "
"technique pour \"déplacer\" l'objet, mais elle n'implique explicitement "
"aucune rotation."

msgid ""
"Let's work through an example to help understand this. We will start with "
"the identity transform like last time, except we will keep track of the "
"origin vector this time."
msgstr ""
"Travaillons à travers un exemple pour aider à comprendre cela. Nous "
"commencerons par la transformation d'identité comme la dernière fois, sauf "
"que nous allons suivre le vecteur d’origine cette fois."

msgid ""
"If we want the object to move to a position of (1, 2), we simply need to set "
"its `origin` vector to (1, 2):"
msgstr ""
"Si nous voulons que l'objet se déplace vers une position de (1, 2), nous "
"devons simplement mettre son vecteur `origin` à (1, 2) :"

msgid ""
"There is also a `translated()` method, which performs a different operation "
"to adding or changing `origin` directly. The `translated()` method will "
"translate the object *relative to its own rotation*. For example, an object "
"rotated 90 degrees clockwise will move to the right when `translated()` with "
"`Vector2.UP`."
msgstr ""
"Il existe également une méthode `translated()`, qui effectue une opération "
"différente pour ajouter ou modifier directement `origine`. La méthode "
"`translated()` translaera l'objet *par rapport à sa propre rotation*. Par "
"exemple, un objet tourné de 90 degrés dans le sens des aiguilles d'une "
"montre se déplacera vers la droite lorsqu'il sera `translated()` avec "
"`Vector2.UP`."

msgid ""
"Godot's 2D uses coordinates based on pixels, so in actual projects you will "
"want to translate by hundreds of units."
msgstr ""
"La 2D de Godot utilise des coordonnées basées sur les pixels, donc dans les "
"projets réels, vous voudrez translater par des centaines d'unités."

msgid "Putting it all together"
msgstr "Mettre tout cela ensemble"

msgid ""
"We're going to apply everything we mentioned so far onto one transform. To "
"follow along, create a simple project with a Sprite node and use the Godot "
"logo for the texture resource."
msgstr ""
"Nous allons appliquer tout ce que nous avons mentionné jusqu'à présent à une "
"transformation. Pour suivre, ouvrez-vous un projet simple avec un nœud "
"Sprite et utiliser le logo Godot comme ressource de texture."

msgid ""
"Let's set the translation to (350, 150), rotate by -0.5 rad, and scale by 3. "
"I've posted a screenshot, and the code to reproduce it, but I encourage you "
"to try and reproduce the screenshot without looking at the code!"
msgstr ""
"Mettons la translation à (350, 150), une rotation de -0,5 rad, et une "
"échelle de 3. J'ai posté une capture d'écran, et le code pour la reproduire, "
"mais je vous encourage à essayer de reproduire la capture d'écran sans "
"regarder le code !"

msgid "Shearing the transformation matrix (advanced)"
msgstr "Cisaillement de la matrice de transformation (avancé)"

msgid ""
"If you are only looking for how to *use* transformation matrices, feel free "
"to skip this section of the tutorial. This section explores an uncommonly "
"used aspect of transformation matrices for the purpose of building an "
"understanding of them."
msgstr ""
"Si vous cherchez seulement à savoir comment *utiliser* les matrices de "
"transformation, n'hésitez pas à sauter cette section du tutoriel. Cette "
"section explore un aspect peu utilisé des matrices de transformation dans le "
"but d'en faciliter la compréhension."

msgid ""
"You may have noticed that a transform has more degrees of freedom than the "
"combination of the above actions. The basis of a 2D transformation matrix "
"has four total numbers in two :ref:`class_Vector2` values, while a rotation "
"value and a Vector2 for scale only has 3 numbers. The high-level concept for "
"the missing degree of freedom is called *shearing*."
msgstr ""
"Vous avez peut-être remarqué qu'une transformation a plus de degrés de "
"liberté que la combinaison des actions ci-dessus. La base d'une matrice de "
"transformation 2D a quatre nombres totaux en deux valeurs :ref:"
"`class_Vector2`, alors qu'une valeur de rotation et un Vector2 pour "
"l'échelle n'ont que 3 nombres. Le concept de haut niveau pour le degré de "
"liberté manquant est appelé *cisaillement*."

msgid ""
"Normally, you will always have the basis vectors perpendicular to each "
"other. However, shearing can be useful in some situations, and understanding "
"shearing helps you understand how transforms work."
msgstr ""
"Normalement, les vecteurs de base seront toujours perpendiculaires entre "
"eux. Cependant, le cisaillement peut être utile dans certaines situations, "
"et comprendre le cisaillement vous aide à comprendre comment fonctionnent "
"les transformations."

msgid ""
"To show you visually how it will look, let's overlay a grid onto the Godot "
"logo:"
msgstr ""
"Pour vous montrer visuellement ce à quoi il ressemblera, superposons une "
"grille au logo Godot :"

msgid ""
"Each point on this grid is obtained by adding the basis vectors together. "
"The bottom-right corner is X + Y, while the top-right corner is X - Y. If we "
"change the basis vectors, the entire grid moves with it, as the grid is "
"composed of the basis vectors. All lines on the grid that are currently "
"parallel will remain parallel no matter what changes we make to the basis "
"vectors."
msgstr ""
"Chaque point de cette grille est obtenu en additionnant les vecteurs de "
"base. Le coin inférieur droit est X + Y, tandis que le coin supérieur droit "
"est X - Y. Si nous changeons les vecteurs de base, toute la grille se "
"déplace avec, car la grille est composée des vecteurs de base. Toutes les "
"lignes de la grille qui sont actuellement parallèles le resteront, quelles "
"que soient les modifications que nous apportons aux vecteurs de base."

msgid "As an example, let's set Y to (1, 1):"
msgstr "À titre d'exemple, mettons Y à (1, 1) :"

msgid ""
"You can't set the raw values of a Transform2D in the editor, so you *must* "
"use code if you want to shear the object."
msgstr ""
"Vous ne pouvez pas définir les valeurs brutes d'un Transform2D dans "
"l'éditeur, donc vous *devez* utiliser du code si vous voulez cisailler "
"l'objet."

msgid ""
"Due to the vectors no longer being perpendicular, the object has been "
"sheared. The bottom-center of the grid, which is (0, 1) relative to itself, "
"is now located at a world position of (1, 1)."
msgstr ""
"Les vecteurs n'étant plus perpendiculaires, l'objet a été cisaillé. Le "
"centre inférieur de la grille, qui est (0, 1) par rapport à lui-même, est "
"maintenant situé à une position mondiale de (1, 1)."

msgid ""
"The intra-object coordinates are called UV coordinates in textures, so let's "
"borrow that terminology for here. To find the world position from a relative "
"position, the formula is U * X + V * Y, where U and V are numbers and X and "
"Y are the basis vectors."
msgstr ""
"Les coordonnées intra-objet sont appelées coordonnées UV dans les textures, "
"alors empruntons cette terminologie pour ici. Pour trouver la position "
"mondiale à partir d'une position relative, la formule est U * X + V * Y, où "
"U et V sont des nombres et X et Y sont les vecteurs de base."

msgid ""
"The bottom-right corner of the grid, which is always at the UV position of "
"(1, 1), is at the world position of (2, 1), which is calculated from X*1 + "
"Y*1, which is (1, 0) + (1, 1), or (1 + 1, 0 + 1), or (2, 1). This matches up "
"with our observation of where the bottom-right corner of the image is."
msgstr ""
"Le coin inférieur droit de la grille, qui est toujours à la position UV de "
"(1, 1), est à la position mondiale de (2, 1), qui est calculée à partir de "
"X*1 + Y*1, qui est (1, 0) + (1, 1), ou (1 + 1, 0 + 1), ou (2, 1). Cela "
"correspond à notre observation de l'endroit où se trouve le coin inférieur "
"droit de l'image."

msgid ""
"Similarly, the top-right corner of the grid, which is always at the UV "
"position of (1, -1), is at the world position of (0, -1), which is "
"calculated from X*1 + Y*-1, which is (1, 0) - (1, 1), or (1 - 1, 0 - 1), or "
"(0, -1). This matches up with our observation of where the top-right corner "
"of the image is."
msgstr ""
"De même, le coin supérieur droit de la grille, qui est toujours à la "
"position UV de (1, -1), est à la position mondiale de (0, -1), qui est "
"calculée à partir de X*1 + Y*-1, qui est (1, 0) - (1, 1), ou (1 - 1, 0 - 1), "
"ou (0, -1). Cela correspond à notre observation de l'endroit où se trouve le "
"coin supérieur droit de l'image."

msgid ""
"Hopefully you now fully understand the how a transformation matrix affects "
"the object, and the relationship between the basis vectors and how the "
"object's \"UV\" or \"intra-coordinates\" have their world position changed."
msgstr ""
"Nous espérons que vous comprenez maintenant parfaitement comment une matrice "
"de transformation affecte l'objet, et la relation entre les vecteurs de base "
"et comment les \"UV\" ou \"intra-coordonnées\" de l'objet ont changé leur "
"position dans le monde."

msgid ""
"In Godot, all transform math is done relative to the parent node. When we "
"refer to \"world position\", that would be relative to the node's parent "
"instead, if the node had a parent."
msgstr ""
"Dans Godot, toutes les transformations mathématiques sont effectuées par "
"rapport au nœud parent. Lorsque nous parlons de \"position mondiale\", ce "
"serait plutôt par rapport au parent du nœud, si le nœud avait un parent."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about linear transformations: https://www.youtube.com/watch?"
"v=kYB8IZa5AuE"
msgstr ""
"Si vous souhaitez des explications supplémentaires, vous pouvez consulter "
"l'excellente vidéo de 3Blue1Brown sur les transformations linéaires : "
"https://www.youtube.com/watch?v=kYB8IZa5AuE"

msgid "Practical applications of transforms"
msgstr "Applications pratiques des transformations"

msgid ""
"In actual projects, you will usually be working with transforms inside "
"transforms by having multiple :ref:`class_Node2D` or :ref:`class_Spatial` "
"nodes parented to each other."
msgstr ""
"Dans les projets réels, vous travaillerez généralement avec des "
"transformations à l'intérieur de transformations en ayant plusieurs nœuds :"
"ref:`class_Node2D` ou :ref:`class_Spatial` parentés les uns aux autres."

msgid ""
"However, sometimes it's very useful to manually calculate the values we "
"need. We will go over how you could use :ref:`class_Transform2D` or :ref:"
"`class_Transform` to manually calculate transforms of nodes."
msgstr ""
"Cependant, il est parfois très utile de calculer manuellement les valeurs "
"dont nous avons besoin. Nous allons voir comment vous pouvez utiliser :ref:"
"`class_Transform2D` ou :ref:`class_Transform` pour calculer manuellement les "
"transformations des nœuds."

msgid "Converting positions between transforms"
msgstr "Convertir les positions entre les transformations"

msgid ""
"There are many cases where you'd want to convert a position in and out of a "
"transform. For example, if you have a position relative to the player and "
"would like to find the world (parent-relative) position, or if you have a "
"world position and want to know where it is relative to the player."
msgstr ""
"Il y a de nombreux cas où vous voudriez convertir une position dans et hors "
"d'une transformation. Par exemple, si vous avez une position relative au "
"joueur et que vous souhaitez trouver la position mondiale (par rapport au "
"parent), ou si vous avez une position mondiale et que vous souhaitez savoir "
"où elle se trouve par rapport au joueur."

msgid ""
"We can find what a vector relative to the player would be defined in world "
"space as using the \"xform\" method:"
msgstr ""
"On peut trouver ce qu'un vecteur relatif au joueur serait défini dans "
"l'espace mondial en utilisant la méthode \"xform\" :"

msgid ""
"And we can use the \"xform_inv\" method to find a what world space position "
"would be if it was instead defined relative to the player:"
msgstr ""
"Et nous pouvons utiliser la méthode \"xform_inv\" pour trouver quelle serait "
"la position spatiale mondiale si elle était plutôt définie par rapport au "
"joueur :"

msgid ""
"If you know in advance that the transform is positioned at (0, 0), you can "
"use the \"basis_xform\" or \"basis_xform_inv\" methods instead, which skip "
"dealing with translation."
msgstr ""
"Si vous savez à l'avance que la transformation est positionnée à (0, 0), "
"vous pouvez utiliser les méthodes \"basis_xform\" ou \"basis_xform_inv\" à "
"la place, qui permettent d'éviter de traiter la translation."

msgid "Moving an object relative to itself"
msgstr "Déplacement d'un objet par rapport à lui-même"

msgid ""
"A common operation, especially in 3D games, is to move an object relative to "
"itself. For example, in first-person shooter games, you would want the "
"character to move forward (-Z axis) when you press :kbd:`W`."
msgstr ""
"Une opération courante, en particulier dans les jeux en 3D, consiste à "
"déplacer un objet par rapport à lui-même. Par exemple, dans les jeux de tir "
"à la première personne, vous voudriez que le personnage se déplace vers "
"l'avant (axe -Z) lorsque vous appuyez sur :kbd:`W`."

msgid ""
"Since the basis vectors are the orientation relative to the parent, and the "
"origin vector is the position relative to the parent, we can simply add "
"multiples of the basis vectors to move an object relative to itself."
msgstr ""
"Puisque les vecteurs de base sont l'orientation par rapport au parent, et "
"que le vecteur d'origine est la position par rapport au parent, nous pouvons "
"simplement ajouter des multiples des vecteurs de base pour déplacer un objet "
"par rapport à lui-même."

msgid "This code moves an object 100 units to its own right:"
msgstr "Ce code permet de déplacer un objet de 100 unités à sa propre droite :"

msgid "For moving in 3D, you would need to replace \"x\" with \"basis.x\"."
msgstr "Pour se déplacer en 3D, il faudrait remplacer \"x\" par \"basis.x\"."

msgid ""
"In actual projects, you can use `translate_object_local` in 3D or "
"`move_local_x` and `move_local_y` in 2D to do this."
msgstr ""
"Dans les projets réels, vous pouvez utiliser `translate_object_local` en 3D "
"ou `move_local_x` et `move_local_y` en 2D pour le faire."

msgid "Applying transforms onto transforms"
msgstr "Application de transformations sur des transformations"

msgid ""
"One of the most important things to know about transforms is how you can use "
"several of them together. A parent node's transform affects all of its "
"children. Let's dissect an example."
msgstr ""
"L'une des choses les plus importantes à savoir sur les transformations est "
"la façon dont vous pouvez en utiliser plusieurs ensemble. La transformation "
"d'un nœud parent affecte tous ses enfants. Disséquons un exemple."

msgid ""
"In this image, the child node has a \"2\" after the component names to "
"distinguish them from the parent node. It might look a bit overwhelming with "
"so many numbers, but remember that each number is displayed twice (next to "
"the arrows and also in the matrices), and that almost half of the numbers "
"are zero."
msgstr ""
"Dans cette image, le nœud enfant a un \"2\" après les noms des composants "
"pour les distinguer du nœud parent. Cela peut sembler un peu écrasant avec "
"autant de chiffres, mais souvenez-vous que chaque chiffre est affiché deux "
"fois (à côté des flèches et également dans les matrices), et que près de la "
"moitié des chiffres sont des zéros."

msgid ""
"The only transformations going on here are that the parent node has been "
"given a scale of (2, 1), the child has been given a scale of (0.5, 0.5), and "
"both nodes have been given positions."
msgstr ""
"Les seules transformations en cours ici sont que le nœud parent a reçu une "
"échelle de (2, 1), l'enfant a reçu une échelle de (0,5, 0,5) et les deux "
"nœuds ont reçu des positions."

msgid ""
"All child transformations are affected by the parent transformations. The "
"child has a scale of (0.5, 0.5), so you would expect it to be a 1:1 ratio "
"square, and it is, but only relative to the parent. The child's X vector "
"ends up being (1, 0) in world space, because it is scaled by the parent's "
"basis vectors. Similarly, the child node's `origin` vector is set to (1, 1), "
"but this actually moves it (2, 1) in world space, due to the parent node's "
"basis vectors."
msgstr ""
"Toutes les transformations des enfants sont affectées par les "
"transformations des parents. L'enfant a une échelle de (0,5, 0,5), on "
"s'attendrait donc à ce que ce soit un carré de rapport 1:1, et c'est le cas, "
"mais seulement par rapport au parent. Le vecteur X de l'enfant finit par "
"être (1, 0) dans l'espace mondial, car il est mis à l'échelle par les "
"vecteurs de base du parent. De même, le vecteur `origin` du nœud enfant est "
"fixé à (1, 1), mais il est en fait déplacé (2, 1) dans l'espace mondial, en "
"raison des vecteurs de base du nœud parent."

msgid ""
"To calculate a child transform's world space transform manually, this is the "
"code we would use:"
msgstr ""
"Pour calculer manuellement la transformation de l'espace mondial d'un "
"enfant, c'est le code que nous utiliserions :"

msgid ""
"In actual projects, we can find the world transform of the child by applying "
"one transform onto another using the `*` operator:"
msgstr ""
"Dans les projets actuels, nous pouvons trouver la transformation mondiale de "
"l'enfant en appliquant une transformation sur une autre en utilisant "
"l'opérateur `*` :"

msgid "When multiplying matrices, order matters! Don't mix them up."
msgstr "Quand on multiplie des matrices, l'ordre compte ! Ne les mélangez pas."

msgid "Lastly, applying the identity transform will always do nothing."
msgstr "Enfin, appliquer la transformation d'identité ne fera rien."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about matrix composition: https://www.youtube.com/watch?"
"v=XkY2DOUCWMU"
msgstr ""
"Si vous souhaitez des explications supplémentaires, vous pouvez consulter "
"l'excellente vidéo de 3Blue1Brown sur la composition des matrices : https://"
"www.youtube.com/watch?v=XkY2DOUCWMU"

msgid "Inverting a transformation matrix"
msgstr "Inverser une matrice de transformation"

msgid ""
"The \"affine_inverse\" function returns a transform that \"undoes\" the "
"previous transform. This can be useful in some situations, but it's easier "
"to just provide a few examples."
msgstr ""
"La fonction \"affine_inverse\" renvoie une transformation qui \"annule\" la "
"transformation précédente. Cette fonction peut être utile dans certaines "
"situations, mais il est plus facile de se contenter de quelques exemples."

msgid ""
"Multiplying an inverse transform by the normal transform undoes all "
"transformations:"
msgstr ""
"La multiplication d'une transformation inverse par la transformation normale "
"annule toutes les transformations :"

msgid ""
"Transforming a position by a transform and its inverse results in the same "
"position (same for \"xform_inv\"):"
msgstr ""
"La transformation d'une position par une transformation et son inverse "
"aboutit à la même position (idem pour \"xform_inv\") :"

msgid "How does it all work in 3D?"
msgstr "Comment tout cela fonctionne-t-il en 3D ?"

msgid ""
"One of the great things about transformation matrices is that they work very "
"similarly between 2D and 3D transformations. All the code and formulas used "
"above for 2D work the same in 3D, with 3 exceptions: the addition of a third "
"axis, that each axis is of type :ref:`class_Vector3`, and also that Godot "
"stores the :ref:`class_Basis` separately from the :ref:`class_Transform`, "
"since the math can get complex and it makes sense to separate it."
msgstr ""
"L'un des grands avantages des matrices de transformation est qu'elles "
"fonctionnent de manière très similaire entre les transformations 2D et 3D. "
"Tout le code et les formules utilisés ci-dessus pour la 2D fonctionnent de "
"la même façon en 3D, à trois exceptions près : l'ajout d'un troisième axe, "
"que chaque axe est du type :ref:`class_Vector3`, et aussi que Godot stocke "
"la :ref:`class_Basis` séparément de la :ref:`class_Transform`, puisque les "
"mathématiques peuvent devenir complexe et qu'il est logique de la séparer."

msgid ""
"All of the concepts for how translation, rotation, scale, and shearing work "
"in 3D are all the same compared to 2D. To scale, we take each component and "
"multiply it; to rotate, we change where each basis vector is pointing; to "
"translate, we manipulate the origin; and to shear, we change the basis "
"vectors to be non-perpendicular."
msgstr ""
"Tous les concepts relatifs au fonctionnement de la translation, de la "
"rotation, de l'échelle et du cisaillement en 3D sont les mêmes qu'en 2D. "
"Pour l'échelle, nous prenons chaque composante et la multiplions ; pour la "
"rotation, nous modifions l'endroit où chaque vecteur de base pointe ; pour "
"la translation, nous manipulons l'origine ; et pour le cisaillement, nous "
"modifions les vecteurs de base pour qu'ils soient non-perpendiculaires."

msgid ""
"If you would like, it's a good idea to play around with transforms to get an "
"understanding of how they work. Godot allows you to edit 3D transform "
"matrices directly from the inspector. You can download this project which "
"has colored lines and cubes to help visualize the :ref:`class_Basis` vectors "
"and the origin in both 2D and 3D: https://github.com/godotengine/godot-demo-"
"projects/tree/master/misc/matrix_transform"
msgstr ""
"Si vous le souhaitez, il est bon de jouer avec les transformations pour "
"comprendre leur fonctionnement. Godot vous permet d'éditer des matrices de "
"transformation 3D directement depuis l'inspecteur. Vous pouvez télécharger "
"ce projet qui comporte des lignes et des cubes colorés pour vous aider à "
"visualiser les vecteurs :ref:`class_Basis` et l'origine en 2D et 3D : "
"https://github.com/godotengine/godot-demo-projects/tree/master/misc/"
"matrix_transform"

msgid ""
"Spatial's \"Matrix\" section in Godot 3.2's inspector displays the matrix as "
"transposed, with the columns horizontal and the rows vertical. This may be "
"changed to be less confusing in a future release of Godot."
msgstr ""
"La section \"Matrix\" de Spatial dans l'inspecteur de Godot 3.2 affiche la "
"matrice telle qu'elle a été transposée, avec les colonnes horizontales et "
"les lignes verticales. Cela pourrait être modifié pour être moins déroutant "
"dans une prochaine version de Godot."

msgid ""
"You cannot edit Node2D's transform matrix directly in Godot 3.2's inspector. "
"This may be changed in a future release of Godot."
msgstr ""
"Vous ne pouvez pas modifier la matrice de transformation de Node2D "
"directement dans l'inspecteur de Godot 3.2. Cela pourrait être modifié dans "
"une future version de Godot."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about 3D linear transformations: https://www.youtube.com/"
"watch?v=rHLEWRxRGiM"
msgstr ""
"Si vous souhaitez des explications supplémentaires, vous pouvez consulter "
"l'excellente vidéo de 3Blue1Brown sur les transformations linéaires en 3D : "
"https://www.youtube.com/watch?v=rHLEWRxRGiM"

msgid "Representing rotation in 3D (advanced)"
msgstr "Représentation de la rotation en 3D (avancé)"

msgid ""
"The biggest difference between 2D and 3D transformation matrices is how you "
"represent rotation by itself without the basis vectors."
msgstr ""
"La plus grande différence entre les matrices de transformation 2D et 3D est "
"la façon dont vous représentez la rotation par elle-même sans les vecteurs "
"de base."

msgid ""
"With 2D, we have an easy way (atan2) to switch between a transformation "
"matrix and an angle. In 3D, we can't simply represent rotation as one "
"number. There is something called Euler angles, which can represent "
"rotations as a set of 3 numbers, however, they are limited and not very "
"useful, except for trivial cases."
msgstr ""
"Avec la 2D, nous avons un moyen facile (atan2) de passer d'une matrice de "
"transformation à un angle. En 3D, nous ne pouvons pas simplement représenter "
"la rotation comme un seul chiffre. Il existe quelque chose appelé angles "
"d'Euler, qui peut représenter les rotations comme un ensemble de 3 nombres, "
"mais ils sont limités et peu utiles, sauf dans des cas triviaux."

msgid ""
"In 3D we do not typically use angles, we either use a transformation basis "
"(used pretty much everywhere in Godot), or we use quaternions. Godot can "
"represent quaternions using the :ref:`class_Quat` struct. My suggestion to "
"you is to completely ignore how they work under-the-hood, because they are "
"very complicated and unintuitive."
msgstr ""
"En 3D, nous n'utilisons généralement pas d'angles, nous utilisons soit une "
"base de transformation (utilisée à peu près partout dans Godot), soit des "
"quaternions. Godot peut représenter les quaternions en utilisant la "
"structure :ref:`class_Quat`. Je vous suggère d'ignorer complètement comment "
"ils fonctionnent sous le capot, car ils sont très compliqués et peu "
"intuitifs."

msgid ""
"However, if you really must know how it works, here are some great "
"resources, which you can follow in order:"
msgstr ""
"Cependant, si vous voulez vraiment savoir comment cela fonctionne, voici "
"quelques ressources intéressantes, que vous pouvez suivre dans l'ordre :"

msgid "https://www.youtube.com/watch?v=mvmuCPvRoWQ"
msgstr "https://www.youtube.com/watch?v=mvmuCPvRoWQ"

msgid "https://www.youtube.com/watch?v=d4EgbgTm0Bg"
msgstr "https://www.youtube.com/watch?v=d4EgbgTm0Bg"

msgid "https://eater.net/quaternions"
msgstr "https://eater.net/quaternions"

msgid "Translation status"
msgstr "État de la traduction"
