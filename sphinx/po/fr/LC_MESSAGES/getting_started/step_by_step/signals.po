# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Signaux"

msgid "Using signals"
msgstr "Utiliser les signaux"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"Dans cette leçon, nous allons étudier les signaux. Il s'agit de messages que "
"les nœuds émettent lorsque quelque chose de spécifique leur arrive, comme la "
"pression d'un bouton. D'autres nœuds peuvent se connecter à ce signal et "
"appeler une fonction lorsque l'événement se produit."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Les Signaux sont un mécanisme de délégation intégré à Godot qui permet à un "
"objet de jeu de réagir à un changement au sein d'un autre sans qu'ils "
"n'aient à stocker des références l'un de l'autre. L'utilisation des signaux "
"limite le `couplage <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ et permet de garder votre code flexible."

msgid ""
"For example, you might have a life bar on the screen that represents the "
"player’s health. When the player takes damage or uses a healing potion, you "
"want the bar to reflect the change. To do so, in Godot, you would use "
"signals."
msgstr ""
"Par exemple, vous pouvez avoir une barre de vie à l'écran qui représente la "
"santé du joueur. Lorsque le joueur subit des dégâts ou utilise une potion de "
"soin, vous voulez que la barre reflète le changement. Pour ce faire, dans "
"Godot, vous utiliseriez des signaux."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it here: https://"
"gameprogrammingpatterns.com/observer.html"
msgstr ""
"Comme mentionné dans l'introduction, les signaux sont la version de Godot du "
"modèle de l'observateur. Vous pouvez en apprendre davantage à ce sujet ici : "
"https://gameprogrammingpatterns.com/observer.html"

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson (:"
"ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Nous allons maintenant utiliser un signal pour faire bouger et arrêter notre "
"icône Godot de la lesson précédente (:ref:`doc_scripting_player_input`) en "
"appuyant sur un bouton."

msgid "Scene setup"
msgstr "Configuration de la scène"

msgid ""
"To add a button to our game, we will create a new \"main\" scene which will "
"include both a button and the ``Sprite.tscn`` scene that we scripted in "
"previous lessons."
msgstr ""
"Pour ajouter un bouton dans votre jeu, nous allons créer une nouvelle scène "
"\"principale\" qui contiendra à la fois un bouton et la scène ``Sprite."
"tscn`` à laquelle nous avons ajouté un script lors des précédents leçons."

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr ""
"Créez une nouvelle scène en allant dans le menu Scène -> Nouvelle scène."

msgid ""
"In the Scene dock, click the 2D Scene button. This will add a Node2D as our "
"root."
msgstr ""
"Dans le dock Scène, cliquez sur le bouton Scène 2D. Cela ajoutera un Node2D "
"comme racine."

msgid ""
"In the FileSystem dock, click and drag the ``Sprite.tscn`` file you saved "
"previously onto the Node2D to instantiate it."
msgstr ""
"Dans le dock FileSystem, cliquez et faites glisser le fichier ``Sprite."
"tscn`` que vous avez enregistré précédemment sur le Node2D pour l'instancier."

msgid ""
"We want to add another node as a sibling of the Sprite. To do so, right-"
"click on Node2D and select Add Child Node."
msgstr ""
"Nous voulons ajouter un autre nœud comme frère ou sœur du Sprite. Pour ce "
"faire, cliquez avec le bouton droit de la souris sur Node2D et sélectionnez "
"Add Child Node."

msgid "Search for the Button node type and add it."
msgstr "Recherchez le type de nœud Button et ajoutez-le."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"Le nœud est petit par défaut. Cliquez et faites glisser la poignée "
"inférieure droite du bouton dans la fenêtre d'affichage pour le "
"redimensionner."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Si vous ne voyez pas les poignées, assurez-vous que l’outil de sélection est "
"actif dans la barre d’outils."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr ""
"Cliquez et faites glisser le bouton lui-même pour le rapprocher du sprite."

msgid ""
"You can also write a label on the Button by editing its Text property in the "
"Inspector. Enter \"Toggle motion\"."
msgstr ""
"Vous pouvez également ajouter une légende au Button en modifiant sa "
"propriété Text dans l'inspecteur. Entrez \"Toggle motion\"."

msgid "Your scene tree and viewport should look like this."
msgstr ""
"Votre arbre de scène et votre fenêtre d'affichage doivent ressembler à ceci."

msgid ""
"Save your newly created scene. You can then run it with :kbd:`F6`. At the "
"moment, the button will be visible, but nothing will happen if you press it."
msgstr ""
"Enregistrez votre nouvelle scène créée. Vous pouvez la lancer avec :kbd:"
"`F6`. A ce moment, le bouton sera visible, mais rien ne se passera si vous "
"appuyez dessus."

msgid "Connecting a signal in the editor"
msgstr "Connecter un signal dans l'éditeur"

msgid ""
"Here, we want to connect the Button's \"pressed\" signal to our Sprite, and "
"we want to call a new function that will toggle its motion on and off. We "
"need to have a script attached to the Sprite node, which we do from the "
"previous lesson."
msgstr ""
"Ici, nous voulons connecter le signal \"pressed\" du Button à notre Sprite, "
"et nous voulons appeler une nouvelle fonction qui va activer et désactiver "
"son mouvement. Il nous faudra un script attaché au nœud Sprite, comme nous "
"l'avons fait dans la leçon précédente."

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Vous pouvez connecter des signaux dans le dock Nœud. Sélectionnez le nœud "
"Button et, sur le côté droit de l'éditeur, cliquez sur l'onglet nommé "
"\"Nœud\" à côté de l'inspecteur."

msgid "The dock displays a list of signals available on the selected node."
msgstr ""
"Le dock affiche la liste des signaux disponibles sur le nœud sélectionné."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Double-cliquez sur le signal \"pressed\" pour ouvrir la fenêtre de connexion "
"de nœud."

msgid ""
"There, you can connect the signal to the Sprite node. The node needs a "
"receiver method, a function that Godot will call when the Button emits the "
"signal. The editor generates one for you. By convention, we name these "
"callback methods \"_on_NodeName_signal_name\". Here, it'll be "
"\"_on_Button_pressed\"."
msgstr ""
"Ici, vous pouvez connectez le signal au nœud Sprite. Le nœud a besoin d'une "
"méthode de réception, une fonction que Godot appellera quand le Button émet "
"le signal. L'éditeur en génère une pour vous. Par convention, nous nommons "
"ces méthodes de callback \"_on_NomDuNode_nom_du_signal\". Dans ce cas, ce "
"sera \"_on_Button_pressed\"."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Lorsque vous connectez des signaux via le dock Nœud de l'éditeur, vous "
"pouvez utiliser deux modes. Le plus simple vous permet seulement de "
"connecter les nœuds auxquels un script est attaché et crée une nouvelle "
"fonction de callback dessus."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"La vue avancée vous permet de connecter n'importe quel nœud et n'importe "
"quelle fonction intégrée, d'ajouter des arguments au callback, et de définir "
"des options. Vous pouvez activer le mode en cliquant sur le bouton radio "
"situé en bas à droite de la fenêtre."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Cliquez sur le bouton \"Connecter\" pour compléter la connexion du signal et "
"passer à l'espace de travail Script. Vous devriez voir la nouvelle méthode "
"avec une icône de connexion dans la marge de gauche."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Si vous cliquez sur l'icône, une fenêtre s'ouvre et affiche des informations "
"à propos de la connexion. Cette fonctionnalité est uniquement disponible "
"quand les nœuds sont connectés depuis l'éditeur."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Remplaçons la ligne avec le mot-clé ``pass`` par du code qui va activer et "
"désactiver le mouvement du nœud."

msgid ""
"Our Sprite moves thanks to code in the ``_process()`` function. Godot "
"provides a method to toggle processing on and off: :ref:`Node.set_process() "
"<class_Node_method_set_process>`. Another method of the Node class, "
"``is_processing()``, returns ``true`` if idle processing is active. We can "
"use the ``not`` keyword to invert the value."
msgstr ""
"Notre Sprite se déplace grâce au code dans la fonction ``_process()``. Godot "
"fournit une méthode pour activer ou désactiver le traitement : :ref:`Node."
"set_process() <class_Node_method_set_process>`. Une autre méthode de la "
"classe Node, ``is_processing()``, retourne ``true`` si le traitement est "
"actif. Nous pouvons utiliser le mot-clé ``not`` pour inverser la valeur."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Cette fonction activera et désactivera le traitement et, par conséquent, le "
"mouvement de l'icône lorsque le bouton sera appuyé."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Avant d'essayer le jeu, nous devons simplifier notre fonction ``_process()`` "
"afin de déplacer le nœud automatiquement et ne pas attendre d'entrée "
"utilisateur. Remplacez-la par le code suivant, que nous avons vu il y a deux "
"leçons :"

msgid "Your complete ``Sprite.gd`` code should look like the following."
msgstr "Votre code complet ``Sprite.gd`` devrait ressembler à ce qui suit."

msgid ""
"Run the scene now and click the button to see the sprite start and stop."
msgstr ""
"Exécutez la scène maintenant et cliquez sur le bouton pour voir le sprite "
"démarrer et s'arrêter."

msgid "Connecting a signal via code"
msgstr "Connexion d'un signal via le code"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Vous pouvez connecter les signaux depuis le code au lieu d'utiliser "
"l'éditeur. C'est nécessaire quand vous créez des nœuds ou instanciez des "
"scènes à l'intérieur d'un script."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Utilisons un nœud différent ici. Godot possède un nœud :ref:`Timer "
"<class_Timer>` qui est utile pour implémenter des temps de recharge d'une "
"compétence, le rechargement d'une arme, etc."

msgid ""
"Head back to the 2D workspace. You can either click the \"2D\" text at the "
"top of the window or press :kbd:`Ctrl + F1` (:kbd:`Alt + 1` on macOS)."
msgstr ""
"Revenez à l'espace de travail 2D. Vous pouvez soit cliquer sur le texte "
"\"2D\", en haut de la fenêtre ou appuyer sur :kbd:`Ctrl + F2` (:kbd:`Alt + "
"2` sur macOS)."

msgid ""
"In the Scene dock, right-click on the Sprite node and add a new child node. "
"Search for Timer and add the corresponding node. Your scene should now look "
"like this."
msgstr ""
"Dans le dock Scène, faîtes un clic-droit sur le nœud \"Sprite\" et ajoutez "
"un nouveau nœud. Recherchez \"Timer\" et ajoutez le nœud correspondant. "
"Votre scène devrait maintenant ressembler à cela."

msgid ""
"With the Timer node selected, go to the Inspector and check the "
"**Autostart** property."
msgstr ""
"Avec le nœud Timer sélectionné, allez dans l'inspecteur et cochez la "
"propriété **Autostart**."

msgid ""
"Click the script icon next to Sprite to jump back to the scripting workspace."
msgstr ""
"Cliquez sur l'icône de script à côté de Sprite pour revenir à l'espace de "
"travail de script."

msgid "We need to do two operations to connect the nodes via code:"
msgstr "Nous devons faire deux opérations pour connecter un nœud via le code :"

msgid "Get a reference to the Timer from the Sprite."
msgstr "Obtenir une référence au Timer du Sprite."

msgid "Call the Timer's ``connect()`` method."
msgstr "Appeler la méthode ``connect()`` du Timer."

msgid ""
"To connect to a signal via code, you need to call the ``connect()`` method "
"of the node you want to listen to. In this case, we want to listen to the "
"Timer's \"timeout\" signal."
msgstr ""
"Pour se connecter à un signal via le code, vous devez appeler la méthode "
"``connect()`` du nœud que vous voulez écouter. Dans ce cas, nous voulons "
"écouter le signal \"timeout\" du Timer."

msgid ""
"We want to connect the signal when the scene is instantiated, and we can do "
"that using the :ref:`Node._ready() <class_Node_method__ready>` built-in "
"function, which is called automatically by the engine when a node is fully "
"instantiated."
msgstr ""
"Nous voulons connecter the signal lorsque la scène est instanciée, pour celà "
"nous pouvons utiliser la fonction intégrée :ref:`Node._ready() "
"<class_Node_method__ready>` qui est appelée automatiquement par le moteur "
"lorsqu'un noeud est complètement instancié."

msgid ""
"To get a reference to a node relative to the current one, we use the method :"
"ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Pour obtenir une référence vers un nœud relatif au nœud actuel, nous "
"utilisons la méthode :ref:`Node.get_node() <class_Node_method_get_node>`. "
"Nous pouvons stocker la référence dans une variable."

msgid ""
"The function ``get_node()`` looks at the Sprite's children and gets nodes by "
"their name. For example, if you renamed the Timer node to \"BlinkingTimer\" "
"in the editor, you would have to change the call to "
"``get_node(\"BlinkingTimer\")``."
msgstr ""
"La fonction ``get_node()`` regarde les enfants du Sprite et récupère les "
"nœuds par leur nom. Par exemple, si vous renommez le nœud Timer en "
"\"BlinkingTimer\" dans l'éditeur, vous devrez changer l'appel en "
"``get_node(\"BlinkingTimer\")``."

msgid ""
"We can now connect the Timer to the Sprite in the ``_ready()`` function."
msgstr ""
"Nous pouvons maintenant connecter le Timer au Sprite dans la fonction "
"``_ready()``."

msgid ""
"The line reads like so: we connect the Timer's \"timeout\" signal to the "
"node to which the script is attached (``self``). When the Timer emits "
"\"timeout\", we want to call the function \"_on_Timer_timeout\", that we "
"need to define. Let's add it at the bottom of our script and use it to "
"toggle our sprite's visibility."
msgstr ""
"La ligne se lit comme ceci : nous connectez le signal \"timeout\" du Timer "
"au nœud auquel le script est attaché (``self``). Lorsque le Timer émet "
"\"timeout\", nous voulons appeler la fonction \"_on_Timer_timeout\", que "
"nous devons définir. Ajoutons-la en bas du script et utilisons-la pour "
"changer la visibilité du sprite."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"La propriété ``visible`` est un booléen qui contrôle la visibilité de notre "
"nœud. La ligne ``visible = not visible`` inverse la valeur. Si ``visible`` "
"est ``true``, il devient ``false``, et vice-versa."

msgid ""
"If you run the scene now, you will see that the sprite blinks on and off, at "
"one second intervals."
msgstr ""
"Si vous exécutez la scène maintenant, vous verrez que le sprite clignote par "
"intervalles d'une seconde."

msgid "Complete script"
msgstr "Script en entier"

msgid ""
"That's it for our little moving and blinking Godot icon demo! Here is the "
"complete ``Sprite.gd`` file for reference."
msgstr ""
"C'est tout pour notre démo où on déplace et fait clignoter l'icône de "
"Godot ! Voici le fichier complet ``Sprite.gd`` pour référence."

msgid "Custom signals"
msgstr "Signaux personnalisés"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Cette section est une référence sur la définition de votre propre signaux et "
"ne dépends pas du projet créé dans les leçons précédentes."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Vous pouvez définir des signaux personnalisés dans un script. Disons, par "
"exemple, que vous souhaitez monter un écran de game over quand la vie du "
"joueur atteint zéro. Pour ce faire, vous pouvez définir un signal nommé "
"\"died\" (mort) ou \"health_depleted\" (vie épuisée) lorsque sa santé "
"atteint 0."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Comme les signaux représentent des événements qui viennent de se produire, "
"nous utilisons généralement un verbe d'action au passé dans leur nom."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Vos signaux fonctionnent de la même façon que les signaux intégrés : ils "
"apparaissent dans l'onglet Node et vous pouvez vous y connecter comme les "
"autres."

msgid "To emit a signal in your scripts, call ``emit_signal()``."
msgstr "Pour émettre un signal dans vos scripts, appelez ``emit_signal()``."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Un signal peut aussi déclarer en option un ou plusieurs arguments. Spécifiez "
"les noms des arguments entre parenthèses :"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Les arguments du signal apparaissent dans le dock des nœuds de l'éditeur, et "
"Godot peut les utiliser pour générer des fonctions de rappel pour vous. "
"Cependant, vous pouvez toujours émettre un nombre quelconque d'arguments "
"lorsque vous émettez des signaux. C'est donc à vous d'émettre les valeurs "
"correctes."

msgid ""
"To emit values along with the signal, add them as extra arguments to the "
"``emit_signal()`` function:"
msgstr ""
"Pour émettre des valeurs en même temps que le signal, ajoutez-les comme "
"arguments supplémentaires à la fonction ``emit_signal()`` :"

msgid "Summary"
msgstr "Résumé"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Tous les nœuds de Godot émettent des signaux lorsque quelque chose de "
"spécifique leur arrive, comme l'appui sur un bouton. D'autres nœuds peuvent "
"se connecter à des signaux individuels et réagir aux événements sélectionnés."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Les signaux ont de nombreuses utilisations. Grâce à eux, vous pouvez réagir "
"à l'entrée ou la sortie d'un nœud dans le monde de jeu, à une collision, à "
"l'entrée ou la sortie d'un personnage dans une zone, à un élément "
"d'interface qui change de taille, et bien plus encore."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Par exemple, un :ref:`Area2D <class_Area2D>` représentant une pièce de "
"monnaie émet un signal ``body_entered`` chaque fois que le corps physique du "
"joueur entre dans sa forme de collision, ce qui vous permet de savoir quand "
"le joueur l'a collectée."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"Dans la section suivante, :ref:`doc_your_first_2d_game`, vous allez créer un "
"jeu 2D complet et mettre en pratique tout ce que vous avez appris jusqu'à "
"présent."

msgid "Translation status"
msgstr "État de la traduction"
