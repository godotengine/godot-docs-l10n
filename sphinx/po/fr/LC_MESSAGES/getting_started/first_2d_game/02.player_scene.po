# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the player scene"
msgstr "Création de la scène joueur"

msgid ""
"With the project settings in place, we can start working on the player-"
"controlled character."
msgstr ""
"Avec les paramètres du projet en place, nous pouvons commencer à travailler "
"sur le personnage contrôlé par le joueur."

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"La première scène définira l'objet ``Player``. L'un des avantages de la "
"création d'une scène Player séparée est que nous pouvons la tester "
"séparément, avant même d'avoir créé d'autres parties du jeu."

msgid "Node structure"
msgstr "Structure des nœuds"

msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""
"Pour commencer, nous devons choisir un nœud racine pour l'objet joueur. En "
"règle générale, le nœud racine d'une scène doit refléter la fonctionnalité "
"souhaitée de l'objet - ce que l'objet *est*. Cliquez sur le bouton \"Other "
"Node\" et ajoutez un nœud :ref:`Area2D <class_Area2D>` à la scène."

msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godot affichera une icône d'avertissement près du nœud dans l'arbre de "
"scène. Vous pouvez l'ignorer pour le moment. Nous y reviendrons plus tard."

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"Avec ``Area2D``, nous pouvons détecter les objets qui chevauchent ou "
"rentrent en collision le joueur. Changez le nom du nœud en ``Player`` en "
"double-cliquant sur son nom. Maintenant que nous avons défini le nœud racine "
"de la scène, nous pouvons ajouter des nœuds supplémentaires pour lui donner "
"plus de fonctionnalités."

msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"Avant d'ajouter des enfants au nœud ``Player``, nous voulons nous assurer de "
"ne pas les déplacer ou les redimensionner accidentellement en cliquant "
"dessus. Sélectionnez le nœud et cliquez sur l'icône à droite du cadenas ; "
"son info-bulle indique \"Rendre la sélection des enfants de l'objet "
"impossible.\""

msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Sauvegardez la scène. Cliquez sur Scène -> Enregistrer la scène, ou appuyez "
"sur :kbd:`Ctrl + S` sous Windows/Linux ou :kbd:`Cmd + S` sous macOS."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Pour ce projet, nous suivrons les conventions de nommage de Godot."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript** : Les classes (nœuds) utilisent PascalCase, les variables et "
"les fonctions utilisent snake_case, et les constantes utilisent ALL_CAPS "
"(Voir :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#** : Les classes, les variables d'exportation et les méthodes utilisent "
"PascalCase, les attributs privés utilisent _camelCase, les variables locales "
"et les paramètres utilisent camelCase (Voir :ref:`doc_c_sharp_styleguide`). "
"Attention à taper les noms des méthodes précisément lorsque vous connectez "
"des signaux."

msgid "Sprite animation"
msgstr "Animation du sprite"

msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"[empty]\" -> \"New SpriteFrames\". Click again to open the "
"\"SpriteFrames\" panel:"
msgstr ""
"Cliquez sur le nœud ``Player`` et ajoutez un nœud :ref:`AnimatedSprite "
"<class_AnimatedSprite>` comme nœud enfant. ``AnimatedSprite`` s'occupera de "
"l'apparence et des animations pour notre joueur. Notez qu'il y a un symbole "
"d'avertissement à côté du nœud. Un ``AnimatedSprite`` nécessite une "
"ressource :ref:`SpriteFrames <class_SpriteFrames>`, qui contient la liste "
"des animations qu'il peut afficher. Pour en créer une, trouvez la propriété "
"``Frames`` dans l'Inspecteur et cliquez sur \"[vide]\" -> \"Nouveau "
"SpriteFrames\". Cliquez à nouveau pour ouvrir le panneau \"SpriteFrames\" :"

msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"walk\". Then click the \"New Animation\" button to create a second "
"animation named \"up\". Find the player images in the \"FileSystem\" tab - "
"they're in the ``art`` folder you unzipped earlier. Drag the two images for "
"each animation, named ``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, "
"into the \"Animation Frames\" side of the panel for the corresponding "
"animation:"
msgstr ""
"A gauche, vous trouverez une liste d'animations. Cliquez sur \"default\" et "
"renommez-la en \"walk\". Cliquez ensuite sur le bouton \"New Animation\" "
"pour créer une deuxième animation nommée \"up\". Trouvez les images du "
"joueur dans l'onglet \"Système de fichiers\" - elles se trouvent dans le "
"dossier ``art`` que vous avez décompressé plus tôt. Faites glisser les deux "
"images pour chaque animation, nommées ``playerGrey_up[1/2]`` et "
"``playerGrey_walk[1/2]``, dans le côté \"Animation Frames\" du panneau pour "
"l'animation correspondante :"

msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"Les images du joueur sont un peu trop grandes pour la fenêtre de jeu, nous "
"devons donc les réduire. Cliquez sur le nœud ``AnimatedSprite`` et réglez la "
"propriété ``Scale`` sur ``(0.5, 0.5)``. Vous pouvez la trouver dans "
"l'Inspecteur sous la catégorie ``Node2D``."

msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\"\" -> "
"\"New CapsuleShape2D\". Using the two size handles, resize the shape to "
"cover the sprite:"
msgstr ""
"Enfin, ajoutez un :ref:`CollisionShape2D <class_CollisionShape2D>` en tant "
"qu'enfant de ``Player``. Ceci déterminera la \"hitbox\" du joueur, soit les "
"limites de sa zone de collision. Pour ce personnage, un nœud "
"``CapsuleShape2D`` donne le meilleur ajustement, donc à côté de \"Shape\" "
"dans l'Inspecteur, cliquez sur \"[vide]\" -> \"Nouveau CapsuleShape2D\". En "
"utilisant les poignées, redimensionnez la forme pour couvrir le sprite :"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr ""
"Lorsque vous avez terminé, votre scène ``Player`` devrait ressembler à ceci :"

msgid "Make sure to save the scene again after these changes."
msgstr "Veillez à sauvegarder à nouveau la scène après ces changements."

msgid ""
"In the next part, we'll add a script to the player node to move and animate "
"it. Then, we'll set up collision detection to know when the player got hit "
"by something."
msgstr ""
"Dans la prochaine partie, nous ajouterons un script sur le nœud du joueur "
"pour le déplacer et l'animer. Ensuite, nous mettrons en place une détection "
"de collisions pour savoir quand le joueur a été touché par quelque chose."

msgid "Translation status"
msgstr "État de la traduction"
