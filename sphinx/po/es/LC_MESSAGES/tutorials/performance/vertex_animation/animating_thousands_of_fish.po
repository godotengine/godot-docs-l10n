# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Animating thousands of fish with MultiMeshInstance"
msgstr "Animación de miles de objetos con MultiMeshInstance"

msgid ""
"This tutorial explores a technique used in the game `ABZU <https://www."
"gdcvault.com/play/1024409/Creating-the-Art-of-ABZ>`_ for rendering and "
"animating thousands of fish using vertex animation and static mesh "
"instancing."
msgstr ""
"Este tutorial explora una técnica usada en el juego `ABZU <https://www."
"gdcvault.com/play/1024409/Creating-the-Art-of-ABZ>`_ para renderizar y "
"animar miles de peces usando animación de vértices e instanciación estática "
"de malla."

msgid ""
"In Godot, this can be accomplished with a custom :ref:`Shader "
"<class_Shader>` and a :ref:`MultiMeshInstance <class_MultiMeshInstance>`. "
"Using the following technique you can render thousands of animated objects, "
"even on low end hardware."
msgstr ""
"En Godot, esto se puede lograr con un personalizado :ref:`Shader "
"<class_Shader>` y una :ref:`MultiMeshInstance <class_MultiMeshInstance>`. "
"Usando la siguiente técnica puedes renderizar miles de objetos animados, "
"incluso en hardware de gama baja."

msgid ""
"We will start by animating one fish. Then, we will see how to extend that "
"animation to thousands of fish."
msgstr ""
"Empezaremos animando a un pez. Luego, veremos cómo extender esa animación a "
"miles de peces."

msgid "Animating one Fish"
msgstr "Animando un objeto"

msgid ""
"We will start with a single fish. Load your fish model into a :ref:"
"`MeshInstance <class_MeshInstance>` and add a new :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."
msgstr ""
"Empezaremos con un solo pez. Carga tu modelo de pez en un :ref:`MeshInstance "
"<class_MeshInstance>` y añade un nuevo :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."

msgid ""
"Here is the fish we will be using for the example images, you can use any "
"fish model you like."
msgstr ""
"Aquí está el pez que usaremos para las imágenes de ejemplo, puedes usar "
"cualquier modelo de pez que quieras."

msgid ""
"The fish model in this tutorial is made by `QuaterniusDev <http://quaternius."
"com>`_ and is shared with a creative commons license. CC0 1.0 Universal (CC0 "
"1.0) Public Domain Dedication https://creativecommons.org/publicdomain/"
"zero/1.0/"
msgstr ""
"El modelo de pez en este tutorial está hecho por `QuaterniusDev <http://"
"quaternius.com>`_ y se comparte con una licencia creative commons. CC0 1.0 "
"Universal (CC0 1.0) Public Domain Dedication https://creativecommons.org/"
"publicdomain/zero/1.0/"

msgid ""
"Typically, you would use bones and a :ref:`Skeleton <class_Skeleton>` to "
"animate objects. However, bones are animated on the CPU and so you end "
"having to calculate thousands of operations every frame and it becomes "
"impossible to have thousands of objects. Using vertex animation in a vertex "
"shader, you avoid using bones and can instead calculate the full animation "
"in a few lines of code and completely on the GPU."
msgstr ""
"Típicamente, usarías huesos y un :ref:`Skeleton <class_Skeleton>` para "
"animar objetos. Sin embargo, los huesos se animan en la CPU y así terminas "
"teniendo que calcular miles de operaciones en cada fotograma y se hace "
"imposible tener miles de objetos. Usando la vertex animation en un vertex "
"sharder, evitas usar huesos y puedes en cambio calcular la animación "
"completa en unas pocas líneas de código y completamente en la GPU."

msgid "The animation will be made of four key motions:"
msgstr "La animación se hará con cuatro claves de movimiento:"

msgid "A side to side motion"
msgstr "Un movimiento de lado a lado"

msgid "A pivot motion around the center of the fish"
msgstr "Un movimiento pivotante alrededor del centro del pez"

msgid "A panning wave motion"
msgstr "Un movimiento de onda de panorámico"

msgid "A panning twist motion"
msgstr "Un movimiento de giro de panorámica"

msgid ""
"All the code for the animation will be in the vertex shader with uniforms "
"controlling the amount of motion. We use uniforms to control the strength of "
"the motion so that you can tweak the animation in editor and see the results "
"in real time, without the shader having to recompile."
msgstr ""
"Todo el código de la animación estará en el vertex shader uniforms que "
"controlan la cantidad de movimiento. Usamos uniforms para controlar la "
"fuerza del movimiento para que puedas ajustar la animación en el editor y "
"ver los resultados en tiempo real, sin que el shader tenga que recompilar."

msgid ""
"All the motions will be made using cosine waves applied to ``VERTEX`` in "
"model space. We want the vertices to be in model space so that the motion is "
"always relative to the orientation of the fish. For example, side-to-side "
"will always move the fish back and forth in its left to right direction, "
"instead of on the ``x`` axis in the world orientation."
msgstr ""
"Todos los movimientos se harán usando ondas coseno aplicadas a ``VERTEX`` en "
"el espacio modelo. Queremos que los vértices estén en el espacio modelo para "
"que el movimiento sea siempre relativo a la orientación de los peces. Por "
"ejemplo, de lado a lado siempre moverá al pez de izquierda a derecha, en "
"lugar de en el eje ``x`` en la orientación del mundo."

msgid ""
"In order to control the speed of the animation, we will start by defining "
"our own time variable using ``TIME``."
msgstr ""
"Para controlar la velocidad de la animación, empezaremos definiendo nuestra "
"propia variable de tiempo usando ``TIME``."

msgid ""
"The first motion we will implement is the side to side motion. It can be "
"made by offsetting ``VERTEX.x`` by ``cos`` of ``TIME``. Each time the mesh "
"is rendered, all the vertices will move to the side by the amount of "
"``cos(time)``."
msgstr ""
"El primer movimiento que implementaremos es el movimiento de lado a lado. "
"Puede hacerse compensando ``VERTEX.x`` por ``cos`` de ``TIME``. Cada vez que "
"la malla se renderice, todos los vértices se moverán de lado por la cantidad "
"de ``cos(time)``."

msgid "The resulting animation should look something like this:"
msgstr "La animación resultante debería ser algo así:"

msgid ""
"Next, we add the pivot. Because the fish is centered at (0, 0), all we have "
"to do is multiply ``VERTEX`` by a rotation matrix for it to rotate around "
"the center of the fish."
msgstr ""
"A continuación, añadimos el pivote. Debido a que el pez está centrado en (0, "
"0), todo lo que tenemos que hacer es multiplicar ``VERTEX`` por una matriz "
"de rotación para que gire alrededor del centro del pez."

msgid "We construct a rotation matrix like so:"
msgstr "Construimos una matriz de rotación así:"

msgid ""
"And then we apply it in the ``x`` and ``z`` axes by multiplying it by "
"``VERTEX.xz``."
msgstr ""
"Y luego lo aplicamos en los ejes ``x`` y ``z`` multiplicándolo por ``VERTEX."
"xz``."

msgid "With only the pivot applied you should see something like this:"
msgstr "Con sólo el pivote aplicado, deberías ver algo como esto:"

msgid ""
"The next two motions need to pan down the spine of the fish. For that, we "
"need a new variable, ``body``. ``body`` is a float that is ``0`` at the tail "
"of the fish and ``1`` at its head."
msgstr ""
"Los próximos dos movimientos necesitan bajar por la espina dorsal del pez. "
"Para eso, necesitamos una nueva variable, ``body``. ``body`` es un real que "
"está ``0`` en la cola del pez y ``1`` en su cabeza.\"cuerpo\" es un flotador "
"que está ``0`` en la cola del pez y ``1`` en su cabeza."

msgid ""
"The next motion is a cosine wave that moves down the length of the fish. To "
"make it move along the spine of the fish, we offset the input to ``cos`` by "
"the position along the spine, which is the variable we defined above, "
"``body``."
msgstr ""
"El siguiente movimiento es una onda coseno que se mueve a lo largo del pez. "
"Para hacer que se mueva a lo largo de la espina dorsal del pez, compensamos "
"la entrada a ``cos`` por la posición a lo largo de la espina dorsal, que es "
"la variable que definimos arriba, ``body``."

msgid ""
"This looks very similar to the side to side motion we defined above, but in "
"this one, by using ``body`` to offset ``cos`` each vertex along the spine "
"has a different position in the wave making it look like a wave is moving "
"along the fish."
msgstr ""
"Esto se ve muy similar al movimiento de lado a lado que definimos arriba, "
"pero en este, al usar ``body`` para desplazar ``cos`` cada vertex a lo largo "
"de la espina tienes una posición diferente en la onda haciendo que parezca "
"que una onda se está moviendo a lo largo del pez."

msgid ""
"The last motion is the twist, which is a panning roll along the spine. "
"Similarly to the pivot, we first construct a rotation matrix."
msgstr ""
"El último movimiento es el giro, que es un rollo de desplazamiento a lo "
"largo de la columna vertebral. De manera similar al pivote, primero "
"construimos una matriz de rotación."

msgid ""
"We apply the rotation in the ``xy`` axes so that the fish appears to roll "
"around its spine. For this to work, the fish's spine needs to be centered on "
"the ``z`` axis."
msgstr ""
"Aplicamos la rotación en los ejes ``xy`` para que el pez parezca girar "
"alrededor de su espina. Para que esto funcione, la columna vertebral del pez "
"necesita estar centrada en el eje ``z``."

msgid "Here is the fish with twist applied:"
msgstr "Aquí está el objeto con el giro aplicado:"

msgid ""
"If we apply all these motions one after another, we get a fluid jelly-like "
"motion."
msgstr ""
"Si aplicamos todos estos movimientos uno tras otro, obtenemos un movimiento "
"fluido y como gelatina."

msgid ""
"Normal fish swim mostly with the back half of their body. Accordingly, we "
"need to limit the panning motions to the back half of the fish. To do this, "
"we create a new variable, ``mask``."
msgstr ""
"Los peces normales nadan principalmente con la mitad trasera de su cuerpo. "
"Por consiguiente, necesitamos limitar los movimientos de desplazamiento a la "
"mitad trasera del pez. Para hacer esto, creamos una nueva variable, ``mask``."

msgid ""
"``mask`` is a float that goes from ``0`` at the front of the fish to ``1`` "
"at the end using ``smoothstep`` to control the point at which the transition "
"from ``0`` to ``1`` happens."
msgstr ""
"``mask`` es un valor decimal que va desde ``0`` en la parte delantera del "
"pez hasta ``1`` en la parte trasera, utilizando la función ``smoothstep`` "
"para controlar el punto en el cual ocurre la transición de ``0`` a ``1``."

msgid "Below is an image of the fish with ``mask`` used as ``COLOR``:"
msgstr "Abajo hay una imagen del pez con ``mask`` usada como ``COLOR``:"

msgid ""
"For the wave, we multiply the motion by ``mask`` which will limit it to the "
"back half."
msgstr ""
"Para la ola, multiplicamos el movimiento por la ``mask`` que la limitará a "
"la mitad trasera."

msgid ""
"In order to apply the mask to the twist, we use ``mix``. ``mix`` allows us "
"to mix the vertex position between a fully rotated vertex and one that is "
"not rotated. We need to use ``mix`` instead of multiplying ``mask`` by the "
"rotated ``VERTEX`` because we are not adding the motion to the ``VERTEX`` we "
"are replacing the ``VERTEX`` with the rotated version. If we multiplied that "
"by ``mask``, we would shrink the fish."
msgstr ""
"Para aplicar la máscara al giro, usamos ``mix``. ``mix`` nos permite mezclar "
"la vertex position entre un vértice completamente girado y uno que no está "
"girado. Necesitamos usar ``mix`` en lugar de multiplicar la ``mask`` por el "
"``VERTEX`` girado porque no estamos añadiendo el movimiento al ``VERTEX``, "
"estamos reemplazando el ``VERTEX`` con la versión girada. Si lo "
"multiplicamos por la ``mask``, reduciremos el tamaño de los peces."

msgid "Putting the four motions together gives us the final animation."
msgstr "La unión de los cuatro movimientos nos da la animación final."

msgid ""
"Go ahead and play with the uniforms in order to alter the swim cycle of the "
"fish. You will find that you can create a wide variety of swim styles using "
"these four motions."
msgstr ""
"Adelante, juega con los uniforms para alterar el ciclo de natación de los "
"peces. Verás que puedes crear una gran variedad de estilos de natación "
"usando estos cuatro movimientos."

msgid "Making a school of fish"
msgstr "Hacer un banco de peces"

msgid ""
"Godot makes it easy to render thousands of the same object using a "
"MultiMeshInstance node."
msgstr ""
"Godot facilita la renderización de miles de un mismo objeto utilizando un "
"nodo MultiMeshInstance."

msgid ""
"A MultiMeshInstance node is created and used the same way you would make a "
"MeshInstance node. For this tutorial, we will name the MultiMeshInstance "
"node ``School``, because it will contain a school of fish."
msgstr ""
"Se crea un nodo MultiMeshInstance y se utiliza de la misma manera que se "
"haría un nodo MeshInstance. Para este tutorial, nombraremos al nodo "
"MultiMeshInstance ``School``, porque contendrá un banco de peces."

msgid ""
"Once you have a MultiMeshInstance add a :ref:`MultiMesh <class_MultiMesh>`, "
"and to that MultiMesh add your :ref:`Mesh <class_Mesh>` with the shader from "
"above."
msgstr ""
"Una vez que tengas una MultiMeshInstance agrega un :ref:`MultiMesh "
"<class_MultiMesh>`, y a esa MultiMesh agrega tu :ref:`Mesh <class_Mesh>` con "
"el shader superior."

msgid ""
"MultiMeshes draw your Mesh with three additional per-instance properties: "
"Transform (rotation, translation, scale), Color, and Custom. Custom is used "
"to pass in 4 multi-use variables using a :ref:`Color <class_Color>`."
msgstr ""
"MultiMeshes dibuja tu malla con tres propiedades adicionales por sustancia: "
"Transformación (rotación, traslación, escala), Color y Custom. Custom se usa "
"para pasar 4 variables multiusos usando un :ref:`Color <clase_Color>`."

msgid ""
"``instance_count`` specifies how many instances of the mesh you want to "
"draw. For now, leave ``instance_count`` at ``0`` because you cannot change "
"any of the other parameters while ``instance_count`` is larger than ``0``. "
"We will set ``instance count`` in GDScript later."
msgstr ""
"\"``instance_count`` especifica cuántas instancias de la malla quieres "
"dibujar. Por ahora, deja ``instance_count`` en ``0`` porque no puedes "
"cambiar ninguno de los otros parámetros mientras ``instance_count`` sea "
"mayor que ``0``. Más tarde pondremos ``instance_count`` en GDScript."

msgid ""
"``transform_format`` specifies whether the transforms used are 3D or 2D. For "
"this tutorial, select 3D."
msgstr ""
"``transform_format`` especifica si las transformaciones utilizadas son 3D o "
"2D. Para este tutorial, selecciona 3D."

msgid ""
"For both ``color_format`` and ``custom_data_format`` you can choose between "
"``None``, ``Byte``, and ``Float``. ``None`` means you won't be passing in "
"that data (either a per-instance ``COLOR`` variable, or ``INSTANCE_CUSTOM``) "
"to the shader. ``Byte`` means each number making up the color you pass in "
"will be stored with 8 bits while ``Float`` means each number will be stored "
"in a floating-point number (32 bits). ``Float`` is slower but more precise, "
"``Byte`` will take less memory and be faster, but you may see some visual "
"artifacts."
msgstr ""
"Tanto para el ``color_format`` como para el ``custom_data_format`` puedes "
"elegir entre ``None``, ``Byte`` y ``Float``. ``None`` significa que no "
"pasarás esos datos (ya sea una variable de ``COLOR`` o ``INSTANCE_CUSTOM``) "
"al shader. ``Byte`` significa que cada número que compone el color que pasas "
"se almacenará con 8 bits mientras que ``Float`` significa que cada número se "
"almacenará en un número de real (32 bits). ``Float`` es más lento pero más "
"preciso, ``Byte`` tomará menos memoria y será más rápido, pero puedes ver "
"algunos artefactos visuales."

msgid "Now, set ``instance_count`` to the number of fish you want to have."
msgstr "Ahora, pon ``instance_count`` al número de peces que quieres tener."

msgid "Next we need to set the per-instance transforms."
msgstr ""
"Lo siguiente que necesitamos es establecer las transformaciones por "
"instancia."

msgid ""
"There are two ways to set per-instance transforms for MultiMeshes. The first "
"is entirely in editor and is described in the :ref:`MultiMeshInstance "
"tutorial <doc_using_multi_mesh_instance>`."
msgstr ""
"Hay dos formas de establecer transformaciones por instancia para "
"MultiMeshes. La primera está completamente en el editor y es descrita en el :"
"ref:`MultiMeshInstance tutorial <doc_using_multi_mesh_instance>`."

msgid ""
"The second is to loop over all the instances and set their transforms in "
"code. Below, we use GDScript to loop over all the instances and set their "
"transform to a random position."
msgstr ""
"La segunda es hacer un bucle sobre todas las instancias y establecer sus "
"transformaciones en código. A continuación, usamos GDScript para hacer un "
"bucle sobre todas las instancias y establecer su transformación en una "
"posición aleatoria."

msgid ""
"Running this script will place the fish in random positions in a box around "
"the position of the MultiMeshInstance."
msgstr ""
"Ejecutar este guión colocará a los peces en posiciones aleatorias en una "
"caja alrededor de la posición de la MultiMeshInstance."

msgid ""
"If performance is an issue for you, try running the scene with GLES2 or with "
"fewer fish."
msgstr ""
"Si la actuación es un problema para ti, intenta hacer la escena con GLES2 o "
"con menos peces."

msgid ""
"Notice how all the fish are all in the same position in their swim cycle? It "
"makes them look very robotic. The next step is to give each fish a different "
"position in the swim cycle so the entire school looks more organic."
msgstr ""
"¿Nota que todos los peces están en la misma posición en su ciclo de "
"natación? Los hace parecer muy robóticos. El siguiente paso es darle a cada "
"pez una posición diferente en el ciclo de natación para que todo el banco "
"parezca más orgánico."

msgid "Animating a school of fish"
msgstr "Animar un banco de peces"

msgid ""
"One of the benefits of animating the fish using ``cos`` functions is that "
"they are animated with one parameter, ``time``. In order to give each fish a "
"unique position in the swim cycle, we only need to offset ``time``."
msgstr ""
"Uno de los beneficios de animar a los peces usando funciones de ``cos`` es "
"que se animan con un parámetro, ``time``. Para darle a cada pez una posición "
"única en el ciclo de natación, sólo necesitamos compensar el ``time``."

msgid ""
"We do that by adding the per-instance custom value ``INSTANCE_CUSTOM`` to "
"``time``."
msgstr ""
"Lo hacemos añadiendo el valor personalizado ``INSTANCE_CUSTOM`` a ``time``."

msgid ""
"Next, we need to pass a value into ``INSTANCE_CUSTOM``. We do that by adding "
"one line into the ``for`` loop from above. In the ``for`` loop we assign "
"each instance a set of four random floats to use."
msgstr ""
"A continuación, tenemos que pasar un valor a ``INSTANCE_CUSTOM``. Lo hacemos "
"añadiendo una línea en el bucle ``for`` superior. En el bucle ``for`` "
"asignamos a cada instancia un conjunto de cuatro reales aleatorios para usar."

msgid ""
"Now the fish all have unique positions in the swim cycle. You can give them "
"a little more individuality by using ``INSTANCE_CUSTOM`` to make them swim "
"faster or slower by multiplying by ``TIME``."
msgstr ""
"Ahora todos los peces tienen posiciones únicas en el ciclo de natación. "
"Puedes darles un poco más de individualidad usando ``INSTANCE_CUSTOM`` para "
"hacerlos nadar más rápido o más lento multiplicando por el ``TIME``."

msgid ""
"You can even experiment with changing the per-instance color the same way "
"you changed the per-instance custom value."
msgstr ""
"Incluso puedes experimentar con el cambio de color por instancia de la misma "
"manera que cambiaste el valor personalizado por instancia."

msgid ""
"One problem that you will run into at this point is that the fish are "
"animated, but they are not moving. You can move them by updating the per-"
"instance transform for each fish every frame. Although doing so will be "
"faster than moving thousands of MeshInstances per frame, it'll still likely "
"be slow."
msgstr ""
"Un problema con el que te encontrarás en este punto es que los peces están "
"animados, pero no se mueven. Puedes moverlos actualizando la transformación "
"por instancia de cada pez en cada fotograma. Aunque hacerlo será más rápido "
"que mover miles de MeshInstances por fotograma, es probable que siga siendo "
"lento."

msgid ""
"In the next tutorial we will cover how to use :ref:`Particles "
"<class_Particles>` to take advantage of the GPU and move each fish around "
"individually while still receiving the benefits of instancing."
msgstr ""
"En el próximo tutorial cubriremos cómo usar :ref:`Particles "
"<class_Particles>` para aprovechar la GPU y mover cada pez individualmente "
"mientras se reciben los beneficios del instanciamiento."

msgid "Translation status"
msgstr "Estado de traducción"
