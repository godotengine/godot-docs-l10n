# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript: An introduction to dynamic languages"
msgstr "GDScript: Introducción a los lenguajes dinámicos"

msgid "About"
msgstr "Acerca de"

msgid ""
"This tutorial aims to be a quick reference for how to use GDScript more "
"efficiently. It focuses on common cases specific to the language, but also "
"covers a lot of information on dynamically typed languages."
msgstr ""
"Este tutorial pretende ser una referencia rápida para aprender a usar "
"GDScript de forma más eficiente. Está enfocado a casos específicos del "
"lenguaje, pero también cubre bastante información sobre lenguajes "
"dinámicamente tipados."

msgid ""
"It's meant to be especially useful for programmers with little or no "
"previous experience with dynamically typed languages."
msgstr ""
"Está pensada para ser especialmente útil para programadores con poca o "
"ninguna experiencia con lenguajes de tipado dinámico."

msgid "Dynamic nature"
msgstr "Naturaleza dinámica"

msgid "Pros & cons of dynamic typing"
msgstr "Pros y contras del tipado dinámico"

msgid ""
"GDScript is a Dynamically Typed language. As such, its main advantages are "
"that:"
msgstr ""
"GDScript es un lenguaje de tipado dinámico. Como tal, sus grandes ventajas "
"son:"

msgid "The language is simple and easy to learn."
msgstr "El idioma es simple y fácil de aprender."

msgid "Most code can be written and changed quickly and without hassle."
msgstr ""
"La mayoría del código puede ser escrito y cambiado rápidamente sin "
"complicaciones."

msgid "Less code written means less errors & mistakes to fix."
msgstr ""
"Escribir menos código significa tener menos errores y fallos que corregir."

msgid "Easier to read the code (less clutter)."
msgstr "Código más sencillo de leer (menos desorganizado)."

msgid "No compilation is required to test."
msgstr "No es necesario compilar para probarlo."

msgid "Runtime is tiny."
msgstr "El código en ejecución es pequeño."

msgid "Duck-typing and polymorphism by nature."
msgstr "Duck-typing y polimorfismo por naturaleza."

msgid "While the main disadvantages are:"
msgstr "Siendo las principales desventajas:"

msgid "Less performance than statically typed languages."
msgstr "Menor rendimiento que los lenguajes de tipado estático."

msgid "More difficult to refactor (symbols can't be traced)"
msgstr "Mayor dificultad para refactorizar (no se pueden trazar los símbolos)"

msgid ""
"Some errors that would typically be detected at compile time in statically "
"typed languages only appear while running the code (because expression "
"parsing is more strict)."
msgstr ""
"Algunos errores que se detectarían en el tiempo de compilación en lenguajes "
"de tipado estático, solo aparecen cuando se ejecuta el código (porque el "
"análisis gramatical es más estricto)."

msgid ""
"Less flexibility for code-completion (some variable types are only known at "
"run-time)."
msgstr ""
"Menos flexibilidad para el auto completado de código (los tipos de algunas "
"variables solo se conocen en tiempo de ejecución)."

msgid ""
"This, translated to reality, means that Godot+GDScript are a combination "
"designed to create games quickly and efficiently. For games that are very "
"computationally intensive and can't benefit from the engine built-in tools "
"(such as the Vector types, Physics Engine, Math library, etc), the "
"possibility of using C++ is present too. This allows you to still create "
"most of the game in GDScript and add small bits of C++ in the areas that "
"need a performance boost."
msgstr ""
"Esto, si lo traducimos a la realidad, significa que Godot+GDScript son una "
"combinación diseñada para crear juegos de forma rápida y eficiente. Para "
"juegos que son muy exigentes desde el punto de vista computacional y que no "
"pueden beneficiarse de las herramientas incorporadas en el motor (como los "
"tipos de Vector, el Motor de Física, la biblioteca de Matemáticas, etc.), "
"existe la posibilidad de usar C++. Esto permite crear todo el juego en "
"GDScript y añadir pequeños trozos de C++ en las áreas que necesitan un "
"aumento de rendimiento."

msgid "Variables & assignment"
msgstr "Variables y asignaciones"

msgid ""
"All variables in a dynamically typed language are \"variant\"-like. This "
"means that their type is not fixed, and is only modified through assignment. "
"Example:"
msgstr ""
"Todas las variables en lenguajes de tipado dinámico son del tipo "
"\"variant\". Esto significa que su tipo no es fijo, y solo se puede "
"modificar mediante la asignación. Ejemplo:"

msgid "Static:"
msgstr "Estático:"

msgid "Dynamic:"
msgstr "Dinámico:"

msgid "As function arguments:"
msgstr "Como argumentos de funciones:"

msgid ""
"Functions are of dynamic nature too, which means they can be called with "
"different arguments, for example:"
msgstr ""
"Las funciones también tienen una naturaleza dinámica, lo que significa que "
"pueden ser invocadas con diferentes argumentos, por ejemplo:"

msgid "Pointers & referencing:"
msgstr "Punteros y referencia:"

msgid ""
"In static languages, such as C or C++ (and to some extent Java and C#), "
"there is a distinction between a variable and a pointer/reference to a "
"variable. The latter allows the object to be modified by other functions by "
"passing a reference to the original one."
msgstr ""
"En lenguajes estáticos como C o C++ (y hasta cierto punto Java y C#), hay "
"una distinción entre una variable y un puntero/referencia a una variable. "
"Este último permite al objeto ser modificado por otras funciones pasando una "
"referencia del original."

msgid ""
"In C# or Java, everything not a built-in type (int, float, sometimes String) "
"is always a pointer or a reference. References are also garbage-collected "
"automatically, which means they are erased when no longer used. Dynamically "
"typed languages tend to use this memory model, too. Some Examples:"
msgstr ""
"En C# o Java, todo lo que no es un tipo integrado (*int*, *float*, y algunas "
"veces *string*) es siempre un puntero o una referencia. Las referencias son "
"recogidas por el recolector de basura automáticamente, lo que significa que "
"se borran cuando no se están usando. Los lenguajes dinámicos tienden a usar "
"este modelo de memoria también. Algunos ejemplos:"

msgid "C++:"
msgstr "C++:"

msgid "Java:"
msgstr "Java:"

msgid "GDScript:"
msgstr "GDScript:"

msgid ""
"In GDScript, only base types (int, float, String and PoolArray types) are "
"passed by value to functions (value is copied). Everything else (instances, "
"Arrays, Dictionaries, etc) is passed as reference. Classes that inherit :ref:"
"`class_Reference` (the default if nothing is specified) will be freed when "
"not used, but manual memory management is allowed too if inheriting manually "
"from :ref:`class_Object`."
msgstr ""
"En GDScript, solo los tipos básicos (int, float, string y los tipos vector) "
"se pasan por valor a las funciones (el valor es copiado). Todo lo demás "
"(instancias, arrays, diccionarios, etc) se pasa como referencia. Las clases "
"que heredan :ref:`class_Reference` (Herencia por defecto si no se especifica "
"otra) serán liberadas cuando no estén en uso, pero se permite el manejo "
"manual de la memoria también si se hereda específicamente de :ref:"
"`class_Object`."

msgid ""
"A value is **passed by value** when it is copied every time it's specified "
"as a function parameter. One consequence of this is that the function cannot "
"modify the parameter in a way that is visible from outside the function::"
msgstr ""
"Un valor es **pasado por valor** cuando se copia cada vez que se especifica "
"como parámetro de una función. Una consecuencia de esto es que la función no "
"puede modificar el parámetro de una manera que sea visible desde fuera de la "
"función::"

msgid ""
"A value is **passed by reference** when it is *not* copied every time it's "
"specified as a function parameter. This allows modifying a function "
"parameter within a function body (and having the modified value accessible "
"outside the function). The downside is that the data passed as a function "
"parameter is no longer guaranteed to be immutable, which can cause difficult-"
"to-track bugs if not done carefully::"
msgstr ""
"Un valor se **pasa por referencia** cuando *no* se copia cada vez que se "
"especifica como parámetro de una función. Esto permite modificar un "
"parámetro de función dentro del cuerpo de la función (y tener el valor "
"modificado accesible fuera de la función). El inconveniente es que los datos "
"pasados como parámetros de función ya no están garantizados como inmutables, "
"lo que puede causar errores difíciles de rastrear si no se hace con cuidado::"

msgid ""
"Compared to passing by value, passing by reference can perform better when "
"using large objects since copying large objects in memory can be slow."
msgstr ""
"En comparación con el paso por valor, el paso por referencia puede tener un "
"mejor rendimiento al usar objetos grandes, ya que copiar objetos grandes en "
"memoria puede ser lento."

msgid ""
"Additionally, in Godot, base types such as String are **immutable**. This "
"means that modifying them will *always* return a copy of the original value, "
"rather than modifying the value in-place."
msgstr ""
"Además, en Godot, los tipos de datos base como String son **inmutables**. "
"Esto significa que al modificarlos, *siempre* se devolverá una copia del "
"valor original en lugar de modificar el valor en su lugar."

msgid "Arrays"
msgstr "Arrays"

msgid ""
"Arrays in dynamically typed languages can contain many different mixed "
"datatypes inside and are always dynamic (can be resized at any time). "
"Compare for example arrays in statically typed languages:"
msgstr ""
"Los arrays en lenguajes de tipado dinámico pueden contener mezclados muchos "
"tipos diferentes de datos y son siempre dinámicos (pueden cambiar su tamaño "
"en cualquier momento). Compara, por ejemplo, los arrays en lenguajes de "
"tipado estático:"

msgid "And in GDScript:"
msgstr "Y en GDScript:"

msgid ""
"In dynamically typed languages, arrays can also double as other datatypes, "
"such as lists:"
msgstr ""
"En lenguajes de tipado dinámico, los arrays pueden replicar otros tipos de "
"datos, como listas:"

msgid "Or unordered sets:"
msgstr "O conjuntos desordenados:"

msgid "Dictionaries"
msgstr "Diccionarios"

msgid ""
"Dictionaries are a powerful tool in dynamically typed languages. Most "
"programmers that come from statically typed languages (such as C++ or C#) "
"ignore their existence and make their life unnecessarily more difficult. "
"This datatype is generally not present in such languages (or only in limited "
"form)."
msgstr ""
"Los diccionarios son una herramienta poderosa en lenguajes de tipado "
"dinámico. La mayoría de los programadores que provienen de lenguajes de "
"programación estáticos (como C++ o C#) ignoran su existencia y hacen su vida "
"más difícil innecesariamente. Este tipo de datos generalmente no está "
"presente en tales lenguajes (o sólo en forma limitada)."

msgid ""
"Dictionaries can map any value to any other value with complete disregard "
"for the datatype used as either key or value. Contrary to popular belief, "
"they are efficient because they can be implemented with hash tables. They "
"are, in fact, so efficient that some languages will go as far as "
"implementing arrays as dictionaries."
msgstr ""
"Los diccionarios pueden asignar cualquier valor a cualquier otro valor sin "
"tener en cuenta el tipo de datos utilizado como clave o valor. En contra de "
"la creencia popular, son eficientes porque se pueden implementar con tablas "
"de hash. De hecho, son tan eficientes que algunos idiomas llegan a "
"implementar arrays como diccionarios."

msgid "Example of Dictionary:"
msgstr "Ejemplo de Diccionario:"

msgid ""
"Dictionaries are also dynamic, keys can be added or removed at any point at "
"little cost:"
msgstr ""
"Los diccionarios también son dinámicos, las claves pueden ser agregadas y "
"eliminadas en cualquier punto a muy bajo costo:"

msgid ""
"In most cases, two-dimensional arrays can often be implemented more easily "
"with dictionaries. Here's a simple battleship game example:"
msgstr ""
"En la mayoría de los caso, los arrays bidimensionales pueden frecuentemente "
"ser implementados más fácilmente como diccionarios. Aquí hay un juego simple "
"de batalla naval de ejemplo:"

msgid ""
"Dictionaries can also be used as data markup or quick structures. While "
"GDScript's dictionaries resemble python dictionaries, it also supports Lua "
"style syntax and indexing, which makes it useful for writing initial states "
"and quick structs:"
msgstr ""
"Los diccionarios también se pueden utilizar como marcadores de datos o "
"estructuras rápidas. Mientras que los diccionarios GDScript se asemejan a "
"los diccionarios python, también soportan sintaxis e indexación estilo Lua, "
"lo que lo hace útil para escribir estados iniciales y estructuras rápidas:"

msgid "For & while"
msgstr "For y While"

msgid "Iterating in some statically typed languages can be quite complex:"
msgstr ""
"La iteración en lenguajes estáticamente tipados puede ser bastante compleja:"

msgid "This is usually greatly simplified in dynamically typed languages:"
msgstr ""
"Esto es usualmente muy simplificado en lenguajes dinámicamente tipificados:"

msgid ""
"Container datatypes (arrays and dictionaries) are iterable. Dictionaries "
"allow iterating the keys:"
msgstr ""
"Los tipos de datos de los containers (matrices y diccionarios) son "
"iterables. Los diccionarios permiten iterar entre las claves:"

msgid "Iterating with indices is also possible:"
msgstr "Iterar con índices también es posible:"

msgid "The range() function can take 3 arguments:"
msgstr "La función range() puede tomar 3 argumentos:"

msgid "Some statically typed programming language examples:"
msgstr "Algunos ejemplos de lenguajes estáticamente tipados:"

msgid "Translate to:"
msgstr "Traducir a:"

msgid "And backwards looping is done through a negative counter:"
msgstr "Y el loop invertido se realiza a través de un contador negativo:"

msgid "Becomes:"
msgstr "Se vuelve:"

msgid "While"
msgstr "While"

msgid "while() loops are the same everywhere:"
msgstr "Los bucles while() son los mismos en todas partes:"

msgid "Custom iterators"
msgstr "Itineradores personalizados"

msgid ""
"You can create custom iterators in case the default ones don't quite meet "
"your needs by overriding the Variant class's ``_iter_init``, ``_iter_next``, "
"and ``_iter_get`` functions in your script. An example implementation of a "
"forward iterator follows:"
msgstr ""
"Puedes crear iteradores personalizados en caso de que los predeterminados no "
"cumplan con tus necesidades anulando las funciones ``_iter_init``, "
"``_iter_next``, e ``_iter_get`` de la clase Variant en su script. A "
"continuación se muestra un ejemplo de implementación de un iterador avanzado:"

msgid "And it can be used like any other iterator:"
msgstr "Y se puede utilizar como cualquier otro iterador:"

msgid ""
"Make sure to reset the state of the iterator in ``_iter_init``, otherwise "
"nested for-loops that use custom iterators will not work as expected."
msgstr ""
"Asegúrate de restablecer el estado del iterador en ``_iter_init``, de lo "
"contrario, los bucles for que utilizan iteradores personalizados no "
"funcionarán como se espera."

msgid "Duck typing"
msgstr "Tipado dinámico (duck typing)"

msgid ""
"One of the most difficult concepts to grasp when moving from a statically "
"typed language to a dynamic one is duck typing. Duck typing makes overall "
"code design much simpler and straightforward to write, but it's not obvious "
"how it works."
msgstr ""
"Uno de los conceptos más difíciles de entender a la hora de pasar de un "
"lenguaje de tipado estático a otro dinámico es el duck typing. Duck typing "
"hace que el diseño general del código sea mucho más simple y sencillo de "
"escribir, pero no es obvio cómo funciona."

msgid ""
"As an example, imagine a situation where a big rock is falling down a "
"tunnel, smashing everything on its way. The code for the rock, in a "
"statically typed language would be something like:"
msgstr ""
"Por ejemplo, imagina una situación en la que una gran roca cae por un túnel, "
"aplastando todo en su camino. El código para la roca, en un lenguaje de "
"tipado estático sería algo así como:"

msgid ""
"This way, everything that can be smashed by a rock would have to inherit "
"Smashable. If a character, enemy, piece of furniture, small rock were all "
"smashable, they would need to inherit from the class Smashable, possibly "
"requiring multiple inheritance. If multiple inheritance was undesired, then "
"they would have to inherit a common class like Entity. Yet, it would not be "
"very elegant to add a virtual method ``smash()`` to Entity only if a few of "
"them can be smashed."
msgstr ""
"De esta manera, todo lo que pueda ser aplastado por una roca tendrá que "
"heredar Smashable. Si un personaje, un enemigo, un mueble o una pequeña roca "
"se pudieran destruir, tendrían que heredar de la clase Smashable, lo que "
"posiblemente requeriría una herencia múltiple. Si la herencia múltiple no "
"era deseada, entonces tendrían que heredar una clase común como Entity. Sin "
"embargo, no sería muy elegante añadir un método virtual ``smash()`` a Entity "
"sólo si unos pocos de ellos pueden ser aplastados."

msgid ""
"With dynamically typed languages, this is not a problem. Duck typing makes "
"sure you only have to define a ``smash()`` function where required and "
"that's it. No need to consider inheritance, base classes, etc."
msgstr ""
"Con lenguajes de tipado dinámico, esto no es un problema. Duck typing "
"asegura de que sólo tengas que definir una función ``smash()`` donde sea "
"necesario y nada más. No hay necesidad de considerar la herencia, clases "
"base, etc."

msgid ""
"And that's it. If the object that hit the big rock has a smash() method, it "
"will be called. No need for inheritance or polymorphism. Dynamically typed "
"languages only care about the instance having the desired method or member, "
"not what it inherits or the class type. The definition of Duck Typing should "
"make this clearer:"
msgstr ""
"Y eso es todo. Si el objeto que golpea a la roca grande tiene un método "
"smash(), entonces será llamado. No se necesita herencia ni polimorfismo. Los "
"lenguajes de tipado dinámico solo se preocupan de que la instancia tenga los "
"métodos o miembros deseados, no que hereda ni el tipo de clase. La "
"definición de Duck Typing debería hacer esto más claro:"

msgid ""
"*\"When I see a bird that walks like a duck and swims like a duck and quacks "
"like a duck, I call that bird a duck\"*"
msgstr ""
"*\"Cuando veo un ave que camina como un pato, nada como un pato y grazna "
"como un pato, entonces llamo al ave pato\"*"

msgid "In this case, it translates to:"
msgstr "En este caso, se traduce como:"

msgid ""
"*\"If the object can be smashed, don't care what it is, just smash it.\"*"
msgstr ""
"*\"Si el objeto puede ser golpeado, no me importa lo que es, solo golpéalo."
"\"*"

msgid "Yes, we should call it Hulk typing instead."
msgstr "Sí, en su lugar deberíamos llamarlo Hulk Typing."

msgid ""
"It's possible that the object being hit doesn't have a smash() function. "
"Some dynamically typed languages simply ignore a method call when it doesn't "
"exist, but GDScript is stricter, so checking if the function exists is "
"desirable:"
msgstr ""
"Es posible que el objeto que recibe el impacto no tenga una función smash(). "
"Algunos lenguajes de tipado dinámico simplemente ignoran una llamada a un "
"método cuando no existe, pero GDScript es más estricto, por lo que es "
"deseable comprobar si la función existe:"

msgid ""
"Then, simply define that method and anything the rock touches can be smashed."
msgstr ""
"Entonces, simplemente define el método y todo lo que la roca toca puede ser "
"aplastado."

msgid "Translation status"
msgstr "Estado de traducción"
