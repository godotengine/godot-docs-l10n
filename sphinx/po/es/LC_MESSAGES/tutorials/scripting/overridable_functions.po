# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Overridable functions"
msgstr "Funciones de auxiliares"

msgid ""
"Godot's Node class provides virtual functions you can override to update "
"nodes every frame or on specific events, like when they enter the scene tree."
msgstr ""
"La clase Node de Godot proporciona funciones virtuales que puedes "
"sobrescribir para actualizar nodos en cada fotograma o en eventos "
"específicos, como cuando entran en el árbol de escena."

msgid "This document presents the ones you'll use most often."
msgstr ""
"Este documento presenta las funciones que utilizarás con mayor frecuencia."

msgid ""
"Under the hood, these functions rely on Godot's low-level notifications "
"system. To learn more about it, see :ref:`doc_godot_notifications`."
msgstr ""
"En el fondo, estas funciones se basan en el sistema de notificaciones de "
"bajo nivel de Godot. Para obtener más información al respecto, consulta :ref:"
"`doc_godot_notifications`."

msgid ""
"Two functions allow you to initialize and get nodes, besides the class's "
"constructor: ``_enter_tree()`` and ``_ready()``."
msgstr ""
"Dos funciones te permiten inicializar y obtener nodos, además del "
"constructor de la clase: ``_enter_tree()`` y ``_ready()``."

msgid ""
"When the node enters the Scene Tree, it becomes active and the engine calls "
"its ``_enter_tree()`` method. That node's children may not be part of the "
"active scene yet. As you can remove and re-add nodes to the scene tree, this "
"function may be called multiple times throughout a node's lifetime."
msgstr ""
"Cuando el nodo entra en el árbol de escena, se vuelve activo y el motor "
"llama a su método ``_enter_tree()``. Los hijos de ese nodo pueden no ser "
"parte de la escena activa aún. Dado que puedes quitar y volver a agregar "
"nodos al árbol de escena, esta función puede ser llamada varias veces a lo "
"largo de la vida de un nodo."

msgid ""
"Most of the time, you'll use ``_ready()`` instead. This function is called "
"only once in a node's lifetime, after ``_enter_tree()``. ``_ready()`` "
"ensures that all children have entered the scene tree first, so you can "
"safely call ``get_node()`` on it."
msgstr ""
"La mayoría de las veces, utilizarás ``_ready()`` en su lugar. Esta función "
"solo se llama una vez en la vida de un nodo, después de ``_enter_tree()``. "
"``_ready()`` asegura que todos los hijos hayan entrado primero en el árbol "
"de escena, por lo que puedes llamar de manera segura a ``get_node()`` en "
"ellos."

msgid ""
"To learn more about getting node references, read :ref:"
"`doc_nodes_and_scene_instances`."
msgstr ""
"Para obtener más información sobre cómo obtener referencias de nodos, lee :"
"ref:`doc_nodes_and_scene_instances`."

msgid ""
"Another related callback is ``_exit_tree()``, which the engine calls every "
"time a node exits the scene tree. This can be when you call :ref:`Node."
"remove_child() <class_Node_method_remove_child>` or when you free a node."
msgstr ""
"Otro callback relacionado es ``_exit_tree()``, que el motor llama cada vez "
"que un nodo sale del árbol de escena. Esto puede suceder cuando llamas a :"
"ref:`Node.remove_child() <class_Node_method_remove_child>` o cuando liberas "
"un nodo."

msgid ""
"The two virtual methods ``_process()`` and ``_physics_process()`` allow you "
"to update the node, every frame and every physics frame respectively. For "
"more information, read the dedicated documentation: :ref:"
"`doc_idle_and_physics_processing`."
msgstr ""
"Los dos métodos virtuales ``_process()`` y ``_physics_process()`` te "
"permiten actualizar el nodo, cada cuadro y cada cuadro de físicas, "
"respectivamente. Para obtener más información, lee la documentación "
"dedicada: :ref:`doc_idle_and_physics_processing`."

msgid ""
"Two more essential built-in node callback functions are :ref:`Node."
"_unhandled_input() <class_Node_method__unhandled_input>` and :ref:`Node."
"_input() <class_Node_method__input>`, which you use to both receive and "
"process individual input events. The ``_unhandled_input()`` method receives "
"every key press, mouse click, etc. that have not been handled already in an "
"``_input()`` callback or in a user interface component. You want to use it "
"for gameplay input in general. The ``_input()`` callback allows you to "
"intercept and process input events before ``_unhandled_input()`` gets them."
msgstr ""
"Dos funciones de devolución de llamada integradas más esenciales son :ref:"
"`Node._unhandled_input() <class_Node_method__unhandled_input>` y :ref:`Node."
"_input() <class_Node_method__input>`, que se utilizan para recibir y "
"procesar eventos de entrada individuales. El método ``_unhandled_input()`` "
"recibe cada pulsación de tecla, clic de mouse, etc., que aún no ha sido "
"manejada en un callback de ``_input()`` o en un componente de interfaz de "
"usuario. Es útil para el manejo de la entrada de jugabilidad en general. El "
"callback ``_input()`` te permite interceptar y procesar eventos de entrada "
"antes de que ``_unhandled_input()`` los reciba."

msgid ""
"To learn more about inputs in Godot, see the :ref:`Input section <toc-learn-"
"features-inputs>`."
msgstr ""
"Para obtener más información sobre las entradas (inputs) en Godot, consulta "
"la sección :ref:`Entrada <toc-learn-features-inputs>` en la documentación."

msgid ""
"There are some more overridable functions like :ref:`Node."
"_get_configuration_warning() "
"<class_Node_method__get_configuration_warning>`. Specialized node types "
"provide more callbacks like :ref:`CanvasItem._draw() "
"<class_CanvasItem_method__draw>` to draw programmatically or :ref:`Control."
"_gui_input() <class_Control_method__gui_input>` to handle clicks and input "
"on UI elements."
msgstr ""
"Hay algunas funciones más que se pueden sobrescribir, como :ref:`Node."
"_get_configuration_warning() "
"<class_Node_method__get_configuration_warning>`. Los tipos de nodos "
"especializados proporcionan más callbacks como :ref:`CanvasItem._draw() "
"<class_CanvasItem_method__draw>` para dibujar de manera programática o :ref:"
"`Control._gui_input() <class_Control_method__gui_input>` para manejar clics "
"y entradas en elementos de la interfaz de usuario."

msgid "Translation status"
msgstr "Estado de traducción"
