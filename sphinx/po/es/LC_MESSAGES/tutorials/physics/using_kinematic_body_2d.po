# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using KinematicBody2D"
msgstr "Usando KinematicBody2D"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"Godot offers several collision objects to provide both collision detection "
"and response. Trying to decide which one to use for your project can be "
"confusing. You can avoid problems and simplify development if you understand "
"how each of them works and what their pros and cons are. In this tutorial, "
"we'll look at the :ref:`KinematicBody2D <class_KinematicBody2D>` node and "
"show some examples of how to use it."
msgstr ""
"Godot ofrece una variedad de objetos de colisión para proveer detección y "
"respuesta a colisiones. Tratar de decidir cuál usar para tu proyecto puede "
"ser confuso. Puedes evitar problemas y simplificar el desarrollo si "
"comprendes cómo funciona cada uno de ellos y cuáles son sus pros y contras. "
"En este tutorial, veremos el nodo :ref:`KinematicBody2D "
"<class_KinematicBody2D>` y mostraremos algunos ejemplos de cómo usarlos."

msgid ""
"This document assumes you're familiar with Godot's various physics bodies. "
"Please read :ref:`doc_physics_introduction` first."
msgstr ""
"Este documento asume que los varios cuerpos físicos de Godot te son "
"familiares. Por favor lee primero :ref:`doc_physics_introduction`."

msgid "What is a kinematic body?"
msgstr "¿Qué es un cuerpo cinemático?"

msgid ""
"``KinematicBody2D`` is for implementing bodies that are controlled via code. "
"Kinematic bodies detect collisions with other bodies when moving, but are "
"not affected by engine physics properties, like gravity or friction. While "
"this means that you have to write some code to create their behavior, it "
"also means you have more precise control over how they move and react."
msgstr ""
"``KinematicBody2D`` está para implementar cuerpos que serán controlados por "
"código. Pueden detectar colisiones con otros cuerpos cuando se mueven, pero "
"no son afectados por propiedades del motor de físicas como la gravedad o "
"fricción. Esto quiere decir que deberás escribir algo de código para crear "
"su comportamiento, pero también significa que podrás tener un control más "
"preciso sobre cómo se mueven y reaccionan."

msgid ""
"A `KinematicBody2D` can be affected by gravity and other forces, but you "
"must calculate the movement in code. The physics engine will not move a "
"`KinematicBody2D`."
msgstr ""
"Un `KinematicBody2D` puede ser afectado por la gravedad y otras fuerzas, "
"pero deberás calcular su movimiento por código. El motor de física no moverá "
"un `KinematicBody2D`."

msgid "Movement and collision"
msgstr "Movimiento y Colisión"

msgid ""
"When moving a ``KinematicBody2D``, you should not set its ``position`` "
"property directly. Instead, you use the ``move_and_collide()`` or "
"``move_and_slide()`` methods. These methods move the body along a given "
"vector and instantly stop if a collision is detected with another body. "
"After a KinematicBody2D has collided, any *collision response* must be coded "
"manually."
msgstr ""
"Cuando mueves un ``KinematicBody2D`` no debes cambiar su propiedad "
"``position`` directamente. En lugar de eso , debes usar los métodos "
"``move_And_collide()`` o ``move_and_slide()``. Estos métodos mueven el "
"cuerpo a lo largo de un vector dado y se detendrán inmediatamente si se "
"detecta una colisión con otro cuerpo. Luego de que un KinematicBody2D ha "
"colisionado, cualquier *respuesta a colisión* deberá ser manejada "
"manualmente."

msgid ""
"You should only do Kinematic body movement in the ``_physics_process()`` "
"callback."
msgstr ""
"Sólo debes hacer el movimiento del Kinematic Body en la llamada de "
"``_physics_process()``."

msgid ""
"The two movement methods serve different purposes, and later in this "
"tutorial, you'll see examples of how they work."
msgstr ""
"Ambos métodos de movimiento tienen diferentes propósitos, y más adelante se "
"mostrarán ejemplos de cómo funcionan."

msgid "``move_and_collide``"
msgstr "``move_and_collide``"

msgid ""
"This method takes one parameter: a :ref:`Vector2 <class_Vector2>` indicating "
"the body's relative movement. Typically, this is your velocity vector "
"multiplied by the frame timestep (``delta``). If the engine detects a "
"collision anywhere along this vector, the body will immediately stop moving. "
"If this happens, the method will return a :ref:`KinematicCollision2D "
"<class_KinematicCollision2D>` object."
msgstr ""
"Este método toma un sólo parámetro: un :ref:`Vector2 <class_Vector2>` que "
"indica el movimiento relativo del cuerpo. Típicamente, este es tu vector "
"velocidad multiplicado por el timestep del frame actual (``delta``). Si el "
"motor detecta una colisión en cualquier parte del trayecto indicado por el "
"vector, el cuerpo se detendrá inmediatamente. Si esto sucede, el método "
"retorna un objeto :ref:`KinematicCollision2D <class_KinematicCollision2D>`."

msgid ""
"``KinematicCollision2D`` is an object containing data about the collision "
"and the colliding object. Using this data, you can calculate your collision "
"response."
msgstr ""
"``KinematicCollision2D`` es un objeto que contiene datos sobre la colisión y "
"el objeto con el cual se colisiona. Utiliza estos datos para calcular la "
"respuesta a la colisión."

msgid "``move_and_slide``"
msgstr "``move_and_slide``"

msgid ""
"The ``move_and_slide()`` method is intended to simplify the collision "
"response in the common case where you want one body to slide along the "
"other. It is especially useful in platformers or top-down games, for example."
msgstr ""
"El método ``move_and_slide()`` tiene como objetivo simplificar la respuesta "
"a colisiones en el caso común donde quieres que un cuerpo se deslice sobre "
"otro. Este es particularmente útil en juegos de plataformas o de vista "
"superior, por ejemplo."

msgid ""
"``move_and_slide()`` automatically calculates frame-based movement using "
"``delta``. Do *not* multiply your velocity vector by ``delta`` before "
"passing it to ``move_and_slide()``."
msgstr ""
"``move_and_slide()`` calcula automáticamente el movimiento por fotogramas "
"usando ``delta``. *No* multipliques tu vector de velocidad por ``delta`` "
"antes de pasarlo a ``move_and_slide()``."

msgid ""
"In addition to the velocity vector, ``move_and_slide()`` takes a number of "
"other parameters allowing you to customize the slide behavior:"
msgstr ""
"Además del vector velocidad, ``move_and_slide()`` acepta otros parámetros "
"para personalizar el comportamiento del deslizamiento:"

msgid "``up_direction`` - *default value:* ``Vector2( 0, 0 )``"
msgstr "``up_direction`` - *valor por defecto:* ``Vector2( 0, 0 )``"

msgid ""
"This parameter allows you to define what surfaces the engine should consider "
"being the floor. Setting this lets you use the ``is_on_floor()``, "
"``is_on_wall()``, and ``is_on_ceiling()`` methods to detect what type of "
"surface the body is in contact with. The default value means that all "
"surfaces are considered walls."
msgstr ""
"Este parámetro permite definir qué superficies debe considerar como suelo el "
"motor de físicas. Al establecerlo puedes utilizar los métodos "
"``is_on_floor()`` (si está en el suelo), ``is_on_wall()`` (si está en la "
"pared) , y ``is_on_ceiling()`` (si está en el techo) para detectar el tipo "
"de superficie con la que hay contacto. El valor por defecto significa que "
"todas las superficies son consideradas paredes."

msgid "``stop_on_slope`` - *default value:* ``false``"
msgstr "``stop_on_slope`` - *valor por defecto:* ``false``"

msgid ""
"This parameter prevents a body from sliding down slopes when standing still."
msgstr ""
"Este parámetro evita que un cuerpo se deslice por las pendientes cuando está "
"detenido."

msgid "``max_slides`` - *default value:* ``4``"
msgstr "``max_slides`` - *valor por defecto:* ``4``"

msgid ""
"This parameter is the maximum number of collisions before the body stops "
"moving. Setting it too low may prevent movement entirely."
msgstr ""
"Este es el número máximo de colisiones que se detectarán antes de que el "
"cuerpo pare de moverse. Ponerlo demasiado bajo puede impedir el movimiento "
"por completo."

msgid ""
"``floor_max_angle`` - *default value:* ``0.785398`` (in radians, equivalent "
"to ``45`` degrees)"
msgstr ""
"``floor_max_angle`` - *valor por defecto:* ``0.785398`` (en radianes, "
"equivalente a ``45`` grados)"

msgid ""
"This parameter is the maximum angle before a surface is no longer considered "
"a \"floor.\""
msgstr ""
"Es el ángulo máximo antes de que una superficie deje de ser considerada un "
"\"suelo.\""

msgid "``infinite_inertia`` - *default value:* ``true``"
msgstr "``infinite_inertia`` - *valor por defecto:* ``true``"

msgid ""
"When this parameter is ``true``, the body can push :ref:`RigidBody2D "
"<class_RigidBody2D>` nodes, ignoring their mass, but won't detect collisions "
"with them. If it's ``false`` the body will collide with rigid bodies and "
"stop."
msgstr ""
"Cuando este parámetro es ``true``, el cuerpo puede empujar nodos :ref:"
"`RigidBody2D <class_RigidBody2D>`, ignorando su masa, pero no detectará "
"colisiones con ellos. Si es ``false`` el cuerpo colisionará con cuerpos "
"rígidos y se detendrá."

msgid "``move_and_slide_with_snap``"
msgstr "``move_and_slide_with_snap``"

msgid ""
"This method adds some additional functionality to ``move_and_slide()`` by "
"adding the ``snap`` parameter. As long as this vector is in contact with the "
"ground, the body will remain attached to the surface. Note that this means "
"you must disable snapping when jumping, for example. You can do this either "
"by setting ``snap`` to ``Vector2.ZERO`` or by using ``move_and_slide()`` "
"instead."
msgstr ""
"Este método añade algunas funcionalidades adicionales a ``move_and_slide()`` "
"agregando el parámetro ``snap``. Siempre que este vector esté en contacto "
"con el suelo, el cuerpo permanecerá unido a la superficie. Ten en cuenta que "
"esto significa que debes deshabilitar el snap por ejemplo, al saltar. Puedes "
"hacer esto configurando ``snap`` a ``Vector2.ZERO`` o usando "
"``move_and_slide()`` en su lugar."

msgid "Detecting collisions"
msgstr "Detectando colisiones"

msgid ""
"When using ``move_and_collide()`` the function returns a "
"``KinematicCollision2D`` directly, and you can use this in your code."
msgstr ""
"Al usar ``move_and_collide()`` la función retorna un "
"``KinematicCollision2D`` directamente, y puedes usarlo en tu código."

msgid ""
"When using ``move_and_slide()`` it's possible to have multiple collisions "
"occur, as the slide response is calculated. To process these collisions, use "
"``get_slide_count()`` and ``get_slide_collision()``:"
msgstr ""
"Al usar ``move_and_slide()`` es posible que se produzcan múltiples "
"colisiones, ya que es calculada la respuesta al deslizamiento. Para procesar "
"estas colisiones, utiliza ``get_slide_count()`` y ``get_slide_collision()``:"

msgid ""
"`get_slide_count()` only counts times the body has collided and changed "
"direction."
msgstr ""
"`get_slide_count()` sólo cuenta las veces que el cuerpo ha chocado y "
"cambiado de dirección."

msgid ""
"See :ref:`KinematicCollision2D <class_KinematicCollision2D>` for details on "
"what collision data is returned."
msgstr ""
"Mira :ref:`KinematicCollision2D <class_KinematicCollision2D>` para más "
"detalles sobre que datos de colisión son retornados."

msgid "Which movement method to use?"
msgstr "¿Cuál método de movimiento hay que usar?"

msgid ""
"A common question from new Godot users is: \"How do you decide which "
"movement function to use?\" Often, the response is to use "
"``move_and_slide()`` because it's \"simpler,\" but this is not necessarily "
"the case. One way to think of it is that ``move_and_slide()`` is a special "
"case, and ``move_and_collide()`` is more general. For example, the following "
"two code snippets result in the same collision response:"
msgstr ""
"Una duda común para los usuarios nuevos de Godot es: \"¿Cómo decidir qué "
"función de movimiento usar?\". Frecuentemente, la respuesta es usar "
"``move_and_slide()`` porque es más \"simple\", pero esto no quiere decir que "
"siempre sea así. Un modo de verlo es que ``move_and_slide()`` es un caso "
"especial, y ``move_and_collide()`` es más general. Para poner un ejemplo, "
"los siguientes dos fragmentos de código producen la misma respuesta a "
"colisiones:"

msgid ""
"Anything you do with ``move_and_slide()`` can also be done with "
"``move_and_collide()``, but it might take a little more code. However, as "
"we'll see in the examples below, there are cases where ``move_and_slide()`` "
"doesn't provide the response you want."
msgstr ""
"Cualquier cosa hecha con ``move_and_slide()`` se puede hacer también con "
"``move_and_collide()``, pero puede requerir un poco más de código. Sin "
"embargo, como veremos en los siguientes ejemplos, hay casos en los que "
"``move_and_slide()`` no provee la respuesta deseada."

msgid ""
"In the example above, we assign the velocity that ``move_and_slide()`` "
"returns back into the ``velocity`` variable. This is because when the "
"character collides with the environment, the function recalculates the speed "
"internally to reflect the slowdown."
msgstr ""
"En el ejemplo de arriba, asignamos la velocidad que retorna "
"``move_and_slide()`` a la variable ``velocity``. Esto se debe a que cuando "
"el personaje colisiona con el entorno, la función internamente vuelve a "
"calcular la velocidad para reflejar la desaceleración."

msgid ""
"For example, if your character fell on the floor, you don't want it to "
"accumulate vertical speed due to the effect of gravity. Instead, you want "
"its vertical speed to reset to zero."
msgstr ""
"Por ejemplo, si tu personaje se cae al suelo, no quieres que este acumule "
"velocidad vertical por efecto de la gravedad. En vez de eso, quieres que su "
"velocidad vertical sea restablecida a cero."

msgid ""
"``move_and_slide()`` may also recalculate the kinematic body's velocity "
"several times in a loop as, to produce a smooth motion, it moves the "
"character and collides up to five times by default. At the end of the "
"process, the function returns the character's new velocity that we can store "
"in our ``velocity`` variable, and use on the next frame."
msgstr ""
"``move_and_slide()`` también puede recalcular la velocidad del cuerpo "
"cinemático varias veces en un bucle ya que, para producir un movimiento "
"suave, mueve al personaje y colisiona hasta cinco veces por defecto. Al "
"final del proceso, la función devuelve la nueva velocidad del personaje que "
"podemos almacenar en nuestra variable ``velocity``, y usarla en el siguiente "
"frame."

msgid "Examples"
msgstr "Ejemplos"

msgid ""
"To see these examples in action, download the sample project: :download:"
"`using_kinematic2d.zip <files/using_kinematic2d.zip>`."
msgstr ""
"Para ver estos ejemplos en funcionamiento, descarga el proyecto: :download:"
"`using_kinematic2d.zip <files/using_kinematic2d.zip>`."

msgid "Movement and walls"
msgstr "Movimiento y paredes"

msgid ""
"If you've downloaded the sample project, this example is in \"BasicMovement."
"tscn\"."
msgstr ""
"Si has descargado el proyecto, este ejemplo está en la escena "
"\"BasicMovement.tscn\"."

msgid ""
"For this example, add a ``KinematicBody2D`` with two children: a ``Sprite`` "
"and a ``CollisionShape2D``. Use the Godot \"icon.png\" as the Sprite's "
"texture (drag it from the Filesystem dock to the *Texture* property of the "
"``Sprite``). In the ``CollisionShape2D``'s *Shape* property, select \"New "
"RectangleShape2D\" and size the rectangle to fit over the sprite image."
msgstr ""
"Para este ejemplo, añade un ``KinematicBody2D`` con dos hijos: un ``Sprite`` "
"y un ``CollisionShape2D``. Usa el \"icon.png\" de Godot como textura del "
"Sprite (arrástralo desde el panel de Sistema de Archivos a la propiedad "
"*Texture* del ``Sprite``). En la propiedad *Shape* de ``CollisionShape2D``, "
"selecciona \"Nuevo RectangleShape2D\" y redimensiona el rectángulo para que "
"quepa sobre la imagen del sprite."

msgid ""
"See :ref:`doc_2d_movement` for examples of implementing 2D movement schemes."
msgstr ""
"Ver :ref:`doc_2d_movement` para más ejemplos de técnicas para implementar "
"movimiento en 2D."

msgid "Attach a script to the KinematicBody2D and add the following code:"
msgstr "Anexa un script al KinematicBody2D y agrega el siguiente código:"

msgid ""
"Run this scene and you'll see that ``move_and_collide()`` works as expected, "
"moving the body along the velocity vector. Now let's see what happens when "
"you add some obstacles. Add a :ref:`StaticBody2D <class_StaticBody2D>` with "
"a rectangular collision shape. For visibility, you can use a sprite, a "
"Polygon2D, or turn on \"Visible Collision Shapes\" from the \"Debug\" menu."
msgstr ""
"Ejecuta esta escena y verás que ``move_And_collide()`` funciona como es "
"esperado, moviendo el cuerpo a lo largo de lo indicado por el vector "
"velocidad. Ahora veamos qué sucede cuando agregas algunos obstáculos. Coloca "
"un :ref:`StaticBody2D <class_StaticBody2D>` con una CollisionShape2D "
"rectangular. Para visualizarlo puedes utilizar un Sprite, un Polygon2D o "
"activa la opción \"Ver Formas de Colisión\" del menú \"Depurar\"."

msgid ""
"Run the scene again and try moving into the obstacle. You'll see that the "
"``KinematicBody2D`` can't penetrate the obstacle. However, try moving into "
"the obstacle at an angle and you'll find that the obstacle acts like glue - "
"it feels like the body gets stuck."
msgstr ""
"Ejecuta la escena nuevamente e intenta moverte contra el obstáculo, verás "
"que el ``KinematicBody2D`` no puede penetrarlo. Ahora intenta moverte contra "
"un obstáculo con la superficie en ángulo y verás que se \"adhiere\" en el "
"obstáculo, como si estuviese atascado."

msgid ""
"This happens because there is no *collision response*. "
"``move_and_collide()`` stops the body's movement when a collision occurs. We "
"need to code whatever response we want from the collision."
msgstr ""
"Esto sucede porque no hay *respuesta a la colisión*, ``move_and_collide()`` "
"detiene el movimiento cuando ocurre una colisión. Tenemos que programar la "
"respuesta que queremos cuando eso sucede."

msgid ""
"Try changing the function to ``move_and_slide(velocity)`` and running again. "
"Note that we removed ``delta`` from the velocity calculation."
msgstr ""
"Intenta cambiar la función a ``move_and_slide(velocity)`` y ejecútala "
"nuevamente. Notar que se ha quitado ``delta`` del cálculo del parámetro "
"velocity."

msgid ""
"``move_and_slide()`` provides a default collision response of sliding the "
"body along the collision object. This is useful for a great many game types, "
"and may be all you need to get the behavior you want."
msgstr ""
"``move_and_slide()`` provee una respuesta a colisión por defecto haciendo "
"que el cuerpo se deslice a lo largo del objeto impactado. Esto es útil para "
"muchos tipos de juegos y puede que sea todo lo necesario para obtener el "
"comportamiento deseado."

msgid "Bouncing/reflecting"
msgstr "Rebote/reflejo"

msgid ""
"What if you don't want a sliding collision response? For this example "
"(\"BounceandCollide.tscn\" in the sample project), we have a character "
"shooting bullets and we want the bullets to bounce off the walls."
msgstr ""
"¿Qué sucede si no quieres una respuesta a colisión tipo deslizar? Para este "
"ejemplo (ver \"BounceandCollide.tscn\" en el mismo proyecto), tenemos un "
"personaje disparando balas y queremos que las balas reboten al golpear las "
"paredes."

msgid ""
"This example uses three scenes. The main scene contains the Player and "
"Walls. The Bullet and Wall are separate scenes so that they can be instanced."
msgstr ""
"Este ejemplo utiliza tres escenas, la escena principal contiene el Player "
"(jugador) y las Walls (paredes), las Bullet (balas) y paredes son escenas "
"separadas que pueden ser instanciadas."

msgid ""
"The Player is controlled by the `w` and `s` keys for forward and back. "
"Aiming uses the mouse pointer. Here is the code for the Player, using "
"``move_and_slide()``:"
msgstr ""
"Player es controlado con las teclas `w` y `s` para moverse hacia adelante y "
"hacia atrás, se apunta con el puntero del ratón. Este es el código de "
"Player, usando ``move_and_slide()``:"

msgid "And the code for the Bullet:"
msgstr "Y el código para Bullet:"

msgid ""
"The action happens in ``_physics_process()``. After using "
"``move_and_collide()``, if a collision occurs, a ``KinematicCollision2D`` "
"object is returned (otherwise, the return is ``Nil``)."
msgstr ""
"La acción sucede en ``_physics_process()``. Si sucede una colisión después "
"de utilizar ``move_and_collide()``, la función retornará un objeto "
"``KinematicCollision2D`` (de otro modo retornará ``null``)."

msgid ""
"If there is a returned collision, we use the ``normal`` of the collision to "
"reflect the bullet's ``velocity`` with the ``Vector2.bounce()`` method."
msgstr ""
"Si retorna un objeto, usaremos la ``normal`` de la colisión para reflejar la "
"``velocity`` de Bullet con le método ``Vector2.bounce()``."

msgid ""
"If the colliding object (``collider``) has a ``hit`` method, we also call "
"it. In the example project, we've added a flashing color effect to the Wall "
"to demonstrate this."
msgstr ""
"Si el objeto que colisiona tiene un método ``hit`` también lo llamaremos. En "
"el proyecto agregamos un efecto de destello de color a Wall para demostrar "
"esto."

msgid "Platformer movement"
msgstr "Movimiento de juego de plataformas"

msgid ""
"Let's try one more popular example: the 2D platformer. ``move_and_slide()`` "
"is ideal for quickly getting a functional character controller up and "
"running. If you've downloaded the sample project, you can find this in "
"\"Platformer.tscn\"."
msgstr ""
"Intentemos hacer un ejemplo más popular: El juego de plataformas 2D. "
"``move_and_slide()`` es ideal para tener rápidamente un controlador de "
"personaje funcional. Si has descargado el proyecto de ejemplo, lo podrás "
"encontrar en \"Platformer.tscn\"."

msgid ""
"For this example, we'll assume you have a level made of ``StaticBody2D`` "
"objects. They can be any shape and size. In the sample project, we're using :"
"ref:`Polygon2D <class_Polygon2D>` to create the platform shapes."
msgstr ""
"Para este ejemplo, asumiremos que tienes un nivel hecho de objetos "
"``StaticBody2D``, estos pueden ser de cualquier forma y tamaño. En el "
"proyecto utilizamos :ref:`Polygon2D <class_Polygon2D>` para crear las "
"figuras de las plataformas."

msgid "Here's the code for the player body:"
msgstr "Este es el código para el jugador:"

msgid ""
"When using ``move_and_slide()``, the function returns a vector representing "
"the movement that remained after the slide collision occurred. Setting that "
"value back to the character's ``velocity`` allows us to move up and down "
"slopes smoothly. Try removing ``velocity =`` and see what happens if you "
"don't do this."
msgstr ""
"Cuando se utiliza la función ``move_and_slide()``, esta retorna un vector "
"que representa el movimiento que quedó después que la colisión con "
"deslizamiento ocurriera. Asignando este de vuelta a la ``velocity`` del "
"personaje nos permite un movimiento suave hacia arriba y hacia abajo en las "
"pendientes. Prueba quitar ``velocity =`` y observa lo que sucede."

msgid ""
"Also note that we've added ``Vector2(0, -1)`` as the floor normal. This "
"vector points straight upward. As a result, if the character collides with "
"an object that has this normal, it will be considered a floor."
msgstr ""
"Nota también que hemos agregado ``Vector2(0,-1)`` como normal del suelo. "
"Este es un vector que apunta hacia arriba. Esto significa que, si el "
"personaje colisiona con un objeto que tiene esta normal, será considerado "
"como suelo."

msgid ""
"Using the floor normal allows us to make jumping work, using "
"``is_on_floor()``. This function will only return ``true`` after a "
"``move_and_slide()`` collision where the colliding body's normal is within "
"45 degrees of the given floor vector. You can control the maximum angle by "
"setting ``floor_max_angle``."
msgstr ""
"Usando la normal del suelo nos permite que funcione el salto, utilizando "
"``is_in_floor()``. Esta función solo retornará ``true`` después de una "
"colisión usando ``move_and_slide()`` siempre que la normal del cuerpo "
"colisionado esté dentro de 45 grados de diferencia del vector indicado como "
"suelo. Puedes controlar el ángulo máximo estableciendo un "
"``floor_max_angle``."

msgid ""
"This angle also allows you to implement other features like wall jumps using "
"``is_on_wall()``, for example."
msgstr ""
"Este ángulo también te permite implementar otras características como saltos "
"en paredes usando ``is_on_wall()``, por ejemplo."

msgid "Translation status"
msgstr "Estado de traducción"
