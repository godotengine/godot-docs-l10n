# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "Introducción"

msgid "Physics ticks and rendered frames"
msgstr "Ticks de física y frames renderizados"

msgid ""
"One key concept to understand in Godot is the distinction between physics "
"ticks (sometimes referred to as iterations or physics frames), and rendered "
"frames. The physics proceeds at a fixed tick rate (set in :ref:"
"`ProjectSettings.physics/common/"
"physics_fps<class_ProjectSettings_property_physics/common/physics_fps>`), "
"which defaults to 60 ticks per second."
msgstr ""
"Un concepto clave para entender en Godot es la distinción entre los ticks de "
"física (a veces denominados iteraciones o frames de física) y los frames "
"renderizados. La física avanza a una velocidad de tick fija (establecida en :"
"ref:`ProjectSettings.physics/common/"
"physics_fps<class_ProjectSettings_property_physics/common/physics_fps>`), "
"que por defecto es de 60 ticks por segundo."

msgid ""
"However, the engine does not necessarily **render** at the same rate. "
"Although many monitors refresh at 60 Hz (cycles per second), many refresh at "
"completely different frequencies (e.g. 75 Hz, 144 Hz, 240 Hz or more). Even "
"though a monitor may be able to show a new frame e.g. 60 times a second, "
"there is no guarantee that the CPU and GPU will be able to *supply* frames "
"at this rate. For instance, when running with V-Sync, the computer may be "
"too slow for 60 and only reach the deadlines for 30 FPS, in which case the "
"frames you see will change at 30 FPS (resulting in stuttering)."
msgstr ""
"Sin embargo, el motor no necesariamente **renderiza** a la misma velocidad. "
"Aunque muchos monitores se refrescan a 60 Hz (ciclos por segundo), muchos se "
"refrescan a frecuencias completamente diferentes (por ejemplo, 75 Hz, 144 "
"Hz, 240 Hz o más). Aunque un monitor pueda mostrar un nuevo frame, por "
"ejemplo, 60 veces por segundo, no hay garantía de que la CPU y la GPU puedan "
"*suministrar* frames a esta velocidad. Por ejemplo, al ejecutarse con V-"
"Sync, la computadora puede ser demasiado lenta para alcanzar los 60 FPS y "
"solo llegar a los plazos de 30 FPS, en cuyo caso los frames que ves "
"cambiarán a 30 FPS (resultando en tartamudeo)."

msgid ""
"But there is a problem here. What happens if the physics ticks do not "
"coincide with frames? What happens if the physics tick rate is out of phase "
"with the frame rate? Or worse, what happens if the physics tick rate is "
"*lower* than the rendered frame rate?"
msgstr ""
"Aquí hay un problema. ¿Qué sucede si los ticks de física no coinciden con "
"los frames? ¿Qué sucede si la velocidad de tick de física está desfasada con "
"la velocidad de frame? O peor aún, ¿qué sucede si la velocidad de tick de "
"física es inferior a la velocidad de frame renderizado?"

msgid ""
"This problem is easier to understand if we consider an extreme scenario. If "
"you set the physics tick rate to 10 ticks per second, in a simple game with "
"a rendered frame rate of 60 FPS. If we plot a graph of the positions of an "
"object against the rendered frames, you can see that the positions will "
"appear to \"jump\" every 1/10th of a second, rather than giving a smooth "
"motion. When the physics calculates a new position for a new object, it is "
"not rendered in this position for just one frame, but for 6 frames."
msgstr ""
"Este problema es más fácil de entender si consideramos un escenario extremo. "
"Si estableces la velocidad de tick de física en 10 ticks por segundo, en un "
"juego simple con una velocidad de frame renderizado de 60 FPS. Si trazamos "
"un gráfico de las posiciones de un objeto en relación a los frames "
"renderizados, puedes ver que las posiciones parecerán \"saltar\" cada 1/10 "
"de segundo, en lugar de ofrecer un movimiento suave. Cuando la física "
"calcula una nueva posición para un objeto, esta posición no se renderiza "
"durante solo un frame, sino durante 6 frames."

msgid ""
"This jump can be seen in other combinations of tick / frame rate as "
"glitches, or jitter, caused by this staircasing effect due to the "
"discrepancy between physics tick time and rendered frame time."
msgstr ""
"Este salto se puede ver en otras combinaciones de velocidad de tick / "
"velocidad de frame como fallas o vibraciones, causadas por este efecto de "
"escalonamiento debido a la discrepancia entre el tiempo de tick de física y "
"el tiempo de frame renderizado."

msgid "What can we do about frames and ticks being out of sync?"
msgstr ""
"¿Qué podemos hacer cuando los fotogramas (frames) y los ticks están "
"desincronizados?"

msgid "Lock the tick / frame rate together?"
msgstr "¿Sincronizar la tasa de ticks y fotogramas juntos?"

msgid ""
"The most obvious solution is to get rid of the problem, by ensuring there is "
"a physics tick that coincides with every frame. This used to be the approach "
"on old consoles and fixed hardware computers. If you know that every player "
"will be using the same hardware, you can ensure it is fast enough to "
"calculate ticks and frames at e.g. 50 FPS, and you will be sure it will work "
"great for everybody."
msgstr ""
"La solución más obvia es eliminar el problema asegurándose de que haya un "
"tick físico que coincida con cada fotograma. Este solía ser el enfoque en "
"las consolas antiguas y en las computadoras con hardware fijo. Si sabes que "
"todos los jugadores estarán utilizando el mismo hardware, puedes asegurarte "
"de que sea lo suficientemente rápido para calcular ticks y fotogramas a, por "
"ejemplo, 50 FPS, y así garantizar que funcione de manera óptima para todos."

msgid ""
"However, modern games are often no longer made for fixed hardware. You will "
"often be planning to release on desktop computers, mobiles and more, all of "
"which have huge variations in performance, as well as different monitor "
"refresh rates. We need to come up with a better way of dealing with the "
"problem."
msgstr ""
"Sin embargo, los juegos modernos a menudo ya no se desarrollan para hardware "
"fijo. Con frecuencia, se planea lanzar juegos en computadoras de escritorio, "
"dispositivos móviles y más, todos los cuales tienen grandes variaciones en "
"rendimiento, así como diferentes tasas de actualización de los monitores. "
"Necesitamos encontrar una mejor manera de lidiar con este problema."

msgid "Adapt the tick rate?"
msgstr "¿Adaptar la tasa de ticks?"

msgid ""
"Instead of designing the game at a fixed physics tick rate, we could allow "
"the tick rate to scale according to the end users hardware. We could for "
"example use a fixed tick rate that works for that hardware, or even vary the "
"duration of each physics tick to match a particular frame duration."
msgstr ""
"En lugar de diseñar el juego con una tasa de ticks de física fija, podríamos "
"permitir que la tasa de ticks se ajuste según el hardware del usuario final. "
"Podríamos utilizar, por ejemplo, una tasa de ticks fija que funcione para "
"ese hardware en particular, o incluso variar la duración de cada tick de "
"física para que coincida con una duración de fotograma específica."

msgid ""
"This works, but there is a problem. Physics (*and game logic*, which is "
"often also run in the ``_physics_process``) work best and most consistently "
"when run at a **fixed**, predetermined tick rate. If you attempt to run a "
"racing game physics that has been designed for 60 TPS (ticks per second) at "
"e.g. 10 TPS, the physics will behave completely differently. Controls may be "
"less responsive, collisions / trajectories can be completely different. You "
"may test your game thoroughly at 60 TPS, then find it breaks on end users "
"machines when it runs at a different tick rate."
msgstr ""
"Esto funciona, pero hay un problema. La física (*y la lógica del juego*, que "
"a menudo también se ejecuta en el ``_physics_process``) funcionan mejor y de "
"manera más consistente cuando se ejecutan a una tasa de ticks **fija** y "
"predeterminada. Si intentas ejecutar la física de un juego de carreras "
"diseñado para 60 TPS (ticks por segundo) a, por ejemplo, 10 TPS, la física "
"se comportará de manera completamente diferente. Los controles pueden ser "
"menos responsivos, las colisiones y trayectorias pueden ser completamente "
"distintas. Puedes probar tu juego a fondo a 60 TPS y luego descubrir que se "
"rompe en las máquinas de los usuarios finales cuando se ejecuta a una tasa "
"de ticks diferente."

msgid ""
"This can make quality assurance difficult with hard to reproduce bugs, "
"especially in AAA games where problems of this sort can be very costly. This "
"can also be problematic for multiplayer games for competitive integrity, as "
"running the game at certain tick rates may be more advantageous than others."
msgstr ""
"Esto puede dificultar la calidad del aseguramiento debido a los errores "
"difíciles de reproducir, especialmente en juegos AAA, donde problemas de "
"este tipo pueden ser muy costosos. También puede ser problemático para "
"juegos multijugador en términos de integridad competitiva, ya que ejecutar "
"el juego a ciertas tasas de ticks puede ser más ventajoso que otras."

msgid ""
"Lock the tick rate, but use interpolation to smooth frames in between "
"physics ticks"
msgstr ""
"Bloquea la tasa de ticks, pero utiliza interpolación para suavizar los "
"fotogramas entre los ticks de física"

msgid ""
"This has become one of the most popular approaches to dealing with the "
"problem. It is supported by Godot 3.5 and later in 3D (although it is "
"optional and disabled by default)."
msgstr ""
"Es cierto, esta ha llegado a ser una de las aproximaciones más populares "
"para lidiar con el problema. Es compatible con Godot 3.5 y versiones "
"posteriores en 3D (aunque es opcional y viene desactivado por defecto)."

msgid ""
"We have established that the most desirable physics/game logic arrangement "
"for consistency and predictability is a physics tick rate that is fixed at "
"design-time. The problem is the discrepancy between the physics position "
"recorded, and where we \"want\" a physics object to be shown on a frame to "
"give smooth motion."
msgstr ""
"Hemos establecido que el arreglo más deseable para la consistencia y la "
"previsibilidad de la física y la lógica del juego es una tasa de ticks de "
"física fija en el momento del diseño. El problema radica en la discrepancia "
"entre la posición de la física registrada y dónde \"queremos\" que un objeto "
"de física se muestre en un fotograma para lograr un movimiento suave."

msgid ""
"The answer turns out to be simple, but can be a little hard to get your head "
"around at first."
msgstr ""
"La respuesta resulta ser simple, pero puede ser un poco difícil de "
"comprender al principio."

msgid ""
"Instead of keeping track of just the current position of a physics object in "
"the engine, we keep track of *both the current position of the object, and "
"the previous position* on the previous physics tick."
msgstr ""
"En lugar de llevar un registro únicamente de la posición actual de un objeto "
"de física en el motor, llevamos un registro de *tanto la posición actual del "
"objeto como la posición anterior* en el tick de física anterior."

msgid ""
"Why do we need the previous position *(in fact the entire transform, "
"including rotation and scaling)*? By using a little math magic, we can use "
"**interpolation** to calculate what the transform of the object would be "
"between those two points, in our ideal world of smooth continuous movement."
msgstr ""
"¿Por qué necesitamos la posición anterior *(de hecho, toda la "
"transformación, incluida la rotación y el escalado)*? Mediante un poco de "
"magia matemática, podemos utilizar **interpolación** para calcular cuál "
"sería la transformación del objeto entre esos dos puntos, en nuestro mundo "
"ideal de movimiento suave y continuo."

msgid "Linear interpolation"
msgstr "Interpolación lineal"

msgid ""
"The simplest way to achieve this is linear interpolation, or lerping, which "
"you may have used before."
msgstr ""
"La forma más sencilla de lograr esto es mediante interpolación lineal, "
"también conocida como \"lerp\", que es posible que hayas utilizado antes."

msgid ""
"Let us consider only the position, and a situation where we know that the "
"previous physics tick X coordinate was 10 units, and the current physics "
"tick X coordinate is 30 units."
msgstr ""
"Consideremos únicamente la posición y una situación en la que sabemos que la "
"coordenada X del tick de física anterior era de 10 unidades, y la coordenada "
"X del tick de física actual es de 30 unidades."

msgid ""
"Although the maths is explained here, you do not have to worry about the "
"details, as this step will be performed for you. Under the hood, Godot may "
"use more complex forms of interpolation, but linear interpolation is the "
"easiest in terms of explanation."
msgstr ""
"Aunque las matemáticas se explican aquí, no tienes que preocuparte por los "
"detalles, ya que este paso se realizará automáticamente por ti. Bajo la "
"superficie, Godot puede utilizar formas de interpolación más complejas, pero "
"la interpolación lineal es la más fácil de explicar."

msgid "The physics interpolation fraction"
msgstr "La fraccion de interpolación de físicas"

msgid ""
"If our physics ticks are happening 10 times per second (for this example), "
"what happens if our rendered frame takes place at time 0.12 seconds? We can "
"do some math to figure out where the object would be to obtain a smooth "
"motion between the two ticks."
msgstr ""
"Si nuestros ciclos de física ocurren 10 veces por segundo (para este "
"ejemplo), ¿qué sucede si nuestro fotograma renderizado tiene lugar en el "
"tiempo 0.12 segundos? Podemos hacer algunos cálculos para averiguar dónde "
"estaría el objeto y lograr un movimiento fluido entre los dos ciclos."

msgid ""
"First of all, we have to calculate how far through the physics tick we want "
"the object to be. If the last physics tick took place at 0.1 seconds, we are "
"0.02 seconds *(0.12 - 0.1)* through a tick that we know will take 0.1 "
"seconds (10 ticks per second). The fraction through the tick is thus:"
msgstr ""
"Primero, tenemos que calcular qué tan lejos queremos que esté el objeto en "
"el ciclo de física. Si el último ciclo de física ocurrió a los 0.1 segundos, "
"estamos a 0.02 segundos *(0.12 - 0.1)* en un ciclo que sabemos que durará "
"0.1 segundos (10 ciclos por segundo). Por lo tanto, la fracción a través del "
"ciclo es:"

msgid ""
"This is called the **physics interpolation fraction**, and is handily "
"calculated for you by Godot. It can be retrieved on any frame by calling :"
"ref:`Engine."
"get_physics_interpolation_fraction<class_Engine_method_get_physics_interpolation_fraction>`."
msgstr ""
"Esto se conoce como la **fracción de interpolación de física**, y Godot lo "
"calcula automáticamente por ti. Puedes obtenerlo en cualquier fotograma "
"llamando a :ref:`Engine."
"get_physics_interpolation_fraction<class_Engine_method_get_physics_interpolation_fraction>`."

msgid "Calculating the interpolated position"
msgstr "Calculando la posición interpolada"

msgid ""
"Once we have the interpolation fraction, we can insert it into a standard "
"linear interpolation equation. The X coordinate would thus be:"
msgstr ""
"Una vez que tenemos la fracción de interpolación, podemos insertarla en una "
"ecuación de interpolación lineal estándar. La coordenada X sería:"

msgid "So substituting our ``x_prev`` as 10, and ``x_curr`` as 30:"
msgstr ""
"Entonces, sustituyendo nuestro valor ``x_prev`` como 10, y ``x_curr`` como "
"30:"

msgid "Let's break that down:"
msgstr "Descompongamos eso:"

msgid ""
"We know the X starts from the coordinate on the previous tick (``x_prev``) "
"which is 10 units."
msgstr ""
"Sabemos que la coordenada X comienza desde la posición en el ciclo de la "
"física anterior (``x_prev``), que es de 10 unidades."

msgid ""
"We know that after the full tick, the difference between the current tick "
"and the previous tick will have been added (``x_curr - x_prev``) (which is "
"20 units)."
msgstr ""
"Sabemos que después del ciclo de física completo, se habrá agregado la "
"diferencia entre el ciclo actual y el ciclo anterior (``x_curr - x_prev``) "
"(que son 20 unidades)."

msgid ""
"The only thing we need to vary is the proportion of this difference we add, "
"according to how far we are through the physics tick."
msgstr ""
"Lo único que necesitamos variar es la proporción de esta diferencia que "
"agregamos, de acuerdo con qué tan lejos estemos en el ciclo de física."

msgid ""
"Although this example interpolates the position, the same thing can be done "
"with the rotation and scale of objects. It is not necessary to know the "
"details as Godot will do all this for you."
msgstr ""
"Aunque este ejemplo interpola la posición, lo mismo se puede hacer con la "
"rotación y la escala de los objetos. No es necesario conocer los detalles, "
"ya que Godot hará todo esto por ti."

msgid "Smoothed transformations between physics ticks?"
msgstr "¡Transformaciones suavizadas entre tics de física?"

msgid ""
"Putting all this together shows that it should be possible to have a nice "
"smooth estimation of the transform of objects between the current and "
"previous physics tick."
msgstr ""
"Al poner todo esto junto, se muestra que debería ser posible tener una "
"estimación agradable y suave de la transformación de objetos entre el tic de "
"física actual y el tic anterior."

msgid ""
"But wait, you may have noticed something. If we are interpolating between "
"the current and previous ticks, we are not estimating the position of the "
"object *now*, we are estimating the position of the object in the past. To "
"be exact, we are estimating the position of the object *between 1 and 2 "
"ticks* into the past."
msgstr ""
"Pero espera, puede que hayas notado algo. Si estamos interpolando entre el "
"tic actual y el tic anterior, no estamos estimando la posición del objeto "
"*ahora*, sino que estamos estimando la posición del objeto en el pasado. "
"Para ser exactos, estamos estimando la posición del objeto *entre 1 y 2 "
"ciclos* en el pasado."

msgid "In the past"
msgstr "En el pasado"

msgid ""
"What does this mean? This scheme does work, but it does mean we are "
"effectively introducing a delay between what we see on the screen, and where "
"the objects *should* be."
msgstr ""
"¿Qué significa esto? Este esquema funciona, pero significa que estamos "
"introduciendo efectivamente un retraso entre lo que vemos en la pantalla y "
"dónde *deberían* estar los objetos."

msgid ""
"In practice, most people won't notice this delay, or rather, it is typically "
"not *objectionable*. There are already significant delays involved in games, "
"we just don't typically notice them. The most significant effect is there "
"can be a slight delay to input, which can be a factor in fast twitch games. "
"In some of these fast input situations, you may wish to turn off physics "
"interpolation and use a different scheme, or use a high tick rate, which "
"mitigates these delays."
msgstr ""
"En la práctica, la mayoría de las personas no notarán este retraso, o más "
"bien, normalmente no es *objetable*. Ya existen retrasos significativos en "
"los juegos, simplemente no los notamos típicamente. El efecto más "
"significativo es que puede haber un ligero retraso en la entrada, lo que "
"puede ser un factor en juegos de reflejos rápidos. En algunas de estas "
"situaciones de entrada rápida, es posible que desees desactivar la "
"interpolación de física y utilizar un esquema diferente, o usar una alta "
"frecuencia de ciclos, lo que mitiga estos retrasos."

msgid "Why look into the past? Why not predict the future?"
msgstr "¿Por qué mirar hacia el pasado? ¿Por qué no predecir el futuro?"

msgid ""
"There is an alternative to this scheme, which is: instead of interpolating "
"between the previous and current tick, we use maths to *extrapolate* into "
"the future. We try to predict where the object *will be*, rather than show "
"it where it was. This can be done and may be offered as an option in future, "
"but there are some significant downsides:"
msgstr ""
"Existe una alternativa a este esquema, que consiste en: en lugar de "
"interpolar entre el tic anterior y el actual, utilizamos matemáticas para "
"*extrapolar* hacia el futuro. Intentamos predecir dónde estará el objeto, en "
"lugar de mostrar dónde estuvo. Esto se puede hacer y podría ofrecerse como "
"una opción en el futuro, pero hay algunas desventajas significativas:"

msgid ""
"The prediction may not be correct, especially when an object collides with "
"another object during the physics tick."
msgstr ""
"La predicción puede no ser correcta, especialmente cuando un objeto "
"colisiona con otro objeto durante el tic de física."

msgid ""
"Where a prediction was incorrect, the object may extrapolate into an "
"\"impossible\" position, like inside a wall."
msgstr ""
"Cuando una predicción es incorrecta, el objeto puede extrapolar hacia una "
"posición \"imposible\", como dentro de una pared."

msgid ""
"Providing the movement speed is slow, these incorrect predictions may not be "
"too much of a problem."
msgstr ""
"Si la velocidad de movimiento es lenta, es posible que estas predicciones "
"incorrectas no sean un problema grave."

msgid ""
"When a prediction was incorrect, the object may have to jump or snap back "
"onto the corrected path. This can be visually jarring."
msgstr ""
"Cuando una predicción es incorrecta, el objeto puede tener que saltar o "
"volver rápidamente a la trayectoria corregida. Esto puede ser visualmente "
"desorientador o incómodo para el jugador."

msgid "Fixed timestep interpolation"
msgstr "Interpolación con paso de tiempo fijo"

msgid ""
"In Godot this whole system is referred to as physics interpolation, but you "
"may also hear it referred to as **\"fixed timestep interpolation\"**, as it "
"is interpolating between objects moved with a fixed timestep (physics ticks "
"per second). In some ways the second term is more accurate, because it can "
"also be used to interpolate objects that are not driven by physics."
msgstr ""
"En Godot, todo este sistema se conoce como \"interpolación de física\", pero "
"también puede escucharlo referido como **\"interpolación con paso de tiempo "
"fijo\"**, ya que está interpolando entre objetos movidos con un paso de "
"tiempo fijo (tics de física por segundo). En ciertos aspectos, el segundo "
"término es más preciso, porque también se puede utilizar para interpolar "
"objetos que no están impulsados por la física."

msgid ""
"Although physics interpolation is usually a good choice, there are "
"exceptions where you may choose not to use Godot's built-in physics "
"interpolation (or use it in a limited fashion). An example category is "
"internet multiplayer games. Multiplayer games often receive tick or timing "
"based information from other players or a server and these may not coincide "
"with local physics ticks, so a custom interpolation technique can often be a "
"better fit."
msgstr ""
"Aunque la interpolación de física suele ser una buena opción, hay "
"excepciones donde puede que decidas no utilizar la interpolación de física "
"incorporada en Godot (o usarla de manera limitada). Un ejemplo son los "
"juegos multijugador en línea. Los juegos multijugador a menudo reciben "
"información basada en tics o tiempos de otros jugadores o un servidor, y "
"estos pueden no coincidir con los tics de física locales, por lo que una "
"técnica de interpolación personalizada puede ser una opción más adecuada."

msgid "Translation status"
msgstr "Estado de traducción"
