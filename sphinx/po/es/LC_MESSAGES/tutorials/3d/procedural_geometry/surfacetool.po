# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the SurfaceTool"
msgstr "Usando SurfaceTool"

msgid ""
"The :ref:`SurfaceTool <class_surfacetool>` provides a useful interface for "
"constructing geometry. The interface is similar to the :ref:"
"`ImmediateGeometry <class_immediategeometry>` node. You set each per-vertex "
"attribute (e.g. normal, uv, color) and then when you add a vertex it "
"captures the attributes."
msgstr ""
"El :ref:`SurfaceTool <class_surfacetool>` proporciona una interfaz útil para "
"construir geometría. La interfaz es similar al nodo :ref:`ImmediateGeometry "
"<class_immediategeometry>`. Configuras cada atributo por vértice (por "
"ejemplo, normal, uv, color) y luego, cuando agregas un vértice, captura los "
"atributos."

msgid ""
"The SurfaceTool also provides some useful helper functions like ``index()`` "
"and ``generate_normals()``."
msgstr ""
"El SurfaceTool también proporciona algunas funciones auxiliares útiles como "
"``index()`` y ``generate_normals()``."

msgid "Attributes are added before each vertex is added:"
msgstr "Los atributos se agregan antes de agregar cada vértice:"

msgid ""
"When finished generating your geometry with the :ref:`SurfaceTool "
"<class_surfacetool>` call ``commit()`` to finish generating the mesh. If an :"
"ref:`ArrayMesh <class_ArrayMesh>` is passed to ``commit()`` then it appends "
"a new surface to the end of the ArrayMesh. While if nothing is passed in, "
"``commit()`` returns an ArrayMesh."
msgstr ""
"Cuando hayas terminado de generar tu geometría con el :ref:"
"`SurfaceTool<class_surfacetool>`, llama a ``commit()`` para finalizar la "
"generación de la malla. Si se pasa un :ref:`ArrayMesh<class_ArrayMesh>` a "
"``commit()``, se agregará una nueva superficie al final del ArrayMesh. Si no "
"se pasa nada, ``commit()`` devolverá un ArrayMesh."

msgid "Code creates a triangle with indices"
msgstr "El código crea un triángulo con índices"

msgid ""
"You can optionally add an index array, either by calling ``add_index()`` and "
"adding vertices to the index array or by calling ``index()`` which shrinks "
"the vertex array to remove duplicate vertices."
msgstr ""
"Opcionalmente, puedes agregar un array de índices, ya sea llamando a "
"``add_index()`` y agregando vértices al arreglo de índices, o llamando a "
"``index()``, lo cual reduce el tamaño del array de vértices para eliminar "
"vértices duplicados."

msgid ""
"Similarly, if you have an index array, but you want each vertex to be unique "
"(e.g. because you want to use unique normals or colors per face instead of "
"per-vertex), you can call ``deindex()``."
msgstr ""
"De manera similar, si tienes un array de índices pero deseas que cada "
"vértice sea único (por ejemplo, porque deseas utilizar normales o colores "
"únicos por cara en lugar de por vértice), puedes llamar a ``deindex()``."

msgid ""
"If you don't add custom normals yourself, you can add them using "
"``generate_normals()``, which should be called after generating geometry and "
"before committing the mesh using ``commit()`` or ``commit_to_arrays()``. "
"Calling ``generate_normals(true)`` will flip the resulting normals. As a "
"side note, ``generate_normals()`` only works if the primitive type is set to "
"``Mesh.PRIMITIVE_TRIANGLES``."
msgstr ""
"Si no agregas normales personalizadas tú mismo, puedes añadirlas usando "
"``generate_normals()``, que debe ser llamado después de generar la geometría "
"y antes de confirmar la malla utilizando ``commit()`` o "
"``commit_to_arrays()``. Llamar a ``generate_normals(true)`` invertirá las "
"normales resultantes. Como nota adicional, ``generate_normals()`` solo "
"funciona si el tipo primitivo está establecido en ``Mesh."
"PRIMITIVE_TRIANGLES``."

msgid ""
"You may notice that normal mapping or other material properties look broken "
"on the generated mesh. This is because normal mapping **requires** the mesh "
"to feature *tangents*, which are separate from *normals*. You can either add "
"custom tangents manually, or generate them automatically with with "
"``generate_tangents()``. This method requires that each vertex have UVs and "
"normals set already."
msgstr ""
"Puede que notes que el mapeado de normales u otras propiedades de material "
"se vean incorrectos en la malla generada. Esto se debe a que el mapeado de "
"normales requiere que la malla tenga *tangentes*, las cuales son diferentes "
"de las *normales*. Puedes agregar tangentes personalizadas manualmente o "
"generarlas automáticamente con ``generate_tangents()``. Este método requiere "
"que cada vértice ya tenga establecidas las coordenadas UV y las normales."

msgid ""
"By default, when generating normals, they will be calculated on a per-face "
"basis. If you want smooth vertex normals, when adding vertices, call "
"``add_smooth_group()``. ``add_smooth_group()`` needs to be called while "
"building the geometry, e.g. before the call to ``add_vertex()`` (if non-"
"indexed) or ``add_index()`` (if indexed)."
msgstr ""
"De forma predeterminada, al generar normales, se calculan en función de cada "
"cara. Si deseas obtener normales suavizadas por vértice, debes llamar a "
"``add_smooth_group()`` al agregar vértices. ``add_smooth_group()`` debe ser "
"llamado mientras construyes la geometría, por ejemplo, antes de llamar a "
"``add_vertex()`` (si no está indexado) o ``add_index()`` (si está indexado)."

msgid "Translation status"
msgstr "Estado de traducción"
