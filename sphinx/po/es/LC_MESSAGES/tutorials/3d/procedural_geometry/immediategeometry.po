# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using ImmediateGeometry"
msgstr "Usando ImmediateGeometry"

msgid ""
"Unlike the SurfaceTool or ArrayMesh, :ref:`ImmediateGeometry "
"<class_ImmediateGeometry>` is an actual node. Being a node makes it quick to "
"add to a scene and get visual output. It uses an OpenGL 1.x-style API like "
"SurfaceTool, but it's actually designed to create meshes on the fly."
msgstr ""
"A diferencia de SurfaceTool o ArrayMesh, :ref:`ImmediateGeometry "
"<class_ImmediateGeometry>` es un nodo real. Al ser un nodo, es rápido "
"agregarlo a una escena y obtener una salida visual. Utiliza una API de "
"estilo OpenGL 1.x como SurfaceTool, pero está diseñado para crear mallas "
"sobre la marcha."

msgid ""
"Generating complex geometry (several thousand vertices) with this node is "
"inefficient, even if it's done only once. Instead, it is designed to "
"generate simple geometry that changes every frame."
msgstr ""
"Generar geometría compleja (varios miles de vértices) con este nodo es "
"ineficiente, incluso si se hace solo una vez. En cambio, está diseñado para "
"generar geometría simple que cambia en cada cuadro (frame)."

msgid ""
"Before starting, you should clear the geometry by calling ``clear()``. This "
"ensures that you are not building upon the geometry from the previous frame. "
"If you want to keep geometry between frames, do not call ``clear()``."
msgstr ""
"Antes de comenzar, debes borrar la geometría llamando a ``clear()``. Esto "
"asegura que no estés construyendo sobre la geometría del cuadro anterior. Si "
"deseas mantener la geometría entre cuadros, no llames a ``clear()``."

msgid ""
"To begin generating geometry you must call ``begin()``. ``begin()`` takes a "
"``PrimitiveType`` as an argument. ``PrimitiveType`` is an OpenGL concept "
"that instructs the GPU how to arrange the primitive based on the vertices "
"given whether it is triangles, lines, points, etc. A complete list can be "
"found under the :ref:`Mesh <class_mesh>` class reference page."
msgstr ""
"Para comenzar a generar geometría, debes llamar a ``begin()``. ``begin()`` "
"toma un argumento de tipo ``PrimitiveType``. ``PrimitiveType`` es un "
"concepto de OpenGL que indica a la GPU cómo organizar el primitivo en base a "
"los vértices proporcionados, ya sea triángulos, líneas, puntos, etc. Puedes "
"encontrar una lista completa en la página de :ref:`Mesh <class_mesh>`."

msgid ""
"Once you have called ``begin()`` you are ready to start adding vertices. You "
"add vertices one at a time. First you add vertex specific attributes such as "
"normals or UVs using ``set_****()`` (e.g. ``set_normal()``). Then you call "
"``add_vertex()`` to add a vertex with those attributes. For example:"
msgstr ""
"Una vez que hayas llamado a ``begin()``, estarás listo para comenzar a "
"agregar vértices. Agregas vértices uno por uno. Primero agregas atributos "
"específicos del vértice, como normales o coordenadas UV, usando "
"``set_****()`` (por ejemplo, ``set_normal()``). Luego llamas a "
"``add_vertex()`` para agregar un vértice con esos atributos. Por ejemplo:"

msgid ""
"Only attributes added before the call to ``add_vertex()`` will be included "
"in that vertex."
msgstr ""
"Solo los atributos agregados antes de llamar a ``add_vertex()`` se incluirán "
"en ese vértice."

msgid ""
"Finally, once you have added all your vertices call ``end()`` to signal that "
"you have finished generating the mesh."
msgstr ""
"Finalmente, una vez que hayas agregado todos tus vértices, llama a ``end()`` "
"para indicar que has terminado de generar la malla."

msgid "The example code below draws a single triangle."
msgstr "El ejemplo de código siguiente dibuja un triángulo simple."

msgid "Translation status"
msgstr "Estado de traducción"
