# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom post-processing"
msgstr "Post procesado personalizado"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"Godot provides many post-processing effects out of the box, including Bloom, "
"DOF, and SSAO. Sometimes you want to write your own custom effect. Here's "
"how you can do so."
msgstr ""
"Godot proporciona muchos efectos de post-procesamiento fuera del paquete, "
"incluyendo Bloom, DOF, y SSAO. A veces quieres escribir tu propio efecto "
"personalizado. Así es como puedes hacerlo."

msgid ""
"Post-processing effects are shaders applied to a frame after Godot rendered "
"it. You first want to render your scene into a :ref:`Viewport "
"<class_Viewport>`, then render the ``Viewport`` inside a :ref:"
"`ViewportTexture <class_ViewportTexture>` and show it on the screen."
msgstr ""
"Los efectos de post-procesamiento son shaders aplicados a un fotograma "
"después de que Godot lo haya renderizado. Primero quieres renderizar tu "
"escena en un :ref:`Viewport <class_Viewport>`, luego renderizar el "
"``Viewport`` dentro de un :ref:`ViewportTexture <class_ViewportTexture>` y "
"mostrarlo en la pantalla."

msgid ""
"The easiest way to implement a custom post-processing shader is to use "
"Godot's built-in ability to read from the screen texture. If you're not "
"familiar with this, you should read the :ref:`Screen Reading Shaders "
"Tutorial <doc_screen-reading_shaders>` first."
msgstr ""
"La forma más fácil de implementar un shader personalizado de post-"
"procesamiento es usar la capacidad incorporada de Godot para leer la textura "
"de la pantalla. Si no estás familiarizado con esto, deberías leer primero "
"el :ref:`Screen Reading Shaders Tutorial <doc_screen-reading_shaders>`."

msgid ""
"As of the time of writing, Godot does not support rendering to multiple "
"buffers at the same time. Your post-processing shader will not have access "
"to normals or other render passes. You only have access to the rendered "
"frame."
msgstr ""
"En el momento de escribir este artículo, Godot no soporta la renderización a "
"múltiples buffers al mismo tiempo. Su shader de post-procesamiento no tendrá "
"acceso a los normales u otros pases de renderización. Sólo tiene acceso al "
"fotograma renderizado."

msgid "Single pass post-processing"
msgstr "Post procesado de paso simple"

msgid ""
"You will need a ``Viewport`` to render your scene to, and a scene to render "
"your ``Viewport`` on the screen. You can use a :ref:`ViewportContainer "
"<class_ViewportContainer>` to display your ``Viewport`` on the entire screen "
"or inside another :ref:`Control <class_Control>` node."
msgstr ""
"Necesitarás un ``Viewport`` para renderizar tu escena, y una escena para "
"renderizar tu ``Viewport`` en la pantalla. Puedes usar un :ref:"
"`ViewportContainer <class_ViewportContainer>` para mostrar tu ``Viewport`` "
"en toda la pantalla o dentro de otro nodo :ref:`Control <class_Control>`."

msgid ""
"Rendering using a ``Viewport`` gives you control over how the scene render, "
"including the framerate, and you can use the ``ViewportContainer`` to render "
"3D objects in a 2D scene."
msgstr ""
"Renderizar usando un ``Viewport`` te da control sobre cómo se renderiza la "
"escena, incluyendo la velocidad de fotogramas, y puedes usar el "
"``ViewportContainer`` para renderizar objetos 3D en una escena 2D."

msgid ""
"For this demo, we will use a :ref:`Node2D <class_Node2D>` with a "
"``ViewportContainer`` and finally a ``Viewport``. Your **Scene** tab should "
"look like this:"
msgstr ""
"Para esta demostración, usaremos un :ref:`Node2D <class_Node2D>` con un "
"``ViewportContainer`` y finalmente un ``Viewport``. Tu pestaña **Scene** "
"debería verse así:"

msgid ""
"Inside the ``Viewport``, you can have whatever you want. This will contain "
"your main scene. For this tutorial, we will use a field of random boxes:"
msgstr ""
"Dentro del ``Viewport``, puedes tener lo que quieras. Esto contendrá tu "
"escena principal. Para este tutorial, usaremos un campo de cajas aleatorias:"

msgid ""
"Add a new :ref:`ShaderMaterial <class_ShaderMaterial>` to the "
"``ViewportContainer``, and assign a new shader resource to it. You can "
"access your rendered ``Viewport`` with the built-in ``TEXTURE`` uniform."
msgstr ""
"Añade un nuevo :ref:`ShaderMaterial <class_ShaderMaterial>` al "
"``ViewportContainer`` y asígnale un nuevo recurso shader. Puedes acceder a "
"tu ``Viewport`` renderizado con el uniform incorporado ``TEXTURE``."

msgid ""
"You can choose not to use a ``ViewportContainer``, but if you do so, you "
"will need to create your own uniform in the shader and pass the ``Viewport`` "
"texture in manually, like so:"
msgstr ""
"Puedes elegir no usar un ``ViewportContainer``, pero si lo haces, "
"necesitarás crear tu propio uniforme en el shader y pasar la textura "
"``Viewport`` manualmente, así:"

msgid "And you can pass the texture into the shader from GDScript like so:"
msgstr "Y puedes pasar la textura al shader desde el GDScript así:"

msgid ""
"Copy the following code to your shader. The above code is a single pass edge "
"detection filter, a `Sobel filter <https://en.wikipedia.org/wiki/"
"Sobel_operator>`_."
msgstr ""
"Copia el siguiente código en tu shader. El código anterior es un filtro de "
"detección de bordes de un solo paso, un `filtro sobel <https://en.wikipedia."
"org/wiki/Sobel_operator>`_."

msgid ""
"The Sobel filter reads pixels in a 9x9 grid around the current pixel and "
"adds them together, using weight. What makes it interesting is that it "
"assigns weights to each pixel; +1 for each of the eight around the center "
"and -8 for the center pixel. The choice of weights is called a \"kernel\". "
"You can use different kernels to create edge detection filters, outlines, "
"and all sorts of effects."
msgstr ""
"El filtro Sobel lee los píxeles en una cuadrícula de 9x9 alrededor del píxel "
"actual y los suma, usando el peso. Lo que lo hace interesante es que asigna "
"pesos a cada píxel; +1 para cada uno de los ocho alrededor del centro y -8 "
"para el píxel del centro. La elección de los pesos se llama \"kernel\". "
"Puedes usar diferentes kernels para crear filtros de detección de bordes, "
"contornos y todo tipo de efectos."

msgid "Multi-pass post-processing"
msgstr "Post procesado de pasos múltiples"

msgid ""
"Some post-processing effects like blur are resource intensive. If you break "
"them down in multiple passes however, you can make them run a lot faster. In "
"a multipass material, each pass takes the result from the previous pass as "
"an input and processes it."
msgstr ""
"Algunos efectos de post-procesamiento como el difuminado son intensivos en "
"recursos. Sin embargo, si los descompones en múltiples pasadas, puedes hacer "
"que se ejecuten mucho más rápido. En un material de múltiples pasadas, cada "
"pasada toma el resultado de la pasada anterior como entrada y lo procesa."

msgid ""
"To make a multi-pass post-processing shader, you stack ``Viewport`` nodes. "
"In the example above, you rendered the content of one ``Viewport`` object "
"into the root ``Viewport``, through a ``ViewportContainer`` node. You can do "
"the same thing for a multi-pass shader by rendering the content of one "
"``Viewport`` into another and then rendering the last ``Viewport`` into the "
"root ``Viewport``."
msgstr ""
"Para hacer un shader de post-procesamiento multi-paso, apilas los nodos "
"``Viewport``. En el ejemplo de arriba, has llevado el contenido de un objeto "
"``Viewport`` a la raíz ``Viewport``, a través de un nodo "
"``ViewportContainer``. Puedes hacer lo mismo para un shader multi-pass "
"renderizando el contenido de un ``Viewport`` en otro y luego renderizando el "
"último ``Viewport`` en el ``Viewport`` raíz."

msgid "Your scene hierarchy will look something like this:"
msgstr "La escena final debería verse similar a esta:"

msgid ""
"Godot will render the bottom ``Viewport`` node first. So if the order of the "
"passes matters for your shaders, make sure that you assign the shader you "
"want to apply first to the lowest ``ViewportContainer`` in the tree."
msgstr ""
"Godot hará primero el nodo inferior ``Viewport``. Así que si el orden de los "
"pases es importante para tus shaders, asegúrate de asignar el shader que "
"quieres aplicar primero al ``ViewportContainer`` más bajo del árbol."

msgid ""
"You can also render your Viewports separately without nesting them like "
"this. You just need to use two Viewports and to render them one after the "
"other."
msgstr ""
"También puedes renderizar tus Viewports por separado sin anidarlos así. Solo "
"necesitas usar dos Viewports y renderizarlos uno tras otro."

msgid ""
"Apart from the node structure, the steps are the same as with the single-"
"pass post-processing shader."
msgstr ""
"Aparte de la estructura de nodos, los pasos son los mismos que en el shader "
"de post-procesamiento de una sola pasada."

msgid ""
"As an example, you could write a full screen Gaussian blur effect by "
"attaching the following pieces of code to each of the :ref:"
"`ViewportContainers <class_ViewportContainer>`. The order in which you apply "
"the shaders does not matter:"
msgstr ""
"Como ejemplo, podrías escribir un efecto de desenfoque gaussiano a pantalla "
"completa adjuntando las siguientes piezas de código a cada uno de los :ref:"
"`ViewportContainers <class_ViewportContainer>`. El orden en que se aplican "
"los shaders no importa:"

msgid ""
"Using the above code, you should end up with a full screen blur effect like "
"below."
msgstr ""
"Usando el código anterior, deberías terminar con un efecto de desenfoque en "
"pantalla completa como el de abajo."

msgid ""
"For more information on how ``Viewport`` nodes work, see the :ref:`Viewports "
"Tutorial <doc_viewports>`."
msgstr ""
"Para más información sobre cómo funcionan los nodos ``Viewport``, lee :ref:"
"`Viewports Tutorial <doc_viewports>`."

msgid "Translation status"
msgstr "Estado de traducción"
