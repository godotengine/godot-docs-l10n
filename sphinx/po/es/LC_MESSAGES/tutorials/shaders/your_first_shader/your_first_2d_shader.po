# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 2D shader"
msgstr "Tu primer shader 2D"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"Shaders are special programs that execute on the GPU and are used for "
"rendering graphics. All modern rendering is done with shaders. For a more "
"detailed description of what shaders are please see :ref:`What are shaders "
"<doc_introduction_to_shaders>`."
msgstr ""
"Los shaders son programas especiales que se ejecutan en la GPU y se utilizan "
"para renderizar gráficos. Todo el renderizado moderno se realiza mediante "
"shaders. Para obtener una descripción más detallada de qué son los shaders, "
"consulta :ref:`Qué son los shaders <doc_introduction_to_shaders>`."

msgid ""
"This tutorial will focus on the practical aspects of writing shader programs "
"by walking you through the process of writing a shader with both vertex and "
"fragment functions. This tutorial targets absolute beginners to shaders."
msgstr ""
"Este tutorial se centrará en los aspectos prácticos de la escritura de "
"programas shaders, guiándole a través del proceso de escritura de un shader "
"con funciones tanto de vértice como de fragmento. Este tutorial está "
"dirigido a principiantes absolutos de shaders."

msgid ""
"If you have experience writing shaders and are just looking for an overview "
"of how shaders work in Godot, see the :ref:`Shading Reference <toc-shading-"
"reference>`."
msgstr ""
"Si tienes experiencia escribiendo shaders y sólo buscas una visión general "
"de cómo funcionan los shaders en Godot, ver la :ref:`Shading Reference <toc-"
"shading-reference>`."

msgid "Setup"
msgstr "Organización"

msgid ""
":ref:`CanvasItem <doc_canvas_item_shader>` shaders are used to draw all 2D"
msgstr ""
":ref:`CanvasItem <doc_canvas_item_shader>` los shaders se utilizan para "
"dibujar todo en 2D"

msgid ""
"objects in Godot, while :ref:`Spatial <doc_spatial_shader>` shaders are used "
"to draw all 3D objects."
msgstr ""
"En Godot, los objetos 2D se dibujan utilizando los shaders :ref:`CanvasItem "
"<doc_canvas_item_shader>`, mientras que los shaders :ref:`Spatial "
"<doc_spatial_shader>` se utilizan para dibujar todos los objetos 3D."

msgid ""
"In order to use a shader it must be attached inside a :ref:`Material "
"<class_material>` which must be attached to an object. Materials are a type "
"of :ref:`Resource <doc_resources>`. To draw multiple objects with the same "
"material, the material must be attached to each object."
msgstr ""
"Para usar un shader debe estar unido dentro de un :ref:`Material "
"<class_material>` que debe estar unido a un objeto. Los materiales son un "
"tipo de :ref:`Resource <doc_resources>`. Para dibujar varios objetos con el "
"mismo material, el material debe estar unido a cada objeto."

msgid ""
"All objects derived from a :ref:`CanvasItem <class_canvasitem>` have a "
"material property. This includes all :ref:`GUI elements <class_Control>`, :"
"ref:`Sprites <class_sprite>`, :ref:`TileMaps <class_tilemap>`, :ref:"
"`MeshInstance2Ds <class_meshinstance2d>` etc. They also have an option to "
"inherit their parent's material. This can be useful if you have a large "
"number of nodes that you want to use the same material."
msgstr ""
"Todos los objetos derivados de un :ref:`CanvasItem <class_canvasitem>` "
"tienen una propiedad material. Esto incluye todos los elementos :ref:`GUI "
"<class_Control>`, :ref:`Sprites <class_sprite>`, :ref:`TileMaps "
"<class_tilemap>`, :ref:`MeshInstance2Ds <class_meshinstance2d>` etc. También "
"tienen la opción de heredar el material de sus padres. Esto puede ser útil "
"si tienes un gran número de nodos que quieren usar el mismo material."

msgid ""
"To begin, create a Sprite node. You can use any CanvasItem, but for this "
"tutorial we will use a Sprite."
msgstr ""
"Para empezar, crea un nodo Sprite. Puedes usar cualquier CanvasItem, pero "
"para este tutorial usaremos un Sprite."

msgid ""
"In the Inspector, click beside \"Texture\" where it says \"[empty]\" and "
"select \"Load\", then select \"Icon.png\". For new projects, this is the "
"Godot icon. You should now see the icon in the viewport."
msgstr ""
"En el Inspector, haga clic al lado de \"Texture\" donde dice \"[empty]\" y "
"seleccione \"Cargar\", luego seleccione \"Icon.png\". Para nuevos proyectos, "
"este es el icono de Godot. Ahora deberías ver el icono en la vista."

msgid ""
"Next, look down in the Inspector, under the CanvasItem section, click beside "
"\"Material\" and select \"New ShaderMaterial\". This creates a new Material "
"resource. Click on the sphere that appears. Godot currently doesn't know "
"whether you are writing a CanvasItem Shader or a Spatial Shader and it "
"previews the output of spatial shaders. So what you are seeing is the output "
"of the default Spatial Shader."
msgstr ""
"A continuación, mira en el Inspector, en la sección CanvasItem, haz clic al "
"lado de \"Material\" y selecciona \"New ShaderMaterial\". Esto crea un nuevo "
"recurso material. Haz clic en la esfera que aparece. Actualmente, Godot no "
"sabe si está escribiendo un CanvasItem Shader o un Spatial Shader y "
"previsualiza la salida de los shaders espaciales. Así que lo que está viendo "
"es la salida del Spatial Shader por defecto."

msgid ""
"Click beside \"Shader\" and select \"New Shader\". Finally, click on the new "
"shader resource and the shader editor will open. You are now ready to begin "
"writing your first shader."
msgstr ""
"Haz clic al lado de \"Shader\" y selecciona \"New Shader\". Finalmente, haz "
"clic en el nuevo recurso de shaders y se abrirá el editor de shaders. Ya "
"estás listo para empezar a escribir tu primer shader."

msgid "Your first CanvasItem shader"
msgstr "Tu primer shader CanvasItem"

msgid ""
"In Godot, all shaders start with a line specifying what type of shader they "
"are. It uses the following format:"
msgstr ""
"En Godot, todos los shaders deben especificar el tipo en la primera línea, "
"en el siguiente formato:"

msgid ""
"Because we are writing a CanvasItem shader, we specify ``canvas_item`` in "
"the first line. All our code will go beneath this declaration."
msgstr ""
"Porque estamos escribiendo un shader de CanvasItem, especificamos "
"``canvas_item`` en la primera línea. Todo nuestro código irá debajo de esta "
"declaración."

msgid ""
"This line tells the engine which built-in variables and functionality to "
"supply you with."
msgstr ""
"Esta línea le dice al motor cuáles son las variables incorporadas y la "
"funcionalidad que debe suministrarles."

msgid ""
"In Godot you can override three functions to control how the shader "
"operates; ``vertex``, ``fragment``, and ``light``. This tutorial will walk "
"you through writing a shader with both vertex and fragment functions. Light "
"functions are significantly more complex than vertex and fragment functions "
"and so will not be covered here."
msgstr ""
"En Godot puedes sobreescribir tres funciones para controlar el "
"funcionamiento del shader: ``vertex``, ``fragment`` y ``light``. Este "
"tutorial te guiará a través de la escritura de shader con ambas funciones de "
"vértice y fragmento. Las funciones de la luz son significativamente más "
"complejas que las funciones de vértice y fragmento, por lo que no serán "
"tratadas aquí."

msgid "Your first fragment function"
msgstr "Tu primera función fragment"

msgid ""
"The fragment function runs for every pixel in a Sprite and determines what "
"color that pixel should be."
msgstr ""
"La función de fragmento se ejecuta para cada píxel de un Sprite y determina "
"de qué color debe ser ese píxel."

msgid ""
"They are restricted to the pixels covered by the Sprite, that means you "
"cannot use one to, for example, create an outline around a Sprite."
msgstr ""
"Están restringidos a los píxeles cubiertos por el Sprite, eso significa que "
"no puedes usar uno para, por ejemplo, crear un contorno alrededor de un "
"Sprite."

msgid ""
"The most basic fragment function does nothing except assign a single color "
"to every pixel."
msgstr ""
"La función de fragmento más básica no hace nada excepto asignar un solo "
"color a cada píxel."

msgid ""
"We do so by writing a ``vec4`` to the built-in variable ``COLOR``. ``vec4`` "
"is shorthand for constructing a vector with 4 numbers. For more information "
"about vectors see the :ref:`Vector math tutorial <doc_vector_math>` "
"``COLOR`` is both an input variable to the fragment function and the final "
"output from it."
msgstr ""
"Lo hacemos escribiendo un ``vec4`` en la variable incorporada ``COLOR``. "
"``Vec4`` es la abreviatura para construir un vector con 4 números. Para más "
"información sobre los vectores, ver el tutorial de matemáticas de vectores: "
"ref:`Vector math tutorial <doc_vector_math>` ``COLOR`` es tanto una variable "
"de entrada a la función de fragmentos como la salida final de la misma."

msgid ""
"Congratulations! You're done. You have successfully written your first "
"shader in Godot."
msgstr ""
"¡Felicidades! Ya has terminado. Has escrito con éxito tu primer shader en "
"Godot."

msgid "Now let's make things more complex."
msgstr "Ahora hagamos las cosas más complejas."

msgid ""
"There are many inputs to the fragment function that you can use for "
"calculating ``COLOR``. ``UV`` is one of them. UV coordinates are specified "
"in your Sprite (without you knowing it!) and they tell the shader where to "
"read from textures for each part of the mesh."
msgstr ""
"Hay muchas entradas para la función de fragmentos que puedes usar para "
"calcular el ``COLOR``. ``UV`` es una de ellas. Las coordenadas UV se "
"especifican en tu Sprite (¡sin que lo sepas!) y le dicen al shader dónde "
"leer de las texturas para cada parte de la malla."

msgid ""
"In the fragment function you can only read from ``UV``, but you can use it "
"in other functions or to assign values to ``COLOR`` directly."
msgstr ""
"En la función de fragmentos sólo puedes leer desde ``UV``, pero puedes "
"usarla en otras funciones o para asignar valores a ``COLOR`` directamente."

msgid "``UV`` varies between 0-1 from left-right and from top-bottom."
msgstr "\"UV\" varía entre 0-1 de izquierda a derecha y de arriba a abajo."

msgid "Using ``TEXTURE`` built-in"
msgstr "Usando la ``TEXTURE`` incorporada"

msgid ""
"When you want to adjust a color in a Sprite you cannot just adjust the color "
"from the texture manually like in the code below."
msgstr ""
"Cuando quieres ajustar un color en un Sprite no puedes simplemente ajustar "
"el color de la textura manualmente como en el código de abajo."

msgid ""
"The default fragment function reads from a texture and displays it. When you "
"overwrite the default fragment function, you lose that functionality, so you "
"have to implement it yourself. You read from textures using the ``texture`` "
"function. Certain nodes, like Sprites, have a dedicated texture variable "
"that can be accessed in the shader using ``TEXTURE``. Use it together with "
"``UV`` and ``texture`` to draw the Sprite."
msgstr ""
"La función de fragmento por defecto lee de una textura y la muestra. Cuando "
"se sobreescribe la función de fragmento por defecto, se pierde esa función, "
"por lo que hay que implementarla uno mismo. Lees de las texturas usando la "
"función ``texture``. Ciertos nodos, como los Sprites, tienen una variable de "
"textura dedicada a la que se puede acceder en el sombreador usando "
"``TEXTURE``. Úsala junto con \"UV\" y \"textura\" para dibujar el Sprite."

msgid "Uniform input"
msgstr "Entrada uniform"

msgid ""
"Uniform input is used to pass data into a shader that will be the same "
"across the entire shader."
msgstr ""
"La entrada uniforme se utiliza para pasar los datos a un shader que será el "
"mismo en todo el shader."

msgid ""
"You can use uniforms by defining them at the top of your shader like so:"
msgstr ""
"Puedes usar los uniformes definiéndolos en la parte superior de tu shader "
"así:"

msgid ""
"For more information about usage see the :ref:`Shading Language doc "
"<doc_shading_language>`."
msgstr ""
"Para más información sobre el uso, lee :ref:`Shading Language doc "
"<doc_shading_language>`."

msgid "Add a uniform to change the amount of blue in our Sprite."
msgstr "Añade un uniforme para cambiar la cantidad de azul en nuestro Sprite."

msgid ""
"Now you can change the amount of blue in the Sprite from the editor. Look "
"back at the Inspector under where you created your shader. You should see a "
"section called \"Shader Param\". Unfold that section and you will see the "
"uniform you just declared. If you change the value in the editor, it will "
"overwrite the default value you provided in the shader."
msgstr ""
"Ahora puedes cambiar la cantidad de azul en el Sprite desde el editor. Mira "
"al Inspector debajo de donde creaste tu shader. Deberías ver una sección "
"llamada \"Shader Param\". Despliega esa sección y verás el uniforme que "
"acabas de declarar. Si cambias el valor en el editor, éste sobrescribirá el "
"valor por defecto que proporcionaste en el shader."

msgid "Interacting with shaders from code"
msgstr "Interactuando con shaders desde código"

msgid ""
"You can change uniforms from code using the function ``set_shader_param()`` "
"which is called on the node's material resource. With a Sprite node, the "
"following code can be used to set the ``blue`` uniform."
msgstr ""
"Puedes cambiar los uniformes del código usando la función "
"``set_shader_param()`` que se llama en el recurso material del nodo. Con un "
"nodo Sprite, el siguiente código puede ser usado para establecer el uniforme "
"``azul``."

msgid ""
"Note that the name of the uniform is a string. The string must match exactly "
"with how it is written in the shader, including spelling and case."
msgstr ""
"Observe que el nombre del uniforme es una string. La string debe coincidir "
"exactamente con la forma en que está escrita en el shader, incluyendo la "
"ortografía y las mayúsculas."

msgid "Your first vertex function"
msgstr "Tu primera función vertex"

msgid "Now that we have a fragment function, let's write a vertex function."
msgstr ""
"Ahora que tenemos una función de fragmento, escribamos una función de "
"vértice."

msgid ""
"Use the vertex function to calculate where on the screen each vertex should "
"end up."
msgstr ""
"Utiliza la función de vértice para calcular en qué parte de la pantalla debe "
"terminar cada vértice."

msgid ""
"The most important variable in the vertex function is ``VERTEX``. Initially, "
"it specifies the vertex coordinates in your model, but you also write to it "
"to determine where to actually draw those vertices. ``VERTEX`` is a ``vec2`` "
"that is initially presented in local-space (i.e. not relative to the camera, "
"viewport, or parent nodes)."
msgstr ""
"La variable más importante en la función de vértice es ``VERTEX``. "
"Inicialmente, especifica las coordenadas de los vértices en tu modelo, pero "
"también le escribes para determinar dónde dibujar esos vértices. ``VERTEX`` "
"es un ``vec2`` que se presenta inicialmente en el espacio local (es decir, "
"no en relación con la cámara, el puerto de visualización, o los nodos "
"principales)."

msgid "You can offset the vertices by directly adding to ``VERTEX``."
msgstr "Puedes desplazar los vértices añadiendo directamente a ``VERTEX``."

msgid ""
"Combined with the ``TIME`` built-in variable, this can be used for simple "
"animation."
msgstr ""
"Combinado con la variable incorporada ``TIME``, esto puede ser usado para "
"una simple animación."

msgid "Conclusion"
msgstr "Conclusión"

msgid ""
"At their core, shaders do what you have seen so far, they compute ``VERTEX`` "
"and ``COLOR``. It is up to you to dream up more complex mathematical "
"strategies for assigning values to those variables."
msgstr ""
"En su núcleo, los shaders hacen lo que has visto hasta ahora, calculan el "
"``VERTEX`` y el ``COLOR``. Depende de ti soñar con estrategias matemáticas "
"más complejas para asignar valores a esas variables."

msgid ""
"For inspiration, take a look at some of the more advanced shader tutorials, "
"and look at other sites like `Shadertoy <https://www.shadertoy.com/results?"
"query=&sort=popular&from=10&num=4>`_ and `The Book of Shaders <https://"
"thebookofshaders.com>`_."
msgstr ""
"Para inspirarse, eche un vistazo a algunos de los tutoriales de shaders más "
"avanzados, y mira a otros sitios como `Shadertoy <https://www.shadertoy.com/"
"results?query=&sort=popular&from=10&num=4>`_ y `The Book of Shaders <https://"
"thebookofshaders.com>`_."

msgid "Translation status"
msgstr "Estado de traducción"
