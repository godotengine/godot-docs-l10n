# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to shaders"
msgstr "Introducción a los shaders"

msgid ""
"This page explains what shaders are and will give you an overview of how "
"they work in Godot. For a detailed reference of the engine's shading "
"language, see :ref:`doc_shading_language`."
msgstr ""
"Esta página explica qué son los shaders y te proporcionará una visión "
"general de cómo funcionan en Godot. Para una referencia detallada del "
"lenguaje de sombreado del motor, consulta :ref:`doc_shading_language`."

msgid ""
"Shaders are a special kind of program that runs on Graphics Processing Units "
"(GPUs). They were initially used to shade 3D scenes but can nowadays do much "
"more. You can use them to control how the engine draws geometry and pixels "
"on the screen, allowing you to achieve all sorts of effects."
msgstr ""
"Los shaders son un tipo especial de programa que se ejecuta en las Unidades "
"de Procesamiento Gráfico (GPU). Inicialmente se utilizaban para sombrear "
"escenas 3D, pero en la actualidad pueden hacer mucho más. Puedes utilizarlos "
"para controlar cómo el motor dibuja geometría y píxeles en la pantalla, lo "
"que te permite lograr todo tipo de efectos."

msgid ""
"Modern rendering engines like Godot draw everything with shaders: graphics "
"cards can run thousands of instructions in parallel, leading to incredible "
"rendering speed."
msgstr ""
"Los motores de renderizado modernos como Godot dibujan todo utilizando "
"shaders: las tarjetas gráficas pueden ejecutar miles de instrucciones en "
"paralelo, lo que lleva a una velocidad de renderizado increíble."

msgid ""
"Because of their parallel nature, though, shaders don't process information "
"the way a typical program does. Shader code runs on each vertex or pixel in "
"isolation. You cannot store data between frames either. As a result, when "
"working with shaders, you need to code and think differently from other "
"programming languages."
msgstr ""
"Debido a su naturaleza paralela, los shaders no procesan la información de "
"la misma manera que lo hace un programa típico. El código del shader se "
"ejecuta en cada vértice o píxel de forma aislada. Tampoco puedes almacenar "
"datos entre fotogramas. Como resultado, al trabajar con shaders, necesitas "
"programar y pensar de manera diferente a otros lenguajes de programación."

msgid ""
"Suppose you want to update all the pixels in a texture to a given color. In "
"GDScript, your code would use ``for`` loops::"
msgstr ""
"Supongamos que quieres actualizar todos los píxeles de una textura a un "
"color dado. En GDScript, tu código usaría bucles ``for`` de la siguiente "
"manera:"

msgid ""
"Your code is already part of a loop in a shader, so the corresponding code "
"would look like this."
msgstr ""
"Tu código ya forma parte de un bucle en un shader, por lo que el código "
"correspondiente se vería así."

msgid ""
"The graphics card calls the ``fragment()`` function once or more for each "
"pixel it has to draw. More on that below."
msgstr ""
"La tarjeta gráfica llama a la función ``fragment()`` una o más veces por "
"cada píxel que tiene que dibujar. Más sobre eso a continuación."

msgid "Shaders in Godot"
msgstr "Shaders en Godot"

msgid ""
"Godot provides a shading language based on the popular OpenGL Shading "
"Language (GLSL) but simplified. The engine handles some of the lower-level "
"initialization work for you, making it easier to write complex shaders."
msgstr ""
"Godot proporciona un lenguaje de sombreado basado en el popular Lenguaje de "
"Sombreado de OpenGL (GLSL) pero simplificado. El motor se encarga de parte "
"del trabajo de inicialización de bajo nivel, lo que facilita la escritura de "
"shaders complejos."

msgid ""
"In Godot, shaders are made up of three main functions: ``vertex()``, "
"``fragment()``, and ``light()``."
msgstr ""
"En Godot, los shaders están compuestos por tres funciones principales: "
"``vertex()``, ``fragment()``` y ``light()``."

msgid ""
"The ``vertex()`` function runs over all the vertices in the mesh and sets "
"their positions and some other per-vertex variables."
msgstr ""
"La función ``vertex()`` se ejecuta en todos los vértices de la malla y "
"establece sus posiciones y algunas otras variables por vértice."

msgid ""
"The ``fragment()`` function runs for every pixel covered by the mesh. It "
"uses values output by the ``vertex()`` function, interpolated between the "
"vertices."
msgstr ""
"La función ``fragment()`` se ejecuta para cada píxel cubierto por la malla. "
"Utiliza los valores generados por la función ``vertex()``, interpolados "
"entre los vértices."

msgid ""
"The ``light()`` function runs for every pixel and for every light. It takes "
"variables from the ``fragment()`` function and from its previous runs."
msgstr ""
"La función ``light()`` se ejecuta para cada píxel y para cada luz. Toma "
"variables de la función ``fragment()`` y de sus ejecuciones anteriores."

msgid ""
"The ``light()`` function won't run if the ``vertex_lighting`` render mode is "
"enabled, or if **Rendering > Quality > Shading > Force Vertex Shading** is "
"enabled in the Project Settings. It's enabled by default on mobile platforms."
msgstr ""
"La función ``light()`` no se ejecutará si el modo de renderizado "
"``vertex_lighting`` está habilitado, o si la opción **Rendering > Quality > "
"Shading > Force Vertex Shading** está habilitada en la Configuración del "
"Proyecto. Por defecto, está habilitada en plataformas móviles."

msgid "Shader types"
msgstr "Tipos de Shaders"

msgid ""
"Instead of supplying a general-purpose configuration for all uses (2D, 3D, "
"particles), you must specify the type of shader you're writing. Different "
"types support different render modes, built-in variables, and processing "
"functions."
msgstr ""
"En lugar de proporcionar una configuración de propósito general para todos "
"los usos (2D, 3D, partículas), debes especificar el tipo de shader que estás "
"escribiendo. Los diferentes tipos de shaders admiten diferentes modos de "
"renderizado, variables integradas y funciones de procesamiento."

msgid ""
"In Godot, all shaders need to specify their type in the first line, like so:"
msgstr ""
"En Godot, todos los shaders deben especificar su tipo en la primera línea, "
"de la siguiente manera:"

msgid "Here are the available types:"
msgstr "Aqui están los tipos validos:"

msgid ":ref:`spatial <doc_spatial_shader>` for 3D rendering."
msgstr ":ref:`espacial <doc_spatial_shader>` para renderizado 3D."

msgid ":ref:`canvas_item <doc_canvas_item_shader>` for 2D rendering."
msgstr ":ref:`canvas_item <doc_canvas_item_shader>` para renderizado 2D."

msgid ":ref:`particles <doc_particle_shader>` for particle systems."
msgstr ":ref:`partículas <doc_particle_shader>` para sistemas de partículas."

msgid "Render modes"
msgstr "Modos de renderizado"

msgid ""
"Shaders have optional render modes you can specify on the second line, after "
"the shader type, like so:"
msgstr ""
"Los shaders tienen modos de renderizado opcionales que puedes especificar en "
"la segunda línea, después del tipo de shader, de la siguiente manera:"

msgid ""
"Render modes alter the way Godot applies the shader. For example, the "
"``unshaded`` mode makes the engine skip the built-in light processor "
"function."
msgstr ""
"Los modos de renderizado alteran la forma en que Godot aplica el shader. Por "
"ejemplo, el modo ``unshaded`` hace que el motor omita la función incorporada "
"de procesamiento de luces."

msgid ""
"Each shader type has different render modes. See the reference for each "
"shader type for a complete list of render modes."
msgstr ""
"Cada tipo de shader tiene diferentes modos de renderizado. Consulta la "
"referencia de cada tipo de shader para obtener una lista completa de los "
"modos de renderizado disponibles."

msgid "Processor functions"
msgstr "Funciones de procesamiento"

msgid ""
"Depending on the shader type, you can override different processor "
"functions. For ``spatial`` and ``canvas_item``, you have access to "
"``vertex()``, ``fragment()``, and ``light()``. For ``particles``, you only "
"have access to ``vertex()``."
msgstr ""
"Dependiendo del tipo de shader, puedes sobrescribir diferentes funciones de "
"procesamiento. Para ``spatial`` y ``canvas_item``, tienes acceso a "
"``vertex()``, ``fragment()`` y ``light()``. Para ``particles``, solo tienes "
"acceso a ``vertex()``."

msgid "Vertex processor"
msgstr "Procesador Vertex"

msgid ""
"The ``vertex()`` processing function is called once for every vertex in "
"``spatial`` and ``canvas_item`` shaders. For ``particles`` shaders, it is "
"called once for every particle."
msgstr ""
"La función de procesamiento ``vertex()`` se llama una vez por cada vértice "
"en los shaders ``spatial`` y ``canvas_item``. Para los shaders de "
"``particles``, se llama una vez por cada partícula."

msgid ""
"Each vertex in your world's geometry has properties like a position and "
"color. The function modifies those values and passes them to the fragment "
"function. You can also use it to send extra data to the fragment function "
"using varyings."
msgstr ""
"Cada vértice en la geometría de tu mundo tiene propiedades como una posición "
"y un color. La función \"vertex()\" modifica esos valores y los pasa a la "
"función \"fragment()\". También puedes usarla para enviar datos adicionales "
"a la función \"fragment()\" utilizando \"varyings\"."

msgid ""
"By default, Godot transforms your vertex information for you, which is "
"necessary to project geometry onto the screen. You can use render modes to "
"transform the data yourself; see the :ref:`Spatial shader doc "
"<doc_spatial_shader>` for an example."
msgstr ""
"Por defecto, Godot transforma la información de tus vértices por ti, lo cual "
"es necesario para proyectar la geometría en la pantalla. Sin embargo, puedes "
"utilizar modos de renderizado para transformar los datos tú mismo; consulta "
"la documentación de :ref:`shaders espaciales <doc_spatial_shader>` para ver "
"un ejemplo."

msgid "Fragment processor"
msgstr "Procesador Fragment"

msgid ""
"The ``fragment()`` processing function is used to set up the Godot material "
"parameters per pixel. This code runs on every visible pixel the object or "
"primitive draws. It is only available in ``spatial`` and ``canvas_item`` "
"shaders."
msgstr ""
"La función de procesamiento ``fragment()`` se utiliza para configurar los "
"parámetros del material de Godot por píxel. Este código se ejecuta en cada "
"píxel visible que el objeto o primitiva dibuja. Solo está disponible en "
"shaders ``spatial`` y ``canvas_item``."

msgid ""
"The standard use of the fragment function is to set up material properties "
"used to calculate lighting. For example, you would set values for "
"``ROUGHNESS``, ``RIM``, or ``TRANSMISSION``, which would tell the light "
"function how the lights respond to that fragment. This makes it possible to "
"control a complex shading pipeline without the user having to write much "
"code. If you don't need this built-in functionality, you can ignore it and "
"write your own light processing function, and Godot will optimize it away. "
"For example, if you do not write a value to ``RIM``, Godot will not "
"calculate rim lighting. During compilation, Godot checks to see if ``RIM`` "
"is used; if not, it cuts all the corresponding code out. Therefore, you will "
"not waste calculations on the effects that you do not use."
msgstr ""
"El uso estándar de la función ``fragment()`` es configurar las propiedades "
"del material que se utilizan para calcular la iluminación. Por ejemplo, "
"podrías establecer valores para ``ROUGHNESS``, ``RIM`` o ``TRANSMISSION``, "
"que le indicarían a la función de luz cómo responder a esa fracción. Esto "
"permite controlar un complejo proceso de sombreado sin que el usuario tenga "
"que escribir mucho código. Si no necesitas esta funcionalidad incorporada, "
"puedes ignorarla y escribir tu propia función de procesamiento de luz, y "
"Godot la optimizará. Por ejemplo, si no escribes un valor en ``RIM``, Godot "
"no calculará la iluminación del borde. Durante la compilación, Godot "
"comprueba si se utiliza ``RIM``; si no es así, eliminará todo el código "
"correspondiente. Por lo tanto, no desperdiciarás cálculos en efectos que no "
"utilices."

msgid "Light processor"
msgstr "Procesador Light"

msgid ""
"The ``light()`` processor runs per pixel too, and it runs once for every "
"light that affects the object. It does not run if no lights affect the "
"object. It exists as a function called inside the ``fragment()`` processor "
"and typically operates on the material properties setup inside the "
"``fragment()`` function."
msgstr ""
"El procesador ``light()`` también se ejecuta por píxel y se ejecuta una vez "
"por cada luz que afecta al objeto. No se ejecuta si ninguna luz afecta al "
"objeto. Es una función que se llama dentro del procesador ``fragment()`` y "
"generalmente opera en las propiedades del material configuradas dentro del "
"procesador ``fragment()``."

msgid ""
"The ``light()`` processor works differently in 2D than it does in 3D; for a "
"description of how it works in each, see their documentation, :ref:"
"`CanvasItem shaders <doc_canvas_item_shader>` and :ref:`Spatial shaders "
"<doc_spatial_shader>`, respectively."
msgstr ""
"El procesador ``light()`` funciona de manera diferente en 2D que en 3D; para "
"una descripción de cómo funciona en cada caso, consulta su documentación en :"
"ref:`Shaders de CanvasItem <doc_canvas_item_shader>` y :ref:`Shaders "
"espaciales <doc_spatial_shader>`, respectivamente."

msgid "Translation status"
msgstr "Estado de traducción"
