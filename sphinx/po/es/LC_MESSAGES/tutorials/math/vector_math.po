# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Vector math"
msgstr "Matemáticas vectoriales"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"This tutorial is a short and practical introduction to linear algebra as it "
"applies to game development. Linear algebra is the study of vectors and "
"their uses. Vectors have many applications in both 2D and 3D development and "
"Godot uses them extensively. Developing a good understanding of vector math "
"is essential to becoming a strong game developer."
msgstr ""
"Este tutorial es una breve y práctica introducción al álgebra lineal "
"aplicada al desarrollo de juegos. El álgebra lineal es el estudio de los "
"vectores y sus usos. Los vectores tienen muchas aplicaciones tanto en el "
"desarrollo 2D como 3D y Godot los utiliza ampliamente. Desarrollar una buena "
"comprensión de las matemáticas vectoriales es esencial para convertirse en "
"un desarrollador de juegos sólido."

msgid ""
"This tutorial is **not** a formal textbook on linear algebra. We will only "
"be looking at how it is applied to game development. For a broader look at "
"the mathematics, see https://www.khanacademy.org/math/linear-algebra"
msgstr ""
"Este tutorial **no** es un libro de texto formal sobre álgebra lineal. Sólo "
"veremos cómo se aplica al desarrollo de juegos. Para una visión más amplia "
"de las matemáticas, consulta https://es.khanacademy.org/math/linear-algebra"

msgid "Coordinate systems (2D)"
msgstr "Sistemas de coordenadas (2D)"

msgid ""
"In 2D space, coordinates are defined using a horizontal axis (``x``) and a "
"vertical axis (``y``). A particular position in 2D space is written as a "
"pair of values such as ``(4, 3)``."
msgstr ""
"En el espacio 2D, las coordenadas se definen usando un eje horizontal "
"(``x``) y un eje vertical (``y``). Una posición concreta en un espacio 2D se "
"escribe como un par de valores como ``(4, 3)``."

msgid ""
"If you're new to computer graphics, it might seem odd that the positive "
"``y`` axis points **downwards** instead of upwards, as you probably learned "
"in math class. However, this is common in most computer graphics "
"applications."
msgstr ""
"Si eres nuevo en el mundo de los gráficos por computadora, puede parecer "
"extraño que el eje positivo ``y`` apunte **hacia abajo** en lugar de hacia "
"arriba, como probablemente aprendiste en la clase de matemáticas. Sin "
"embargo, esto es común en la mayoría de las aplicaciones de gráficos por "
"computadora."

msgid ""
"Any position in the 2D plane can be identified by a pair of numbers in this "
"way. However, we can also think of the position ``(4, 3)`` as an **offset** "
"from the ``(0, 0)`` point, or **origin**. Draw an arrow pointing from the "
"origin to the point:"
msgstr ""
"Cualquier posición en el plano 2D puede ser identificada por un par de "
"números de esta manera. Sin embargo, también podemos pensar en la posición "
"``(4, 3)`` como una **compensación** del punto ``(0, 0)``, u **origen**. "
"Dibuja una flecha apuntando desde el origen hasta el punto:"

msgid ""
"This is a **vector**. A vector represents a lot of useful information. As "
"well as telling us that the point is at ``(4, 3)``, we can also think of it "
"as an angle ``θ`` and a length (or magnitude) ``m``. In this case, the arrow "
"is a **position vector** - it denotes a position in space, relative to the "
"origin."
msgstr ""
"Esto es un vector. Un vector representa mucha información útil. Además de "
"decirnos que el punto está en ``(4, 3)``, también podemos pensar en él como "
"un ángulo ``θ`` y una longitud (o magnitud) ``m``. En este caso, la flecha "
"es un **vector de posición** - denota una posición en el espacio, relativa "
"al origen."

msgid ""
"A very important point to consider about vectors is that they only represent "
"**relative** direction and magnitude. There is no concept of a vector's "
"position. The following two vectors are identical:"
msgstr ""
"Un punto muy importante a considerar acerca de los vectores es que ellos "
"sólo representan dirección y magnitud **relativa**. No hay concepto de "
"posición en un vector. Los siguientes dos vectores son idénticos:"

msgid ""
"Both vectors represent a point 4 units to the right and 3 units below some "
"starting point. It does not matter where on the plane you draw the vector, "
"it always represents a relative direction and magnitude."
msgstr ""
"Ambos vectores representan un punto 4 unidades a la derecha y 3 unidades por "
"debajo de algún punto de partida. No importa donde dibujes el vector en el "
"plano, siempre representa una dirección y magnitud relativa."

msgid "Vector operations"
msgstr "Operaciones vectoriales"

msgid ""
"You can use either method (x and y coordinates or angle and magnitude) to "
"refer to a vector, but for convenience, programmers typically use the "
"coordinate notation. For example, in Godot, the origin is the top-left "
"corner of the screen, so to place a 2D node named ``Node2D`` 400 pixels to "
"the right and 300 pixels down, use the following code:"
msgstr ""
"Se puede utilizar cualquiera de los dos métodos (coordenadas x e y o ángulo "
"y magnitud) para referirse a un vector, pero por conveniencia los "
"programadores típicamente usan la notación de coordenadas. Por ejemplo, en "
"Godot el origen es la esquina superior izquierda de la pantalla, así que "
"para colocar un nodo 2D llamado ``Node2D`` 400 píxeles a la derecha y 300 "
"píxeles hacia abajo, usa el siguiente código:"

msgid ""
"Godot supports both :ref:`Vector2 <class_Vector2>` and :ref:`Vector3 "
"<class_Vector3>` for 2D and 3D usage, respectively. The same mathematical "
"rules discussed in this article apply to both types."
msgstr ""
"Godot soporta tanto :ref:`Vector2 <class_Vector2>` como `ref:`Vector3 "
"<class_Vector3>` para uso 2D y 3D respectivamente. Las mismas reglas "
"matemáticas discutidas en este artículo se aplican a ambos tipos."

msgid "Member access"
msgstr "Acceso para miembros"

msgid ""
"The individual components of the vector can be accessed directly by name."
msgstr ""
"Se puede acceder directamente a los componentes individuales del vector por "
"nombre."

msgid "Adding vectors"
msgstr "Añadir vectores"

msgid ""
"When adding or subtracting two vectors, the corresponding components are "
"added:"
msgstr ""
"Al sumar o restar dos vectores, se suman los componentes correspondientes:"

msgid ""
"We can also see this visually by adding the second vector at the end of the "
"first:"
msgstr ""
"También podemos ver esto visualmente añadiendo el segundo vector al final "
"del primero:"

msgid "Note that adding ``a + b`` gives the same result as ``b + a``."
msgstr "Nota que sumar ``a + b`` da el mismo resultado que ``b + a``."

msgid "Scalar multiplication"
msgstr "Multiplicación escalar"

msgid ""
"Vectors represent both direction and magnitude. A value representing only "
"magnitude is called a **scalar**."
msgstr ""
"Los vectores representan tanto la dirección como la magnitud. Un valor que "
"representa sólo la magnitud se llama **escalar**."

msgid "A vector can be multiplied by a **scalar**:"
msgstr "Un vector puede ser multiplicado por un **escalar**:"

msgid ""
"Multiplying a vector by a scalar does not change its direction, only its "
"magnitude. This is how you **scale** a vector."
msgstr ""
"Multiplicar un vector por un escalar no cambia su dirección, sólo su "
"magnitud. Así es como **escala** un vector."

msgid "Practical applications"
msgstr "Aplicaciones prácticas"

msgid "Let's look at two common uses for vector addition and subtraction."
msgstr "Veamos dos usos comunes para sumar y restar vectores."

msgid "Movement"
msgstr "Movimiento"

msgid ""
"A vector can represent **any** quantity with a magnitude and direction. "
"Typical examples are: position, velocity, acceleration, and force. In this "
"image, the spaceship at step 1 has a position vector of ``(1,3)`` and a "
"velocity vector of ``(2,1)``. The velocity vector represents how far the "
"ship moves each step. We can find the position for step 2 by adding the "
"velocity to the current position."
msgstr ""
"Un vector puede representar **cualquier** cantidad con una magnitud y "
"dirección. Los ejemplos típicos son: posición, velocidad, aceleración y "
"fuerza. En esta imagen, la nave espacial en el paso 1 tiene un vector de "
"posición de ``(1,3)`` y un vector de velocidad de ``(2,1)``. El vector de "
"velocidad representa hasta dónde se mueve la nave en cada paso. Podemos "
"encontrar la posición para el paso 2 sumando la velocidad a la posición "
"actual."

msgid ""
"Velocity measures the **change** in position per unit of time. The new "
"position is found by adding velocity to the previous position."
msgstr ""
"La velocidad mide el **cambio** de posición por unidad de tiempo. La nueva "
"posición se encuentra añadiendo velocidad a la posición anterior."

msgid "Pointing toward a target"
msgstr "Apuntar hacia un objetivo"

msgid ""
"In this scenario, you have a tank that wishes to point its turret at a "
"robot. Subtracting the tank's position from the robot's position gives the "
"vector pointing from the tank to the robot."
msgstr ""
"En este escenario, hay un tanque que desea apuntar con su torreta a un "
"robot. Si se resta la posición del tanque de la posición del robot, el "
"vector apunta desde el tanque al robot."

msgid "To find a vector pointing from ``A`` to ``B`` use ``B - A``."
msgstr ""
"Para encontrar un vector que apunte de ``A`` a ``B`` se utiliza ``B - A``."

msgid "Unit vectors"
msgstr "Vectores unitarios"

msgid ""
"A vector with **magnitude** of ``1`` is called a **unit vector**. They are "
"also sometimes referred to as **direction vectors** or **normals**. Unit "
"vectors are helpful when you need to keep track of a direction."
msgstr ""
"Un vector con **magnitud** de ``1`` se llama **vector unitario**. También se "
"les conoce como **vectores de dirección** o **normales**. Los vectores "
"unitarios son útiles cuando se necesita llevar un registro de una dirección."

msgid "Normalization"
msgstr "Normalización"

msgid ""
"**Normalizing** a vector means reducing its length to ``1`` while preserving "
"its direction. This is done by dividing each of its components by its "
"magnitude. Because this is such a common operation, ``Vector2`` and "
"``Vector3`` provide a method for normalizing:"
msgstr ""
"**Normalizar** un vector significa reducir su longitud a ``1`` preservando "
"su dirección. Esto se hace dividiendo cada uno de sus componentes por su "
"magnitud. Como esta es una operación común, ``Vector2`` y ``Vector3`` "
"proveen un método para normalizar:"

msgid ""
"Because normalization involves dividing by the vector's length, you cannot "
"normalize a vector of length ``0``. Attempting to do so will result in an "
"error."
msgstr ""
"Debido a que la normalización implica dividir por la longitud del vector, no "
"se puede normalizar un vector de longitud ``0``. Si lo intentas, se "
"producirá un error."

msgid "Reflection"
msgstr "Reflexión"

msgid ""
"A common use of unit vectors is to indicate **normals**. Normal vectors are "
"unit vectors aligned perpendicularly to a surface, defining its direction. "
"They are commonly used for lighting, collisions, and other operations "
"involving surfaces."
msgstr ""
"Un uso común de los vectores unitarios es indicar **normales**. Los vectores "
"normales son vectores unitarios alineados perpendicularmente a una "
"superficie, definiendo su dirección. Se utilizan comúnmente para "
"iluminación, colisiones y otras operaciones que involucran superficies."

msgid ""
"For example, imagine we have a moving ball that we want to bounce off a wall "
"or other object:"
msgstr ""
"Por ejemplo, imagina que tenemos una pelota en movimiento que queremos "
"rebotar en una pared u otro objeto:"

msgid ""
"The surface normal has a value of ``(0, -1)`` because this is a horizontal "
"surface. When the ball collides, we take its remaining motion (the amount "
"left over when it hits the surface) and reflect it using the normal. In "
"Godot, the :ref:`Vector2 <class_Vector2>` class has a ``bounce()`` method to "
"handle this. Here is a GDScript example of the diagram above using a :ref:"
"`KinematicBody2D <class_KinematicBody2D>`:"
msgstr ""
"La superficie normal tiene un valor de ``(0, -1)`` porque es una superficie "
"horizontal. Cuando la pelota choca, tomamos el movimiento que le queda (la "
"cantidad que queda cuando golpea la superficie) y lo reflejamos usando el "
"normal. En Godot, la clase :ref:`Vector2 <class_Vector2>` tiene un método "
"``bounce()`` para manejar esto. Aquí hay un ejemplo de GDScript del diagrama "
"anterior usando un :ref:`KinematicBody2D <class_KinematicBody2D>`:"

msgid "Dot product"
msgstr "Producto punto"

msgid ""
"The **dot product** is one of the most important concepts in vector math, "
"but is often misunderstood. Dot product is an operation on two vectors that "
"returns a **scalar**. Unlike a vector, which contains both magnitude and "
"direction, a scalar value has only magnitude."
msgstr ""
"El **producto punto** es uno de los conceptos más importantes en la "
"matemática vectorial, pero a menudo es malentendido. El producto punto es "
"una operación en dos vectores que devuelve un **escalar**. A diferencia de "
"un vector, que contiene tanto la magnitud como la dirección, un valor "
"escalar sólo tiene magnitud."

msgid "The formula for dot product takes two common forms:"
msgstr "La fórmula para el producto punto toma dos formas comunes:"

msgid "and"
msgstr "y"

msgid ""
"However, in most cases it is easiest to use the built-in method. Note that "
"the order of the two vectors does not matter:"
msgstr ""
"Sin embargo, en la mayoría de los casos es más fácil utilizar el método "
"incorporado. Nótese que el orden de los dos vectores no importa:"

msgid ""
"The dot product is most useful when used with unit vectors, making the first "
"formula reduce to just ``cosθ``. This means we can use the dot product to "
"tell us something about the angle between two vectors:"
msgstr ""
"El producto punto es más útil cuando se usa con vectores unitarios, haciendo "
"que la primera fórmula se reduzca a ``cosθ``. Esto significa que podemos "
"usar el producto punto para indicarnos algo sobre el ángulo entre dos "
"vectores:"

msgid ""
"When using unit vectors, the result will always be between ``-1`` (180°) and "
"``1`` (0°)."
msgstr ""
"Cuando se utilizan vectores unitarios, el resultado estará siempre entre "
"``-1`` (180°) y ``1`` (0°)."

msgid "Facing"
msgstr "Orientación"

msgid ""
"We can use this fact to detect whether an object is facing toward another "
"object. In the diagram below, the player ``P`` is trying to avoid the "
"zombies ``A`` and ``B``. Assuming a zombie's field of view is **180°**, can "
"they see the player?"
msgstr ""
"Podemos usar este hecho para detectar si un objeto está orientado hacia otro "
"objeto. En el diagrama de abajo, el jugador ``P`` está tratando de evitar a "
"los zombis ``A`` y ``B``. Asumiendo que el campo de visión de un zombi es "
"**180°**, ¿pueden ver al jugador?"

msgid ""
"The green arrows ``fA`` and ``fB`` are **unit vectors** representing the "
"zombies' facing directions and the blue semicircle represents its field of "
"view. For zombie ``A``, we find the direction vector ``AP`` pointing to the "
"player using ``P - A`` and normalize it, however, Godot has a helper method "
"to do this called ``direction_to``. If the angle between this vector and the "
"facing vector is less than 90°, then the zombie can see the player."
msgstr ""
"Las flechas verdes ``fA`` y ``fB`` son **vectores unitarios** que "
"representan las direcciones que apuntan los zombis y el semicírculo azul "
"representa su campo de visión. Para zombie ``A``, encontramos el vector de "
"dirección ``AP`` apuntando al jugador usando ``P - A`` y lo normalizamos; "
"Godot tiene una función auxiliar para hacer esto, llamada ``direction_to``. "
"Si el ángulo entre este vector y el vector opuesto es inferior a 90°, el "
"zombi podrá ver al jugador."

msgid "In code it would look like this:"
msgstr "En código se vería así:"

msgid "Cross product"
msgstr "Producto vectorial"

msgid ""
"Like the dot product, the **cross product** is an operation on two vectors. "
"However, the result of the cross product is a vector with a direction that "
"is perpendicular to both. Its magnitude depends on their relative angle. If "
"two vectors are parallel, the result of their cross product will be a null "
"vector."
msgstr ""
"Al igual que el producto punto, el **producto vectorial** (o producto cruz) "
"es una operación sobre dos vectores. Sin embargo, el resultado del producto "
"vectorial es un vector con una dirección que es perpendicular a ambos. Su "
"magnitud depende de su ángulo relativo. Si dos vectores son paralelos, el "
"resultado de su producto cruz será nulo."

msgid "The cross product is calculated like this:"
msgstr "El producto vectorial se calcula así:"

msgid "With Godot, you can use the built-in method:"
msgstr "En Godot, puedes usar el método integrado:"

msgid ""
"In the cross product, order matters. ``a.cross(b)`` does not give the same "
"result as ``b.cross(a)``. The resulting vectors point in **opposite** "
"directions."
msgstr ""
"En el producto vectorial, el orden importa. ``a.cross(b)`` no da el mismo "
"resultado que ``b.cross(a)``. Los vectores resultantes apuntan en "
"direcciones **opuestas**."

msgid "Calculating normals"
msgstr "Calculando normales"

msgid ""
"One common use of cross products is to find the surface normal of a plane or "
"surface in 3D space. If we have the triangle ``ABC`` we can use vector "
"subtraction to find two edges ``AB`` and ``AC``. Using the cross product, "
"``AB x AC`` produces a vector perpendicular to both: the surface normal."
msgstr ""
"Un uso común de los productos vectorial es encontrar una superficie normal "
"de un plano o superficie en el espacio 3D. Si tenemos el triángulo ``ABC`` "
"podemos usar sustracción vectorial para encontrar dos bordes ``AB`` y "
"``AC``. Utilizando el producto vectorial, ``AB x AC`` produce un vector "
"perpendicular a ambos: la superficie normal."

msgid "Here is a function to calculate a triangle's normal:"
msgstr ""
"A continuación se muestra una función para calcular el normal en un "
"triángulo:"

msgid "Pointing to a target"
msgstr "Apuntando a un objetivo"

msgid ""
"In the dot product section above, we saw how it could be used to find the "
"angle between two vectors. However, in 3D, this is not enough information. "
"We also need to know what axis to rotate around. We can find that by "
"calculating the cross product of the current facing direction and the target "
"direction. The resulting perpendicular vector is the axis of rotation."
msgstr ""
"En la sección de producto punto anterior, vimos cómo se podía usar para "
"encontrar el ángulo entre dos vectores. Sin embargo, en 3D esto no es "
"suficiente información. También necesitamos saber qué eje girar. A esto "
"podemos encontrarlo calculando el producto vectorial de la dirección de "
"orientación actual y la dirección objetivo. El vector perpendicular "
"resultante es el eje de rotación."

msgid "More information"
msgstr "Más información"

msgid ""
"For more information on using vector math in Godot, see the following "
"articles:"
msgstr ""
"Para más información sobre el uso de la matemática vectorial en Godot, "
"consulta los siguientes artículos:"

msgid ":ref:`doc_vectors_advanced`"
msgstr ":ref:`doc_vectors_advanced`"

msgid ":ref:`doc_matrices_and_transforms`"
msgstr ":ref:`doc_matrices_and_transforms`"

msgid "Translation status"
msgstr "Estado de traducción"
