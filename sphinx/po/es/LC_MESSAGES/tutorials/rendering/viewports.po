# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Viewports"
msgstr "Usando Viewports"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"Think of a :ref:`Viewport <class_Viewport>` as a screen onto which the game "
"is projected. In order to see the game, we need to have a surface on which "
"to draw it; that surface is the Root :ref:`Viewport <class_Viewport>`."
msgstr ""
"Piensa en las :ref:`Viewports <class_Viewport>` como una pantalla en la que "
"se proyecta el juego. Para ver el juego necesitamos tener una superficie "
"sobre la que dibujarlo, esta superficie es el Root :ref:`Viewport "
"<class_Viewport>`(nodo raíz)."

msgid ""
":ref:`Viewports <class_Viewport>` can also be added to the scene so that "
"there are multiple surfaces to draw on. When we are drawing to a :ref:"
"`Viewport <class_Viewport>` that is not the Root, we call it a render "
"target. We can access the contents of a render target by accessing its "
"corresponding :ref:`texture <class_ViewportTexture>`. By using a :ref:"
"`Viewport <class_Viewport>` as a render target, we can either render "
"multiple scenes simultaneously or we can render to a :ref:`texture "
"<class_ViewportTexture>` which is applied to an object in the scene, for "
"example a dynamic skybox."
msgstr ""
"Los :ref:`Viewports <class_Viewport>` también se puede añadir a la escena "
"para que haya múltiples superficies sobre las que dibujar. Cuando estamos "
"dibujando a un :ref:`Viewport <class_Viewport>` que no es el Root lo "
"llamamos un render target(objetivo de renderizado). Podemos acceder al "
"contenido de un render target accediendo a su correspondiente :ref:`Texture "
"<class_ViewportTexture>`. Usando un :ref:`Viewport <class_Viewport>` como "
"objetivo de render podemos renderizar múltiples escenas simultáneamente o "
"podemos renderizar a una :ref:`Texture <class_ViewportTexture>` que se "
"aplica a un objeto de la escena, por ejemplo un skybox dinámico."

msgid ""
":ref:`Viewports <class_Viewport>` have a variety of use cases, including:"
msgstr ""
"Los :ref:`Viewports <class_Viewport>` tienen una variedad de casos de uso, "
"incluyendo:"

msgid "Rendering 3D objects within a 2D game"
msgstr "Renderización de objetos 3D dentro de un juego 2D"

msgid "Rendering 2D elements in a 3D game"
msgstr "Renderizar elementos 2D en un juego 3D"

msgid "Rendering dynamic textures"
msgstr "Renderizado de texturas dinámicas"

msgid "Generating procedural textures at runtime"
msgstr "Generación de texturas de procedimiento en tiempo de ejecución"

msgid "Rendering multiple cameras in the same scene"
msgstr "Renderizado de varias cámaras en la misma escena"

msgid ""
"What all these use cases have in common is that you are given the ability to "
"draw objects to a texture as if it were another screen and can then choose "
"what to do with the resulting texture."
msgstr ""
"Lo que todos estos casos de uso tienen en común es que se da la capacidad de "
"dibujar objetos a una textura como si fuera otra pantalla y luego puedes "
"elegir qué hacer con la textura resultante."

msgid "Input"
msgstr "Entrada"

msgid ""
":ref:`Viewports <class_Viewport>` are also responsible for delivering "
"properly adjusted and scaled input events to all their children nodes. "
"Typically, input is received by the nearest :ref:`Viewport <class_Viewport>` "
"in the tree, but you can set :ref:`Viewports <class_Viewport>` not to "
"receive input by checking 'Disable Input' to 'on'; this will allow the next "
"nearest :ref:`Viewport <class_Viewport>` in the tree to capture the input."
msgstr ""
"Los :ref:`Viewports <class_Viewport>` son también responsables de entregar "
"eventos de entrada correctamente ajustados y escalados a todos sus nodos "
"hijos. Típicamente la entrada es recibida por el :ref:`Viewport "
"<class_Viewport>` más cercano en el árbol, pero puedes establecer :ref:"
"`Viewports <class_Viewport>` para que no reciba entradas al marcar 'Disable "
"Input' en `activado`, esto permitirá que el siguiente :ref:`Viewport "
"<class_Viewport>` más cercano en el árbol capture la entrada."

msgid ""
"For more information on how Godot handles input, please read the :ref:`Input "
"Event Tutorial<doc_inputevent>`."
msgstr ""
"Para más información sobre cómo maneja Godot las entradas, por favor lee el :"
"ref:`Tutorial de Eventos de Entrada<doc_inputevent>`."

msgid "Listener"
msgstr "Oyente"

msgid ""
"Godot supports 3D sound (in both 2D and 3D nodes); more on this can be found "
"in the :ref:`Audio Streams Tutorial<doc_audio_streams>`. For this type of "
"sound to be audible, the :ref:`Viewport <class_Viewport>` needs to be "
"enabled as a listener (for 2D or 3D). If you are using a custom :ref:"
"`Viewport <class_Viewport>` to display your :ref:`World <class_World>`, "
"don't forget to enable this!"
msgstr ""
"Godot soporta el sonido 3D (tanto en nodos 2D como 3D); más sobre esto se "
"puede encontrar en el :ref:`Audio Streams Tutorial<doc_audio_streams>`. Para "
"que este tipo de sonido sea audible, el :ref:`Viewport <class_Viewport>` "
"debe estar habilitado como oyente (para 2D o 3D). Si estás usando un :ref:"
"`Viewport <class_Viewport>` personalizado para mostrar tu :ref:`World "
"<class_World>`, ¡no te olvides de habilitarlo!"

msgid "Cameras (2D & 3D)"
msgstr "Cámaras (2D y 3D)"

msgid ""
"When using a :ref:`Camera <class_Camera>` / :ref:`Camera2D "
"<class_Camera2D>`, cameras will always display on the closest parent :ref:"
"`Viewport <class_Viewport>` (going towards the root). For example, in the "
"following hierarchy:"
msgstr ""
"Cuando se usa una :ref:`Camera <class_Camera>` / :ref:`Camera2D "
"<class_Camera2D>`, las cámaras siempre se mostrarán en el padre más cercano :"
"ref:`Viewport <class_Viewport>` (yendo hacia la raíz). Por ejemplo, en la "
"siguiente jerarquía:"

msgid ""
"CameraA will display on the Root :ref:`Viewport <class_Viewport>` and it "
"will draw MeshA. CameraB will be captured by the :ref:`Viewport "
"<class_Viewport>` Node along with MeshB. Even though MeshB is in the scene "
"hierarchy, it will still not be drawn to the Root :ref:`Viewport "
"<class_Viewport>`. Similarly MeshA will not be visible from the :ref:"
"`Viewport <class_Viewport>` node because :ref:`Viewport <class_Viewport>` "
"nodes only capture nodes below them in the hierarchy."
msgstr ""
"La cámaraA aparecerá en la raíz :ref:`Viewport <class_Viewport>` y dibujará "
"MeshA. La cámaraB será capturada por el nodo :ref:`Viewport "
"<class_Viewport>` junto con MeshB. Aunque MeshB está en la jerarquía de la "
"escena, no será dibujada en el Root :ref:`Viewport <class_Viewport>`. Del "
"mismo modo, MeshA no será visible desde el nodo :ref:`Viewport "
"<class_Viewport>` porque los nodos :ref:`Viewport <class_Viewport>` sólo "
"capturan los nodos que están debajo de ellos en la jerarquía."

msgid ""
"There can only be one active camera per :ref:`Viewport <class_Viewport>`, so "
"if there is more than one, make sure that the desired one has the "
"\"current\" property set, or make it the current camera by calling:"
msgstr ""
"Sólo puede haber una cámara activa por :ref:`Viewport <class_Viewport>`, así "
"que si hay más de una, asegúrate de que la deseada tiene la propiedad "
"\"actual\" establecida, o hazla la cámara actual llamando:"

msgid ""
"By default, cameras will render all objects in their world. In 3D, cameras "
"can use their :ref:`cull_mask <class_Camera_property_cull_mask>` property "
"combined with the :ref:`VisualInstance's <class_VisualInstance>` :ref:`layer "
"<class_VisualInstance_property_layers>` property to restrict which objects "
"are rendered."
msgstr ""
"Por defecto, las cámaras renderizarán todos los objetos de su mundo. En 3D, "
"las cámaras pueden usar su propiedad :ref:`cull_mask "
"<class_Camera_property_cull_mask>` combinada con la propiedad :ref:"
"`VisualInstance's <class_VisualInstance>` :ref:`layer "
"<class_VisualInstance_property_layers>` para restringir qué objetos se "
"renderizan."

msgid "Scale & stretching"
msgstr "Escalado y estiramiento"

msgid ""
":ref:`Viewports <class_Viewport>` have a \"size\" property, which represents "
"the size of the :ref:`Viewport <class_Viewport>` in pixels. For :ref:"
"`Viewports <class_Viewport>` which are children of :ref:`ViewportContainers "
"<class_viewportcontainer>`, these values are overridden, but for all others, "
"this sets their resolution."
msgstr ""
"El :ref:`Viewport <class_Viewport>` tiene una propiedad \"size\", la que "
"representa el tamaño del :ref:`Viewport <class_Viewport>` en pixeles. Para :"
"ref:`Viewport <class_Viewport>` que son hijos de un ref:`ViewportContainer "
"<class_viewportcontainer>`, esos valores son sobreescritos pero esto define "
"su resolución."

msgid ""
"It is also possible to scale the 2D content and make the :ref:`Viewport "
"<class_Viewport>` resolution different from the one specified in size, by "
"calling:"
msgstr ""
"También es posible escalar el contenido 2D y hacer que la resolución :ref:"
"`Viewport <class_Viewport>` sea diferente de la especificada en el tamaño, "
"llamando:"

msgid ""
"The root :ref:`Viewport <class_Viewport>` uses this for the stretch options "
"in the project settings. For more information on scaling and stretching "
"visit the :ref:`Multiple Resolutions Tutorial <doc_multiple_resolutions>`"
msgstr ""
"La raíz :ref:`Viewport <class_Viewport>` utiliza esto para las opciones de "
"estiramiento en la configuración del proyecto. Para más información sobre "
"escalado y estiramiento visite el Tutorial de Múltiples Resoluciones :ref:"
"`Multiple Resolutions Tutorial <doc_multiple_resolutions>`"

msgid "Worlds"
msgstr "Mundos"

msgid ""
"For 3D, a :ref:`Viewport <class_Viewport>` will contain a :ref:`World "
"<class_World>`. This is basically the universe that links physics and "
"rendering together. Spatial-based nodes will register using the :ref:`World "
"<class_World>` of the closest :ref:`Viewport <class_Viewport>`. By default, "
"newly created :ref:`Viewports <class_Viewport>` do not contain a :ref:`World "
"<class_World>` but use the same as their parent :ref:`Viewport "
"<class_Viewport>` (the root :ref:`Viewport <class_Viewport>` always contains "
"a :ref:`World <class_World>`, which is the one objects are rendered to by "
"default). A :ref:`World <class_World>` can be set in a :ref:`Viewport "
"<class_Viewport>` using the \"world\" property, and that will separate all "
"children nodes of that :ref:`Viewport <class_Viewport>` from interacting "
"with the parent :ref:`Viewport's <class_Viewport>` :ref:`World "
"<class_World>`. This is especially useful in scenarios where, for example, "
"you might want to show a separate character in 3D imposed over the game "
"(like in StarCraft)."
msgstr ""
"Para 3D, un :ref:`Viewport <class_Viewport>` contendrá un :ref:`World "
"<class_World>`. Este es básicamente el universo que une la física y la "
"representación juntos. Los nodos de base espacial se registrarán usando el :"
"ref:`World <class_World>` del :ref:`Viewport <clase_Viewport>` más cercano. "
"Por defecto, los :ref:`Viewports <class_Viewport>` recién creados no "
"contienen un :ref:`World <class_World>` sino que usan el mismo que su padre :"
"ref:`Viewport <class_Viewport>` (la raíz :ref:`Viewport <class_Viewport>` "
"siempre contiene un :ref:`World <class_World>`, que es al que se renderizan "
"los objetos por defecto). Un :ref:`World <class_World>` puede establecerse "
"en un :ref:`Viewport <class_Viewport>` usando la propiedad \"world\", y eso "
"separará a todos los nodos hijos de ese :ref:`Viewport <class_Viewport>` de "
"la interacción con el padre :ref:`Viewport's <class_Viewport>` :ref:`World "
"<class_World>`. Esto es especialmente útil en escenarios donde, por ejemplo, "
"podrías querer mostrar un personaje separado en 3D impuesto sobre el juego "
"(como en StarCraft)."

msgid ""
"As a helper for situations where you want to create :ref:`Viewports "
"<class_Viewport>` that display single objects and don't want to create a :"
"ref:`World <class_World>`, :ref:`Viewport <class_Viewport>` has the option "
"to use its own :ref:`World <class_World>`. This is useful when you want to "
"instance 3D characters or objects in a 2D :ref:`World <class_World2D>`."
msgstr ""
"Como ayudante para situaciones en las que se quiera crear :ref:`Viewports "
"<class_Viewport>` que muestren objetos individuales y no se quiera crear un :"
"ref:`World <class_World>`, :ref:`Viewport <class_Viewport>` tiene la opción "
"de usar su propio :ref:`World <class_World>`. Esto es muy útil cuando se "
"desea crear personajes u objetos 3D en un 2D :ref:`World <class_World2D>`."

msgid ""
"For 2D, each :ref:`Viewport <class_Viewport>` always contains its own :ref:"
"`World2D <class_World2D>`. This suffices in most cases, but in case sharing "
"them may be desired, it is possible to do so by setting the :ref:`Viewport's "
"<class_Viewport>` :ref:`World2D <class_World2D>` manually."
msgstr ""
"Para 2D, cada :ref:`Viewport <class_Viewport>` siempre contiene su propio :"
"ref:`World2D <class_World2D>`. Esto es suficiente en la mayoría de los "
"casos, pero en caso de que se desee compartirlo, es posible hacerlo "
"configurando el :ref:`Viewport's <class_Viewport>` :ref:`World2D "
"<class_World2D>` manualmente."

msgid ""
"For an example of how this works, see the demo projects `3D in 2D <https://"
"github.com/godotengine/godot-demo-projects/tree/master/viewport/3d_in_2d>`_ "
"and `2D in 3D <https://github.com/godotengine/godot-demo-projects/tree/"
"master/viewport/2d_in_3d>`_ respectively."
msgstr ""
"Para un ejemplo de cómo funciona esto, ver los proyectos de demostración `3D "
"en 2D <https://github.com/godotengine/godot-demo-projects/tree/master/"
"viewport/3d_in_2d>`_ y `2D en 3D <https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport/2d_in_3d>`_ respectivamente."

msgid "Capture"
msgstr "Captura"

msgid ""
"It is possible to query a capture of the :ref:`Viewport <class_Viewport>` "
"contents. For the root :ref:`Viewport <class_Viewport>`, this is effectively "
"a screen capture. This is done with the following code:"
msgstr ""
"Es posible consultar una captura del contenido de :ref:`Viewport "
"<class_Viewport>`. Para la raíz :ref:`Viewport <class_Viewport>`, esto es "
"efectivamente una captura de pantalla. Esto se hace con el siguiente código:"

msgid ""
"But if you use this in ``_ready()`` or from the first frame of the :ref:"
"`Viewport's <class_Viewport>` initialization, you will get an empty texture "
"because there is nothing to get as texture. You can deal with it using (for "
"example):"
msgstr ""
"Pero si usas esto en ``_ready()`` o desde el primer fotograma de la "
"inicialización :ref:`Viewport's <class_Viewport>`, obtendrás una textura "
"vacía porque no hay nada que obtener como textura. Puedes tratarlo usando "
"(por ejemplo):"

msgid "Viewport Container"
msgstr "Contenedor del Viewport"

msgid ""
"If the :ref:`Viewport <class_Viewport>` is a child of a :ref:"
"`ViewportContainer <class_viewportcontainer>`, it will become active and "
"display anything it has inside. The layout looks like this:"
msgstr ""
"Si el :ref:`Viewport <class_Viewport>` es hijo de un :ref:`ViewportContainer "
"<class_viewportcontainer>`, se activará y mostrará todo lo que tenga dentro. "
"El diseño se ve así:"

msgid ""
"The :ref:`Viewport <class_Viewport>` will cover the area of its parent :ref:"
"`ViewportContainer <class_viewportcontainer>` completely if :ref:"
"`Stretch<class_viewportcontainer_property_stretch>` is set to ``true`` in :"
"ref:`ViewportContainer <class_viewportcontainer>`. Note: The size of the :"
"ref:`ViewportContainer <class_viewportcontainer>` cannot be smaller than the "
"size of the :ref:`Viewport <class_Viewport>`."
msgstr ""
"El :ref:`Viewport <class_Viewport>` abarcará completamente el área de su "
"padre :ref:`ViewportContainer <class_viewportcontainer>` si :ref:"
"`Stretch<class_viewportcontainer_property_stretch>` está ajustado a ``true`` "
"en :ref:`ViewportContainer <class_viewportcontainer>`. Nota: El tamaño del :"
"ref:`ViewportContainer <class_viewportcontainer>` no puede ser menor que el "
"tamaño del :ref:`Viewport <class_Viewport>`."

msgid "Rendering"
msgstr "Renderización"

msgid ""
"Due to the fact that the :ref:`Viewport <class_Viewport>` is an entryway "
"into another rendering surface, it exposes a few rendering properties that "
"can be different from the project settings. The first is MSAA; you can "
"choose to use a different level of MSAA for each :ref:`Viewport "
"<class_Viewport>`; the default behavior is DISABLED. You can also set the :"
"ref:`Viewport <class_Viewport>` to use HDR, HDR is very useful for when you "
"want to store values in the texture that are outside the range 0.0 - 1.0."
msgstr ""
"Debido al hecho de que el :ref:`Viewport <class_Viewport>` es una entrada a "
"otra superficie de renderizado, expone unas cuantas propiedades de "
"renderizado que pueden ser diferentes de la configuración del proyecto. La "
"primera es MSAA; puedes elegir usar un nivel diferente de MSAA para cada :"
"ref:`Viewport <class_Viewport>`; el comportamiento por defecto es DISABLED. "
"También puedes establecer el :ref:`Viewport <class_Viewport>` para usar HDR, "
"HDR es muy útil para cuando quieras almacenar valores en la textura que "
"estén fuera del rango 0.0 - 1.0."

msgid ""
"If you know how the :ref:`Viewport <class_Viewport>` is going to be used, "
"you can set its Usage to either 3D or 2D. Godot will then restrict how the :"
"ref:`Viewport <class_Viewport>` is drawn to in accordance with your choice; "
"default is 3D. The 2D usage mode is slightly faster and uses less memory "
"compared to the 3D one. It's a good idea to set the :ref:`Viewport "
"<class_Viewport>`'s Usage property to 2D if your viewport doesn't render "
"anything in 3D."
msgstr ""
"Si sabes cómo se va a usar el :ref:`Viewport <class_Viewport>`, puedes "
"establecer su uso en 3D o 2D. Godot restringirá entonces cómo se dibuja el :"
"ref:`Viewport <class_Viewport>` de acuerdo a tu elección; por defecto es 3D. "
"El modo de uso 2D es ligeramente más rápido y utiliza menos memoria en "
"comparación con el 3D. Es una buena idea establecer la propiedad de uso de :"
"ref:`Viewport <class_Viewport>` a 2D si tu viewport no renderiza nada en 3D."

msgid ""
"If you need to render 3D shadows in the viewport, make sure to set the "
"viewport's *Shadow Atlas Size* property to a value higher than 0. Otherwise, "
"shadows won't be rendered. For reference, the Project Settings define it to "
"4096 by default."
msgstr ""
"Si necesitas renderizar las sombras 3D en la ventana, asegúrate de "
"configurar la propiedad *Shadow Atlas Size* de la ventana a un valor "
"superior a 0. De lo contrario, las sombras no se renderizarán. Como "
"referencia, la Configuración del proyecto lo define a 4096 por defecto."

msgid ""
"Godot also provides a way of customizing how everything is drawn inside :ref:"
"`Viewports <class_Viewport>` using “Debug Draw”. Debug Draw allows you to "
"specify one of four options for how the :ref:`Viewport <class_Viewport>` "
"will display things drawn inside it. Debug Draw is disabled by default."
msgstr ""
"Godot también proporciona una forma de personalizar cómo se dibuja todo "
"dentro :ref:`Viewports <class_Viewport>` usando \"Debug Draw\". Debug Draw "
"permite especificar una de las cuatro opciones de cómo el :ref:`Viewport "
"<class_Viewport>` mostrará las cosas dibujadas dentro de él. Debug Draw está "
"desactivado por defecto."

msgid "*A scene drawn with Debug Draw disabled*"
msgstr "*Una escena dibujada con Debug Draw desactivado*"

msgid ""
"The other three options are Unshaded, Overdraw, and Wireframe. Unshaded "
"draws the scene without using lighting information so all the objects appear "
"flatly colored the color of their albedo."
msgstr ""
"Las otras tres opciones son sin sombra, sobregirado y alambrado. Unshaded "
"dibuja la escena sin usar la información de la iluminación, así que todos "
"los objetos aparecen coloreados de forma plana del color de su albedo."

msgid "*The same scene with Debug Draw set to Unshaded*"
msgstr "*La misma escena con Debug Draw ajustada a Unshaded*"

msgid ""
"Overdraw draws the meshes semi-transparent with an additive blend so you can "
"see how the meshes overlap."
msgstr ""
"El sobredimensionamiento dibuja las mallas semitransparentes con una mezcla "
"de aditivos para poder ver cómo se superponen las mallas."

msgid "*The same scene with Debug Draw set to Overdraw*"
msgstr "*La misma escena con Debug Draw puesta en Overdraw*"

msgid ""
"Lastly, Wireframe draws the scene using only the edges of triangles in the "
"meshes."
msgstr ""
"Por último, Wireframe dibuja la escena usando sólo los bordes de los "
"triángulos en las mallas."

msgid ""
"The effects of the Wireframe mode are only visible in the editor, not while "
"the project is running."
msgstr ""
"Los efectos del modo Wireframe sólo son visibles en el editor, no mientras "
"el proyecto está en marcha."

msgid "Render target"
msgstr "Renderizar el objetivo"

msgid ""
"When rendering to a :ref:`Viewport <class_Viewport>`, whatever is inside "
"will not be visible in the scene editor. To display the contents, you have "
"to draw the :ref:`Viewport's <class_Viewport>` :ref:`ViewportTexture "
"<class_ViewportTexture>` somewhere. This can be requested via code using "
"(for example):"
msgstr ""
"Al renderizar a un :ref:`Viewport <class_Viewport>`, lo que esté dentro no "
"será visible en el editor de escenas. Para mostrar el contenido, tienes que "
"dibujar el :ref:`Viewport's <class_Viewport>` :ref:`ViewportTexture "
"<class_ViewportTexture>` en algún lugar. Esto se puede solicitar mediante un "
"código usando (por ejemplo):"

msgid ""
"Or it can be assigned in the editor by selecting \"New ViewportTexture\""
msgstr "O se puede asignar en el editor seleccionando \"New ViewportTexture\""

msgid ""
"and then selecting the :ref:`Viewport <class_Viewport>` you want to use."
msgstr ""
"y luego seleccionando el :ref:`Viewport <class_Viewport>` que quieres usar."

msgid ""
"Every frame, the :ref:`Viewport <class_Viewport>`'s texture is cleared away "
"with the default clear color (or a transparent color if :ref:`Transparent "
"Bg<class_Viewport_property_transparent_bg>` is set to ``true``). This can be "
"changed by setting :ref:`Clear "
"Mode<class_Viewport_property_render_target_clear_mode>` to Never or Next "
"Frame. As the name implies, Never means the texture will never be cleared, "
"while next frame will clear the texture on the next frame and then set "
"itself to Never."
msgstr ""
"Cada cuadro, la textura de :ref:`Viewport <class_Viewport>` se borra con el "
"color claro por defecto (o un color transparente si :ref:`Transparent "
"Bg<class_Viewport_property_transparent_bg>` se establece en ``true``). Esto "
"se puede cambiar poniendo :ref:`Clear "
"Mode<class_Viewport_property_render_target_clear_mode>` en Never o Next "
"Frame. Como su nombre lo indica, Never significa que la textura nunca se "
"borrará, mientras que el siguiente cuadro borrará la textura en el siguiente "
"cuadro y luego se establecerá en Never."

msgid ""
"By default, re-rendering of the :ref:`Viewport <class_Viewport>` happens "
"when the :ref:`Viewport <class_Viewport>`'s :ref:`ViewportTexture "
"<class_ViewportTexture>` has been drawn in a frame. If visible, it will be "
"rendered; otherwise, it will not. This behavior can be changed to manual "
"rendering (once), or always render, no matter if visible or not. This "
"flexibility allows users to render an image once and then use the texture "
"without incurring the cost of rendering every frame."
msgstr ""
"Por defecto, la renderización de :ref:`Viewport <class_Viewport>` ocurre "
"cuando el :ref:`Viewport <class_Viewport>`'s :ref:`ViewportTexture "
"<class_ViewportTexture>` ha sido dibujado en un marco. Si es visible, se "
"renderizará; de lo contrario, no lo hará. Este comportamiento puede "
"cambiarse a renderizado manual (una vez), o siempre renderizado, sin "
"importar si es visible o no. Esta flexibilidad permite a los usuarios "
"renderizar una imagen una vez y luego usar la textura sin incurrir en el "
"costo de renderizar cada fotograma."

msgid ""
"Make sure to check the Viewport demos! Viewport folder in the demos archive "
"available to download, or https://github.com/godotengine/godot-demo-projects/"
"tree/master/viewport"
msgstr ""
"¡Asegúrate de revisar las demos de Viewport! Carpeta Viewport en el archivo "
"de demos disponible para descargar, o https://github.com/godotengine/godot-"
"demo-projects/tree/master/viewport"

msgid "Translation status"
msgstr "Estado de traducción"
