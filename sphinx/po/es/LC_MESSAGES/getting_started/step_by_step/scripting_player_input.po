# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Listening to player input"
msgstr "Escuchando la entrada del jugador"

msgid ""
"Building upon the previous lesson :ref:`doc_scripting_first_script`, let's "
"look at another important feature of any game: giving control to the player. "
"To add this, we need to modify our ``Sprite.gd`` code."
msgstr ""
"Basándonos en la lección anterior :ref:`doc_scripting_first_script`, vamos a "
"ver otra característica importante de cualquier juego: dar el control al "
"jugador. Para añadir esto, necesitamos modificar nuestro código ``Sprite."
"gd``."

msgid "You have two main tools to process the player's input in Godot:"
msgstr ""
"Tienes dos herramientas principales para procesar la entrada del jugador en "
"Godot:"

msgid ""
"The built-in input callbacks, mainly ``_unhandled_input()``. Like "
"``_process()``, it's a built-in virtual function that Godot calls every time "
"the player presses a key. It's the tool you want to use to react to events "
"that don't happen every frame, like pressing :kbd:`Space` to jump. To learn "
"more about input callbacks, see :ref:`doc_inputevent`."
msgstr ""
"Los callbacks de entrada incorporados, principalmente "
"``_unhandled_input()``. Al igual que ``_process()``, es una función virtual "
"incorporada que Godot llama cada vez que el jugador presiona una tecla. Es "
"la herramienta que desea usar para reaccionar ante eventos que no suceden en "
"cada cuadro, como presionar :kbd:`Espacio` para saltar. Para obtener más "
"información sobre los callbacks de entrada, consulte :ref:`doc_inputevent`."

msgid ""
"The ``Input`` singleton. A singleton is a globally accessible object. Godot "
"provides access to several in scripts. It's the right tool to check for "
"input every frame."
msgstr ""
"El singleton ``Input``. Un singleton es un objeto accesible globalmente. "
"Godot proporciona acceso a varios scripts. Es la herramienta adecuada para "
"verificar para las entradas en cada frame."

msgid ""
"We're going to use the ``Input`` singleton here as we need to know if the "
"player wants to turn or move every frame."
msgstr ""
"Vamos a usar el singleton ``Input`` aquí, ya que necesitamos saber si el "
"jugador quiere girar o mover cada frame."

msgid ""
"For turning, we should use a new variable: ``direction``. In our "
"``_process()`` function, replace the ``rotation += angular_speed * delta`` "
"line with the code below."
msgstr ""
"Para girar, debemos utilizar una nueva variable: ``direction``. En nuestra "
"función ``_process()``, sustituye la línea ``rotation += angular_speed * "
"delta`` por el código siguiente."

msgid ""
"Our ``direction`` local variable is a multiplier representing the direction "
"in which the player wants to turn. A value of ``0`` means the player isn't "
"pressing the left or the right arrow key. A value of ``1`` means the player "
"wants to turn right, and ``-1`` means they want to turn left."
msgstr ""
"Nuestra variable local ``direction`` es un multiplicador que representa la "
"dirección en la que el jugador quiere girar. Un valor de ``0`` significa que "
"el jugador no está presionando la tecla de flecha izquierda o derecha. Un "
"valor de ``1`` significa que el jugador quiere girar a la derecha, y ``-1`` "
"significa que quiere girar a la izquierda."

msgid ""
"To produce these values, we introduce conditions and the use of ``Input``. A "
"condition starts with the ``if`` keyword in GDScript and ends with a colon. "
"The condition is the expression between the keyword and the end of the line."
msgstr ""
"Para producir estos valores, introducimos condiciones y el uso de ``Input``. "
"Una condición comienza con la palabra clave ``if`` en GDScript y termina con "
"dos puntos. La condición es la expresión entre las palabras clave y el final "
"de la línea."

msgid ""
"To check if a key was pressed this frame, we call ``Input."
"is_action_pressed()``. The method takes a text string representing an input "
"action and returns ``true`` if the action is pressed, ``false`` otherwise."
msgstr ""
"Para verificar si se presionó una tecla en este frame, llamamos ``Input."
"is_action_pressed()``. El método toma una cadena de texto que representa una "
"acción de entrada y devuelve ``true`` si se presiona la acción, ``false`` de "
"lo contrario."

msgid ""
"The two actions we use above, \"ui_left\" and \"ui_right\", are predefined "
"in every Godot project. They respectively trigger when the player presses "
"the left and right arrows on the keyboard or left and right on a gamepad's D-"
"pad."
msgstr ""
"Las dos acciones que usamos arriba, \"ui_left\" y \"ui_right\", están "
"predefinidas en cada proyecto de Godot. Se activan respectivamente cuando el "
"jugador presiona las flechas izquierda y derecha en el teclado o izquierda y "
"derecha en el pad direccional de un gamepad."

msgid ""
"You can see and edit input actions in your project by going to Project -> "
"Project Settings and clicking on the Input Map tab."
msgstr ""
"Puede ver y editar acciones de entrada en su proyecto yendo a Proyecto -> "
"Configuración del proyecto y haciendo clic en la pestaña Mapa de entrada."

msgid ""
"Finally, we use the ``direction`` as a multiplier when we update the node's "
"``rotation``: ``rotation += angular_speed * direction * delta``."
msgstr ""
"Finalmente, usamos la ``direction`` como un multiplicador cuando "
"actualizamos la ``rotation`` del nodo: ``rotation += angular_speed * "
"direction * delta``."

msgid ""
"If you run the scene with this code, the icon should rotate when you press :"
"kbd:`Left` and :kbd:`Right`."
msgstr ""
"Si ejecuta la escena con este código, el icono debería rotar cuando "
"presione :kbd:`Izquierda` y :kbd:`Derecha`."

msgid "Moving when pressing \"up\""
msgstr "Moverse al presionar \"arriba\""

msgid ""
"To only move when pressing a key, we need to modify the code that calculates "
"the velocity. Replace the line starting with ``var velocity`` with the code "
"below."
msgstr ""
"Para movernos solo al pulsar una tecla, necesitamos modificar el código que "
"calcula la velocidad. Reemplace la línea que comienza con ``var velocity` "
"con el siguiente código."

msgid ""
"We initialize the ``velocity`` with a value of ``Vector2.ZERO``, another "
"constant of the built-in ``Vector`` type representing a 2D vector of length "
"0."
msgstr ""
"Inicializamos la ``velocity`` con un valor de ``Vector2.ZERO``, otra "
"constante incorporada del tipo ``Vector`` que representa un vector 2D de "
"longitud 0."

msgid ""
"If the player presses the \"ui_up\" action, we then update the velocity's "
"value, causing the sprite to move forward."
msgstr ""
"Si el jugador presiona la acción \"ui_up\", actualizamos el valor de la "
"velocidad, lo que hace que el sprite se mueva hacia adelante."

msgid "Complete script"
msgstr "Script completo"

msgid "Here is the complete ``Sprite.gd`` file for reference."
msgstr "Aquí está el archivo ``Sprite.gd`` completo como referencia."

msgid ""
"If you run the scene, you should now be able to rotate with the left and "
"right arrow keys and move forward by pressing :kbd:`Up`."
msgstr ""
"Si ejecuta la escena, ahora debería poder rotar con las teclas de flecha "
"izquierda y derecha y avanzar presionando :kbd:`Arriba`."

msgid "Summary"
msgstr "Sumario"

msgid ""
"In summary, every script in Godot represents a class and extends one of the "
"engine's built-in classes. The node types your classes inherit from give you "
"access to properties like ``rotation`` and ``position`` in our sprite's "
"case. You also inherit many functions, which we didn't get to use in this "
"example."
msgstr ""
"En resumen, cada script en Godot representa una clase y extiende una de las "
"clases integradas del motor. Los tipos de nodos de los que heredan tus "
"clases te dan acceso a propiedades como ``rotation`` y ``position`` en el "
"caso de nuestro sprite. También heredas muchas función."

msgid ""
"In GDScript, the variables you put at the top of the file are your class's "
"properties, also called member variables. Besides variables, you can define "
"functions, which, for the most part, will be your classes' methods."
msgstr ""
"En GDScript, las variables que pones en la parte superior del archivo son "
"las propiedades de su clase, también llamadas variables miembro. Además de "
"las variables, puede definir funciones que, en su mayor parte, serán los "
"métodos de sus clases."

msgid ""
"Godot provides several virtual functions you can define to connect your "
"class with the engine. These include ``_process()``, to apply changes to the "
"node every frame, and ``_unhandled_input()``, to receive input events like "
"key and button presses from the users. There are quite a few more."
msgstr ""
"Godot proporciona varias funciones virtuales que puedes definir para "
"conectar tu clase con el motor. Estos incluyen ``_process()``, para aplicar "
"cambios al nodo en cada cuadro, y ``_unhandled_input()``, para recibir "
"eventos de entrada como pulsaciones de teclas y botones por parte de los "
"usuarios. Hay bastantes más."

msgid ""
"The ``Input`` singleton allows you to react to the players' input anywhere "
"in your code. In particular, you'll get to use it in the ``_process()`` loop."
msgstr ""
"El singleton ``Input`` le permite reaccionar a la entrada de los jugadores "
"en cualquier parte de su código. En particular, podrás usarlo en el bucle "
"``_process()``."

msgid ""
"In the next lesson :ref:`doc_signals`, we'll build upon the relationship "
"between scripts and nodes by having our nodes trigger code in scripts."
msgstr ""
"En la siguiente lección :ref:`doc_signals`, ampliaremos la relación entre "
"scripts y nodos haciendo que nuestros nodos activen código en scripts."

msgid "Translation status"
msgstr "Estado de traducción"
