# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Señal"

msgid "Using signals"
msgstr "Usando Señales"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"En esta lección, veremos las señales. Son mensajes que emiten los nodos "
"cuando les sucede algo específico, como que se presiona un botón. Otros "
"nodos pueden conectarse a esa señal y llamar a una función cuando ocurra el "
"evento."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Las señales son un mecanismo de delegación incorporado en Godot que permite "
"a un objeto del juego reaccionar a un cambio en otro sin que se referencien "
"entre sí. El uso de señales limita el `acoplamiento <https://en.wikipedia."
"org/wiki/Coupling_(computer_programming)>`_ y mantiene tu código flexible."

msgid ""
"For example, you might have a life bar on the screen that represents the "
"player’s health. When the player takes damage or uses a healing potion, you "
"want the bar to reflect the change. To do so, in Godot, you would use "
"signals."
msgstr ""
"Por ejemplo, puede tener una barra de vida en la pantalla que represente la "
"salud del jugador. Cuando el jugador recibe daño o usa una poción curativa, "
"desea que la barra refleje el cambio. Para hacerlo, en Godot, usarías "
"señales."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it here: https://"
"gameprogrammingpatterns.com/observer.html"
msgstr ""
"Como se mencionó en la introducción, las señales son la versión de Godot del "
"patrón observador. Puede obtener más información al respecto aquí: https://"
"gameprogrammingpatterns.com/observer.htm"

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson (:"
"ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Ahora utilizaremos una señal para hacer que nuestro icono de Godot de la "
"lección anterior (:ref:`doc_scripting_player_input`) se mueva y se detenga "
"pulsando un botón."

msgid "Scene setup"
msgstr "Configuración de la escena"

msgid ""
"To add a button to our game, we will create a new \"main\" scene which will "
"include both a button and the ``Sprite.tscn`` scene that we scripted in "
"previous lessons."
msgstr ""
"Para agregar un botón a nuestro juego, crearemos una nueva escena \"main\" "
"que incluirá tanto un botón como la escena ``Sprite.tscn`` que escribimos en "
"lecciones anteriores."

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr "Cree una nueva escena yendo al menú Escenas -> Nueva escena."

msgid ""
"In the Scene dock, click the 2D Scene button. This will add a Node2D as our "
"root."
msgstr ""
"En el panel Escenas, haga clic en el botón Escena 2D. Esto agregará un "
"Node2D como nuestra raíz."

msgid ""
"In the FileSystem dock, click and drag the ``Sprite.tscn`` file you saved "
"previously onto the Node2D to instantiate it."
msgstr ""
"En el panel del Sistema de Archivos, haga clic y arrastre el archivo "
"``Sprite.tscn`` que guardó previamente en Node2D para crear una instancia."

msgid ""
"We want to add another node as a sibling of the Sprite. To do so, right-"
"click on Node2D and select Add Child Node."
msgstr ""
"Queremos agregar otro nodo como hermano del Sprite. Para hacerlo, haga clic "
"con el botón derecho en Node2D y seleccione Añadir Nodo Hijo."

msgid "Search for the Button node type and add it."
msgstr "Busque el tipo de nodo Botón y agréguelo."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"El nodo es pequeño por defecto. Haga clic y arrastre el controlador inferior "
"derecho del botón en el viewport para cambiar su tamaño."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Si no ve los controladores, asegúrese de que la herramienta de selección "
"esté activa en la barra de herramientas."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr "Haz clic y arrastra el botón para moverlo más cerca del sprite."

msgid ""
"You can also write a label on the Button by editing its Text property in the "
"Inspector. Enter \"Toggle motion\"."
msgstr ""
"También puede escribir una etiqueta en el Botón editando su propiedad Texto "
"en el Inspector. Introduzca \"Toggle motion\"."

msgid "Your scene tree and viewport should look like this."
msgstr "Tu árbol de escenas y el viewport deberían verse así."

msgid ""
"Save your newly created scene. You can then run it with :kbd:`F6`. At the "
"moment, the button will be visible, but nothing will happen if you press it."
msgstr ""
"Guarde su escena recién creada. Luego puede ejecutarla con :kbd:`F6`. De "
"momento, el botón estará visible, pero no pasará nada si lo pulsas."

msgid "Connecting a signal in the editor"
msgstr "Conexión de una señal en el editor"

msgid ""
"Here, we want to connect the Button's \"pressed\" signal to our Sprite, and "
"we want to call a new function that will toggle its motion on and off. We "
"need to have a script attached to the Sprite node, which we do from the "
"previous lesson."
msgstr ""
"Aquí, queremos conectar la señal \"pressed\" del Botón a nuestro Sprite, y "
"queremos llamar a una nueva función que activará y desactivará su "
"movimiento. Necesitamos tener un script adjunto al nodo Sprite, lo cual "
"hicimos en la lección anterior."

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Puede conectar señales en el panel Nodos. Seleccione el nodo Button y, en el "
"lado derecho del editor, haga clic en la pestaña denominada \"Nodos\" junto "
"al Inspector."

msgid "The dock displays a list of signals available on the selected node."
msgstr ""
"El panel muestra una lista de señales disponibles en el nodo seleccionado."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Haga doble clic en la señal \"pressed\" para abrir la ventana de conexión "
"del nodo."

msgid ""
"There, you can connect the signal to the Sprite node. The node needs a "
"receiver method, a function that Godot will call when the Button emits the "
"signal. The editor generates one for you. By convention, we name these "
"callback methods \"_on_NodeName_signal_name\". Here, it'll be "
"\"_on_Button_pressed\"."
msgstr ""
"Allí, puede conectar la señal al nodo Sprite. El nodo necesita un método "
"receptor, una función que Godot llamará cuando el Button emita la señal. El "
"editor genera uno para usted. Por convención, llamamos a estos métodos "
"callback \"_on_NodeName_signal_name\". Aquí, será \"_on_Button_pressed\"."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Al conectar señales a través del panel de Nodos del editor, puede usar dos "
"modos. El simple solo le permite conectarse a nodos que tienen un script "
"adjunto y crea una nueva función de devolución de llamada en ellos."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"La vista avanzada le permite conectarse a cualquier nodo y a cualquier "
"función incorporada, añadir argumentos a la llamada de retorno y establecer "
"opciones. Puedes cambiar el modo en la parte inferior derecha de la ventana "
"haciendo clic en el botón Avanzado."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Haga clic en el botón Conectar para completar la conexión de la señal y "
"saltar al espacio de trabajo Script. Debería ver el nuevo método con un "
"icono de conexión en el margen izquierdo."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Si hace clic en el icono, aparece una ventana que muestra información sobre "
"la conexión. Esta función solo está disponible cuando se conectan nodos en "
"el editor."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Reemplacemos la línea con la palabra clave ``pass`` con código que cambiará "
"el movimiento del nodo."

msgid ""
"Our Sprite moves thanks to code in the ``_process()`` function. Godot "
"provides a method to toggle processing on and off: :ref:`Node.set_process() "
"<class_Node_method_set_process>`. Another method of the Node class, "
"``is_processing()``, returns ``true`` if idle processing is active. We can "
"use the ``not`` keyword to invert the value."
msgstr ""
"Nuestro Sprite se mueve gracias al código en la función ``_process()``. "
"Godot proporciona un método para activar y desactivar el procesamiento: :ref:"
"`Node.set_process() <class_Node_method_set_process>`. Otro método de la "
"clase Node, ``is_processing()``, retorna ``true`` si el procesamiento por "
"defecto está activo. Podemos usar la palabra clave ``not`` para invertir el "
"valor."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Esta función alternará el procesamiento y, sucesivamente, la moción del "
"icono entre activa e inactiva tras apretar el botón."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Antes de probar el juego, debemos simplificar nuestra función ``_process()`` "
"para mover el nodo automaticamente y no esperar un aporte del usuario. "
"Remplazalo con el siguiente código, el cual vimos hace dos lecciones:"

msgid "Your complete ``Sprite.gd`` code should look like the following."
msgstr "El código completo de``Sprite2D.gd`` debería verse como el siguiente."

msgid ""
"Run the scene now and click the button to see the sprite start and stop."
msgstr ""
"Ejecuta la escena y haz clic en el botón para ver el sprite comenzar y parar."

msgid "Connecting a signal via code"
msgstr "Conexión de una señal a través de código"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Puedes conectar señales a través de código en vez de usar el editor. Esto es "
"necesario cuando creas nodos o representas escenas usando instancias dentro "
"de un script."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Vamos a usar un nodo diferente aquí. Godot tiene un nodo :ref:`Timer "
"<class_Timer>` que es útil para implementar tiempos de espera para "
"habilidades, recargas de armas, y más."

msgid ""
"Head back to the 2D workspace. You can either click the \"2D\" text at the "
"top of the window or press :kbd:`Ctrl + F1` (:kbd:`Alt + 1` on macOS)."
msgstr ""
"Regrese al espacio de trabajo 2D. Puede hacer clic en el texto \"2D\" en la "
"parte superior de la ventana o presionar :kbd:`Ctrl + F1` (:kbd:`Alt + 1` en "
"macOS)."

msgid ""
"In the Scene dock, right-click on the Sprite node and add a new child node. "
"Search for Timer and add the corresponding node. Your scene should now look "
"like this."
msgstr ""
"En el dock Escena, haz click con el botón derecho en el nodo Sprite y añade "
"un nuevo nodo hijo. Busca Timer y añade el nodo correspondiente. Tu escena "
"debería tener ahora este aspecto."

msgid ""
"With the Timer node selected, go to the Inspector and check the "
"**Autostart** property."
msgstr ""
"Con el nodo Timer seleccionado, ve al Inspector y revisa la propiedad "
"**Autostart**."

msgid ""
"Click the script icon next to Sprite to jump back to the scripting workspace."
msgstr ""
"Haz clic en el icono de script al lado del Sprite para volver al espacio de "
"trabajo de scripts."

msgid "We need to do two operations to connect the nodes via code:"
msgstr "Debemos hacer dos operaciones para conectar los nodos con código:"

msgid "Get a reference to the Timer from the Sprite."
msgstr "Obtenga una referencia al Timer del Sprite."

msgid "Call the Timer's ``connect()`` method."
msgstr "Ejecuta el método ``connect()`` del temporizador."

msgid ""
"To connect to a signal via code, you need to call the ``connect()`` method "
"of the node you want to listen to. In this case, we want to listen to the "
"Timer's \"timeout\" signal."
msgstr ""
"Para conectar una señal con código, debes ejecutar el método ``connect()`` "
"del nodo al cual quieras escuchar. En este caso, queremos escuchar la señal "
"\"timeout\" del temporizador."

msgid ""
"We want to connect the signal when the scene is instantiated, and we can do "
"that using the :ref:`Node._ready() <class_Node_method__ready>` built-in "
"function, which is called automatically by the engine when a node is fully "
"instantiated."
msgstr ""
"Queremos conectar la señal cuando la escena es instanciada, y podemos "
"hacerlo usando la función integrada :ref:`Node._ready() "
"<class_Node_method__ready>`, que el motor llama automáticamente cuando un "
"nodo está completamente instanciado."

msgid ""
"To get a reference to a node relative to the current one, we use the method :"
"ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Para obtener una referencia al nodo relativo al actual, usamos el método :"
"ref:`Node.get_node() <class_Node_method_get_node>`. Podemos almacenar la "
"referencia en una variable."

msgid ""
"The function ``get_node()`` looks at the Sprite's children and gets nodes by "
"their name. For example, if you renamed the Timer node to \"BlinkingTimer\" "
"in the editor, you would have to change the call to "
"``get_node(\"BlinkingTimer\")``."
msgstr ""
"La función ``get_node()`` comprueba los descendientes del Sprite y obtiene "
"los nodos por su nombre. Por ejemplo, si has renombrado el nodo temporizador "
"a \"BlinkingTimer\" en el editor, deberías de cambiar la llamada a "
"``get_node(\"BlinkingTimer\")``."

msgid ""
"We can now connect the Timer to the Sprite in the ``_ready()`` function."
msgstr ""
"Ahora podemos conectar el temporizador al sprite en la función ``_ready()``."

msgid ""
"The line reads like so: we connect the Timer's \"timeout\" signal to the "
"node to which the script is attached (``self``). When the Timer emits "
"\"timeout\", we want to call the function \"_on_Timer_timeout\", that we "
"need to define. Let's add it at the bottom of our script and use it to "
"toggle our sprite's visibility."
msgstr ""
"La linea es interpretada de la siguiente manera: conectamos la señal "
"\"timeout\" del temporizador al nodo al cual el script está adjunto "
"(``self``). Cuando el temporizador emite \"timeout\", queremos ejecutar la "
"función \"_on_Timer_timeout\", la cual tenemos que definir. Vamos a añadirla "
"al final de nuestro script y usarla para alternar la visibilidad de nuestro "
"sprite."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"La propiedad ``visible``es un boolean que controla la visibilidad de nuestro "
"nodo. La línea ``visible = not visible``alterna el valor. Si ``visible`` es "
"``true``, se vuelve ``false``, y vice-versa."

msgid ""
"If you run the scene now, you will see that the sprite blinks on and off, at "
"one second intervals."
msgstr ""
"Si ejecuta la escena ahora, verá que el sprite se enciende y se apaga, a "
"intervalos de un segundo."

msgid "Complete script"
msgstr "Script completo"

msgid ""
"That's it for our little moving and blinking Godot icon demo! Here is the "
"complete ``Sprite.gd`` file for reference."
msgstr ""
"Eso es todo para nuestro pequeño icono de Godot en movimiento y parpadeando. "
"Aquí está el archivo completo ``Sprite.gd`` como referencia."

msgid "Custom signals"
msgstr "Señales personalizadas"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Está sección es una referencia de cómo definir y usar tus propias señales, y "
"no se basa en el proyecto creado en lecciones anteriores."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Puedes definir señales personalizadas en un script. Digamos, por ejemplo, "
"que quieres mostrar una pantalla de derrota cuando la vida del jugador "
"alcanza 0. Para hacerlo, podrías definir una señal llamada \"died\" o "
"\"health_depleted\" cuando su vida llegue a 0."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Como las señales representan eventos que acaban de ocurrir, generalmente "
"usamos un verbo en pasado como nombre."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Tus señales funcionan de la misma manera que las incorporadas: aparecen en "
"la pestaña Nodos y puede conectarse a ellas como cualquier otra."

msgid "To emit a signal in your scripts, call ``emit_signal()``."
msgstr ""
"Para emitir una señal mediante código, utiliza la función ``emit_signal()``."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Una señal puede declarar opcionalmente uno o más argumentos. Especifique los "
"nombres de los argumentos entre paréntesis:"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Estos argumentos se muestran en el panel de nodos del editor, y Godot puede "
"usarlos para generar funciones de callback para usted. Sin embargo, usted "
"puede seguir emitiendo cualquier número de argumentos cuando emite señales, "
"así que depende de usted emitir los valores correctos."

msgid ""
"To emit values along with the signal, add them as extra arguments to the "
"``emit_signal()`` function:"
msgstr ""
"Para emitir valores junto con la señal, agréguelos como argumentos extra a "
"la función ``emit_signal``:"

msgid "Summary"
msgstr "Sumario"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Cualquier nodo en Godot emite señales cuando les sucede algo específico, "
"como cuando se presiona un botón. Otros nodos pueden conectarse a señales "
"individuales y reaccionar a eventos seleccionados."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Las señales tienen muchos usos. Con ellos, puedes reaccionar a un nodo que "
"entra o sale del mundo del juego, a una colisión, a un personaje que entra o "
"sale de un área, a un elemento de la interfaz que cambia de tamaño y mucho "
"más."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Por ejemplo, un :ref:`Area2D <class_Area2D>` que representa una moneda emite "
"una señal ``body_entered`` cada vez que el cuerpo físico del jugador entra "
"en su forma de colisión, permitiéndote saber cuándo el jugador la recogió."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"En la siguiente sección, :ref:`doc_your_first_2d_game`, crearás un juego 2D "
"completo y pondrás en práctica todo lo que has aprendido hasta ahora."

msgid "Translation status"
msgstr "Estado de traducción"
