# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the player scene"
msgstr "Creando la escena del jugador"

msgid ""
"With the project settings in place, we can start working on the player-"
"controlled character."
msgstr ""
"Con la configuración del proyecto en su lugar, podemos comenzar a trabajar "
"en el personaje controlado por el jugador."

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"La primer escena define el objeto ``Player``. Uno de los beneficios de crear "
"una escena aparte para el jugador es que se puede probar de manera separada, "
"aún antes de haber creado otras partes del juego."

msgid "Node structure"
msgstr "Estructura de nodos"

msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""
"Para empezar, necesitamos elegir un nodo raíz para el objeto jugador. Como "
"regla general, el nodo raíz de una escena debe reflejar la funcionalidad "
"deseada del objeto - lo que el objeto *es*. Haz clic en el botón \"Otro "
"Nodo\" y añade un nodo :ref:`Area2D <clase_Area2D>` a la escena."

msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godos mostrará un ícono de advertencia junto al nodo en el árbol de la "
"escena. Puedes ignorarlo por ahora, lo resolveremos más adelante."

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"Con ``Area2D`` podemos detectar objetos que se superponen o entran en "
"contacto con el jugador. Cambia su nombre a ``Player`` haciendo clic en el "
"nombre del nodo. Este es el nodo raíz de la escena. Podemos añadir nodos "
"adicionales al player para añadir funcionalidad."

msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"Antes de añadir ningún hijo al nodo ``Player``, queremos asegurarnos de que "
"no los movemos o redimensionamos accidentalmente haciendo clic sobre ellos. "
"Selecciona el nodo y haz clic en el icono a la derecha del candado; su "
"tooltip dice \"Asegura que los hijos del objeto no son seleccionables.\""

msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Guarda la escena. Haz clic en Escenas -> Guardar escena, o presiona "
"``Ctrl+S`` en Windows/Linux o ``Comando + S`` en Mac."

msgid "For this project, we will be following the Godot naming conventions."
msgstr ""
"Para este proyecto, seguiremos las convenciones de nomenclatura de Godot."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Clases (nodos) usan PascalCase, variables y funciones utilizan "
"snake_case, y las constantes TODO_MAYUSCULAS (Lee :ref:"
"`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Las clases, las variables de exportación y los métodos usan "
"PascalCase, los campos privados usan _camelCase, las variables y los "
"parámetros locales usan camelCase (Ver :ref:`doc_c_sharp_styleguide`). Ten "
"cuidado de escribir los nombres de los métodos de manera precisa al conectar "
"señales."

msgid "Sprite animation"
msgstr "Animación del sprite"

msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"[empty]\" -> \"New SpriteFrames\". Click again to open the "
"\"SpriteFrames\" panel:"
msgstr ""
"Haz clic en el nodo ``Player`` y añade un nodo :ref:`AnimatedSprite "
"<class_AnimatedSprite>` como hijo. El ``AnimatedSprite`` se encargará de la "
"apariencia y las animaciones de nuestro jugador. Observa que hay un símbolo "
"de advertencia junto al nodo. Un ``AnimatedSprite`` requiere un recurso :ref:"
"`SpriteFrames <class_SpriteFrames>`, compuesto por una lista de las "
"animaciones que puede mostrar. Para crear uno, busca la propiedad ``Frames`` "
"en el Inspector y haz clic en \"[vacío]\" -> \"Nuevo SpriteFrames\". Haga "
"clic de nuevo para abrir el panel \"SpriteFrames\":"

msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"walk\". Then click the \"New Animation\" button to create a second "
"animation named \"up\". Find the player images in the \"FileSystem\" tab - "
"they're in the ``art`` folder you unzipped earlier. Drag the two images for "
"each animation, named ``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, "
"into the \"Animation Frames\" side of the panel for the corresponding "
"animation:"
msgstr ""
"A la izquierda hay una lista de animaciones. Haz clic en la opción "
"\"default\" y renómbrala a \"walk\". Luego haz clic en el botón \"Nueva "
"Animación\" para crear una segunda animación llamada \"up\". Busca las "
"imágenes en el panel \"Sistema de Archivos\", están en la carpeta ``art`` de "
"la carpeta descomprimina anteriormente. Arrastra las dos imágenes, llamadas "
"``playerGrey_up[1/2]`` y ``playerGrey_walk[1/2]`` para cada animación a la "
"sección \"Cuadros de animación\" que corresponde en el panel:"

msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"Las imágenes del player son un poco grandes para la ventana del juego, así "
"que tenemos que reducirlas. Haz clic en el nodo ``AnimatedSprite`` y "
"establece la propiedad ``Scale`` en ``(0.5, 0.5)``. Puedes encontrarla en el "
"Inspector bajo el título ``Node2D``."

msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\"\" -> "
"\"New CapsuleShape2D\". Using the two size handles, resize the shape to "
"cover the sprite:"
msgstr ""
"Finalmente, añade un :ref:`CollisionShape2D <class_CollisionShape2D>` como "
"hijo de ``Player``. Esto determinará el \"hitbox\" del jugador, o los "
"límites de su área de colisión. Para este personaje, un nodo "
"``CapsuleShape2D`` sería el más indicado ya que se ajusta mejor a la imagen, "
"así que junto a \"Shape\" en el Inspector, haz clic en \"<null>\" -> \"New "
"CapsuleShape2D\". Ahora usa los dos manejadores de tamaño y redimensiona la "
"forma de colisión para cubrir el sprite:"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "Cuando hayas terminado, tu escena ``Player`` debería verse así:"

msgid "Make sure to save the scene again after these changes."
msgstr "Estate seguro de salvar la escena de nuevo después de estos cambios."

msgid ""
"In the next part, we'll add a script to the player node to move and animate "
"it. Then, we'll set up collision detection to know when the player got hit "
"by something."
msgstr ""
"En la siguiente parte, agregaremos un script al nodo de Player para moverlo "
"y animarlo. Luego, configuraremos la detección de colisiones para saber "
"cuándo el jugador fue golpeado por algo."

msgid "Translation status"
msgstr "Estado de traducción"
