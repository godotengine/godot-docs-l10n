# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Bisecting regressions"
msgstr "Búsqueda de regresiones mediante bisección"

msgid ""
"Bisecting is a way to find regressions in software. After reporting a bug on "
"the `Godot repository on GitHub <https://github.com/godotengine/godot>`__, "
"you may be asked by a contributor to *bisect* the issue. Bisecting makes it "
"possible for contributors to fix bugs faster, as they can know in advance "
"which commit caused the regression. Your effort will be widely appreciated :)"
msgstr ""
"La bisección es una forma de encontrar regresiones en el software. Después "
"de reportar un error en el `repositorio de Godot en GitHub <https://github."
"com/godotengine/godot>`__, es posible que un colaborador te pida "
"*biseccionar* el problema. La bisección permite a los colaboradores "
"solucionar los errores más rápido, ya que pueden conocer de antemano qué "
"commit causó la regresión. ¡Tu esfuerzo será muy apreciado! :)"

msgid "The guide below explains how to find a regression by bisecting."
msgstr ""
"La guía a continuación explica cómo encontrar una regresión mediante la "
"bisección."

msgid "What is bisecting?"
msgstr "¿Qué es Visual Scripting?"

msgid ""
"Godot developers use the `Git <https://git-scm.com/>`__ version control "
"system. In the context of Git, bisecting is the process of performing a "
"manual `binary search <https://en.wikipedia.org/wiki/"
"Binary_search_algorithm>`__ to determine when a regression appeared. While "
"it's typically used for bugs, it can also be used to find other kinds of "
"unexpected changes such as performance regressions."
msgstr ""
"Los desarrolladores de Godot utilizan el sistema de control de versiones "
"`Git <https://git-scm.com/>`__. En el contexto de Git, la bisección es el "
"proceso de realizar una `búsqueda binaria <https://en.wikipedia.org/wiki/"
"Binary_search_algorithm>`__ manual para determinar cuándo apareció una "
"regresión. Aunque normalmente se utiliza para buscar errores, también puede "
"usarse para encontrar otros tipos de cambios inesperados, como regresiones "
"de rendimiento."

msgid "Using official builds to speed up bisecting"
msgstr "Usando compilaciones oficiales para acelerar la bisección"

msgid ""
"Before using Git's ``bisect`` command, we strongly recommend trying to "
"reproduce the bug with an older (or newer) official release. This greatly "
"reduces the range of commits that potentially need to be built from source "
"and tested. You can find binaries of official releases, as well as alphas, "
"betas, and release candidates `here <https://downloads.tuxfamily.org/"
"godotengine/>`__."
msgstr ""
"Antes de usar el comando ``bisect`` de Git, recomendamos encarecidamente "
"intentar reproducir el error con una versión oficial anterior (o más "
"reciente). Esto reduce en gran medida el rango de commits que potencialmente "
"necesitan ser compilados desde el código fuente y probados. Puedes encontrar "
"binarios de versiones oficiales, así como versiones alfa, beta y candidatas "
"a lanzamiento `aquí <https://downloads.tuxfamily.org/godotengine/>`__."

msgid ""
"For example, if you've reported a bug against Godot 3.2, you should first "
"try to reproduce the bug in Godot 3.1 (not a patch release, see below for "
"the reason). If the bug doesn't occur there, try to reproduce it in Godot "
"3.2 *beta 1* (which is roughly in the middle of all test builds available). "
"If you can't reproduce the bug with Godot 3.2 beta 1, then try newer betas "
"and RC builds. If you do manage to reproduce the bug with Godot 3.2 beta 1, "
"then try older alpha builds."
msgstr ""
"Por ejemplo, si has informado de un error en Godot 3.2, debes intentar "
"primero reproducir el error en Godot 3.1 (no una versión de parche, ver más "
"abajo la razón). Si el error no ocurre allí, intenta reproducirlo en Godot "
"3.2 *beta 1* (que está aproximadamente en el centro de todas las versiones "
"de prueba disponibles). Si no puedes reproducir el error con Godot 3.2 beta "
"1, entonces prueba con versiones beta más recientes y versiones candidatas a "
"lanzamiento (RC). Si logras reproducir el error con Godot 3.2 beta 1, "
"entonces intenta con versiones alfa más antiguas."

msgid ""
"For bisecting regressions, don't use patch releases such as Godot 3.1.2. "
"Instead, use the minor version's first release like Godot 3.1. This is "
"because patch releases are built from a separate *stable branch*. This kind "
"of branch doesn't follow the rest of Godot's development, which is done in "
"the ``master`` branch."
msgstr ""
"Para bisectar regresiones, no utilices versiones de parche como Godot 3.1.2. "
"En su lugar, utiliza la primera versión de la versión menor, como Godot 3.1. "
"Esto se debe a que las versiones de parche se construyen a partir de una "
"*rama estable* separada. Este tipo de rama no sigue el resto del desarrollo "
"de Godot, que se realiza en la rama ``master``."

msgid "The Git bisect command"
msgstr "El comando \"Git bisect\""

msgid ""
"If you've found a build that didn't exhibit the bug in the above testing "
"process, you can now start bisecting the regression. The Git version control "
"system offers a built-in command for this: ``git bisect``. This makes the "
"process semi-automated as you only have to build the engine, run it and try "
"to reproduce the bug."
msgstr ""
"Si has encontrado una compilación que no muestra el error durante el proceso "
"de prueba mencionado anteriormente, ahora puedes comenzar a bisectar la "
"regresión. El sistema de control de versiones Git ofrece un comando "
"incorporado para esto: ``git bisect``. Esto hace que el proceso sea semi-"
"automatizado, ya que solo tienes que compilar el motor, ejecutarlo e "
"intentar reproducir el error."

msgid ""
"Before bisecting a regression, you need to set up a build environment to "
"compile Godot from source. To do so, read the :ref:`Compiling <toc-devel-"
"compiling>` page for your target platform. (Compiling Godot from source "
"doesn't require C++ programming knowledge.)"
msgstr ""
"Antes de bisectar una regresión, necesitas configurar un entorno de "
"compilación para compilar Godot desde el código fuente. Para hacerlo, lee la "
"página de :ref:`Compilar <toc-devel-compiling>` para tu plataforma de "
"destino. (Compilar Godot desde el código fuente no requiere conocimientos de "
"programación en C++)"

msgid ""
"Note that compiling Godot can take a while on slow hardware (up an hour for "
"each full rebuild on a slow dual-core CPU). This means the full process can "
"take up to several hours. If your hardware is too slow, you may want to stop "
"there and report the results of your \"pre-bisecting\" on the GitHub issue "
"so another contributor can continue bisecting from there."
msgstr ""
"Ten en cuenta que compilar Godot puede llevar bastante tiempo en hardware "
"lento (hasta una hora para cada reconstrucción completa en una CPU lenta de "
"doble núcleo). Esto significa que el proceso completo puede tardar varias "
"horas. Si tu hardware es demasiado lento, es posible que desees detenerte "
"allí y reportar los resultados de tu \"pre-bisecting\" en el problema de "
"GitHub para que otro colaborador pueda continuar bisectando desde ese punto."

msgid ""
"To start bisecting, you must first determine the commit hashes (identifiers) "
"of the \"bad\" and \"good\" build. \"bad\" refers to the build that exhibits "
"the bug, whereas \"good\" refers to the version that doesn't exhibit the "
"bug. If you're using a pre-release build as the \"good\" or \"bad\" build, "
"browse the `download mirror <https://downloads.tuxfamily.org/godotengine/"
">`__, go to the folder that contains the pre-release you downloaded and look "
"for the ``README.txt`` file. The commit hash is written inside that file."
msgstr ""
"Para comenzar el bisecting, primero debes determinar los identificadores de "
"los commits (hashes) de la compilación \"mala\" y \"buena\". \"Mala\" se "
"refiere a la compilación que muestra el error, mientras que \"buena\" se "
"refiere a la versión que no muestra el error. Si estás utilizando una "
"compilación de prelanzamiento como la compilación \"buena\" o \"mala\", "
"navega hacia el `mirror de descargas <https://downloads.tuxfamily.org/"
"godotengine/>`__, ve a la carpeta que contiene el prelanzamiento que "
"descargaste y busca el archivo \"README.txt\". El identificador del commit "
"estará escrito dentro de ese archivo."

msgid ""
"If you're using a stable release as the \"good\" or \"bad\" build, use one "
"of the following commit hashes depending on the version:"
msgstr ""
"Si estás utilizando una versión estable como la compilación \"buena\" o "
"\"mala\", usa uno de los siguientes identificadores de commit según la "
"versión:"

msgid ""
"To refer to the latest state of the master branch, you can use ``master`` "
"instead of a commit hash."
msgstr ""
"Para hacer referencia al estado más reciente de la rama ``master``, puedes "
"usar ``master`` en lugar de un identificador de commit."

msgid ""
":ref:`Get Godot's source code using Git <doc_getting_source>`. Once this is "
"done, in the terminal window, use ``cd`` to reach the Godot repository "
"folder and enter the following command:"
msgstr ""
":ref:`Obtener el código fuente de Godot utilizando Git "
"<doc_getting_source>`. Una vez hecho esto, en la ventana de la terminal, "
"utiliza ``cd`` para navegar hasta la carpeta del repositorio de Godot y "
"ejecuta el siguiente comando:"

msgid "Compile Godot. This assumes you've set up a build environment:"
msgstr ""
"Compila Godot. Esto asume que has configurado un entorno de compilación:"

msgid ""
"Since building Godot takes a while, you want to dedicate as many CPU threads "
"as possible to the task. This is what the ``-j`` parameter does. Here, the "
"command assigns 4 CPU threads to compiling Godot."
msgstr ""
"Dado que compilar Godot lleva tiempo, quieres dedicar tantos hilos de CPU "
"como sea posible a la tarea. Eso es lo que hace el parámetro ``-j``. Aquí, "
"el comando asigna 4 hilos de CPU para compilar Godot."

msgid ""
"Run the binary located in the ``bin/`` folder and try to reproduce the bug."
msgstr ""
"Ejecuta el archivo binario que se encuentra en la carpeta ``bin/`` y trata "
"de reproducir el error."

msgid "If the build **still** exhibits the bug, run the following command:"
msgstr ""
"Si el compilado **sigue** presentando el error, ejecuta el siguiente comando:"

msgid "If the build **does not** exhibit the bug, run the following command:"
msgstr ""
"Si el compilado **no** presenta el error, ejecuta el siguiente comando:"

msgid ""
"After entering one of the commands above, Git will switch to a different "
"commit. You should now build Godot again, try to reproduce the bug, then "
"enter ``git bisect good`` or ``git bisect bad`` depending on the result. "
"You'll have to repeat this several times. The longer the commit range, the "
"more steps will be required. 5 to 10 steps are usually sufficient to find "
"most regressions; Git will remind you of the number of steps remaining (in "
"the worst case scenario)."
msgstr ""
"Después de ingresar uno de los comandos anteriores, Git cambiará a un commit "
"diferente. Ahora debes compilar Godot nuevamente, intentar reproducir el "
"error y luego ingresar ``git bisect good`` o ``git bisect bad`` según el "
"resultado. Tendrás que repetir esto varias veces. Cuanto más amplio sea el "
"rango de commits, más pasos serán necesarios. Por lo general, de 5 a 10 "
"pasos son suficientes para encontrar la mayoría de las regresiones; Git te "
"recordará el número de pasos restantes (en el peor de los casos)."

msgid ""
"Once you've completed enough steps, Git will display the commit hash where "
"the regression appeared. Write this commit hash as a comment to the GitHub "
"issue you've bisected. This will help in solving the issue. Thanks again for "
"contributing to Godot :)"
msgstr ""
"Una vez que hayas completado suficientes pasos, Git mostrará el commit en el "
"que apareció la regresión. Escribe este hash de commit como un comentario en "
"la página del problema en GitHub donde hiciste el bisect. Esto ayudará a "
"resolver el problema. ¡Gracias de nuevo por contribuir a Godot! :)"

msgid ""
"You can read the full documentation on ``git bisect`` `here <https://git-scm."
"com/docs/git-bisect>`__."
msgstr ""
"Puedes leer la documentación completa sobre ``git bisect`` `aquí <https://"
"git-scm.com/docs/git-bisect>`__."

msgid "Translation status"
msgstr "Estado de traducción"
