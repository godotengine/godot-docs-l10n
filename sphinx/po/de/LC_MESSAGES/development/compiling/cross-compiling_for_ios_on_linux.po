# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-compiling for iOS on Linux"
msgstr "Cross-Compiling für iOS unter Linux"

msgid ""
"The procedure for this is somewhat complex and requires a lot of steps, but "
"once you have the environment properly configured it will be easy to compile "
"Godot for iOS anytime you want."
msgstr ""

msgid "Disclaimer"
msgstr "Haftungsausschluss"

msgid ""
"While it is possible to compile for iOS on a Linux environment, Apple is "
"very restrictive about the tools to be used (especially hardware-wise), "
"allowing pretty much only their products to be used for development. So this "
"is **not official**. However, a `statement from Apple in 2010 <http://www."
"apple.com/pr/library/2010/09/09Statement-by-Apple-on-App-Store-Review-"
"Guidelines.html>`__ says they relaxed some of the `App Store review "
"guidelines <https://developer.apple.com/app-store/review/guidelines/>`__ to "
"allow any tool to be used, as long as the resulting binary does not download "
"any code, which means it should be OK to use the procedure described here "
"and cross-compiling the binary."
msgstr ""

msgid "Requirements"
msgstr "Voraussetzungen"

msgid ""
"`XCode with the iOS SDK <https://developer.apple.com/xcode/download>`__ (a "
"dmg image)"
msgstr ""
"`XCode mit dem iOS SDK <https://developer.apple.com/xcode/download>`__ (ein "
"dmg-Bild)"

msgid ""
"`Clang >= 3.5 <http://clang.llvm.org>`__ for your development machine "
"installed and in the ``PATH``. It has to be version >= 3.5 to target "
"``arm64`` architecture."
msgstr ""

msgid ""
"`Fuse <https://github.com/libfuse/libfuse>`__ for mounting and umounting the "
"dmg image."
msgstr ""
"`Sicherung <https://github.com/libfuse/libfuse>`__ zum Einbinden und "
"Freigeben des dmg-Images."

msgid ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__, which needs to "
"be built from source. The procedure for that is explained below."
msgstr ""

msgid ""
"For building darling-dmg, you'll need the development packages of the "
"following libraries: fuse, icu, openssl, zlib, bzip2."
msgstr ""

msgid ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ for the "
"needed build tools. The procedure for building is quite peculiar and is "
"described below."
msgstr ""

msgid "This also has some extra dependencies: automake, autogen, libtool."
msgstr ""
"Dies hat auch einige zusätzliche Abhängigkeiten: automake, autogen, libtool."

msgid "Configuring the environment"
msgstr "Umgebung konfigurieren"

msgid "darling-dmg"
msgstr "darling-dmg"

msgid "Clone the repository on your machine:"
msgstr "Klonen Sie das Repository auf Ihrem Computer:"

msgid "Build it:"
msgstr "Baue es:"

msgid "Preparing the SDK"
msgstr "SDK vorbereiten"

msgid "Mount the XCode image:"
msgstr "Einbinden des XCode image:"

msgid "Extract the iOS SDK:"
msgstr "Extrahieren des iOS SDK:"

msgid "Pack the SDK:"
msgstr "SDK packen:"

msgid "Toolchain"
msgstr "Toolchain"

msgid "Build cctools:"
msgstr "cctools bauen:"

msgid ""
"Copy the tools to a nicer place. Note that the SCons scripts for building "
"will look under ``usr/bin`` inside the directory you provide for the "
"toolchain binaries, so you must copy to such subdirectory, akin to the "
"following commands:"
msgstr ""

msgid ""
"Now you should have the iOS toolchain binaries in ``/home/user/iostoolchain/"
"usr/bin``."
msgstr ""
"Jetzt sollten Sie die iOS-Toolchain-Binärdateien in ``/home/user/"
"iostoolchain/usr/bin`` haben."

msgid "Compiling Godot for iPhone"
msgstr "Godot für iPhone kompilieren"

msgid ""
"Once you've done the above steps, you should keep two things in your "
"environment: the built toolchain and the iPhoneOS SDK directory. Those can "
"stay anywhere you want since you have to provide their paths to the SCons "
"build command."
msgstr ""
"Sobald Sie die oben genannten Schritte ausgeführt haben, sollten Sie zwei "
"Dinge in Ihrer Umgebung behalten: die erstellte Toolchain und das iPhoneOS "
"SDK-Verzeichnis. Diese können überall bleiben, da Sie ihre Pfade zum SCons-"
"Build-Befehl angeben müssen."

msgid ""
"For the iPhone platform to be detected, you need the ``OSXCROSS_IOS`` "
"environment variable defined to anything."
msgstr ""
"Damit die iPhone-Plattform erkannt werden kann, muss die Umgebungsvariable "
"``OSXCROSS_IOS`` für alles definiert sein."

msgid ""
"Now you can compile for iPhone using SCons like the standard Godot way, with "
"some additional arguments to provide the correct paths:"
msgstr ""
"Jetzt können Sie mit SCons für das iPhone nach dem Standard-Godot-Weg "
"kompilieren, mit einigen zusätzlichen Argumenten, um die richtigen Pfade "
"anzugeben:"

msgid "Producing fat binaries"
msgstr "Fette Binärdateien produzieren"

msgid ""
"Apple requires a fat binary with both architectures (``armv7`` and "
"``arm64``) in a single file. To do this, use the ``arm-apple-darwin11-lipo`` "
"executable. The following example assumes you are in the root Godot source "
"directory:"
msgstr ""

msgid "Then you will have iOS fat binaries in ``bin`` directory."
msgstr "Dann werden Sie iOS Fat-Binärdateien im Verzeichnis ``bin`` haben."

msgid "Translation status"
msgstr "Übersetzungsstatus"
