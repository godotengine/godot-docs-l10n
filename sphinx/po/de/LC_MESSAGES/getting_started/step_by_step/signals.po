# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Ereignis"

msgid "Using signals"
msgstr "Signale nutzen"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"In dieser Lektion werden wir uns mit Signalen beschäftigen. Das sind "
"Nachrichten, die Nodes aussenden, wenn etwas Bestimmtes mit ihnen passiert, "
"z. B. wenn eine Taste gedrückt wird. Andere Nodes können sich mit diesem "
"Signal verbinden und eine Funktion aufrufen, wenn das Ereignis eintritt."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Signale sind ein in Godot integrierter Delegierungsmechanismus, der es einem "
"Spielobjekt ermöglicht, auf eine Änderung in einem anderen zu reagieren, "
"ohne dass sie sich gegenseitig referenzieren. Die Verwendung von Signalen "
"schränkt die `Kopplung <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ ein und hält Ihren Code flexibel."

msgid ""
"For example, you might have a life bar on the screen that represents the "
"player’s health. When the player takes damage or uses a healing potion, you "
"want the bar to reflect the change. To do so, in Godot, you would use "
"signals."
msgstr ""
"Sie könnten zum Beispiel einen Lebensbalken auf dem Bildschirm haben, der "
"die Gesundheit des Spielers anzeigt. Wenn der Spieler Schaden erleidet oder "
"einen Heiltrank benutzt, soll der Balken die Veränderung anzeigen. Dazu "
"würden Sie in Godot Signale verwenden."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it here: https://"
"gameprogrammingpatterns.com/observer.html"
msgstr ""
"Wie in der Einleitung erwähnt, sind Signale Godot's Version des "
"Beobachtermusters. Sie können hier mehr darüber erfahren: https://"
"gameprogrammingpatterns.com/observer.html"

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson (:"
"ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Wir werden nun ein Signal verwenden, um unser Godot-Symbol aus dem letzten "
"Teil (:ref:`doc_scripting_player_input`) zu bewegen und durch Drücken einer "
"Taste anzuhalten."

msgid "Scene setup"
msgstr "Eine Szene einrichten"

msgid ""
"To add a button to our game, we will create a new \"main\" scene which will "
"include both a button and the ``Sprite.tscn`` scene that we scripted in "
"previous lessons."
msgstr ""
"Um unserem Spiel einen Knopf hinzuzufügen, erstellen wir eine neue \"main\"-"
"Szene, die sowohl einen Knopf als auch die ``Sprite.tscn`` Szene enthält, "
"die wir in den vorherigen Lektionen geschrieben haben."

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr ""
"Erstellen Sie eine neue Szene, indem Sie das Menü Szene -> Neue Szene "
"aufrufen."

msgid ""
"In the Scene dock, click the 2D Scene button. This will add a Node2D as our "
"root."
msgstr ""
"Klicken Sie im Szenendock auf die Schaltfläche 2D-Szene. Dadurch wird ein "
"Node2D als Wurzel hinzugefügt."

msgid ""
"In the FileSystem dock, click and drag the ``Sprite.tscn`` file you saved "
"previously onto the Node2D to instantiate it."
msgstr ""
"Klicken Sie im Dateisystem-Dock auf die zuvor gespeicherte Datei ``Sprite."
"tscn`` und ziehen Sie sie auf die Node2D, um sie zu instanziieren."

msgid ""
"We want to add another node as a sibling of the Sprite. To do so, right-"
"click on Node2D and select Add Child Node."
msgstr ""
"Wir wollen einen weiteren Knoten neben dem Sprite hinzufügen. Dazu klickst "
"du mit der rechten Maustaste auf Node2D und wählst Node hier anhängen."

msgid "Search for the Button node type and add it."
msgstr "Suche nach dem Button Node-Typ und füge es hinzu."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"Der Knoten ist standardmäßig klein. Klicken und ziehen Sie am unteren "
"rechten Ziehpunkt der Schaltfläche, um die Größe zu ändern."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Wenn Sie die Hinweise nicht sehen, vergewissern Sie sich, dass das "
"Auswahlwerkzeug in der Werkzeugleiste aktiviert ist."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr ""
"Klicken und ziehen Sie den Knopf, um ihn näher an das Sprite zu bringen."

msgid ""
"You can also write a label on the Button by editing its Text property in the "
"Inspector. Enter \"Toggle motion\"."
msgstr ""
"Sie können dem Knopf auch eine Beschriftung zuweisen, indem Sie ihre Text-"
"Eigenschaft im Inspektor bearbeiten. Geben Sie \"Toggle motion\" ein."

msgid "Your scene tree and viewport should look like this."
msgstr "Dein Szenenbaum und Ansichtsfenster sollten wie folgt aussehen."

msgid ""
"Save your newly created scene. You can then run it with :kbd:`F6`. At the "
"moment, the button will be visible, but nothing will happen if you press it."
msgstr ""
"Speichern Sie Ihre neu erstellte Szene. Sie können sie dann mit :kbd:`F6` "
"ausführen. Im Moment ist der Knopf sichtbar, aber es passiert nichts, wenn "
"Sie ihn drücken."

msgid "Connecting a signal in the editor"
msgstr "Verbinden von Signalen im Editor"

msgid ""
"Here, we want to connect the Button's \"pressed\" signal to our Sprite, and "
"we want to call a new function that will toggle its motion on and off. We "
"need to have a script attached to the Sprite node, which we do from the "
"previous lesson."
msgstr ""
"Hier wollen wir das Signal \"pressed\" des Buttons mit unserem Sprite "
"verbinden und eine neue Funktion aufrufen, die seine Bewegung ein- und "
"ausschaltet. Wir brauchen ein Skript, das an den Sprite-Knoten angehängt "
"ist, wie wir es in der vorherigen Lektion getan haben."

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Du kannst Signale im Node-Dock verbinden. Wähle den Button-Node aus und "
"klicke auf der rechten Seite des Editors auf die Registerkarte \"Node\" "
"neben dem Inspektor."

msgid "The dock displays a list of signals available on the selected node."
msgstr ""
"Das Dock zeigt eine Liste aller verfügbaren Signale für das ausgewählte Node "
"an."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Doppelklick auf das „pressed“ Signal, um das Knotenverbindungsfenster zu "
"öffnen."

msgid ""
"There, you can connect the signal to the Sprite node. The node needs a "
"receiver method, a function that Godot will call when the Button emits the "
"signal. The editor generates one for you. By convention, we name these "
"callback methods \"_on_NodeName_signal_name\". Here, it'll be "
"\"_on_Button_pressed\"."
msgstr ""
"Dort kannst du das Signal mit dem Sprite-Knoten verbinden. Der Knoten "
"benötigt eine Empfängermethode, eine Funktion, die Godot aufruft, wenn der "
"Button das Signal sendet. Der Editor generiert die Funktion für dich. Der "
"Konvention nach nennen wir diese Callback-Methoden "
"\"_on_NodeName_signal_name\". Hier wird es \"_on_Button_pressed\" sein."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Man kann zweierlei Modi verwenden, um Signale über das Node-Dock zu "
"verbinden. Der einfache Modus erlaubt ausschließlich die Verbindung zu "
"Knoten mit dazugehörigem Script und erstellt in diesem eine neue Callback-"
"Funktion."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"In der erweiterten Ansicht können Sie sich mit jedem Node und jeder "
"integrierten Funktion verbinden, dem Callback Argumente hinzufügen und "
"Optionen festlegen. Sie können den Modus unten rechts im Fenster umschalten, "
"indem Sie auf die Schaltfläche Erweitert klicken."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Klicken Sie auf die Schaltfläche „Verbinden“, um die Signalverbindung "
"abzuschließen und zum Arbeitsbereich „Skript“ zu wechseln. Sie sollten die "
"neue Methode mit einem Verbindungssymbol am linken Rand sehen."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Wenn man auf das Symbol klickt öffnet sich ein Fenster und zeigt "
"Informationen über die Verbindung an. Diese Eigenschaft ist nur verfügbar, "
"wenn Knoten im Editor verbunden werden."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Lassen Sie uns die Zeile im Code mit dem ``pass`` Schlüsselwort durch Code "
"ersetzen, welcher die Bewegung des Nodes umschaltet."

msgid ""
"Our Sprite moves thanks to code in the ``_process()`` function. Godot "
"provides a method to toggle processing on and off: :ref:`Node.set_process() "
"<class_Node_method_set_process>`. Another method of the Node class, "
"``is_processing()``, returns ``true`` if idle processing is active. We can "
"use the ``not`` keyword to invert the value."
msgstr ""
"Unser Sprite lässt sich dank des Codes in der ``_process()``-Funktion "
"bewegen. Godot stellt eine Methode bereit, um den Ablauf zu aktivieren und "
"zu deaktivieren: :ref:`Node.set_process() <class_Node_method_set_process>`. "
"Eine weitere Methode der Node-Klasse, ``is_processing()``, gibt ``true`` "
"zurück, falls die Ausführung aktiv ist. Man kann diesen Wert über das "
"Schlüsselwort ``not`` umdrehen."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Diese Funktion schaltet die Ausführung um und die Bewegung des Symbols beim "
"Drücken der Knopfes entsprechend ein und aus."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Bevor man das Spiel ausprobiert, muss die ``_process()``-Funktion "
"vereinfacht werden, um den Knoten automatisch zu bewegen und nicht auf die "
"Eingabe des Anwenders warten zu müssen. Daher ersetzen wir ihren Code durch "
"den folgenden, der bereits in er vorletzten Lektion vor kam:"

msgid "Your complete ``Sprite.gd`` code should look like the following."
msgstr "Der komplette Szenenbaum `Sprite.gd` sollte wie folgt aussehen."

msgid ""
"Run the scene now and click the button to see the sprite start and stop."
msgstr ""
"Starte Sie die Szene und klicken Sie auf die Schaltfläche um das Sprite zum "
"Laufen und Halten zu bringen."

msgid "Connecting a signal via code"
msgstr "Ein Signal über Code verbinden"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Man kann Signale auch über den Code erzeugen anstelle den Editor zu "
"verwenden. Dies ist notwendig, falls man Notes oder Szenen innerhalb eines "
"Skriptes erzeugen möchte."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Wir verwenden an dieser Stelle einen anderen Node. Godot besitzt einen "
"Knoten :ref:`Timer <class_Timer>`, der hilfreich ist, um Skill-Cooldown-"
"Zeiten, das Nachladen von Waffen oder anderes zu implementieren."

msgid ""
"Head back to the 2D workspace. You can either click the \"2D\" text at the "
"top of the window or press :kbd:`Ctrl + F1` (:kbd:`Alt + 1` on macOS)."
msgstr ""
"Gehen Sie zurück zum 2D-Arbeitsbereich. Sie können entweder auf den \"2D\"-"
"Text oben im Fenster klicken oder :kbd:`Strg + F1` (:kbd:`Alt + 1` unter "
"macOS) drücken."

msgid ""
"In the Scene dock, right-click on the Sprite node and add a new child node. "
"Search for Timer and add the corresponding node. Your scene should now look "
"like this."
msgstr ""
"Rechtsklicken sie im Szene-Panel das Sprite-Node und füge einen weiteren "
"Knoten hinzu (Node hier anhängen). Suche sie nach Timer und ergänzt den "
"entsprechenden Knoten. Im Anschluss sollte die Szene wie folgt aussehen."

msgid ""
"With the Timer node selected, go to the Inspector and check the "
"**Autostart** property."
msgstr ""
"Bei angewähltem Timer-Knoten lässt sich im Inspektor die **Autostart**-"
"Eigenschaft anwählen."

msgid ""
"Click the script icon next to Sprite to jump back to the scripting workspace."
msgstr ""
"Drücken Sie auf das Skript-Symbol neben dem Sprite und springen Sie zurück "
"in den Script-Arbeitsbereich."

msgid "We need to do two operations to connect the nodes via code:"
msgstr ""
"Es müssen zwei Schritte ausgeführt werden, um die Knoten im Code zu "
"verbinden:"

msgid "Get a reference to the Timer from the Sprite."
msgstr "Ermittelt den Verweis auf den Timer des Sprites."

msgid "Call the Timer's ``connect()`` method."
msgstr "Rufen Sie die ``connect()``-Methode des Timers auf."

msgid ""
"To connect to a signal via code, you need to call the ``connect()`` method "
"of the node you want to listen to. In this case, we want to listen to the "
"Timer's \"timeout\" signal."
msgstr ""
"Um das Signal im Quellcode anzubinden, ruft man die ``connect()``-Methode "
"des Knotens auf, dessen Signal man erwartet. In diesem Fall wird das "
"\"timeout\"-Signal des Timers erwartet."

msgid ""
"We want to connect the signal when the scene is instantiated, and we can do "
"that using the :ref:`Node._ready() <class_Node_method__ready>` built-in "
"function, which is called automatically by the engine when a node is fully "
"instantiated."
msgstr ""
"Wir wollen das Signal verbinden, wenn die Szene instanziiert wird und das "
"können wir über die integrierte Funktion :ref:`Node._ready() "
"<class_Node_method__ready>`, welche automatisch von der Engine aufgerufen "
"wird, wenn das Node vollständig instanziiert ist."

msgid ""
"To get a reference to a node relative to the current one, we use the method :"
"ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Um die Referenz auf einen Knoten zu erhalten, der sich in Relation zum "
"aktuellen befindet, verwendet man die Methode :ref:`Node.get_node() "
"<class_Node_method_get_node>`. Die Referenz kann in einer Variablen "
"gespeichert werden."

msgid ""
"The function ``get_node()`` looks at the Sprite's children and gets nodes by "
"their name. For example, if you renamed the Timer node to \"BlinkingTimer\" "
"in the editor, you would have to change the call to "
"``get_node(\"BlinkingTimer\")``."
msgstr ""
"Die Funktion ``get_node()`` ermittelt den Knoten an Hand des Namens der "
"Sprite-Kinderknoten. Wenn man den Timer beispielsweise in \"BlinkingTimer\" "
"umbenannt hat, muss man den Aufruf in ``get_node(\"BlinkingTimer\")`` "
"abändern."

msgid ""
"We can now connect the Timer to the Sprite in the ``_ready()`` function."
msgstr ""
"Nun kann man den Timer in der ``_ready()``-Funktion zum Sprite anbinden."

msgid ""
"The line reads like so: we connect the Timer's \"timeout\" signal to the "
"node to which the script is attached (``self``). When the Timer emits "
"\"timeout\", we want to call the function \"_on_Timer_timeout\", that we "
"need to define. Let's add it at the bottom of our script and use it to "
"toggle our sprite's visibility."
msgstr ""
"Die Zeile liest sich wie folgt: Das Signal \"timeout\" von Timer wird mit "
"dem Knoten verbunden, dem das Script gehört (``self``). Sobald der Timer "
"\"timeout\" sendet, soll die Funktion \"_on_Timer_timeout\" angestoßen "
"werden, die gerade definiert wurde. Diese wird jetzt am Ende des Skriptes "
"ergänzt, um die Sichtbarkeit des Sprites umschalten zu können."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"Die Eigenschaft ``visible`` ist ein boolean-Wert, der festlegt, ob ein "
"Knoten sichtbar ist. Die Zeile ``visible = not visible`` wechselt zwischen "
"sichtbar und unsichtbar hin und her. Wenn ``visible`` auf ``true`` war wird "
"es auf ``false`` gestetzt und umgekehrt."

msgid ""
"If you run the scene now, you will see that the sprite blinks on and off, at "
"one second intervals."
msgstr ""
"Wenn Sie die Szene jetzt ausführen, werden Sie sehen, dass das Sprite im "
"Sekundentakt ein- und ausschaltet."

msgid "Complete script"
msgstr "Vollständiges Skript"

msgid ""
"That's it for our little moving and blinking Godot icon demo! Here is the "
"complete ``Sprite.gd`` file for reference."
msgstr ""
"Das ist nun unsere kleine bewegende und blinkende Godot-icon-Demo. Hier ist "
"die vollständige ``Sprite.gd``-Datei als Referenz."

msgid "Custom signals"
msgstr "Benutzerdefinierte Signale"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Dieser Abschnitt dient als Referenz für die Definition und Verwendung "
"eigener Signale und baut nicht auf dem in den vorherigen Lektionen "
"erstellten Projekt auf."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Man kann mehrere verschiedene Signale innerhalb eines Skriptes definieren. "
"Möchte man beispielsweise einen \"Game Over\"-Bildschirm anzeigen, sobald "
"der Gesundheitswert des Spielers auf Null gesunken ist, kann man ein Signal "
"namens \"died\" oder \"health_depleted\" definieren, das angestoßen wird, "
"sobald der Gesundheitswert auf Null gesetzt wurde."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Da sämtliche Signale Ereignisse repräsentieren, die gerade erst stattfanden, "
"verwendet man üblicherweise die Vergangenheitsform des Verbes für deren "
"Namen."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Diese Signale arbeiten genau so wie native: Sie erscheinen im Node-Tab und "
"man kann sie wie alle anderen anbinden."

msgid "To emit a signal in your scripts, call ``emit_signal()``."
msgstr ""
"Um ein Signal per Code auszusenden, verwende die Funktion ``emit_signal``."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Ein Signal kann optional auch ein oder mehrere Argumente deklarieren. Geben "
"Sie die Argumentnamen zwischen den Klammern an:"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Die Signal-Argumente werden oben im Bearbeitungs-Node-Dock auftauchen, und "
"Godot kann diese nutzen, um Aufruf-Funktionen für Sie zu generieren. "
"Allerdings kann man immer noch jede beliebige Anzahl von Argumenten "
"aufrufen, wenn man Signale aufruft. Es ist also in der Hand der Person, "
"diese richtigen Werte aufzurufen."

msgid ""
"To emit values along with the signal, add them as extra arguments to the "
"``emit_signal()`` function:"
msgstr ""
"Um Werte zusammen mit dem Signal auszugeben, fügen Sie sie als zusätzliche "
"Argumente zur Funktion ``emit_signal()`` hinzu:"

msgid "Summary"
msgstr "Zusammenfassung"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Jeder Knoten in Godot sendet Signale, wenn etwas spezielles passiert, "
"beispielsweise beim Drücken eines Buttons. Andere Knoten können sich mit "
"definierten Signalen verbinden und so auf die ausgewählten Ereignisse "
"reagieren."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Signale können vielfältig verwendet werden. Man kann auf einen Knoten "
"reagieren, der gerade die Spielwelt betritt oder verlässt, auf eine "
"Kollision, darauf dass eine Spielfigur einen bestimmten Bereich betritt oder "
"verlässt, darauf dass ein Element seine Größe verändert und vieles mehr."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Beispielsweise gibt ein :ref:`Area2D <class_Area2D>`, das eine Münze "
"darstellt, ein ``body_entered``-Signal aus, wenn der physische Körper des "
"Spielers in seine Kollisionsform eintritt, sodass Sie wissen, wann der "
"Spieler ihn eingesammelt hat."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"Im nächsten Abschnitt, :ref:`doc_your_first_2d_game`, erstellen Sie ein "
"komplettes 2D-Spiel und setzen alles, was Sie bisher gelernt haben, in die "
"Praxis um."

msgid "Translation status"
msgstr "Übersetzungsstatus"
