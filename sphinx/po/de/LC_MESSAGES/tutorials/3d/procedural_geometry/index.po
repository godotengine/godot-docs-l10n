# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Procedural geometry"
msgstr "Prozedurale Geometrie"

msgid ""
"There are many ways to procedurally generate geometry in Godot. In this "
"tutorial series we will explore a few of them. Each technique has its own "
"benefits and drawbacks, so it is best to understand each one and how it can "
"be useful in a given situation."
msgstr ""
"Es gibt viele Möglichkeiten, Geometrie in Godot prozedural zu generieren. In "
"dieser Anleitung werden wir einige davon untersuchen. Jede Technik hat ihre "
"eigenen Vor- und Nachteile. Daher ist es am besten jede zu verstehen und zu "
"wissen wie sie in einer bestimmten Situation nützlich sein kann."

msgid "What is geometry?"
msgstr "Was ist Geometrie?"

msgid ""
"Geometry is a fancy way of saying shape. In computer graphics, geometry is "
"typically represented by an array of positions called \"vertices\". In "
"Godot, geometry is represented by Meshes."
msgstr ""
"Geometrie ist eine ausgefallene Art, Form zu sagen. In der Computergrafik "
"wird die Geometrie typischerweise durch ein Array von Positionen "
"dargestellt, die als \"Eckpunkte\" bezeichnet werden. In Godot wird die "
"Geometrie durch Meshes (Gitternetze) dargestellt."

msgid "What is a Mesh?"
msgstr "Was ist ein Mesh?"

msgid ""
"Many things in Godot have mesh in their name: the :ref:`Mesh <class_Mesh>`, "
"the :ref:`ArrayMesh <class_ArrayMesh>`, the :ref:`MeshInstance "
"<class_MeshInstance>`, the :ref:`MultiMesh <class_MultiMesh>`, and the :ref:"
"`MultiMeshInstance <class_MultiMeshInstance>`. While they are all related, "
"they have slightly different uses."
msgstr ""

msgid ""
"Meshes and ArrayMeshes are resources that are drawn using a MeshInstance "
"node. Resources like Meshes and ArrayMeshes cannot be added to the scene "
"directly. A MeshInstance represents one instance of a mesh in your scene. "
"You can reuse a single mesh in multiple MeshInstances to draw it in "
"different parts of your scene with different materials or transformations "
"(scale, rotation, position etc.)."
msgstr ""

msgid ""
"If you are going to draw the same object many times, it can be helpful to "
"use a MultiMesh with a MultiMeshInstance. MultiMeshInstances draw meshes "
"thousands of times very cheaply by taking advantage of hardware instancing. "
"The drawback with using a MultiMeshInstance is that each of your mesh's "
"surfaces are limited to one material for all instances. It uses an instance "
"array to store different colors and transformations for each instance, but "
"all the instances of each surface use the same material."
msgstr ""

msgid "What a Mesh is"
msgstr "Was ein Mesh ist"

msgid ""
"A Mesh is composed of one or more surfaces. A surface is an array composed "
"of multiple sub-arrays containing vertices, normals, UVs, etc. Normally the "
"process of constructing surfaces and meshes is hidden from the user in the :"
"ref:`VisualServer <class_VisualServer>`, but with ArrayMeshes, the user can "
"construct a Mesh manually by passing in an array containing the surface "
"information."
msgstr ""

msgid "Surfaces"
msgstr "Oberflächen"

msgid ""
"Each surface has its own material. Alternatively, you can override the "
"material for all surfaces in the Mesh when you use a MeshInstance using the :"
"ref:`material_override <class_GeometryInstance_property_material_override>` "
"property."
msgstr ""

msgid "Surface array"
msgstr "Oberflächen-Array"

msgid ""
"The surface array is an array of length ``ArrayMesh.ARRAY_MAX``. Each "
"position in the array is filled with a sub-array containing per-vertex "
"information. For example, the array located at ``ArrayMesh.ARRAY_NORMAL`` is "
"a :ref:`PoolVector3Array <class_PoolVector3Array>` of vertex normals. See :"
"ref:`Mesh.ArrayType <enum_Mesh_ArrayType>` for more information."
msgstr ""

msgid ""
"The surface array can be indexed or non-indexed. Creating a non-indexed "
"array is as easy as not assigning an array at the index ``ArrayMesh."
"ARRAY_INDEX``. A non-indexed array stores unique vertex information for "
"every triangle, meaning that when two triangles share a vertex, the vertex "
"is duplicated in the array. An indexed surface array only stores vertex "
"information for each unique vertex and then also stores an array of indices "
"which maps out how to construct the triangles from the vertex array. In "
"general, using an indexed array is faster, but it means you have to share "
"vertex data between triangles, which is not always desired (e.g. when you "
"want per-face normals)."
msgstr ""

msgid "Tools"
msgstr "Werkzeuge"

msgid ""
"Godot provides different ways of accessing and working with geometry. More "
"information on each will be provided in the following tutorials."
msgstr ""

msgid "ArrayMesh"
msgstr "ArrayMesh"

#, fuzzy
msgid ""
"The ArrayMesh resource extends Mesh to add a few different quality of life "
"functions and, most importantly, the ability to construct a Mesh surface "
"through scripting."
msgstr ""
"Die ArrayMesh-Ressource erweitert Mesh um einige verschiedene Funktionen zur "
"Verbesserung der Lebensqualität und vor allem um die Möglichkeit, eine Mesh-"
"Oberfläche durch Skripterstellung zu erstellen."

msgid ""
"For more information about the ArrayMesh, please see the :ref:`ArrayMesh "
"tutorial <doc_arraymesh>`."
msgstr ""
"Für mehr Informationen zum ArrayMesh siehe :ref:`ArrayMesh tutorial "
"<doc_arraymesh>`."

msgid "MeshDataTool"
msgstr "MeshDataTool"

msgid ""
"The MeshDataTool is a resource that converts Mesh data into arrays of "
"vertices, faces, and edges that can be modified at runtime."
msgstr ""
"Das MeshDataTool ist eine Ressource, die Mesh-Daten in Arrays von "
"Scheitelpunkten, Flächen und Kanten konvertiert, die zur Laufzeit geändert "
"werden können."

msgid ""
"For more information about the MeshDataTool, please see the :ref:"
"`MeshDataTool tutorial <doc_meshdatatool>`."
msgstr ""
"Weitere Informationen zum MeshDataTool finden Sie in der :ref:`MeshDataTool-"
"Anleitung<doc_meshdatatool>`."

msgid "SurfaceTool"
msgstr "Oberflächen-Tool"

msgid ""
"The SurfaceTool allows the creation of Meshes using an OpenGL 1.x immediate "
"mode style interface."
msgstr ""

msgid ""
"For more information about the SurfaceTool, please see the :ref:`SurfaceTool "
"tutorial <doc_surfacetool>`."
msgstr ""
"Weitere Informationen zum SurfaceTool finden Sie in der :ref:`SurfaceTool-"
"Anleitung <doc_surfacetool>`."

msgid "ImmediateGeometry"
msgstr "GenerierteGeometrie"

msgid ""
"ImmediateGeometry is a node that uses an immediate mode style interface "
"(like SurfaceTool) to draw objects. The difference between ImmediateGeometry "
"and the SurfaceTool is that ImmediateGeometry is a node itself that can be "
"added to the scene tree and is drawn directly from the code, while the "
"SurfaceTool generates a Mesh that needs to be added to a MeshInstance to be "
"seen."
msgstr ""

msgid ""
"ImmediateGeometry is useful for prototyping because of its straightforward "
"API, but it is slow because the geometry is rebuilt every frame. It is most "
"useful for adding simple geometry for visual debugging (e.g. by drawing "
"lines to visualize physics raycasts etc.)."
msgstr ""

msgid ""
"For more information about ImmediateGeometry, please see the :ref:"
"`ImmediateGeometry tutorial <doc_immediategeometry>`."
msgstr ""
"Für weitere Informationen zu ImmediateGeometry siehe :ref:`ImmediateGeometry "
"tutorial <doc_immediategeometry>`."

msgid "Which one should I use?"
msgstr "Welche sollte man nutzen?"

#, fuzzy
msgid ""
"Which approach you use depends on what you are trying to do and what kind of "
"procedure you are comfortable with."
msgstr ""
"Welche Methode Sie verwenden hängt davon ab, was Sie versuchen und mit "
"welcher Art von Verfahren Sie vertraut sind."

msgid ""
"Both SurfaceTool and ArrayMesh are excellent for generating static geometry "
"(meshes) that don't change over time."
msgstr ""
"Sowohl SurfaceTool als auch ArrayMesh eignen sich hervorragend zum "
"Generieren statischer Geometrie (Meshes), die sich im Laufe der Zeit nicht "
"ändern."

msgid ""
"Using an ArrayMesh is slightly faster than using a SurfaceTool, but the API "
"is a little more challenging. Additionally, SurfaceTool has a few quality of "
"life methods such as ``generate_normals()`` and ``index()``."
msgstr ""

msgid ""
"ImmediateGeometry regenerates the mesh every frame, so it is much slower "
"than ArrayMesh or SurfaceTool. However, if you need the geometry to change "
"every frame anyway, it provides a much easier interface that may even be a "
"little faster than generating an ArrayMesh every frame."
msgstr ""

msgid ""
"The MeshDataTool is not fast, but it gives you access to all kinds of "
"properties of the mesh that you don't get with the others (edges, faces, "
"etc.). It is incredibly useful when you need that sort of data to transform "
"the mesh, but it is not a good idea to use it if that extra information is "
"not needed. The MeshDataTool is best used if you are going to be using an "
"algorithm that requires access to the face or edge array."
msgstr ""

msgid "Translation status"
msgstr "Übersetzungsstatus"
