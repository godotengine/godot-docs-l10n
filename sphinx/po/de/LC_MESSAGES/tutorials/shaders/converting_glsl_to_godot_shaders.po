# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Converting GLSL to Godot shaders"
msgstr "Konvertieren von Sprites in 2D-Meshes"

msgid ""
"This document explains the differences between Godot's shading language and "
"GLSL and gives practical advice on how to migrate shaders from other "
"sources, such as Shadertoy and The Book of Shaders, into Godot shaders."
msgstr ""
"Dieses Dokument erklärt die Unterschiede zwischen Godots Shader-Sprache und "
"GLSL und gibt praktische Ratschläge zur Migration von Shadern aus anderen "
"Quellen wie Shadertoy und The Book of Shaders in Godot-Shader."

msgid ""
"For detailed information on Godot's shading language, please refer to the :"
"ref:`Shading Language <doc_shading_language>` reference."
msgstr ""
"Genauere Informationen über Godots Shader-Sprache gibt es im eigenen "
"Artikel: :ref:`Shading Language <doc_shading_language>`."

msgid "GLSL"
msgstr "GLSL"

msgid ""
"Godot uses a shading language based on GLSL with the addition of a few "
"quality-of-life features. Accordingly, most features available in GLSL are "
"available in Godot's shading language."
msgstr ""
"Godot verwendet eine auf GLSL basierende Shader-Sprache mit einigen "
"verbesserten Funktionen. Dementsprechend sind die meisten in GLSL "
"verfügbaren Funktionen in Godots Shader-Sprache verfügbar."

msgid "Shader programs"
msgstr "Shader Programme"

msgid ""
"In GLSL, each shader uses a separate program. You have one program for the "
"vertex shader and one for the fragment shader. In Godot, you have a single "
"shader that contains a ``vertex`` and/or a ``fragment`` function. If you "
"only choose to write one, Godot will supply the other."
msgstr ""
"In GLSL verwendet jeder Shader ein separates Programm. Sie haben ein "
"Programm für den Vertex-Shader und eines für den Fragment-Shader. In Godot "
"haben Sie einen einzelnen Shader, der eine ``vertex`` - und/oder eine "
"``fragment``-Funktion enthält. Wenn Sie nur eines schreiben, liefert Godot "
"das andere."

msgid ""
"Godot allows uniform variables and functions to be shared by defining the "
"fragment and vertex shaders in one file. In GLSL, the vertex and fragment "
"programs cannot share variables except when varyings are used."
msgstr ""
"Mit Godot können einheitliche Variablen und Funktionen gemeinsam genutzt "
"werden, indem die Fragment- und Vertex-Shader in einer Datei definiert "
"werden. In GLSL können die Vertex- und Fragment-Programme nur dann Variablen "
"gemeinsam nutzen, wenn Variationen verwendet werden."

msgid "Vertex attributes"
msgstr "Vertex-Attribute"

msgid ""
"In GLSL, you can pass in per-vertex information using attributes and have "
"the flexibility to pass in as much or as little as you want. In Godot, you "
"have a set number of input attributes, including ``VERTEX`` (position), "
"``COLOR``, ``UV``, ``UV2``, ``NORMAL``. For a complete list, see the :ref:"
"`Shading language reference <doc_shading_language>`."
msgstr ""

msgid "gl_Position"
msgstr "gl_Position (OpenGL)"

msgid ""
"``gl_Position`` receives the final position of a vertex specified in the "
"vertex shader. It is specified by the user in clip space. Typically, in "
"GLSL, the model space vertex position is passed in using a vertex attribute "
"called ``position`` and you handle the conversion from model space to clip "
"space manually."
msgstr ""

msgid ""
"In Godot, ``VERTEX`` specifies the vertex position in model space at the "
"beginning of the ``vertex`` function. Godot also handles the final "
"conversion to clip space after the user-defined ``vertex`` function is run. "
"If you want to skip the conversion from model to view space, you can set the "
"``render_mode`` to ``skip_vertex_transform``. If you want to skip all "
"transforms, set ``render_mode`` to ``skip_vertex_transform`` and set the "
"``PROJECTION_MATRIX`` to ``mat4(1.0)`` in order to nullify the final "
"transform from view space to clip space."
msgstr ""

msgid "Varyings"
msgstr "Variiert"

msgid ""
"Varyings are a type of variable that can be passed from the vertex shader to "
"the fragment shader. In modern GLSL (3.0 and up), varyings are defined with "
"the ``in`` and ``out`` keywords. A variable going out of the vertex shader "
"is defined with ``out`` in the vertex shader and ``in`` inside the fragment "
"shader."
msgstr ""

msgid "Main"
msgstr "Haupt"

msgid ""
"In GLSL, each shader program looks like a self-contained C-style program. "
"Accordingly, the main entry point is ``main``. If you are copying a vertex "
"shader, rename ``main`` to ``vertex`` and if you are copying a fragment "
"shader, rename ``main`` to ``fragment``."
msgstr ""

msgid "Constants"
msgstr "Konstanten"

msgid ""
"Global array constants are not supported in Godot 3.x. You can fake the "
"functionality by using a uniform initialized to the value, but you will not "
"benefit from the increased speed from using a constant."
msgstr ""

msgid "Macros"
msgstr "Makros"

msgid ""
"In keeping with its similarity to C, GLSL lets you use macros. Commonly "
"``#define`` is used to define constants or small functions. There is no "
"straightforward way to translate defines to Godot's shading language. If it "
"is a function that is defined, then replace with a function, and if it is a "
"constant, then replace with a uniform. For other macros (``#if``, "
"``#ifdef``, etc.), there is no equivalent because they run during the pre-"
"processing stage of compilation."
msgstr ""
"Entsprechend der Ähnlichkeit mit C können Sie mit GLSL Makros verwenden. Im "
"Allgemeinen wird ``#define`` verwendet, um Konstanten oder kleine Funktionen "
"zu definieren. Es gibt keine einfache Möglichkeit Definitionen in Godots "
"Shader-Sprache zu übersetzen. Wenn es sich um eine definierte Funktion "
"handelt ersetzen Sie sie durch eine Funktion. Wenn es sich um eine Konstante "
"handelt, ersetzen Sie sie durch ein Uniform. Für andere Makros (``#if``, "
"``#ifdef`` usw.) gibt es kein Äquivalent, da sie während der "
"Präprozessorphase der Kompilierung ausgeführt werden."

msgid "Variables"
msgstr "Variablen"

msgid ""
"GLSL has many built-in variables that are hard-coded. These variables are "
"not uniforms, so they are not editable from the main program."
msgstr ""
"GLSL verfügt über viele integrierte, fest codierte Variablen. Diese "
"Variablen sind keine Uniforms, daher können sie nicht vom Hauptprogramm aus "
"bearbeitet werden."

msgid "Variable"
msgstr "Variable"

msgid "Type"
msgstr "Art"

msgid "Equivalent"
msgstr "Equivalent"

msgid "Description"
msgstr "Beschreibung"

msgid "gl_FragColor"
msgstr "gl_FragColor"

msgid "out vec4"
msgstr "out vec4"

msgid "COLOR"
msgstr "COLOR"

msgid "Output color for each pixel."
msgstr "Ausgabefarbe für jeden Pixel."

msgid "gl_FragCoord"
msgstr "gl_FragCoord"

msgid "vec4"
msgstr "vec4"

msgid "FRAGCOORD"
msgstr "FRAGCOORD"

msgid "For full screen quads. For smaller quads, use UV."
msgstr "Für Vollbild-Quadrate. Verwenden Sie für kleinere Quadrate UV."

msgid "VERTEX"
msgstr "VERTEX"

msgid "Position of Vertex, output from Vertex Shader."
msgstr "Position des Vertex, Ausgabe vom Vertex-Shader."

msgid "gl_PointSize"
msgstr "gl_PointSize"

msgid "float"
msgstr "float"

msgid "POINT_SIZE"
msgstr "POINT_SIZE"

msgid "Size of Point primitive."
msgstr "Größe des Punkt-Primitivs."

msgid "gl_PointCoord"
msgstr "gl_PointCoord"

msgid "vec2"
msgstr "vec2"

msgid "POINT_COORD"
msgstr "POINT_COORD"

msgid "Position on point when drawing Point primitives."
msgstr ""

msgid "gl_FrontFacing"
msgstr "gl_FrontFacing"

msgid "bool"
msgstr "bool"

msgid "FRONT_FACING"
msgstr "FRONT_FACING"

msgid "True if front face of primitive."
msgstr ""

msgid "Coordinates"
msgstr "Koordinaten"

msgid ""
"``gl_FragCoord`` in GLSL and ``FRAGCOORD`` in the Godot shading language use "
"the same coordinate system. If using UV in Godot, the y-coordinate will be "
"flipped upside down."
msgstr ""

msgid "Precision"
msgstr "Präzision"

msgid ""
"In GLSL, you can define the precision of a given type (float or int) at the "
"top of the shader with the ``precision`` keyword. In Godot, you can set the "
"precision of individual variables as you need by placing precision "
"qualifiers ``lowp``, ``mediump``, and ``highp`` before the type when "
"defining the variable. For more information, see the :ref:`Shading Language "
"<doc_shading_language>` reference."
msgstr ""

msgid "Shadertoy"
msgstr "Shadertoy"

msgid ""
"`Shadertoy <https://www.shadertoy.com/results?"
"query=&sort=popular&from=10&num=4>`_ is a website that makes it easy to "
"write fragment shaders and create `pure magic <https://www.shadertoy.com/"
"view/4tjGRh>`_."
msgstr ""

msgid ""
"Shadertoy does not give the user full control over the shader. It handles "
"all the input and uniforms and only lets the user write the fragment shader."
msgstr ""

msgid "Types"
msgstr "Typen"

msgid ""
"Shadertoy uses the webgl spec, so it runs a slightly different version of "
"GLSL. However, it still has the regular types, including constants and "
"macros."
msgstr ""

msgid "mainImage"
msgstr "mainImage"

msgid ""
"The main point of entry to a Shadertoy shader is the ``mainImage`` function. "
"``mainImage`` has two parameters, ``fragColor`` and ``fragCoord``, which "
"correspond to ``COLOR`` and ``FRAGCOORD`` in Godot, respectively. These "
"parameters are handled automatically in Godot, so you do not need to include "
"them as parameters yourself. Anything in the ``mainImage`` function should "
"be copied into the ``fragment`` function when porting to Godot."
msgstr ""

msgid ""
"In order to make writing fragment shaders straightforward and easy, "
"Shadertoy handles passing a lot of helpful information from the main program "
"into the fragment shader for you. A few of these have no equivalents in "
"Godot because Godot has chosen not to make them available by default. This "
"is okay because Godot gives you the ability to make your own uniforms. For "
"variables whose equivalents are listed as \"Provide with Uniform\", users "
"are responsible for creating that uniform themselves. The description gives "
"the reader a hint about what they can pass in as a substitute."
msgstr ""

msgid "fragColor"
msgstr "fragColor"

msgid "fragCoord"
msgstr "fragCoord"

msgid "FRAGCOORD.xy"
msgstr "FRAGCOORD.xy"

msgid "iResolution"
msgstr "iResolution"

msgid "vec3"
msgstr "vec3"

msgid "1.0 / SCREEN_PIXEL_SIZE"
msgstr "1.0 / SCREEN_PIXEL_SIZE"

msgid "Can also pass in manually."
msgstr "Kann auch manuell übergeben werden."

msgid "iTime"
msgstr "iTime"

msgid "TIME"
msgstr "TIME"

msgid "Time since shader started."
msgstr "Zeit seit dem Start des Shaders."

msgid "iTimeDelta"
msgstr "iTimeDelta"

msgid "Provide with Uniform"
msgstr "Mit Uniform versehen"

msgid "Time to render previous frame."
msgstr "Zeit um den vorherigen Frame zu rendern."

msgid "iFrame"
msgstr "iFrame"

msgid "Frame number."
msgstr "Frame Nummer."

msgid "iChannelTime[4]"
msgstr "iChannelTime[4]"

msgid "Time since that particular texture started."
msgstr "Zeit seit Start der gegebenen Textur."

msgid "iMouse"
msgstr "iMouse"

msgid "Mouse position in pixel coordinates."
msgstr "Mausposition in Pixelkoordinaten."

msgid "iDate"
msgstr "iDate"

msgid "Current date, expressed in seconds."
msgstr "Aktuelles Datum in Sekunden."

msgid "iChannelResolution[4]"
msgstr "iChannelResolution[4]"

msgid "1.0 / TEXTURE_PIXEL_SIZE"
msgstr "1.0 / TEXTURE_PIXEL_SIZE"

msgid "Resolution of particular texture."
msgstr "Auflösung der gegebenen Textur."

msgid "iChanneli"
msgstr "iChanneli"

msgid "Sampler2D"
msgstr "Sampler2D"

msgid "TEXTURE"
msgstr "TEXTURE"

msgid "Godot provides only one built-in; user can make more."
msgstr "Godot bietet nur einen eingebauten; Nutzer können mehr erzeugen."

msgid ""
"``fragCoord`` behaves the same as ``gl_FragCoord`` in :ref:`GLSL "
"<glsl_coordinates>` and ``FRAGCOORD`` in Godot."
msgstr ""
"``fragCoord`` verhält sich genauso wie ``gl_FragCoord`` in :ref:`GLSL "
"<glsl_coordinates>` und ``FRAGCOORD`` in Godot."

msgid "The Book of Shaders"
msgstr "Das Buch der Shader"

msgid ""
"Similar to Shadertoy, `The Book of Shaders <https://thebookofshaders.com>`_ "
"provides access to a fragment shader in the web browser, with which the user "
"may interact. The user is restricted to writing fragment shader code with a "
"set list of uniforms passed in and with no ability to add additional "
"uniforms."
msgstr ""
"Ähnlich wie bei Shadertoy bietet `The Book of Shaders <https://"
"thebookofshaders.com>`_ Zugriff auf einen Fragment-Shader im Webbrowser, mit "
"dem der Benutzer interagieren kann. Der Benutzer kann nur Fragment-Shader-"
"Code mit einer festgelegten Liste von übergebenen Uniforms schreiben und "
"kann keine zusätzlichen Uniforms hinzufügen."

msgid ""
"For further help on porting shaders to various frameworks generally, The "
"Book of Shaders provides a `page <https://thebookofshaders.com/04>`_ on "
"running shaders in various frameworks."
msgstr ""
"Für weitere Hilfe beim Portieren von Shadern auf verschiedene Frameworks im "
"Allgemeinen bietet The Book of Shaders eine `Seite <https://thebookofshaders."
"com/04>`_ zum Ausführen von Shadern in verschiedenen Frameworks."

msgid ""
"The Book of Shaders uses the webgl spec, so it runs a slightly different "
"version of GLSL. However, it still has the regular types, including "
"constants and macros."
msgstr ""
"Das Buch der Shader verwendet die Webgl-Spezifikation, sodass eine etwas "
"andere Version von GLSL ausgeführt wird. Es gibt jedoch weiterhin die "
"regulären Typen, einschließlich Konstanten und Makros."

msgid ""
"The entry point for a Book of Shaders fragment shader is ``main``, just like "
"in GLSL. Everything written in a Book of Shaders ``main`` function should be "
"copied into Godot's ``fragment`` function."
msgstr ""
"Der Einstiegspunkt für einen Buch der Shader Fragment-Shader ist ``main``, "
"genau wie in GLSL. Alles was in einer ``main`` -Funktion von Buch der Shader "
"geschrieben ist, sollte in Godots ``fragment``-Funktion kopiert werden."

msgid ""
"The Book of Shaders sticks closer to plain GLSL than Shadertoy does. It also "
"implements fewer uniforms than Shadertoy."
msgstr ""
"Das Buch der Shader hält sich genauer an GLSL als Shadertoy. Es "
"implementiert auch weniger Uniforms als Shadertoy."

msgid "u_resolution"
msgstr "u_resolution"

msgid "u_time"
msgstr "u_time"

msgid "u_mouse"
msgstr "u_mouse"

msgid ""
"The Book of Shaders uses the same coordinate system as :ref:`GLSL "
"<glsl_coordinates>`."
msgstr ""
"Das Buch der Shader verwendet dasselbe Koordinatensystem wie :ref:`GLSL "
"<glsl_coordinates>`."

msgid "Translation status"
msgstr "Übersetzungsstatus"
