# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Thread-safe APIs"
msgstr "Thread-sichere APIs"

msgid "Threads"
msgstr "Threads"

msgid ""
"Threads are used to balance processing power across CPUs and cores. Godot "
"supports multithreading, but not in the whole engine."
msgstr ""
"Threads werden verwendet, um die Verarbeitungsleistung zwischen CPUs und "
"Kernen zu verteilen. Godot unterstützt Multithreading, jedoch nicht in der "
"gesamten Engine."

msgid ""
"Below is a list of ways multithreading can be used in different areas of "
"Godot."
msgstr ""
"Nachfolgend finden Sie eine Liste der Möglichkeiten, wie Multithreading in "
"verschiedenen Bereichen von Godot verwendet werden kann."

msgid "Global scope"
msgstr "Globaler Bereich"

msgid ""
":ref:`Global Scope<class_@GlobalScope>` singletons are all thread-safe. "
"Accessing servers from threads is supported (for VisualServer and Physics "
"servers, ensure threaded or thread-safe operation is enabled in the project "
"settings!)."
msgstr ""

msgid ""
"This makes them ideal for code that creates dozens of thousands of instances "
"in servers and controls them from threads. Of course, it requires a bit more "
"code, as this is used directly and not within the scene tree."
msgstr ""
"Dies macht sie ideal für Code, der Zig-Tausende von Instanzen auf Servern "
"erstellt und sie über Threads steuert. Natürlich erfordert es etwas mehr "
"Code, da dieser direkt und nicht im Szenenbaum verwendet wird."

msgid "Scene tree"
msgstr "Szenen-Baum (SceneTree)"

msgid ""
"Interacting with the active scene tree is **NOT** thread-safe. Make sure to "
"use mutexes when sending data between threads. If you want to call functions "
"from a thread, the *call_deferred* function may be used:"
msgstr ""
"Die Interaktion mit dem aktiven Szenenbaum ist **NICHT** threadsicher. "
"Stellen Sie sicher, dass Sie Mutexe verwenden, wenn Sie Daten zwischen "
"Threads senden. Wenn Sie Funktionen von einem Thread aus aufrufen möchten, "
"kann die Funktion *call_deferred* verwendet werden:"

msgid ""
"However, creating scene chunks (nodes in tree arrangement) outside the "
"active tree is fine. This way, parts of a scene can be built or instantiated "
"in a thread, then added in the main thread:"
msgstr ""

msgid ""
"Still, this is only really useful if you have **one** thread loading data. "
"Attempting to load or create scene chunks from multiple threads may work, "
"but you risk resources (which are only loaded once in Godot) tweaked by the "
"multiple threads, resulting in unexpected behaviors or crashes."
msgstr ""

msgid ""
"Only use more than one thread to generate scene data if you *really* know "
"what you are doing and you are sure that a single resource is not being used "
"or set in multiple ones. Otherwise, you are safer just using the servers API "
"(which is fully thread-safe) directly and not touching scene or resources."
msgstr ""

msgid "Rendering"
msgstr "Rendering"

msgid ""
"Instancing nodes that render anything in 2D or 3D (such as Sprite) is *not* "
"thread-safe by default. To make rendering thread-safe, set the **Rendering > "
"Threads > Thread Model** project setting to **Multi-Threaded**."
msgstr ""

msgid ""
"Note that the Multi-Threaded thread model has several known bugs, so it may "
"not be usable in all scenarios."
msgstr ""

msgid "GDScript arrays, dictionaries"
msgstr "GDScript Arrays, Dictionaries"

#, fuzzy
msgid ""
"In GDScript, reading and writing elements from multiple threads is OK, but "
"anything that changes the container size (resizing, adding or removing "
"elements) requires locking a mutex."
msgstr ""
"In GDScript ist das Lesen und Schreiben von Elementen aus mehreren Threads "
"in Ordnung, aber alles was die Containergröße ändert (Größe ändern, Elemente "
"hinzufügen oder entfernen), erfordert das Sperren eines Mutex."

msgid "Resources"
msgstr "Ressourcen"

msgid ""
"Modifying a unique resource from multiple threads is not supported. However "
"handling references on multiple threads is supported, hence loading "
"resources on a thread is as well - scenes, textures, meshes, etc - can be "
"loaded and manipulated on a thread and then added to the active scene on the "
"main thread. The limitation here is as described above, one must be careful "
"not to load the same resource from multiple threads at once, therefore it is "
"easiest to use **one** thread for loading and modifying resources, and then "
"the main thread for adding them."
msgstr ""

msgid "Translation status"
msgstr "Übersetzungsstatus"
