# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Viewport and canvas transforms"
msgstr "Ansichtsfenster und Canvas Transformationen"

msgid "Introduction"
msgstr "Einführung"

msgid ""
"This is an overview of the 2D transforms going on for nodes from the moment "
"they draw their content locally to the time they are drawn onto the screen. "
"This overview discusses very low level details of the engine."
msgstr ""
"Dies ist eine Übersicht über die 2D-Transformationen, die für Nodes vom "
"Zeitpunkt des lokalen Zeichnens ihres Inhalts bis zum Zeitpunkt des "
"Zeichnens auf dem Bildschirm ausgeführt werden. In dieser Übersicht werden "
"grundlegende Details des Engine erläutert."

msgid "Canvas transform"
msgstr "Canvas Transformationen"

msgid ""
"As mentioned in the previous tutorial, :ref:`doc_canvas_layers`, every "
"CanvasItem node (remember that Node2D and Control based nodes use CanvasItem "
"as their common root) will reside in a *Canvas Layer*. Every canvas layer "
"has a transform (translation, rotation, scale, etc.) that can be accessed as "
"a :ref:`Transform2D <class_Transform2D>`."
msgstr ""
"Wie in der vorherigen Anleitung :ref:`doc_canvas_layers` erwähnt, befindet "
"sich jeder CanvasItem-Node in einer *Canvas-Ebene* (denken Sie daran, dass "
"Node2D- und Control-basierte Nodes CanvasItem als gemeinsame Wurzel "
"verwenden). Jede Canvas-Ebene verfügt über eine Transformation "
"(Verschiebung, Drehung, Skalierung usw.), auf die wie folgt zugegriffen "
"werden kann :ref:`Transform2D <class_Transform2D>`."

msgid ""
"Also covered in the previous tutorial, nodes are drawn by default in Layer "
"0, in the built-in canvas. To put nodes in a different layer, a :ref:"
"`CanvasLayer <class_CanvasLayer>` node can be used."
msgstr ""
"Ebenfalls im vorherigen Kapitel behandelt, werden Nodes standardmäßig in "
"Ebene 0 in der integrierten Zeichenfläche gezeichnet. Um Nodes in einer "
"anderen Ebene zu platzieren, kann ein :ref:`CanvasLayer <class_CanvasLayer>`-"
"Node verwendet werden."

msgid "Global canvas transform"
msgstr "Globale Canvas Transformation"

msgid ""
"Viewports also have a Global Canvas transform (also a :ref:`Transform2D "
"<class_Transform2D>`). This is the master transform and affects all "
"individual *Canvas Layer* transforms. Generally, this transform is not of "
"much use, but is used in the CanvasItem Editor in Godot's editor."
msgstr ""
"Ansichtsfenster haben auch eine globale Canvas-Transformation (auch eine :"
"ref:`Transform2D <class_Transform2D>`). Dies ist die Master-Transformation "
"und betrifft alle einzelnen *Canvas-Ebenen* -Transformationen. Im "
"Allgemeinen ist diese Transformation nicht sehr nützlich, wird jedoch im "
"CanvasItem-Editor in Godots Editor verwendet."

msgid "Stretch transform"
msgstr "Dehnungstransformation"

msgid ""
"Finally, viewports have a *Stretch Transform*, which is used when resizing "
"or stretching the screen. This transform is used internally (as described "
"in :ref:`doc_multiple_resolutions`), but can also be manually set on each "
"viewport."
msgstr ""
"Schließlich verfügen Ansichtsfenster über eine *Dehnungstransformation*, die "
"beim Ändern der Größe oder Strecken des Bildschirms verwendet wird. Diese "
"Transformation wird intern verwendet (wie in :ref:`doc_multiple_resolutions` "
"beschrieben), kann aber auch manuell für jedes Ansichtsfenster festgelegt "
"werden."

msgid ""
"Input events received in the :ref:`MainLoop._input_event() "
"<class_MainLoop_method__input_event>` callback are multiplied by this "
"transform but lack the ones above. To convert InputEvent coordinates to "
"local CanvasItem coordinates, the :ref:`CanvasItem.make_input_local() "
"<class_CanvasItem_method_make_input_local>` function was added for "
"convenience."
msgstr ""
"Eingabeereignisse, die im :ref:`MainLoop._input_event() "
"<class_MainLoop_method__input_event>`-Callback empfangen qurden, werden mit "
"dieser Transformation multipliziert, aber es fehlen die oben genannten. Um "
"InputEvent-Koordinaten in lokale CanvasItem-Koordinaten zu konvertieren, "
"wurde der Einfachheit halber die Funktion :ref:`CanvasItem."
"make_input_local() <class_CanvasItem_method_make_input_local>` hinzugefügt."

msgid "Transform order"
msgstr "Transformationsreihenfolge"

msgid ""
"For a coordinate in CanvasItem local properties to become an actual screen "
"coordinate, the following chain of transforms must be applied:"
msgstr ""
"Damit eine Koordinate in den lokalen CanvasItem-Eigenschaften zu einer "
"tatsächlichen Bildschirmkoordinate wird, muss die folgende "
"Transformationskette angewendet werden:"

msgid "Transform functions"
msgstr "Transformationsfunktionen"

msgid "Obtaining each transform can be achieved with the following functions:"
msgstr ""
"Das Ausführen jeder Transformation kann mit den folgenden Funktionen "
"erreicht werden:"

msgid "Type"
msgstr "Art"

msgid "Transform"
msgstr "Transformation"

msgid "CanvasItem"
msgstr "CanvasItem"

msgid ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_method_get_global_transform>`"
msgstr ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_method_get_global_transform>`"

msgid "CanvasLayer"
msgstr "CanvasLayer"

msgid ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_method_get_canvas_transform>`"
msgstr ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_method_get_canvas_transform>`"

msgid "CanvasLayer+GlobalCanvas+Stretch"
msgstr "CanvasLayer+GlobalCanvas+Stretch"

msgid ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_method_get_viewport_transform>`"
msgstr ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_method_get_viewport_transform>`"

msgid ""
"Finally, then, to convert a CanvasItem local coordinates to screen "
"coordinates, just multiply in the following order:"
msgstr ""
"Um die lokalen CanvasItem-Koordinaten in Bildschirmkoordinaten umzuwandeln, "
"multiplizieren Sie sie einfach in der folgenden Reihenfolge:"

msgid ""
"Keep in mind, however, that it is generally not desired to work with screen "
"coordinates. The recommended approach is to simply work in Canvas "
"coordinates (``CanvasItem.get_global_transform()``), to allow automatic "
"screen resolution resizing to work properly."
msgstr ""
"Beachten Sie jedoch, dass es im Allgemeinen nicht erwünscht ist, mit "
"Bildschirmkoordinaten zu arbeiten. Der empfohlene Ansatz besteht darin, "
"einfach in Canvas-Koordinaten (``CanvasItem.get_global_transform()``) zu "
"arbeiten, damit die automatische Größenänderung der Bildschirmauflösung "
"ordnungsgemäß funktioniert."

msgid "Feeding custom input events"
msgstr "Benutzerdefinierte Eingabeereignisse einlesen"

msgid ""
"It is often desired to feed custom input events to the scene tree. With the "
"above knowledge, to correctly do this, it must be done the following way:"
msgstr ""
"Es ist häufig erwünscht, dem Szenenbaum benutzerdefinierte Eingabeereignisse "
"zuzuführen. Mit dem oben genannten Wissen muss dies folgendermaßen geschehen:"

msgid "Translation status"
msgstr "Übersetzungsstatus"
