# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Autoloads versus regular nodes"
msgstr "Autoloads im Vergleich zu reguläre Nodes"

msgid ""
"Godot offers a feature to automatically load nodes at the root of your "
"project, allowing you to access them globally, that can fulfill the role of "
"a Singleton: :ref:`doc_singletons_autoload`. These auto-loaded nodes are not "
"freed when you change the scene from code with :ref:`SceneTree.change_scene "
"<class_SceneTree_method_change_scene>`."
msgstr ""
"Godot bietet eine Funktion zum automatischen Laden von Nodes im "
"Stammverzeichnis Ihres Projekts, mit der Sie global auf diese zugreifen "
"können und welche die Rolle eines Singleton erfüllen können :ref:"
"`doc_singletons_autoload`. Diese automatisch geladenen Nodes werden nicht "
"freigegeben, wenn Sie die Szene aus dem Code ändern mit :ref:`SceneTree."
"change_scene <class_SceneTree_method_change_scene>`."

msgid ""
"In this guide, you will learn when to use the Autoload feature, and "
"techniques you can use to avoid it."
msgstr ""
"In diesem Handbuch erfahren Sie, wann Sie die Autoload-Funktion verwenden "
"und welche Techniken Sie verwenden können, um sie zu vermeiden."

msgid "The cutting audio issue"
msgstr "Das einschneidende Audio-Problem"

msgid ""
"Other engines can encourage the use of creating manager classes, singletons "
"that organize a lot of functionality into a globally accessible object. "
"Godot offers many ways to avoid global state thanks to the node tree and "
"signals."
msgstr ""
"Andere Engines können die Erstellung von Manager-Klassen fördern: "
"Singletons, die viele Funktionen in einem global zugänglichen Objekt "
"organisieren. Godot bietet dank des Node-Baums und der Signale viele "
"Möglichkeiten, um einen globalen Zustand zu vermeiden."

msgid ""
"For example, let's say we are building a platformer and want to collect "
"coins that play a sound effect. There's a node for that: the :ref:"
"`AudioStreamPlayer <class_AudioStreamPlayer>`. But if we call the "
"``AudioStreamPlayer`` while it is already playing a sound, the new sound "
"interrupts the first."
msgstr ""
"Nehmen wir zum Beispiel an, wir bauen einen Plattformer und möchten Münzen "
"sammeln, wobei ein Soundeffekt abgespielt wird. Dafür gibt es einen Node: "
"den :ref:`AudioStreamPlayer <class_AudioStreamPlayer> `. Wenn wir jedoch den "
"``AudioStreamPlayer`` aufrufen während bereits ein Sound abgespielt wird, "
"unterbricht der neue Sound den vorherigen."

msgid ""
"A solution is to code a global, auto-loaded sound manager class. It "
"generates a pool of ``AudioStreamPlayer`` nodes that cycle through as each "
"new request for sound effects comes in. Say we call that class ``Sound``, "
"you can use it from anywhere in your project by calling ``Sound."
"play(\"coin_pickup.ogg\")``. This solves the problem in the short term but "
"causes more problems:"
msgstr ""
"Eine Lösung besteht darin, eine globale, automatisch geladene Soundmanager-"
"Klasse zu codieren. Es wird ein Pool von ``AudioStreamPlayer``-Nodes "
"generiert, die bei jeder neuen Anforderung von Soundeffekten durchlaufen "
"werden. Angenommen, wir nennen diese Klasse ``Sound``. Sie können sie von "
"überall in Ihrem Projekt aus verwenden, indem Sie ``Sound.play(\"coin_pickup."
"ogg\")`` aufrufen. Dies löst das Problem kurzfristig, verursacht jedoch "
"weitere Probleme:"

msgid ""
"**Global state**: one object is now responsible for all objects' data. If "
"the ``Sound`` class has errors or doesn't have an AudioStreamPlayer "
"available, all the nodes calling it can break."
msgstr ""
"** Globaler Status **: Ein Objekt ist jetzt für alle Objektdaten "
"verantwortlich. Wenn die ``Sound``-Klasse Fehler aufweist oder kein "
"AudioStreamPlayer verfügbar ist, können alle aufrufenden Nodes Probleme "
"bekommen."

msgid ""
"**Global access**: now that any object can call ``Sound.play(sound_path)`` "
"from anywhere, there's no longer an easy way to find the source of a bug."
msgstr ""
"**Globaler Zugriff**: Jetzt, da jedes Objekt ``Sound.play(sound_path)`` von "
"überall aufrufen kann, gibt es keine einfache Möglichkeit mehr, die Ursache "
"eines Fehlers zu finden."

msgid ""
"**Global resource allocation**: with a pool of ``AudioStreamPlayer`` nodes "
"stored from the start, you can either have too few and face bugs, or too "
"many and use more memory than you need."
msgstr ""
"**Globale Ressourcenzuweisung**: Mit einem Pool von ``AudioStreamPlayer``-"
"Nodes, die von Anfang an gespeichert wurden, können Sie entweder zu wenige "
"haben und damit Probleme bekommen, oder zu viele und es kann dadurch "
"deutlich mehr Speicher verwendet werden als benötigt."

msgid ""
"About global access, the problem is that Any code anywhere could pass wrong "
"data to the ``Sound`` autoload in our example. As a result, the domain to "
"explore to fix the bug spans the entire project."
msgstr ""
"Beim globalen Zugriff besteht das Problem darin, dass jeder Code irgendwo "
"falsche Daten an das Autoload ``Sound`` in unserem Beispiel übergeben kann. "
"Infolgedessen erstreckt sich der zu untersuchende Bereich zur Behebung des "
"Fehlers über das gesamte Projekt."

msgid ""
"When you keep code inside a scene, only one or two scripts may be involved "
"in audio."
msgstr ""
"Wenn Sie Code in einer Szene behalten, sind möglicherweise nur ein oder zwei "
"Skripte an der Audioausgabe beteiligt."

msgid ""
"Contrast this with each scene keeping as many ``AudioStreamPlayer`` nodes as "
"it needs within itself and all these problems go away:"
msgstr ""
"Vergleichen Sie dies damit, dass jede Szene so viele ``AudioStreamPlayer``-"
"Nodes enthält wie sie selbst benötigt und all diese Probleme verschwinden:"

msgid ""
"Each scene manages its own state information. If there is a problem with the "
"data, it will only cause issues in that one scene."
msgstr ""
"Jede Szene verwaltet ihre eigenen Statusinformationen. Wenn es ein Problem "
"mit den Daten gibt, tauchen dies nur in dieser einen Szene auf."

msgid ""
"Each scene accesses only its own nodes. Now, if there is a bug, it's easy to "
"find which node is at fault."
msgstr ""
"Jede Szene greift nur auf ihre eigenen Nodes zu. Wenn es nun einen Fehler "
"gibt, ist es leicht diesen fehlerhaften Node zu finden."

msgid "Each scene allocates exactly the amount of resources it needs."
msgstr "Jede Szene weist genau die Menge an Ressourcen zu, die sie benötigt."

msgid "Managing shared functionality or data"
msgstr "Gemeinsame Funktionen oder Daten verwalten"

msgid ""
"Another reason to use an Autoload can be that you want to reuse the same "
"method or data across many scenes."
msgstr ""
"Ein weiterer Grund für die Verwendung eines Autoloads kann sein, dass Sie "
"dieselbe Methode oder dieselben Daten für viele Szenen wiederverwenden "
"möchten."

msgid ""
"In the case of functions, you can create a new type of ``Node`` that "
"provides that feature for an individual scene using the :ref:`class_name "
"<doc_gdscript_basics_class_name>` keyword in GDScript."
msgstr ""
"Im Fall von Funktionen können Sie einen neuen Typ von ``Node`` erstellen, "
"der diese Funktion für eine einzelne Szene bereitstellt, indem Sie das "
"Schlüsselwort :ref:`class_name <doc_gdscript_basics_class_name>` in GDScript "
"verwenden."

msgid "When it comes to data, you can either:"
msgstr "Wenn es um Daten geht, können Sie entweder:"

msgid ""
"Create a new type of :ref:`Resource <class_Resource>` to share the data."
msgstr ""
"Einen neuen Typ :ref:`Resource <class_Resource>` erstellen, um die Daten "
"gemeinsam zu nutzen."

msgid ""
"Store the data in an object to which each node has access, for example using "
"the ``owner`` property to access the scene's root node."
msgstr ""
"Die Daten in einem Objekt speichern, auf das jeder Node Zugriff hat, z.B. "
"mithilfe der ``owner``-Eigenschaft, um auf den Stamm-Node der Szene "
"zuzugreifen."

msgid "When you should use an Autoload"
msgstr "Wann Sie ein Autoload verwenden sollten"

msgid "Auto-loaded nodes can simplify your code in some cases:"
msgstr ""
"Automatisch geladene Nodes können Ihren Code in einigen Fällen vereinfachen:"

msgid ""
"**Static Data**: if you need data that is exclusive to one class, like a "
"database, then an autoload can be a good tool. There is no scripting API in "
"Godot to create and manage static data otherwise."
msgstr ""
"** Statische Daten **: Wenn Sie Daten benötigen, die nur für eine Klasse "
"gelten, z. B. eine Datenbank, kann ein automatisches Laden ein gutes "
"Werkzeug sein. In Godot gibt es keine Skript-API, mit der statische Daten "
"anderweitig erstellt und verwaltet werden können."

msgid ""
"**Static functions**: creating a library of functions that only return "
"values."
msgstr ""
"**Statische Funktionen**: Erstellen einer Funktionsbibliothek, die nur Werte "
"zurückgibt."

msgid ""
"**Systems with a wide scope**: If the singleton is managing its own "
"information and not invading the data of other objects, then it's a great "
"way to create systems that handle broad-scoped tasks. For example, a quest "
"or a dialogue system."
msgstr ""
"** Systeme mit einem großen Umfang **: Wenn der Singleton seine eigenen "
"Informationen verwaltet und nicht in die Daten anderer Objekte eindringt, "
"ist dies eine hervorragende Möglichkeit, Systeme zu erstellen, die Aufgaben "
"mit breitem Umfang ausführen. Zum Beispiel eine Quest oder ein Dialogsystem."

msgid ""
"Until Godot 3.1, another use was just for convenience: autoloads have a "
"global variable for their name generated in GDScript, allowing you to call "
"them from any script file in your project. But now, you can use the "
"``class_name`` keyword instead to get auto-completion for a type in your "
"entire project."
msgstr ""
"Bis Godot 3.1 war eine andere Verwendung nur der Einfachheit halber: "
"Autoloads haben eine globale Variable für ihren Namen, die in GDScript "
"generiert wurde, sodass man sie aus jeder Skriptdatei in Ihrem Projekt "
"aufrufen kann. Jetzt können Sie stattdessen das Schlüsselwort `` "
"class_name`` verwenden, um die automatische Vervollständigung für einen Typ "
"in Ihrem gesamten Projekt zu erhalten."

msgid ""
"Autoload is not exactly a Singleton. Nothing prevents you from instantiating "
"copies of an auto-loaded node. It is only a tool that makes a node load "
"automatically as a child of the root of your scene tree, regardless of your "
"game's node structure or which scene you run, e.g. by pressing :kbd:`F6` key."
msgstr ""
"Autoload ist nicht gerade ein Singleton. Nichts hindert Sie daran, Kopien "
"eines automatisch geladenen Nodes zu instanziieren. Es ist nur ein Tool, mit "
"dem ein Node automatisch als untergeordnetes Element der Wurzel Ihres "
"Szenenbaums geladen wird, unabhängig von der Nodestruktur Ihres Spiels oder "
"der von Ihnen ausgeführten Szene, z. durch Drücken der Taste :kbd:`F6`."

msgid ""
"As a result, you can get the auto-loaded node, for example an autoload "
"called ``Sound``, by calling ``get_node(\"/root/Sound\")``."
msgstr ""
"Infolgedessen können Sie das automatisch geladenen Node, beispielsweise ein "
"Autoload mit dem Namen ``Sound``, erhalten, indem Sie ``get_node (\"/root/"
"Sound\")`` aufrufen."

msgid "Translation status"
msgstr "Übersetzungsstatus"
