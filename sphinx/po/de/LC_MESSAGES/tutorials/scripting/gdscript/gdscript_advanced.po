# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 16:09+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript: An introduction to dynamic languages"
msgstr "GDScript: Eine Einführung in dynamische Programmiersprachen"

msgid "About"
msgstr "Über"

msgid ""
"This tutorial aims to be a quick reference for how to use GDScript more "
"efficiently. It focuses on common cases specific to the language, but also "
"covers a lot of information on dynamically typed languages."
msgstr ""
"Dieses Handbuch soll eine kurze Referenz sein um GDScript effektiver nutzen "
"zu können. Es zeigt übliche Beispiele speziell dieser Sprache, enthält aber "
"auch viele Informationen über dynamische Programmiersprachen."

msgid ""
"It's meant to be especially useful for programmers with little or no "
"previous experience with dynamically typed languages."
msgstr ""
"Dies ist besonders nützlich für Programmierer die bisher nur wenig oder "
"keine Erfahrung mit dynamischen Programmiersprachen haben."

msgid "Dynamic nature"
msgstr "Eigenschaften dynamischer Programmiersprachen"

msgid "Pros & cons of dynamic typing"
msgstr "Vor- und Nachteile von dynamischer Typisierung"

msgid ""
"GDScript is a Dynamically Typed language. As such, its main advantages are "
"that:"
msgstr ""
"GDScript ist eine dynamische Programmiersprache und hat damit folgende "
"Vorteile:"

msgid "The language is simple and easy to learn."
msgstr "Die Sprache kann spielend einfach erlernt werden."

msgid "Most code can be written and changed quickly and without hassle."
msgstr ""
"Der meiste Code kann schnell und problemlos geschrieben und geändert werden."

msgid "Less code written means less errors & mistakes to fix."
msgstr "Weniger geschriebener Code bedeutet weniger mögliche Fehler ."

msgid "Easier to read the code (less clutter)."
msgstr "Einfacher den Code zu lesen (weniger verwirrend)."

msgid "No compilation is required to test."
msgstr "Es ist keine kompilierung nötig um den Code zu testen."

msgid "Runtime is tiny."
msgstr "Laufzeit ist gering."

msgid "Duck-typing and polymorphism by nature."
msgstr "Standardmäßig Duck-Typing und polymorph."

msgid "While the main disadvantages are:"
msgstr "Während dies die Nachteile sind:"

msgid "Less performance than statically typed languages."
msgstr "Weniger Leistung als statische Programmiersprachen."

msgid "More difficult to refactor (symbols can't be traced)"
msgstr ""
"Strukturverbesserungen sind schwieriger (Symbole können nicht verfolgt "
"werden)"

msgid ""
"Some errors that would typically be detected at compile time in statically "
"typed languages only appear while running the code (because expression "
"parsing is more strict)."
msgstr ""
"Einige Fehler, die normalerweise zur Kompilierungszeit in statisch "
"typisierten Sprachen erkannt werden, erscheinen nur während der Ausführung "
"des Codes (da die Analyse von Ausdrücken strenger ist)."

msgid ""
"Less flexibility for code-completion (some variable types are only known at "
"run-time)."
msgstr ""
"Weniger flexibel zur Code-Vervollständigung (einige Variablentypen sind erst "
"zur Laufzeit bekannt)."

msgid ""
"This, translated to reality, means that Godot+GDScript are a combination "
"designed to create games quickly and efficiently. For games that are very "
"computationally intensive and can't benefit from the engine built-in tools "
"(such as the Vector types, Physics Engine, Math library, etc), the "
"possibility of using C++ is present too. This allows you to still create "
"most of the game in GDScript and add small bits of C++ in the areas that "
"need a performance boost."
msgstr ""
"In der Realität bedeutet dies, dass Godot + GDScript eine Kombination ist, "
"mit der Spiele schnell und effizient erstellt werden können. Für Spiele, die "
"sehr rechenintensiv sind und nicht von den in der Engine integrierten Tools "
"(wie den Vektortypen, der Physik-Engine, der Mathematikbibliothek usw.) "
"profitieren können, besteht auch die Möglichkeit, C++ zu verwenden. Auf "
"diese Weise können Sie den größten Teil des Spiels weiterhin in GDScript "
"erstellen und in den Bereichen, in denen eine Leistungssteigerung "
"erforderlich ist, kleine Teile von C++ hinzufügen."

msgid "Variables & assignment"
msgstr "Variablen & Zuweisungen"

msgid ""
"All variables in a dynamically typed language are \"variant\"-like. This "
"means that their type is not fixed, and is only modified through assignment. "
"Example:"
msgstr ""
"In dynamischen Programmiersprachen sind Variablen nicht Typen gebunden. Das "
"bedeutet, dass der Typ nicht festgelegt ist, er wird nur durch Zuweisung von "
"Werten geändert. Beispiel:"

msgid "Static:"
msgstr "Statisch:"

msgid "Dynamic:"
msgstr "Dynamisch:"

msgid "As function arguments:"
msgstr "Als Funktions Argumente:"

msgid ""
"Functions are of dynamic nature too, which means they can be called with "
"different arguments, for example:"
msgstr ""
"Funktionen sind ebenfalls dynamisch, dass bedeutet sie können mit "
"unterschiedlichen Argumenten aufgerufen werden, zum Beispiel:"

msgid "Pointers & referencing:"
msgstr "Zeiger & Referenzen:"

msgid ""
"In static languages, such as C or C++ (and to some extent Java and C#), "
"there is a distinction between a variable and a pointer/reference to a "
"variable. The latter allows the object to be modified by other functions by "
"passing a reference to the original one."
msgstr ""
"In statischen Sprachen wie C oder C++ (und einige weitere wie Java und C#), "
"gibt es einen Unterschied zwischen einer Variablen und einem Zeiger bzw. "
"Referenz auf eine Variable. Dies erlaubt dem Objekt durch andere Funktionen "
"verändert zu werden, durch Übergabe einer Referenz auf das Original."

msgid ""
"In C# or Java, everything not a built-in type (int, float, sometimes String) "
"is always a pointer or a reference. References are also garbage-collected "
"automatically, which means they are erased when no longer used. Dynamically "
"typed languages tend to use this memory model, too. Some Examples:"
msgstr ""
"In C# oder Java ist alles was kein eingebauter Typ ist ((int, float, "
"manchmal String) immer ein Zeiger oder eine Referenz. Referenzen werden auch "
"automatisch speicherbereinigt, das bedeutet sie werden gelöscht wenn nicht "
"mehr benötigt. Dynamische Sprachen bieten meistens ebenfalls dieses Model. "
"Hier einige Beispiele:"

msgid "C++:"
msgstr "C++:"

msgid "Java:"
msgstr "Java:"

msgid "GDScript:"
msgstr "GDScript:"

#, fuzzy
msgid ""
"In GDScript, only base types (int, float, String and PoolArray types) are "
"passed by value to functions (value is copied). Everything else (instances, "
"Arrays, Dictionaries, etc) is passed as reference. Classes that inherit :ref:"
"`class_Reference` (the default if nothing is specified) will be freed when "
"not used, but manual memory management is allowed too if inheriting manually "
"from :ref:`class_Object`."
msgstr ""
"In GDScript werden nur Basistypen (int, float, string und die Vektortypen) "
"als Wert an Funktionen übergeben (Wert wird kopiert). Alles andere "
"(Instanzen, Arrays, Dictionaries usw.) wird als Referenz übergeben. Klassen, "
"die erben :ref:`class_Reference` (die Standardeinstellung, wenn nichts "
"angegeben ist), werden freigegeben, wenn sie nicht verwendet werden. Die "
"manuelle Speicherverwaltung ist jedoch auch zulässig, wenn sie manuell von :"
"ref:`class_Object` erbt."

msgid ""
"A value is **passed by value** when it is copied every time it's specified "
"as a function parameter. One consequence of this is that the function cannot "
"modify the parameter in a way that is visible from outside the function::"
msgstr ""

msgid ""
"A value is **passed by reference** when it is *not* copied every time it's "
"specified as a function parameter. This allows modifying a function "
"parameter within a function body (and having the modified value accessible "
"outside the function). The downside is that the data passed as a function "
"parameter is no longer guaranteed to be immutable, which can cause difficult-"
"to-track bugs if not done carefully::"
msgstr ""

msgid ""
"Compared to passing by value, passing by reference can perform better when "
"using large objects since copying large objects in memory can be slow."
msgstr ""

msgid ""
"Additionally, in Godot, base types such as String are **immutable**. This "
"means that modifying them will *always* return a copy of the original value, "
"rather than modifying the value in-place."
msgstr ""

msgid "Arrays"
msgstr "Arrays (Felder)"

msgid ""
"Arrays in dynamically typed languages can contain many different mixed "
"datatypes inside and are always dynamic (can be resized at any time). "
"Compare for example arrays in statically typed languages:"
msgstr ""
"Arrays in dynamischen Programmiersprachen können viele verschiedene "
"Datentypen enthalten und sind immer dynamisch (können also jederzeit in der "
"Größe verändert werden). Vergleichen wir hierzu Arrays in statischen "
"Programmiersprachen:"

msgid "And in GDScript:"
msgstr "Und in GDScript:"

msgid ""
"In dynamically typed languages, arrays can also double as other datatypes, "
"such as lists:"
msgstr ""
"In dynamisch typisierten Sprachen können Arrays auch als andere Datentypen "
"wie Listen verwendet werden:"

msgid "Or unordered sets:"
msgstr "Oder unsortierte Sets:"

msgid "Dictionaries"
msgstr "Dictionaries (Wörterbücher)"

msgid ""
"Dictionaries are a powerful tool in dynamically typed languages. Most "
"programmers that come from statically typed languages (such as C++ or C#) "
"ignore their existence and make their life unnecessarily more difficult. "
"This datatype is generally not present in such languages (or only in limited "
"form)."
msgstr ""
"Dictionaries (Wörterbücher oder auch assoziative Liste) sind ein "
"leistungsstarkes Werkzeug in dynamisch typisierten Sprachen. Die meisten "
"Programmierer, die aus statisch typisierten Sprachen (wie C++ oder C#) "
"stammen, ignorieren ihre Existenz und erschweren ihr Leben unnötig. Dieser "
"Datentyp ist in solchen Sprachen im Allgemeinen nicht (oder nur in "
"begrenzter Form) vorhanden."

msgid ""
"Dictionaries can map any value to any other value with complete disregard "
"for the datatype used as either key or value. Contrary to popular belief, "
"they are efficient because they can be implemented with hash tables. They "
"are, in fact, so efficient that some languages will go as far as "
"implementing arrays as dictionaries."
msgstr ""
"Dictionaries können jeden Wert jedem anderen Wert zuordnen, wobei es völlig "
"egal ist, ob der Datentyp als Schlüssel oder Wert genutzt wird. Entgegen der "
"landläufigen Meinung sind sie effizient, da sie mit Hash-Tabellen "
"implementiert werden können. Sie sind in der Tat so effizient, dass einige "
"Sprachen sogar Arrays als Dictionaries implementieren."

msgid "Example of Dictionary:"
msgstr "Beispiel für ein Dictionary:"

msgid ""
"Dictionaries are also dynamic, keys can be added or removed at any point at "
"little cost:"
msgstr ""
"Dictionaries sind auch dynamisch, Schlüssel können jederzeit mit geringen "
"Aufwand hinzugefügt oder entfernt werden:"

msgid ""
"In most cases, two-dimensional arrays can often be implemented more easily "
"with dictionaries. Here's a simple battleship game example:"
msgstr ""
"In den meisten Fällen können zweidimensionale Arrays häufig einfacher mit "
"Dictionaries implementiert werden. Hier ist ein einfaches Beispiel für ein "
"\"Schiffe versenken\" Spiel:"

msgid ""
"Dictionaries can also be used as data markup or quick structures. While "
"GDScript's dictionaries resemble python dictionaries, it also supports Lua "
"style syntax and indexing, which makes it useful for writing initial states "
"and quick structs:"
msgstr ""
"Dictionaries können auch als Datenmarkup oder schnelle Strukturen verwendet "
"werden. Während die Dictionaries von GDScript Python-Dictionaries ähneln, "
"unterstützt es auch die Syntax und Indizierung im Lua-Stil, was es nützlich "
"macht, Anfangszustände und schnelle Strukturen zu schreiben:"

msgid "For & while"
msgstr "For & while"

msgid "Iterating in some statically typed languages can be quite complex:"
msgstr ""
"Wiederholen in einigen statisch typisierten Sprachen kann ziemlich komplex "
"sein:"

msgid "This is usually greatly simplified in dynamically typed languages:"
msgstr ""
"Dies ist normalerweise stark vereinfacht in dynamisch typisierten Sprachen:"

msgid ""
"Container datatypes (arrays and dictionaries) are iterable. Dictionaries "
"allow iterating the keys:"
msgstr ""
"Container Datentypen (Arrays und Dictionaries) sind iterierbar, können also "
"auch die Werte der Reihe nach durchgehen. Dictionaries erlauben die "
"Iteration des Schlüssels:"

msgid "Iterating with indices is also possible:"
msgstr "Wiederholen mit Indexen ist ebenso möglich:"

msgid "The range() function can take 3 arguments:"
msgstr "Die range() Funktion nimmt bis zu 3 Argumente an:"

msgid "Some statically typed programming language examples:"
msgstr "Hier einige Beispiele statischer Programmiersprachen:"

msgid "Translate to:"
msgstr "Sind gleichbedeutend mit:"

msgid "And backwards looping is done through a negative counter:"
msgstr ""
"Rückwärts durch die Schleife wiederholen kann man mit einem negativen Zähler:"

msgid "Becomes:"
msgstr "Wird zu:"

msgid "While"
msgstr "Während"

msgid "while() loops are the same everywhere:"
msgstr "while() Schleifen sind überall gleich:"

msgid "Custom iterators"
msgstr "Benutzerdefinierte Iteratoren"

msgid ""
"You can create custom iterators in case the default ones don't quite meet "
"your needs by overriding the Variant class's ``_iter_init``, ``_iter_next``, "
"and ``_iter_get`` functions in your script. An example implementation of a "
"forward iterator follows:"
msgstr ""
"Sie können benutzerdefinierte Iteratoren generieren, wenn die vorgegebenen "
"nicht ganz Ihren Anforderungen entsprechen, indem Sie die ``_iter_init``, "
"``_iter_next``, und ``_iter_get`` Funktionen der Variant Klasse "
"überschreiben. Hier ist ein Beispiel einer Implementierung für einen "
"Vorwärts-Iterator:"

msgid "And it can be used like any other iterator:"
msgstr "Und er kann wie jeder andere Iterator verwendet werden:"

msgid ""
"Make sure to reset the state of the iterator in ``_iter_init``, otherwise "
"nested for-loops that use custom iterators will not work as expected."
msgstr ""
"Stelle sicher, dass der Status des Iterators in ``_iter_init`` zurückgesetzt "
"wird, sonst kann es passieren, dass sich verschachtelte for-loops nicht wie "
"gewünscht verhalten."

msgid "Duck typing"
msgstr "Duck-Typing"

msgid ""
"One of the most difficult concepts to grasp when moving from a statically "
"typed language to a dynamic one is duck typing. Duck typing makes overall "
"code design much simpler and straightforward to write, but it's not obvious "
"how it works."
msgstr ""
"Eines der am schwersten zu erfassenden Konzepte, wenn man von einer statisch "
"typisierten zu einer dynamisch typisierten Sprache wechselt, ist Duck-"
"Typing. Duck-Typing macht allgemeines Code-Design viel leichter und "
"unkomplizierter zu schreiben, aber es ist vielleicht nicht gleich "
"ersichtlich, wie es funktioniert."

msgid ""
"As an example, imagine a situation where a big rock is falling down a "
"tunnel, smashing everything on its way. The code for the rock, in a "
"statically typed language would be something like:"
msgstr ""
"Als Beispiel: Stellen Sie sich eine Situation vor in der ein Großer Stein "
"einen Tunnel herunter fällt und alles in seinem Weg beiseite stößt. In einer "
"statischen Programmiersprache würde der Code für den Stein ungefähr so "
"aussehen:"

msgid ""
"This way, everything that can be smashed by a rock would have to inherit "
"Smashable. If a character, enemy, piece of furniture, small rock were all "
"smashable, they would need to inherit from the class Smashable, possibly "
"requiring multiple inheritance. If multiple inheritance was undesired, then "
"they would have to inherit a common class like Entity. Yet, it would not be "
"very elegant to add a virtual method ``smash()`` to Entity only if a few of "
"them can be smashed."
msgstr ""
"Auf diese Weise müsste alles, was von einem Stein zerschlagen werden kann, "
"Smashable erben. Wenn ein Charakter, ein Feind, ein Möbelstück oder ein "
"kleiner Stein zerschmettert werden könnten, müssten sie von der Klasse "
"Smashable erben, was möglicherweise eine Mehrfachvererbung erfordert. Wenn "
"Mehrfachvererbung unerwünscht ist, müssten sie eine gemeinsame Klasse wie "
"Entity erben. Es wäre jedoch nicht sehr elegant, Entity nur dann eine "
"virtuelle Methode ``smash()`` hinzuzufügen, wenn einige von ihnen "
"zerschlagen werden können."

msgid ""
"With dynamically typed languages, this is not a problem. Duck typing makes "
"sure you only have to define a ``smash()`` function where required and "
"that's it. No need to consider inheritance, base classes, etc."
msgstr ""
"Bei dynamischen Programmiersprachen ist dies kein Problem. Duck-Typing "
"stellt sicher, dass man nur an benötigter Stelle eine ``smash()``-Funktion "
"definieren muss, und das war's. Vererbung, Basisklassen usw. müssen nicht "
"berücksichtigt werden."

msgid ""
"And that's it. If the object that hit the big rock has a smash() method, it "
"will be called. No need for inheritance or polymorphism. Dynamically typed "
"languages only care about the instance having the desired method or member, "
"not what it inherits or the class type. The definition of Duck Typing should "
"make this clearer:"
msgstr ""
"Und das ist es auch schon. Falls das Objekt, dass den großen Felsen trifft, "
"eine smash() Methode hat, wird diese aufgerufen. Vererbung oder Polymorphie "
"ist nicht nötig. Dynamischen Programmiersprachen ist es nur wichtig, dass "
"die Instanz die gewünschte Methode oder Member hat, nicht was sie vererbt "
"oder deren Klassentyp. Die Definition von \"Duck-Typing\" (Konzept der "
"objektorientierten Programmierung) macht das deutlicher:"

msgid ""
"*\"When I see a bird that walks like a duck and swims like a duck and quacks "
"like a duck, I call that bird a duck\"*"
msgstr ""
"*\"Wenn ein Vogel wie eine Ente geht, wie eine Ente schwimmt und wie eine "
"Ente quakt, dann ist es eine Ente\"*"

msgid "In this case, it translates to:"
msgstr "In diesem Fall lautet es übersetzt:"

msgid ""
"*\"If the object can be smashed, don't care what it is, just smash it.\"*"
msgstr ""
"*\"Falls das Objekt zerstört werden kann, ist es egal was es ist, zerstöre "
"es einfach\"*"

msgid "Yes, we should call it Hulk typing instead."
msgstr "Ja, vielleicht sollte man es nach Hulk benennen."

#, fuzzy
msgid ""
"It's possible that the object being hit doesn't have a smash() function. "
"Some dynamically typed languages simply ignore a method call when it doesn't "
"exist, but GDScript is stricter, so checking if the function exists is "
"desirable:"
msgstr ""
"Es ist möglich, dass das getroffene Objekt keine smash() -Funktion hat. "
"Einige dynamisch typisierte Sprachen ignorieren einen Methodenaufruf "
"einfach, wenn er nicht vorhanden ist (wie die Objektive Programmiersprache "
"C), aber GDScript ist strenger. Daher ist es wünschenswert, zu überprüfen, "
"ob die Funktion vorhanden ist:"

msgid ""
"Then, simply define that method and anything the rock touches can be smashed."
msgstr ""
"Dann wird diese Methode einfach definiert und alles was der Fels dann "
"berührt wird zerstört."

msgid "Translation status"
msgstr "Übersetzungsstatus"
